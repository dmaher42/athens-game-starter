name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build

      - name: Detect build output directory
        id: detect-build-dir
        run: |
          if [ -f dist/index.html ]; then
            echo "dir=dist" >> "$GITHUB_OUTPUT"
          elif [ -f docs/index.html ]; then
            echo "dir=docs" >> "$GITHUB_OUTPUT"
          else
            echo "::error::Unable to locate build output (expected dist/ or docs/)" >&2
            exit 1
          fi

      # Optional: SPA fallback so deep links work on GH Pages
      - name: Add 404 fallback
        env:
          BUILD_DIR: ${{ steps.detect-build-dir.outputs.dir }}
        run: |
          if [ -f "$BUILD_DIR/index.html" ]; then cp "$BUILD_DIR/index.html" "$BUILD_DIR/404.html"; fi

      # ðŸ”Ž NEW: List what we're publishing and fail fast if key files are missing
      - name: Inspect built files
        env:
          BUILD_DIR: ${{ steps.detect-build-dir.outputs.dir }}
        run: |
          set -euo pipefail
          echo "== $BUILD_DIR tree (depth 2) =="
          if command -v tree >/dev/null 2>&1; then
            tree -a -L 2 "$BUILD_DIR" || true
          else
            find "$BUILD_DIR" -maxdepth 2 -type f | sort
          fi
          echo ""
          echo "== sanity checks =="
          must_have=(
            "$BUILD_DIR/index.html"
            "$BUILD_DIR/audio/manifest.json"
            "$BUILD_DIR/models/npcs/manifest.json"
            "$BUILD_DIR/config/districts.json"
          )
          missing=0
          for f in "${must_have[@]}"; do
            if [[ -f "$f" ]]; then
              echo "OK  $f"
            else
              echo "::error title=Missing build file::$f"
              missing=1
            fi
          done
          # Optional texture check; keep as warning only
          if [[ -f "$BUILD_DIR/textures/ground/water_normals.png" || -f "$BUILD_DIR/textures/ground/water_normals.jpg" ]]; then
            echo "OK  $BUILD_DIR/textures/ground/water_normals.(png|jpg)"
          else
            echo "::warning title=Optional texture not found::$BUILD_DIR/textures/ground/water_normals.(png|jpg)"
          fi
          test $missing -eq 0

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.detect-build-dir.outputs.dir }}

  deploy:
    # Only deploy when pushing to main. PRs build but do not deploy.
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
