var nd=s=>{throw TypeError(s)};var Rg=(s,e,t)=>e.has(s)||nd("Cannot "+t);var id=(s,e,t)=>e.has(s)?nd("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(s):e.set(s,t);var Zs=(s,e,t)=>(Rg(s,e,"access private method"),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const jc="180",Dg={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Lg={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Tp=0,Qh=1,Bp=2,Pg=3,Fg=0,lu=1,hu=2,mi=3,hi=0,bn=1,ln=2,Fi=0,Us=1,_c=2,Gh=3,Hh=4,Rp=5,$i=100,Dp=101,Lp=102,Pp=103,Fp=104,Up=200,Np=201,Op=202,kp=203,Ec=204,vc=205,Qp=206,Gp=207,Hp=208,zp=209,Vp=210,Wp=211,qp=212,Xp=213,Yp=214,wc=0,Cc=1,Sc=2,Hs=3,Ic=4,Mc=5,Tc=6,Bc=7,qa=0,Kp=1,Jp=2,Ui=0,jp=1,Zp=2,$p=3,uu=4,eA=5,tA=6,nA=7,zh="attached",iA="detached",Zc=300,Qi=301,rs=302,Ia=303,Ma=304,Kr=306,Hn=1e3,Yn=1001,Lr=1002,Jt=1003,Xa=1004,Ug=1004,Ds=1005,Ng=1005,Ht=1006,Mr=1007,Og=1007,kn=1008,kg=1008,ut=1009,du=1010,fu=1011,Pr=1012,$c=1013,Gi=1014,en=1015,qn=1016,el=1017,tl=1018,Fr=1020,Ya=35902,Ka=35899,pu=1021,Ur=1022,Vt=1023,Nr=1026,Or=1027,Pi=1028,Ja=1029,es=1030,nl=1031,Qg=1032,il=1033,Ns=33776,ns=33777,Os=33778,Tr=33779,Ta=35840,Rc=35841,zs=35842,kr=35843,Ba=36196,Qr=37492,Gr=37496,is=37808,Dc=37809,Lc=37810,Pc=37811,ks=37812,Fc=37813,Uc=37814,Nc=37815,Oc=37816,kc=37817,Qc=37818,Gc=37819,Hc=37820,zc=37821,Vs=36492,Vc=36494,Ra=36495,Da=36283,La=36284,Pa=36285,Fa=36286,sA=2200,rA=2201,aA=2202,Hr=2300,zr=2301,Ac=2302,Ls=2400,Ps=2401,Ua=2402,sl=2500,Au=2501,oA=0,mu=1,Wc=2,cA=3200,lA=3201,Gg=3202,Hg=3203,os=0,hA=1,ci="",St="srgb",Qt="srgb-linear",Na="linear",Pt="srgb",zg=0,Is=7680,Vg=7681,Wg=7682,qg=7683,Xg=34055,Yg=34056,Kg=5386,Jg=512,jg=513,Zg=514,$g=515,e0=516,t0=517,n0=518,Vh=519,uA=512,dA=513,fA=514,gu=515,pA=516,AA=517,mA=518,gA=519,Oa=35044,$n=35048,i0=35040,s0=35045,r0=35049,a0=35041,o0=35046,c0=35050,l0=35042,h0="100",Wh="300 es",Kn=2e3,Vr=2001,u0={COMPUTE:"compute",RENDER:"render"},d0={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},f0={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};class Ei{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const i=n[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,a=i.length;r<a;r++)i[r].call(this,e);e.target=null}}}const pn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let sd=1234567;const Qs=Math.PI/180,Wr=180/Math.PI;function Jn(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(pn[s&255]+pn[s>>8&255]+pn[s>>16&255]+pn[s>>24&255]+"-"+pn[e&255]+pn[e>>8&255]+"-"+pn[e>>16&15|64]+pn[e>>24&255]+"-"+pn[t&63|128]+pn[t>>8&255]+"-"+pn[t>>16&255]+pn[t>>24&255]+pn[n&255]+pn[n>>8&255]+pn[n>>16&255]+pn[n>>24&255]).toLowerCase()}function tt(s,e,t){return Math.max(e,Math.min(t,s))}function yu(s,e){return(s%e+e)%e}function p0(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function A0(s,e,t){return s!==e?(t-s)/(e-s):0}function Ea(s,e,t){return(1-t)*s+t*e}function m0(s,e,t,n){return Ea(s,e,1-Math.exp(-t*n))}function g0(s,e=1){return e-Math.abs(yu(s,e*2)-e)}function y0(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function b0(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function x0(s,e){return s+Math.floor(Math.random()*(e-s+1))}function _0(s,e){return s+Math.random()*(e-s)}function E0(s){return s*(.5-Math.random())}function v0(s){s!==void 0&&(sd=s);let e=sd+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function w0(s){return s*Qs}function C0(s){return s*Wr}function S0(s){return(s&s-1)===0&&s!==0}function I0(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function M0(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function T0(s,e,t,n,i){const r=Math.cos,a=Math.sin,o=r(t/2),c=a(t/2),l=r((e+n)/2),h=a((e+n)/2),u=r((e-n)/2),d=a((e-n)/2),f=r((n-e)/2),p=a((n-e)/2);switch(i){case"XYX":s.set(o*h,c*u,c*d,o*l);break;case"YZY":s.set(c*d,o*h,c*u,o*l);break;case"ZXZ":s.set(c*u,c*d,o*h,o*l);break;case"XZX":s.set(o*h,c*p,c*f,o*l);break;case"YXY":s.set(c*f,o*h,c*p,o*l);break;case"ZYZ":s.set(c*p,c*f,o*h,o*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Rn(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function ct(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const we={DEG2RAD:Qs,RAD2DEG:Wr,generateUUID:Jn,clamp:tt,euclideanModulo:yu,mapLinear:p0,inverseLerp:A0,lerp:Ea,damp:m0,pingpong:g0,smoothstep:y0,smootherstep:b0,randInt:x0,randFloat:_0,randFloatSpread:E0,seededRandom:v0,degToRad:w0,radToDeg:C0,isPowerOfTwo:S0,ceilPowerOfTwo:I0,floorPowerOfTwo:M0,setQuaternionFromProperEuler:T0,normalize:ct,denormalize:Rn};class ie{constructor(e=0,t=0){ie.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=tt(this.x,e.x,t.x),this.y=tt(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=tt(this.x,e,t),this.y=tt(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(tt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(tt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class tn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,a,o){let c=n[i+0],l=n[i+1],h=n[i+2],u=n[i+3];const d=r[a+0],f=r[a+1],p=r[a+2],g=r[a+3];if(o===0){e[t+0]=c,e[t+1]=l,e[t+2]=h,e[t+3]=u;return}if(o===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=g;return}if(u!==g||c!==d||l!==f||h!==p){let m=1-o;const A=c*d+l*f+h*p+u*g,y=A>=0?1:-1,x=1-A*A;if(x>Number.EPSILON){const _=Math.sqrt(x),C=Math.atan2(_,A*y);m=Math.sin(m*C)/_,o=Math.sin(o*C)/_}const b=o*y;if(c=c*m+d*b,l=l*m+f*b,h=h*m+p*b,u=u*m+g*b,m===1-o){const _=1/Math.sqrt(c*c+l*l+h*h+u*u);c*=_,l*=_,h*=_,u*=_}}e[t]=c,e[t+1]=l,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,r,a){const o=n[i],c=n[i+1],l=n[i+2],h=n[i+3],u=r[a],d=r[a+1],f=r[a+2],p=r[a+3];return e[t]=o*p+h*u+c*f-l*d,e[t+1]=c*p+h*d+l*u-o*f,e[t+2]=l*p+h*f+o*d-c*u,e[t+3]=h*p-o*u-c*d-l*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,r=e._z,a=e._order,o=Math.cos,c=Math.sin,l=o(n/2),h=o(i/2),u=o(r/2),d=c(n/2),f=c(i/2),p=c(r/2);switch(a){case"XYZ":this._x=d*h*u+l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u+d*f*p;break;case"YZX":this._x=d*h*u+l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u-d*f*p;break;case"XZY":this._x=d*h*u-l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],o=t[5],c=t[9],l=t[2],h=t[6],u=t[10],d=n+o+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-c)*f,this._y=(r-l)*f,this._z=(a-i)*f}else if(n>o&&n>u){const f=2*Math.sqrt(1+n-o-u);this._w=(h-c)/f,this._x=.25*f,this._y=(i+a)/f,this._z=(r+l)/f}else if(o>u){const f=2*Math.sqrt(1+o-n-u);this._w=(r-l)/f,this._x=(i+a)/f,this._y=.25*f,this._z=(c+h)/f}else{const f=2*Math.sqrt(1+u-n-o);this._w=(a-i)/f,this._x=(r+l)/f,this._y=(c+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<1e-8?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(tt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,o=t._x,c=t._y,l=t._z,h=t._w;return this._x=n*h+a*o+i*l-r*c,this._y=i*h+a*c+r*o-n*l,this._z=r*h+a*l+n*c-i*o,this._w=a*h-n*o-i*c-r*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let o=a*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const c=1-o*o;if(c<=Number.EPSILON){const f=1-t;return this._w=f*a+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*r+t*this._z,this.normalize(),this}const l=Math.sqrt(c),h=Math.atan2(l,o),u=Math.sin((1-t)*h)/l,d=Math.sin(t*h)/l;return this._w=a*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class S{constructor(e=0,t=0,n=0){S.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(rd.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(rd.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,o=e.z,c=e.w,l=2*(a*i-o*n),h=2*(o*t-r*i),u=2*(r*n-a*t);return this.x=t+c*l+a*u-o*h,this.y=n+c*h+o*l-r*u,this.z=i+c*u+r*h-a*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=tt(this.x,e.x,t.x),this.y=tt(this.y,e.y,t.y),this.z=tt(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=tt(this.x,e,t),this.y=tt(this.y,e,t),this.z=tt(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(tt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,o=t.y,c=t.z;return this.x=i*c-r*o,this.y=r*a-n*c,this.z=n*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Il.copy(this).projectOnVector(e),this.sub(Il)}reflect(e){return this.sub(Il.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(tt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Il=new S,rd=new tn;class at{constructor(e,t,n,i,r,a,o,c,l){at.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,a,o,c,l)}set(e,t,n,i,r,a,o,c,l){const h=this.elements;return h[0]=e,h[1]=i,h[2]=o,h[3]=t,h[4]=r,h[5]=c,h[6]=n,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[3],c=n[6],l=n[1],h=n[4],u=n[7],d=n[2],f=n[5],p=n[8],g=i[0],m=i[3],A=i[6],y=i[1],x=i[4],b=i[7],_=i[2],C=i[5],v=i[8];return r[0]=a*g+o*y+c*_,r[3]=a*m+o*x+c*C,r[6]=a*A+o*b+c*v,r[1]=l*g+h*y+u*_,r[4]=l*m+h*x+u*C,r[7]=l*A+h*b+u*v,r[2]=d*g+f*y+p*_,r[5]=d*m+f*x+p*C,r[8]=d*A+f*b+p*v,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],c=e[6],l=e[7],h=e[8];return t*a*h-t*o*l-n*r*h+n*o*c+i*r*l-i*a*c}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],c=e[6],l=e[7],h=e[8],u=h*a-o*l,d=o*c-h*r,f=l*r-a*c,p=t*u+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return e[0]=u*g,e[1]=(i*l-h*n)*g,e[2]=(o*n-i*a)*g,e[3]=d*g,e[4]=(h*t-i*c)*g,e[5]=(i*r-o*t)*g,e[6]=f*g,e[7]=(n*c-l*t)*g,e[8]=(a*t-n*r)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,o){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*a+l*o)+a+e,-i*l,i*c,-i*(-l*a+c*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(Ml.makeScale(e,t)),this}rotate(e){return this.premultiply(Ml.makeRotation(-e)),this}translate(e,t){return this.premultiply(Ml.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Ml=new at;function yA(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const B0={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Sr(s,e){return new B0[s](e)}function ka(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function bA(){const s=ka("canvas");return s.style.display="block",s}const ad={};function Qa(s){s in ad||(ad[s]=!0,console.warn(s))}function R0(s,e,t){return new Promise(function(n,i){function r(){switch(s.clientWaitSync(e,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(r,t);break;default:n()}}setTimeout(r,t)})}const od=new at().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),cd=new at().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function D0(){const s={enabled:!0,workingColorSpace:Qt,spaces:{},convert:function(i,r,a){return this.enabled===!1||r===a||!r||!a||(this.spaces[r].transfer===Pt&&(i.r=Ni(i.r),i.g=Ni(i.g),i.b=Ni(i.b)),this.spaces[r].primaries!==this.spaces[a].primaries&&(i.applyMatrix3(this.spaces[r].toXYZ),i.applyMatrix3(this.spaces[a].fromXYZ)),this.spaces[a].transfer===Pt&&(i.r=Br(i.r),i.g=Br(i.g),i.b=Br(i.b))),i},workingToColorSpace:function(i,r){return this.convert(i,this.workingColorSpace,r)},colorSpaceToWorking:function(i,r){return this.convert(i,r,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===ci?Na:this.spaces[i].transfer},getToneMappingMode:function(i){return this.spaces[i].outputColorSpaceConfig.toneMappingMode||"standard"},getLuminanceCoefficients:function(i,r=this.workingColorSpace){return i.fromArray(this.spaces[r].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,r,a){return i.copy(this.spaces[r].toXYZ).multiply(this.spaces[a].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(i,r){return Qa("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),s.workingToColorSpace(i,r)},toWorkingColorSpace:function(i,r){return Qa("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),s.colorSpaceToWorking(i,r)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[Qt]:{primaries:e,whitePoint:n,transfer:Na,toXYZ:od,fromXYZ:cd,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:St},outputColorSpaceConfig:{drawingBufferColorSpace:St}},[St]:{primaries:e,whitePoint:n,transfer:Pt,toXYZ:od,fromXYZ:cd,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:St}}}),s}const dt=D0();function Ni(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Br(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let $s;class xA{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{$s===void 0&&($s=ka("canvas")),$s.width=e.width,$s.height=e.height;const i=$s.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=$s}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ka("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let a=0;a<r.length;a++)r[a]=Ni(r[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Ni(t[n]/255)*255):t[n]=Ni(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let L0=0;class ts{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:L0++}),this.uuid=Jn(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return typeof HTMLVideoElement<"u"&&t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight,0):t instanceof VideoFrame?e.set(t.displayHeight,t.displayWidth,0):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let a=0,o=i.length;a<o;a++)i[a].isDataTexture?r.push(Tl(i[a].image)):r.push(Tl(i[a]))}else r=Tl(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function Tl(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?xA.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let P0=0;const Bl=new S;class Wt extends Ei{constructor(e=Wt.DEFAULT_IMAGE,t=Wt.DEFAULT_MAPPING,n=Yn,i=Yn,r=Ht,a=kn,o=Vt,c=ut,l=Wt.DEFAULT_ANISOTROPY,h=ci){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:P0++}),this.uuid=Jn(),this.name="",this.source=new ts(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=c,this.offset=new ie(0,0),this.repeat=new ie(1,1),this.center=new ie(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new at,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Bl).x}get height(){return this.source.getSize(Bl).y}get depth(){return this.source.getSize(Bl).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Zc)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Hn:e.x=e.x-Math.floor(e.x);break;case Yn:e.x=e.x<0?0:1;break;case Lr:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Hn:e.y=e.y-Math.floor(e.y);break;case Yn:e.y=e.y<0?0:1;break;case Lr:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Wt.DEFAULT_IMAGE=null;Wt.DEFAULT_MAPPING=Zc;Wt.DEFAULT_ANISOTROPY=1;class bt{constructor(e=0,t=0,n=0,i=1){bt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const c=e.elements,l=c[0],h=c[4],u=c[8],d=c[1],f=c[5],p=c[9],g=c[2],m=c[6],A=c[10];if(Math.abs(h-d)<.01&&Math.abs(u-g)<.01&&Math.abs(p-m)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+g)<.1&&Math.abs(p+m)<.1&&Math.abs(l+f+A-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const x=(l+1)/2,b=(f+1)/2,_=(A+1)/2,C=(h+d)/4,v=(u+g)/4,I=(p+m)/4;return x>b&&x>_?x<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(x),i=C/n,r=v/n):b>_?b<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(b),n=C/i,r=I/i):_<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(_),n=v/r,i=I/r),this.set(n,i,r,t),this}let y=Math.sqrt((m-p)*(m-p)+(u-g)*(u-g)+(d-h)*(d-h));return Math.abs(y)<.001&&(y=1),this.x=(m-p)/y,this.y=(u-g)/y,this.z=(d-h)/y,this.w=Math.acos((l+f+A-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=tt(this.x,e.x,t.x),this.y=tt(this.y,e.y,t.y),this.z=tt(this.z,e.z,t.z),this.w=tt(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=tt(this.x,e,t),this.y=tt(this.y,e,t),this.z=tt(this.z,e,t),this.w=tt(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(tt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class bu extends Ei{constructor(e=1,t=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Ht,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=n.depth,this.scissor=new bt(0,0,e,t),this.scissorTest=!1,this.viewport=new bt(0,0,e,t);const i={width:e,height:t,depth:n.depth},r=new Wt(i);this.textures=[];const a=n.count;for(let o=0;o<a;o++)this.textures[o]=r.clone(),this.textures[o].isRenderTargetTexture=!0,this.textures[o].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(e={}){const t={minFilter:Ht,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const i=Object.assign({},e.textures[t].image);this.textures[t].source=new ts(i)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ui extends bu{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class rl extends Wt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Jt,this.minFilter=Jt,this.wrapR=Yn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class F0 extends ui{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new rl(null,e,t,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class ja extends Wt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Jt,this.minFilter=Jt,this.wrapR=Yn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class U0 extends ui{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new ja(null,e,t,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class $t{constructor(e=new S(1/0,1/0,1/0),t=new S(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(si.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(si.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=si.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const r=n.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let a=0,o=r.count;a<o;a++)e.isMesh===!0?e.getVertexPosition(a,si):si.fromBufferAttribute(r,a),si.applyMatrix4(e.matrixWorld),this.expandByPoint(si);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),uo.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),uo.copy(n.boundingBox)),uo.applyMatrix4(e.matrixWorld),this.union(uo)}const i=e.children;for(let r=0,a=i.length;r<a;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,si),si.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(na),fo.subVectors(this.max,na),er.subVectors(e.a,na),tr.subVectors(e.b,na),nr.subVectors(e.c,na),Wi.subVectors(tr,er),qi.subVectors(nr,tr),ds.subVectors(er,nr);let t=[0,-Wi.z,Wi.y,0,-qi.z,qi.y,0,-ds.z,ds.y,Wi.z,0,-Wi.x,qi.z,0,-qi.x,ds.z,0,-ds.x,-Wi.y,Wi.x,0,-qi.y,qi.x,0,-ds.y,ds.x,0];return!Rl(t,er,tr,nr,fo)||(t=[1,0,0,0,1,0,0,0,1],!Rl(t,er,tr,nr,fo))?!1:(po.crossVectors(Wi,qi),t=[po.x,po.y,po.z],Rl(t,er,tr,nr,fo))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,si).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(si).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Ci[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ci[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ci[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ci[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ci[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ci[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ci[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ci[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ci),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const Ci=[new S,new S,new S,new S,new S,new S,new S,new S],si=new S,uo=new $t,er=new S,tr=new S,nr=new S,Wi=new S,qi=new S,ds=new S,na=new S,fo=new S,po=new S,fs=new S;function Rl(s,e,t,n,i){for(let r=0,a=s.length-3;r<=a;r+=3){fs.fromArray(s,r);const o=i.x*Math.abs(fs.x)+i.y*Math.abs(fs.y)+i.z*Math.abs(fs.z),c=e.dot(fs),l=t.dot(fs),h=n.dot(fs);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>o)return!1}return!0}const N0=new $t,ia=new S,Dl=new S;class un{constructor(e=new S,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):N0.setFromPoints(e).getCenter(n);let i=0;for(let r=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ia.subVectors(e,this.center);const t=ia.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(ia,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Dl.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ia.copy(e.center).add(Dl)),this.expandByPoint(ia.copy(e.center).sub(Dl))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const Si=new S,Ll=new S,Ao=new S,Xi=new S,Pl=new S,mo=new S,Fl=new S;class Jr{constructor(e=new S,t=new S(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Si)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Si.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Si.copy(this.origin).addScaledVector(this.direction,t),Si.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Ll.copy(e).add(t).multiplyScalar(.5),Ao.copy(t).sub(e).normalize(),Xi.copy(this.origin).sub(Ll);const r=e.distanceTo(t)*.5,a=-this.direction.dot(Ao),o=Xi.dot(this.direction),c=-Xi.dot(Ao),l=Xi.lengthSq(),h=Math.abs(1-a*a);let u,d,f,p;if(h>0)if(u=a*c-o,d=a*o-c,p=r*h,u>=0)if(d>=-p)if(d<=p){const g=1/h;u*=g,d*=g,f=u*(u+a*d+2*o)+d*(a*u+d+2*c)+l}else d=r,u=Math.max(0,-(a*d+o)),f=-u*u+d*(d+2*c)+l;else d=-r,u=Math.max(0,-(a*d+o)),f=-u*u+d*(d+2*c)+l;else d<=-p?(u=Math.max(0,-(-a*r+o)),d=u>0?-r:Math.min(Math.max(-r,-c),r),f=-u*u+d*(d+2*c)+l):d<=p?(u=0,d=Math.min(Math.max(-r,-c),r),f=d*(d+2*c)+l):(u=Math.max(0,-(a*r+o)),d=u>0?r:Math.min(Math.max(-r,-c),r),f=-u*u+d*(d+2*c)+l);else d=a>0?-r:r,u=Math.max(0,-(a*d+o)),f=-u*u+d*(d+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,u),i&&i.copy(Ll).addScaledVector(Ao,d),f}intersectSphere(e,t){Si.subVectors(e.center,this.origin);const n=Si.dot(this.direction),i=Si.dot(Si)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),o=n-a,c=n+a;return c<0?null:o<0?this.at(c,t):this.at(o,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,o,c;const l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return l>=0?(n=(e.min.x-d.x)*l,i=(e.max.x-d.x)*l):(n=(e.max.x-d.x)*l,i=(e.min.x-d.x)*l),h>=0?(r=(e.min.y-d.y)*h,a=(e.max.y-d.y)*h):(r=(e.max.y-d.y)*h,a=(e.min.y-d.y)*h),n>a||r>i||((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),u>=0?(o=(e.min.z-d.z)*u,c=(e.max.z-d.z)*u):(o=(e.max.z-d.z)*u,c=(e.min.z-d.z)*u),n>c||o>i)||((o>n||n!==n)&&(n=o),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Si)!==null}intersectTriangle(e,t,n,i,r){Pl.subVectors(t,e),mo.subVectors(n,e),Fl.crossVectors(Pl,mo);let a=this.direction.dot(Fl),o;if(a>0){if(i)return null;o=1}else if(a<0)o=-1,a=-a;else return null;Xi.subVectors(this.origin,e);const c=o*this.direction.dot(mo.crossVectors(Xi,mo));if(c<0)return null;const l=o*this.direction.dot(Pl.cross(Xi));if(l<0||c+l>a)return null;const h=-o*Xi.dot(Fl);return h<0?null:this.at(h/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Ve{constructor(e,t,n,i,r,a,o,c,l,h,u,d,f,p,g,m){Ve.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,a,o,c,l,h,u,d,f,p,g,m)}set(e,t,n,i,r,a,o,c,l,h,u,d,f,p,g,m){const A=this.elements;return A[0]=e,A[4]=t,A[8]=n,A[12]=i,A[1]=r,A[5]=a,A[9]=o,A[13]=c,A[2]=l,A[6]=h,A[10]=u,A[14]=d,A[3]=f,A[7]=p,A[11]=g,A[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ve().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/ir.setFromMatrixColumn(e,0).length(),r=1/ir.setFromMatrixColumn(e,1).length(),a=1/ir.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),o=Math.sin(n),c=Math.cos(i),l=Math.sin(i),h=Math.cos(r),u=Math.sin(r);if(e.order==="XYZ"){const d=a*h,f=a*u,p=o*h,g=o*u;t[0]=c*h,t[4]=-c*u,t[8]=l,t[1]=f+p*l,t[5]=d-g*l,t[9]=-o*c,t[2]=g-d*l,t[6]=p+f*l,t[10]=a*c}else if(e.order==="YXZ"){const d=c*h,f=c*u,p=l*h,g=l*u;t[0]=d+g*o,t[4]=p*o-f,t[8]=a*l,t[1]=a*u,t[5]=a*h,t[9]=-o,t[2]=f*o-p,t[6]=g+d*o,t[10]=a*c}else if(e.order==="ZXY"){const d=c*h,f=c*u,p=l*h,g=l*u;t[0]=d-g*o,t[4]=-a*u,t[8]=p+f*o,t[1]=f+p*o,t[5]=a*h,t[9]=g-d*o,t[2]=-a*l,t[6]=o,t[10]=a*c}else if(e.order==="ZYX"){const d=a*h,f=a*u,p=o*h,g=o*u;t[0]=c*h,t[4]=p*l-f,t[8]=d*l+g,t[1]=c*u,t[5]=g*l+d,t[9]=f*l-p,t[2]=-l,t[6]=o*c,t[10]=a*c}else if(e.order==="YZX"){const d=a*c,f=a*l,p=o*c,g=o*l;t[0]=c*h,t[4]=g-d*u,t[8]=p*u+f,t[1]=u,t[5]=a*h,t[9]=-o*h,t[2]=-l*h,t[6]=f*u+p,t[10]=d-g*u}else if(e.order==="XZY"){const d=a*c,f=a*l,p=o*c,g=o*l;t[0]=c*h,t[4]=-u,t[8]=l*h,t[1]=d*u+g,t[5]=a*h,t[9]=f*u-p,t[2]=p*u-f,t[6]=o*h,t[10]=g*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(O0,e,k0)}lookAt(e,t,n){const i=this.elements;return Vn.subVectors(e,t),Vn.lengthSq()===0&&(Vn.z=1),Vn.normalize(),Yi.crossVectors(n,Vn),Yi.lengthSq()===0&&(Math.abs(n.z)===1?Vn.x+=1e-4:Vn.z+=1e-4,Vn.normalize(),Yi.crossVectors(n,Vn)),Yi.normalize(),go.crossVectors(Vn,Yi),i[0]=Yi.x,i[4]=go.x,i[8]=Vn.x,i[1]=Yi.y,i[5]=go.y,i[9]=Vn.y,i[2]=Yi.z,i[6]=go.z,i[10]=Vn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[4],c=n[8],l=n[12],h=n[1],u=n[5],d=n[9],f=n[13],p=n[2],g=n[6],m=n[10],A=n[14],y=n[3],x=n[7],b=n[11],_=n[15],C=i[0],v=i[4],I=i[8],E=i[12],w=i[1],T=i[5],R=i[9],U=i[13],O=i[2],N=i[6],k=i[10],te=i[14],Q=i[3],$=i[7],ae=i[11],Ae=i[15];return r[0]=a*C+o*w+c*O+l*Q,r[4]=a*v+o*T+c*N+l*$,r[8]=a*I+o*R+c*k+l*ae,r[12]=a*E+o*U+c*te+l*Ae,r[1]=h*C+u*w+d*O+f*Q,r[5]=h*v+u*T+d*N+f*$,r[9]=h*I+u*R+d*k+f*ae,r[13]=h*E+u*U+d*te+f*Ae,r[2]=p*C+g*w+m*O+A*Q,r[6]=p*v+g*T+m*N+A*$,r[10]=p*I+g*R+m*k+A*ae,r[14]=p*E+g*U+m*te+A*Ae,r[3]=y*C+x*w+b*O+_*Q,r[7]=y*v+x*T+b*N+_*$,r[11]=y*I+x*R+b*k+_*ae,r[15]=y*E+x*U+b*te+_*Ae,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],o=e[5],c=e[9],l=e[13],h=e[2],u=e[6],d=e[10],f=e[14],p=e[3],g=e[7],m=e[11],A=e[15];return p*(+r*c*u-i*l*u-r*o*d+n*l*d+i*o*f-n*c*f)+g*(+t*c*f-t*l*d+r*a*d-i*a*f+i*l*h-r*c*h)+m*(+t*l*u-t*o*f-r*a*u+n*a*f+r*o*h-n*l*h)+A*(-i*o*h-t*c*u+t*o*d+i*a*u-n*a*d+n*c*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],c=e[6],l=e[7],h=e[8],u=e[9],d=e[10],f=e[11],p=e[12],g=e[13],m=e[14],A=e[15],y=u*m*l-g*d*l+g*c*f-o*m*f-u*c*A+o*d*A,x=p*d*l-h*m*l-p*c*f+a*m*f+h*c*A-a*d*A,b=h*g*l-p*u*l+p*o*f-a*g*f-h*o*A+a*u*A,_=p*u*c-h*g*c-p*o*d+a*g*d+h*o*m-a*u*m,C=t*y+n*x+i*b+r*_;if(C===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const v=1/C;return e[0]=y*v,e[1]=(g*d*r-u*m*r-g*i*f+n*m*f+u*i*A-n*d*A)*v,e[2]=(o*m*r-g*c*r+g*i*l-n*m*l-o*i*A+n*c*A)*v,e[3]=(u*c*r-o*d*r-u*i*l+n*d*l+o*i*f-n*c*f)*v,e[4]=x*v,e[5]=(h*m*r-p*d*r+p*i*f-t*m*f-h*i*A+t*d*A)*v,e[6]=(p*c*r-a*m*r-p*i*l+t*m*l+a*i*A-t*c*A)*v,e[7]=(a*d*r-h*c*r+h*i*l-t*d*l-a*i*f+t*c*f)*v,e[8]=b*v,e[9]=(p*u*r-h*g*r-p*n*f+t*g*f+h*n*A-t*u*A)*v,e[10]=(a*g*r-p*o*r+p*n*l-t*g*l-a*n*A+t*o*A)*v,e[11]=(h*o*r-a*u*r-h*n*l+t*u*l+a*n*f-t*o*f)*v,e[12]=_*v,e[13]=(h*g*i-p*u*i+p*n*d-t*g*d-h*n*m+t*u*m)*v,e[14]=(p*o*i-a*g*i-p*n*c+t*g*c+a*n*m-t*o*m)*v,e[15]=(a*u*i-h*o*i+h*n*c-t*u*c-a*n*d+t*o*d)*v,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,o=e.y,c=e.z,l=r*a,h=r*o;return this.set(l*a+n,l*o-i*c,l*c+i*o,0,l*o+i*c,h*o+n,h*c-i*a,0,l*c-i*o,h*c+i*a,r*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,o=t._z,c=t._w,l=r+r,h=a+a,u=o+o,d=r*l,f=r*h,p=r*u,g=a*h,m=a*u,A=o*u,y=c*l,x=c*h,b=c*u,_=n.x,C=n.y,v=n.z;return i[0]=(1-(g+A))*_,i[1]=(f+b)*_,i[2]=(p-x)*_,i[3]=0,i[4]=(f-b)*C,i[5]=(1-(d+A))*C,i[6]=(m+y)*C,i[7]=0,i[8]=(p+x)*v,i[9]=(m-y)*v,i[10]=(1-(d+g))*v,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=ir.set(i[0],i[1],i[2]).length();const a=ir.set(i[4],i[5],i[6]).length(),o=ir.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],ri.copy(this);const l=1/r,h=1/a,u=1/o;return ri.elements[0]*=l,ri.elements[1]*=l,ri.elements[2]*=l,ri.elements[4]*=h,ri.elements[5]*=h,ri.elements[6]*=h,ri.elements[8]*=u,ri.elements[9]*=u,ri.elements[10]*=u,t.setFromRotationMatrix(ri),n.x=r,n.y=a,n.z=o,this}makePerspective(e,t,n,i,r,a,o=Kn,c=!1){const l=this.elements,h=2*r/(t-e),u=2*r/(n-i),d=(t+e)/(t-e),f=(n+i)/(n-i);let p,g;if(c)p=r/(a-r),g=a*r/(a-r);else if(o===Kn)p=-(a+r)/(a-r),g=-2*a*r/(a-r);else if(o===Vr)p=-a/(a-r),g=-a*r/(a-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=h,l[4]=0,l[8]=d,l[12]=0,l[1]=0,l[5]=u,l[9]=f,l[13]=0,l[2]=0,l[6]=0,l[10]=p,l[14]=g,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,r,a,o=Kn,c=!1){const l=this.elements,h=2/(t-e),u=2/(n-i),d=-(t+e)/(t-e),f=-(n+i)/(n-i);let p,g;if(c)p=1/(a-r),g=a/(a-r);else if(o===Kn)p=-2/(a-r),g=-(a+r)/(a-r);else if(o===Vr)p=-1/(a-r),g=-r/(a-r);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=h,l[4]=0,l[8]=0,l[12]=d,l[1]=0,l[5]=u,l[9]=0,l[13]=f,l[2]=0,l[6]=0,l[10]=p,l[14]=g,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const ir=new S,ri=new Ve,O0=new S(0,0,0),k0=new S(1,1,1),Yi=new S,go=new S,Vn=new S,ld=new Ve,hd=new tn;class zn{constructor(e=0,t=0,n=0,i=zn.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],a=i[4],o=i[8],c=i[1],l=i[5],h=i[9],u=i[2],d=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(tt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-tt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(tt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-tt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(tt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(o,f));break;case"XZY":this._z=Math.asin(-tt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return ld.makeRotationFromQuaternion(e),this.setFromRotationMatrix(ld,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return hd.setFromEuler(this),this.setFromQuaternion(hd,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}zn.DEFAULT_ORDER="XYZ";class al{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Q0=0;const ud=new S,sr=new tn,Ii=new Ve,yo=new S,sa=new S,G0=new S,H0=new tn,dd=new S(1,0,0),fd=new S(0,1,0),pd=new S(0,0,1),Ad={type:"added"},z0={type:"removed"},rr={type:"childadded",child:null},Ul={type:"childremoved",child:null};class lt extends Ei{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Q0++}),this.uuid=Jn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=lt.DEFAULT_UP.clone();const e=new S,t=new zn,n=new tn,i=new S(1,1,1);function r(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ve},normalMatrix:{value:new at}}),this.matrix=new Ve,this.matrixWorld=new Ve,this.matrixAutoUpdate=lt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=lt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new al,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return sr.setFromAxisAngle(e,t),this.quaternion.multiply(sr),this}rotateOnWorldAxis(e,t){return sr.setFromAxisAngle(e,t),this.quaternion.premultiply(sr),this}rotateX(e){return this.rotateOnAxis(dd,e)}rotateY(e){return this.rotateOnAxis(fd,e)}rotateZ(e){return this.rotateOnAxis(pd,e)}translateOnAxis(e,t){return ud.copy(e).applyQuaternion(this.quaternion),this.position.add(ud.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(dd,e)}translateY(e){return this.translateOnAxis(fd,e)}translateZ(e){return this.translateOnAxis(pd,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ii.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?yo.copy(e):yo.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),sa.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ii.lookAt(sa,yo,this.up):Ii.lookAt(yo,sa,this.up),this.quaternion.setFromRotationMatrix(Ii),i&&(Ii.extractRotation(i.matrixWorld),sr.setFromRotationMatrix(Ii),this.quaternion.premultiply(sr.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(Ad),rr.child=e,this.dispatchEvent(rr),rr.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(z0),Ul.child=e,this.dispatchEvent(Ul),Ul.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Ii.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ii.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ii),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(Ad),rr.child=e,this.dispatchEvent(rr),rr.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let r=0,a=i.length;r<a;r++)i[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(sa,e,G0),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(sa,H0,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let r=0,a=i.length;r<a;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(o=>({...o,boundingBox:o.boundingBox?o.boundingBox.toJSON():void 0,boundingSphere:o.boundingSphere?o.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(o=>({...o})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(e),i.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(i.boundingBox=this.boundingBox.toJSON()));function r(o,c){return o[c.uuid]===void 0&&(o[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const c=o.shapes;if(Array.isArray(c))for(let l=0,h=c.length;l<h;l++){const u=c[l];r(e.shapes,u)}else r(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let c=0,l=this.material.length;c<l;c++)o.push(r(e.materials,this.material[c]));i.material=o}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const c=this.animations[o];i.animations.push(r(e.animations,c))}}if(t){const o=a(e.geometries),c=a(e.materials),l=a(e.textures),h=a(e.images),u=a(e.shapes),d=a(e.skeletons),f=a(e.animations),p=a(e.nodes);o.length>0&&(n.geometries=o),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function a(o){const c=[];for(const l in o){const h=o[l];delete h.metadata,c.push(h)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}lt.DEFAULT_UP=new S(0,1,0);lt.DEFAULT_MATRIX_AUTO_UPDATE=!0;lt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ai=new S,Mi=new S,Nl=new S,Ti=new S,ar=new S,or=new S,md=new S,Ol=new S,kl=new S,Ql=new S,Gl=new bt,Hl=new bt,zl=new bt;class Dn{constructor(e=new S,t=new S,n=new S){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),ai.subVectors(e,t),i.cross(ai);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){ai.subVectors(i,t),Mi.subVectors(n,t),Nl.subVectors(e,t);const a=ai.dot(ai),o=ai.dot(Mi),c=ai.dot(Nl),l=Mi.dot(Mi),h=Mi.dot(Nl),u=a*l-o*o;if(u===0)return r.set(0,0,0),null;const d=1/u,f=(l*c-o*h)*d,p=(a*h-o*c)*d;return r.set(1-f-p,p,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Ti)===null?!1:Ti.x>=0&&Ti.y>=0&&Ti.x+Ti.y<=1}static getInterpolation(e,t,n,i,r,a,o,c){return this.getBarycoord(e,t,n,i,Ti)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(r,Ti.x),c.addScaledVector(a,Ti.y),c.addScaledVector(o,Ti.z),c)}static getInterpolatedAttribute(e,t,n,i,r,a){return Gl.setScalar(0),Hl.setScalar(0),zl.setScalar(0),Gl.fromBufferAttribute(e,t),Hl.fromBufferAttribute(e,n),zl.fromBufferAttribute(e,i),a.setScalar(0),a.addScaledVector(Gl,r.x),a.addScaledVector(Hl,r.y),a.addScaledVector(zl,r.z),a}static isFrontFacing(e,t,n,i){return ai.subVectors(n,t),Mi.subVectors(e,t),ai.cross(Mi).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return ai.subVectors(this.c,this.b),Mi.subVectors(this.a,this.b),ai.cross(Mi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Dn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Dn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,r){return Dn.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return Dn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Dn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let a,o;ar.subVectors(i,n),or.subVectors(r,n),Ol.subVectors(e,n);const c=ar.dot(Ol),l=or.dot(Ol);if(c<=0&&l<=0)return t.copy(n);kl.subVectors(e,i);const h=ar.dot(kl),u=or.dot(kl);if(h>=0&&u<=h)return t.copy(i);const d=c*u-h*l;if(d<=0&&c>=0&&h<=0)return a=c/(c-h),t.copy(n).addScaledVector(ar,a);Ql.subVectors(e,r);const f=ar.dot(Ql),p=or.dot(Ql);if(p>=0&&f<=p)return t.copy(r);const g=f*l-c*p;if(g<=0&&l>=0&&p<=0)return o=l/(l-p),t.copy(n).addScaledVector(or,o);const m=h*p-f*u;if(m<=0&&u-h>=0&&f-p>=0)return md.subVectors(r,i),o=(u-h)/(u-h+(f-p)),t.copy(i).addScaledVector(md,o);const A=1/(m+g+d);return a=g*A,o=d*A,t.copy(n).addScaledVector(ar,a).addScaledVector(or,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const _A={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ki={h:0,s:0,l:0},bo={h:0,s:0,l:0};function Vl(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class ue{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=St){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,dt.colorSpaceToWorking(this,t),this}setRGB(e,t,n,i=dt.workingColorSpace){return this.r=e,this.g=t,this.b=n,dt.colorSpaceToWorking(this,i),this}setHSL(e,t,n,i=dt.workingColorSpace){if(e=yu(e,1),t=tt(t,0,1),n=tt(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,a=2*n-r;this.r=Vl(a,r,e+1/3),this.g=Vl(a,r,e),this.b=Vl(a,r,e-1/3)}return dt.colorSpaceToWorking(this,i),this}setStyle(e,t=St){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const a=i[1],o=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],a=r.length;if(a===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=St){const n=_A[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Ni(e.r),this.g=Ni(e.g),this.b=Ni(e.b),this}copyLinearToSRGB(e){return this.r=Br(e.r),this.g=Br(e.g),this.b=Br(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=St){return dt.workingToColorSpace(An.copy(this),e),Math.round(tt(An.r*255,0,255))*65536+Math.round(tt(An.g*255,0,255))*256+Math.round(tt(An.b*255,0,255))}getHexString(e=St){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=dt.workingColorSpace){dt.workingToColorSpace(An.copy(this),t);const n=An.r,i=An.g,r=An.b,a=Math.max(n,i,r),o=Math.min(n,i,r);let c,l;const h=(o+a)/2;if(o===a)c=0,l=0;else{const u=a-o;switch(l=h<=.5?u/(a+o):u/(2-a-o),a){case n:c=(i-r)/u+(i<r?6:0);break;case i:c=(r-n)/u+2;break;case r:c=(n-i)/u+4;break}c/=6}return e.h=c,e.s=l,e.l=h,e}getRGB(e,t=dt.workingColorSpace){return dt.workingToColorSpace(An.copy(this),t),e.r=An.r,e.g=An.g,e.b=An.b,e}getStyle(e=St){dt.workingToColorSpace(An.copy(this),e);const t=An.r,n=An.g,i=An.b;return e!==St?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Ki),this.setHSL(Ki.h+e,Ki.s+t,Ki.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Ki),e.getHSL(bo);const n=Ea(Ki.h,bo.h,t),i=Ea(Ki.s,bo.s,t),r=Ea(Ki.l,bo.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const An=new ue;ue.NAMES=_A;let V0=0;class nn extends Ei{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:V0++}),this.uuid=Jn(),this.name="",this.type="Material",this.blending=Us,this.side=hi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Ec,this.blendDst=vc,this.blendEquation=$i,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new ue(0,0,0),this.blendAlpha=0,this.depthFunc=Hs,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Vh,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Is,this.stencilZFail=Is,this.stencilZPass=Is,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.sheenColorMap&&this.sheenColorMap.isTexture&&(n.sheenColorMap=this.sheenColorMap.toJSON(e).uuid),this.sheenRoughnessMap&&this.sheenRoughnessMap.isTexture&&(n.sheenRoughnessMap=this.sheenRoughnessMap.toJSON(e).uuid),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Us&&(n.blending=this.blending),this.side!==hi&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Ec&&(n.blendSrc=this.blendSrc),this.blendDst!==vc&&(n.blendDst=this.blendDst),this.blendEquation!==$i&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Hs&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Vh&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Is&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Is&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Is&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const a=[];for(const o in r){const c=r[o];delete c.metadata,a.push(c)}return a}if(t){const r=i(e.textures),a=i(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class yn extends nn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ue(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new zn,this.combine=qa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Li=W0();function W0(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let c=0;c<256;++c){const l=c-127;l<-27?(n[c]=0,n[c|256]=32768,i[c]=24,i[c|256]=24):l<-14?(n[c]=1024>>-l-14,n[c|256]=1024>>-l-14|32768,i[c]=-l-1,i[c|256]=-l-1):l<=15?(n[c]=l+15<<10,n[c|256]=l+15<<10|32768,i[c]=13,i[c|256]=13):l<128?(n[c]=31744,n[c|256]=64512,i[c]=24,i[c|256]=24):(n[c]=31744,n[c|256]=64512,i[c]=13,i[c|256]=13)}const r=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let c=1;c<1024;++c){let l=c<<13,h=0;for(;!(l&8388608);)l<<=1,h-=8388608;l&=-8388609,h+=947912704,r[c]=l|h}for(let c=1024;c<2048;++c)r[c]=939524096+(c-1024<<13);for(let c=1;c<31;++c)a[c]=c<<23;a[31]=1199570944,a[32]=2147483648;for(let c=33;c<63;++c)a[c]=2147483648+(c-32<<23);a[63]=3347054592;for(let c=1;c<64;++c)c!==32&&(o[c]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:a,offsetTable:o}}function Nn(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=tt(s,-65504,65504),Li.floatView[0]=s;const e=Li.uint32View[0],t=e>>23&511;return Li.baseTable[t]+((e&8388607)>>Li.shiftTable[t])}function ba(s){const e=s>>10;return Li.uint32View[0]=Li.mantissaTable[Li.offsetTable[e]+(s&1023)]+Li.exponentTable[e],Li.floatView[0]}class q0{static toHalfFloat(e){return Nn(e)}static fromHalfFloat(e){return ba(e)}}const jt=new S,xo=new ie;let X0=0;class ot{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:X0++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Oa,this.updateRanges=[],this.gpuType=en,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)xo.fromBufferAttribute(this,t),xo.applyMatrix3(e),this.setXY(t,xo.x,xo.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.applyMatrix3(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.applyMatrix4(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.applyNormalMatrix(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.transformDirection(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Rn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ct(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Rn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Rn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Rn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Rn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array),r=ct(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Oa&&(e.usage=this.usage),e}}class Y0 extends ot{constructor(e,t,n){super(new Int8Array(e),t,n)}}class K0 extends ot{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class J0 extends ot{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class j0 extends ot{constructor(e,t,n){super(new Int16Array(e),t,n)}}class xu extends ot{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Z0 extends ot{constructor(e,t,n){super(new Int32Array(e),t,n)}}class _u extends ot{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class $0 extends ot{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=ba(this.array[e*this.itemSize]);return this.normalized&&(t=Rn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize]=Nn(t),this}getY(e){let t=ba(this.array[e*this.itemSize+1]);return this.normalized&&(t=Rn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+1]=Nn(t),this}getZ(e){let t=ba(this.array[e*this.itemSize+2]);return this.normalized&&(t=Rn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+2]=Nn(t),this}getW(e){let t=ba(this.array[e*this.itemSize+3]);return this.normalized&&(t=Rn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+3]=Nn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array)),this.array[e+0]=Nn(t),this.array[e+1]=Nn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array)),this.array[e+0]=Nn(t),this.array[e+1]=Nn(n),this.array[e+2]=Nn(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array),r=ct(r,this.array)),this.array[e+0]=Nn(t),this.array[e+1]=Nn(n),this.array[e+2]=Nn(i),this.array[e+3]=Nn(r),this}}class Ge extends ot{constructor(e,t,n){super(new Float32Array(e),t,n)}}let ey=0;const Zn=new Ve,Wl=new lt,cr=new S,Wn=new $t,ra=new $t,an=new S;class Je extends Ei{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:ey++}),this.uuid=Jn(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(yA(e)?_u:xu)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new at().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Zn.makeRotationFromQuaternion(e),this.applyMatrix4(Zn),this}rotateX(e){return Zn.makeRotationX(e),this.applyMatrix4(Zn),this}rotateY(e){return Zn.makeRotationY(e),this.applyMatrix4(Zn),this}rotateZ(e){return Zn.makeRotationZ(e),this.applyMatrix4(Zn),this}translate(e,t,n){return Zn.makeTranslation(e,t,n),this.applyMatrix4(Zn),this}scale(e,t,n){return Zn.makeScale(e,t,n),this.applyMatrix4(Zn),this}lookAt(e){return Wl.lookAt(e),Wl.updateMatrix(),this.applyMatrix4(Wl.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(cr).negate(),this.translate(cr.x,cr.y,cr.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,r=e.length;i<r;i++){const a=e[i];n.push(a.x,a.y,a.z||0)}this.setAttribute("position",new Ge(n,3))}else{const n=Math.min(e.length,t.count);for(let i=0;i<n;i++){const r=e[i];t.setXYZ(i,r.x,r.y,r.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new $t);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new S(-1/0,-1/0,-1/0),new S(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Wn.setFromBufferAttribute(r),this.morphTargetsRelative?(an.addVectors(this.boundingBox.min,Wn.min),this.boundingBox.expandByPoint(an),an.addVectors(this.boundingBox.max,Wn.max),this.boundingBox.expandByPoint(an)):(this.boundingBox.expandByPoint(Wn.min),this.boundingBox.expandByPoint(Wn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new un);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new S,1/0);return}if(e){const n=this.boundingSphere.center;if(Wn.setFromBufferAttribute(e),t)for(let r=0,a=t.length;r<a;r++){const o=t[r];ra.setFromBufferAttribute(o),this.morphTargetsRelative?(an.addVectors(Wn.min,ra.min),Wn.expandByPoint(an),an.addVectors(Wn.max,ra.max),Wn.expandByPoint(an)):(Wn.expandByPoint(ra.min),Wn.expandByPoint(ra.max))}Wn.getCenter(n);let i=0;for(let r=0,a=e.count;r<a;r++)an.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(an));if(t)for(let r=0,a=t.length;r<a;r++){const o=t[r],c=this.morphTargetsRelative;for(let l=0,h=o.count;l<h;l++)an.fromBufferAttribute(o,l),c&&(cr.fromBufferAttribute(e,l),an.add(cr)),i=Math.max(i,n.distanceToSquared(an))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ot(new Float32Array(4*n.count),4));const a=this.getAttribute("tangent"),o=[],c=[];for(let I=0;I<n.count;I++)o[I]=new S,c[I]=new S;const l=new S,h=new S,u=new S,d=new ie,f=new ie,p=new ie,g=new S,m=new S;function A(I,E,w){l.fromBufferAttribute(n,I),h.fromBufferAttribute(n,E),u.fromBufferAttribute(n,w),d.fromBufferAttribute(r,I),f.fromBufferAttribute(r,E),p.fromBufferAttribute(r,w),h.sub(l),u.sub(l),f.sub(d),p.sub(d);const T=1/(f.x*p.y-p.x*f.y);isFinite(T)&&(g.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(T),m.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(T),o[I].add(g),o[E].add(g),o[w].add(g),c[I].add(m),c[E].add(m),c[w].add(m))}let y=this.groups;y.length===0&&(y=[{start:0,count:e.count}]);for(let I=0,E=y.length;I<E;++I){const w=y[I],T=w.start,R=w.count;for(let U=T,O=T+R;U<O;U+=3)A(e.getX(U+0),e.getX(U+1),e.getX(U+2))}const x=new S,b=new S,_=new S,C=new S;function v(I){_.fromBufferAttribute(i,I),C.copy(_);const E=o[I];x.copy(E),x.sub(_.multiplyScalar(_.dot(E))).normalize(),b.crossVectors(C,E);const T=b.dot(c[I])<0?-1:1;a.setXYZW(I,x.x,x.y,x.z,T)}for(let I=0,E=y.length;I<E;++I){const w=y[I],T=w.start,R=w.count;for(let U=T,O=T+R;U<O;U+=3)v(e.getX(U+0)),v(e.getX(U+1)),v(e.getX(U+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new ot(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new S,r=new S,a=new S,o=new S,c=new S,l=new S,h=new S,u=new S;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),g=e.getX(d+1),m=e.getX(d+2);i.fromBufferAttribute(t,p),r.fromBufferAttribute(t,g),a.fromBufferAttribute(t,m),h.subVectors(a,r),u.subVectors(i,r),h.cross(u),o.fromBufferAttribute(n,p),c.fromBufferAttribute(n,g),l.fromBufferAttribute(n,m),o.add(h),c.add(h),l.add(h),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(g,c.x,c.y,c.z),n.setXYZ(m,l.x,l.y,l.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),a.fromBufferAttribute(t,d+2),h.subVectors(a,r),u.subVectors(i,r),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)an.fromBufferAttribute(e,t),an.normalize(),e.setXYZ(t,an.x,an.y,an.z)}toNonIndexed(){function e(o,c){const l=o.array,h=o.itemSize,u=o.normalized,d=new l.constructor(c.length*h);let f=0,p=0;for(let g=0,m=c.length;g<m;g++){o.isInterleavedBufferAttribute?f=c[g]*o.data.stride+o.offset:f=c[g]*h;for(let A=0;A<h;A++)d[p++]=l[f++]}return new ot(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Je,n=this.index.array,i=this.attributes;for(const o in i){const c=i[o],l=e(c,n);t.setAttribute(o,l)}const r=this.morphAttributes;for(const o in r){const c=[],l=r[o];for(let h=0,u=l.length;h<u;h++){const d=l[h],f=e(d,n);c.push(f)}t.morphAttributes[o]=c}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,c=a.length;o<c;o++){const l=a[o];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const l=n[c];e.data.attributes[c]=l.toJSON(e.data)}const i={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],h=[];for(let u=0,d=l.length;u<d;u++){const f=l[u];h.push(f.toJSON(e.data))}h.length>0&&(i[c]=h,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere=o.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const i=e.attributes;for(const l in i){const h=i[l];this.setAttribute(l,h.clone(t))}const r=e.morphAttributes;for(const l in r){const h=[],u=r[l];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(t));this.morphAttributes[l]=h}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let l=0,h=a.length;l<h;l++){const u=a[l];this.addGroup(u.start,u.count,u.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const gd=new Ve,ps=new Jr,_o=new un,yd=new S,Eo=new S,vo=new S,wo=new S,ql=new S,Co=new S,bd=new S,So=new S;class Be extends lt{constructor(e=new Je,t=new yn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const o=this.morphTargetInfluences;if(r&&o){Co.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const h=o[c],u=r[c];h!==0&&(ql.fromBufferAttribute(u,e),a?Co.addScaledVector(ql,h):Co.addScaledVector(ql.sub(t),h))}t.add(Co)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),_o.copy(n.boundingSphere),_o.applyMatrix4(r),ps.copy(e.ray).recast(e.near),!(_o.containsPoint(ps.origin)===!1&&(ps.intersectSphere(_o,yd)===null||ps.origin.distanceToSquared(yd)>(e.far-e.near)**2))&&(gd.copy(r).invert(),ps.copy(e.ray).applyMatrix4(gd),!(n.boundingBox!==null&&ps.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,ps)))}_computeIntersections(e,t,n){let i;const r=this.geometry,a=this.material,o=r.index,c=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,d=r.groups,f=r.drawRange;if(o!==null)if(Array.isArray(a))for(let p=0,g=d.length;p<g;p++){const m=d[p],A=a[m.materialIndex],y=Math.max(m.start,f.start),x=Math.min(o.count,Math.min(m.start+m.count,f.start+f.count));for(let b=y,_=x;b<_;b+=3){const C=o.getX(b),v=o.getX(b+1),I=o.getX(b+2);i=Io(this,A,e,n,l,h,u,C,v,I),i&&(i.faceIndex=Math.floor(b/3),i.face.materialIndex=m.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),g=Math.min(o.count,f.start+f.count);for(let m=p,A=g;m<A;m+=3){const y=o.getX(m),x=o.getX(m+1),b=o.getX(m+2);i=Io(this,a,e,n,l,h,u,y,x,b),i&&(i.faceIndex=Math.floor(m/3),t.push(i))}}else if(c!==void 0)if(Array.isArray(a))for(let p=0,g=d.length;p<g;p++){const m=d[p],A=a[m.materialIndex],y=Math.max(m.start,f.start),x=Math.min(c.count,Math.min(m.start+m.count,f.start+f.count));for(let b=y,_=x;b<_;b+=3){const C=b,v=b+1,I=b+2;i=Io(this,A,e,n,l,h,u,C,v,I),i&&(i.faceIndex=Math.floor(b/3),i.face.materialIndex=m.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),g=Math.min(c.count,f.start+f.count);for(let m=p,A=g;m<A;m+=3){const y=m,x=m+1,b=m+2;i=Io(this,a,e,n,l,h,u,y,x,b),i&&(i.faceIndex=Math.floor(m/3),t.push(i))}}}}function ty(s,e,t,n,i,r,a,o){let c;if(e.side===bn?c=n.intersectTriangle(a,r,i,!0,o):c=n.intersectTriangle(i,r,a,e.side===hi,o),c===null)return null;So.copy(o),So.applyMatrix4(s.matrixWorld);const l=t.ray.origin.distanceTo(So);return l<t.near||l>t.far?null:{distance:l,point:So.clone(),object:s}}function Io(s,e,t,n,i,r,a,o,c,l){s.getVertexPosition(o,Eo),s.getVertexPosition(c,vo),s.getVertexPosition(l,wo);const h=ty(s,e,t,n,Eo,vo,wo,bd);if(h){const u=new S;Dn.getBarycoord(bd,Eo,vo,wo,u),i&&(h.uv=Dn.getInterpolatedAttribute(i,o,c,l,u,new ie)),r&&(h.uv1=Dn.getInterpolatedAttribute(r,o,c,l,u,new ie)),a&&(h.normal=Dn.getInterpolatedAttribute(a,o,c,l,u,new S),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const d={a:o,b:c,c:l,normal:new S,materialIndex:0};Dn.getNormal(Eo,vo,wo,d.normal),h.face=d,h.barycoord=u}return h}class Ut extends Je{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const o=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const c=[],l=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,n,t,e,a,r,0),p("z","y","x",1,-1,n,t,-e,a,r,1),p("x","z","y",1,1,e,n,t,i,a,2),p("x","z","y",1,-1,e,n,-t,i,a,3),p("x","y","z",1,-1,e,t,n,i,r,4),p("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(c),this.setAttribute("position",new Ge(l,3)),this.setAttribute("normal",new Ge(h,3)),this.setAttribute("uv",new Ge(u,2));function p(g,m,A,y,x,b,_,C,v,I,E){const w=b/v,T=_/I,R=b/2,U=_/2,O=C/2,N=v+1,k=I+1;let te=0,Q=0;const $=new S;for(let ae=0;ae<k;ae++){const Ae=ae*T-U;for(let Ce=0;Ce<N;Ce++){const Ie=Ce*w-R;$[g]=Ie*y,$[m]=Ae*x,$[A]=O,l.push($.x,$.y,$.z),$[g]=0,$[m]=0,$[A]=C>0?1:-1,h.push($.x,$.y,$.z),u.push(Ce/v),u.push(1-ae/I),te+=1}}for(let ae=0;ae<I;ae++)for(let Ae=0;Ae<v;Ae++){const Ce=d+Ae+N*ae,Ie=d+Ae+N*(ae+1),je=d+(Ae+1)+N*(ae+1),$e=d+(Ae+1)+N*ae;c.push(Ce,Ie,$e),c.push(Ie,je,$e),Q+=6}o.addGroup(f,Q,E),f+=Q,d+=te}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ut(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function qr(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Tn(s){const e={};for(let t=0;t<s.length;t++){const n=qr(s[t]);for(const i in n)e[i]=n[i]}return e}function ny(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function EA(s){const e=s.getRenderTarget();return e===null?s.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:dt.workingColorSpace}const Ga={clone:qr,merge:Tn};var iy=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,sy=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class jn extends nn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=iy,this.fragmentShader=sy,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=qr(e.uniforms),this.uniformsGroups=ny(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class ol extends lt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ve,this.projectionMatrix=new Ve,this.projectionMatrixInverse=new Ve,this.coordinateSystem=Kn,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Ji=new S,xd=new ie,_d=new ie;class Zt extends ol{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Wr*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Qs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Wr*2*Math.atan(Math.tan(Qs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Ji.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Ji.x,Ji.y).multiplyScalar(-e/Ji.z),Ji.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Ji.x,Ji.y).multiplyScalar(-e/Ji.z)}getViewSize(e,t){return this.getViewBounds(e,xd,_d),t.subVectors(_d,xd)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Qs*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const c=a.fullWidth,l=a.fullHeight;r+=a.offsetX*i/c,t-=a.offsetY*n/l,i*=a.width/c,n*=a.height/l}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const lr=-90,hr=1;class vA extends lt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new Zt(lr,hr,e,t);i.layers=this.layers,this.add(i);const r=new Zt(lr,hr,e,t);r.layers=this.layers,this.add(r);const a=new Zt(lr,hr,e,t);a.layers=this.layers,this.add(a);const o=new Zt(lr,hr,e,t);o.layers=this.layers,this.add(o);const c=new Zt(lr,hr,e,t);c.layers=this.layers,this.add(c);const l=new Zt(lr,hr,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,a,o,c]=t;for(const l of t)this.remove(l);if(e===Kn)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===Vr)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const l of t)this.add(l),l.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,a,o,c,l,h]=this.children,u=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const g=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,r),e.setRenderTarget(n,1,i),e.render(t,a),e.setRenderTarget(n,2,i),e.render(t,o),e.setRenderTarget(n,3,i),e.render(t,c),e.setRenderTarget(n,4,i),e.render(t,l),n.texture.generateMipmaps=g,e.setRenderTarget(n,5,i),e.render(t,h),e.setRenderTarget(u,d,f),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Za extends Wt{constructor(e=[],t=Qi,n,i,r,a,o,c,l,h){super(e,t,n,i,r,a,o,c,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class wA extends ui{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Za(i),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Ut(5,5,5),r=new jn({name:"CubemapFromEquirect",uniforms:qr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:bn,blending:Fi});r.uniforms.tEquirect.value=t;const a=new Be(i,r),o=t.minFilter;return t.minFilter===kn&&(t.minFilter=Ht),new vA(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t=!0,n=!0,i=!0){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(r)}}class Lt extends lt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const ry={type:"move"};class mc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Lt,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Lt,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new S,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new S),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Lt,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new S,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new S),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const o=this._targetRay,c=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){a=!0;for(const g of e.hand.values()){const m=t.getJointPose(g,n),A=this._getHandJoint(l,g);m!==null&&(A.matrix.fromArray(m.transform.matrix),A.matrix.decompose(A.position,A.rotation,A.scale),A.matrixWorldNeedsUpdate=!0,A.jointRadius=m.radius),A.visible=m!==null}const h=l.joints["index-finger-tip"],u=l.joints["thumb-tip"],d=h.position.distanceTo(u.position),f=.02,p=.005;l.inputState.pinching&&d>f+p?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&d<=f-p&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));o!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(ry)))}return o!==null&&(o.visible=i!==null),c!==null&&(c.visible=r!==null),l!==null&&(l.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Lt;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class cl{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new ue(e),this.density=t}clone(){return new cl(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class $a{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new ue(e),this.near=t,this.far=n}clone(){return new $a(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Eu extends lt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new zn,this.environmentIntensity=1,this.environmentRotation=new zn,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class eo{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Oa,this.updateRanges=[],this.version=0,this.uuid=Jn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Jn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Jn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Cn=new S;class as{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Cn.fromBufferAttribute(this,t),Cn.applyMatrix4(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Cn.fromBufferAttribute(this,t),Cn.applyNormalMatrix(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Cn.fromBufferAttribute(this,t),Cn.transformDirection(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Rn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ct(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Rn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Rn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Rn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Rn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array),r=ct(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new ot(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new as(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class vu extends nn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new ue(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let ur;const aa=new S,dr=new S,fr=new S,pr=new ie,oa=new ie,CA=new Ve,Mo=new S,ca=new S,To=new S,Ed=new ie,Xl=new ie,vd=new ie;class SA extends lt{constructor(e=new vu){if(super(),this.isSprite=!0,this.type="Sprite",ur===void 0){ur=new Je;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new eo(t,5);ur.setIndex([0,1,2,0,2,3]),ur.setAttribute("position",new as(n,3,0,!1)),ur.setAttribute("uv",new as(n,2,3,!1))}this.geometry=ur,this.material=e,this.center=new ie(.5,.5),this.count=1}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),dr.setFromMatrixScale(this.matrixWorld),CA.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),fr.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&dr.multiplyScalar(-fr.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;Bo(Mo.set(-.5,-.5,0),fr,a,dr,i,r),Bo(ca.set(.5,-.5,0),fr,a,dr,i,r),Bo(To.set(.5,.5,0),fr,a,dr,i,r),Ed.set(0,0),Xl.set(1,0),vd.set(1,1);let o=e.ray.intersectTriangle(Mo,ca,To,!1,aa);if(o===null&&(Bo(ca.set(-.5,.5,0),fr,a,dr,i,r),Xl.set(0,1),o=e.ray.intersectTriangle(Mo,To,ca,!1,aa),o===null))return;const c=e.ray.origin.distanceTo(aa);c<e.near||c>e.far||t.push({distance:c,point:aa.clone(),uv:Dn.getInterpolation(aa,Mo,ca,To,Ed,Xl,vd,new ie),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Bo(s,e,t,n,i,r){pr.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(oa.x=r*pr.x-i*pr.y,oa.y=i*pr.x+r*pr.y):oa.copy(pr),s.copy(e),s.x+=oa.x,s.y+=oa.y,s.applyMatrix4(CA)}const Ro=new S,wd=new S;class wu extends lt{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let n=0;n<t.length;n++)if(t[n].distance===e){const i=t.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),e<r)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Ro.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Ro);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Ro.setFromMatrixPosition(e.matrixWorld),wd.setFromMatrixPosition(this.matrixWorld);const n=Ro.distanceTo(wd)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let a=t[i].distance;if(t[i].object.visible&&(a-=a*t[i].hysteresis),n>=a)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const Cd=new S,Sd=new bt,Id=new bt,ay=new S,Md=new Ve,Do=new S,Yl=new un,Td=new Ve,Kl=new Jr;class Cu extends Be{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=zh,this.bindMatrix=new Ve,this.bindMatrixInverse=new Ve,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new $t),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Do),this.boundingBox.expandByPoint(Do)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new un),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Do),this.boundingSphere.expandByPoint(Do)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Yl.copy(this.boundingSphere),Yl.applyMatrix4(i),e.ray.intersectsSphere(Yl)!==!1&&(Td.copy(i).invert(),Kl.copy(e.ray).applyMatrix4(Td),!(this.boundingBox!==null&&Kl.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Kl)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new bt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===zh?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===iA?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Sd.fromBufferAttribute(i.attributes.skinIndex,e),Id.fromBufferAttribute(i.attributes.skinWeight,e),Cd.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const a=Id.getComponent(r);if(a!==0){const o=Sd.getComponent(r);Md.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),t.addScaledVector(ay.copy(Cd).applyMatrix4(Md),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}class ll extends lt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Qn extends Wt{constructor(e=null,t=1,n=1,i,r,a,o,c,l=Jt,h=Jt,u,d){super(null,a,o,c,l,h,i,r,u,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Bd=new Ve,oy=new Ve;class to{constructor(e=[],t=[]){this.uuid=Jn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Ve)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Ve;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,a=e.length;r<a;r++){const o=e[r]?e[r].matrixWorld:oy;Bd.multiplyMatrices(o,t[r]),Bd.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new to(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Qn(t,e,e,Vt,en);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let a=t[r];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new ll),this.bones.push(a),this.boneInverses.push(new Ve().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const a=t[i];e.bones.push(a.uuid);const o=n[i];e.boneInverses.push(o.toArray())}return e}}class Ws extends ot{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Ar=new Ve,Rd=new Ve,Lo=[],Dd=new $t,cy=new Ve,la=new Be,ha=new un;class Bn extends Be{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Ws(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,cy)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new $t),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Ar),Dd.copy(e.boundingBox).applyMatrix4(Ar),this.boundingBox.union(Dd)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new un),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Ar),ha.copy(e.boundingSphere).applyMatrix4(Ar),this.boundingSphere.union(ha)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,r=n.length+1,a=e*r+1;for(let o=0;o<n.length;o++)n[o]=i[a+o]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(la.geometry=this.geometry,la.material=this.material,la.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),ha.copy(this.boundingSphere),ha.applyMatrix4(n),e.ray.intersectsSphere(ha)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,Ar),Rd.multiplyMatrices(n,Ar),la.matrixWorld=Rd,la.raycast(e,Lo);for(let a=0,o=Lo.length;a<o;a++){const c=Lo[a];c.instanceId=r,c.object=this,t.push(c)}Lo.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Ws(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new Qn(new Float32Array(i*this.count),i,this.count,Pi,en));const r=this.morphTexture.source.data.data;let a=0;for(let l=0;l<n.length;l++)a+=n[l];const o=this.geometry.morphTargetsRelative?1:1-a,c=i*e;r[c]=o,r.set(n,c+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const Jl=new S,ly=new S,hy=new at;class On{constructor(e=new S(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Jl.subVectors(n,t).cross(ly.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Jl),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||hy.getNormalMatrix(e),i=this.coplanarPoint(Jl).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const As=new un,uy=new ie(.5,.5),Po=new S;class jr{constructor(e=new On,t=new On,n=new On,i=new On,r=new On,a=new On){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Kn,n=!1){const i=this.planes,r=e.elements,a=r[0],o=r[1],c=r[2],l=r[3],h=r[4],u=r[5],d=r[6],f=r[7],p=r[8],g=r[9],m=r[10],A=r[11],y=r[12],x=r[13],b=r[14],_=r[15];if(i[0].setComponents(l-a,f-h,A-p,_-y).normalize(),i[1].setComponents(l+a,f+h,A+p,_+y).normalize(),i[2].setComponents(l+o,f+u,A+g,_+x).normalize(),i[3].setComponents(l-o,f-u,A-g,_-x).normalize(),n)i[4].setComponents(c,d,m,b).normalize(),i[5].setComponents(l-c,f-d,A-m,_-b).normalize();else if(i[4].setComponents(l-c,f-d,A-m,_-b).normalize(),t===Kn)i[5].setComponents(l+c,f+d,A+m,_+b).normalize();else if(t===Vr)i[5].setComponents(c,d,m,b).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),As.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),As.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(As)}intersectsSprite(e){As.center.set(0,0,0);const t=uy.distanceTo(e.center);return As.radius=.7071067811865476+t,As.applyMatrix4(e.matrixWorld),this.intersectsSphere(As)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Po.x=i.normal.x>0?e.max.x:e.min.x,Po.y=i.normal.y>0?e.max.y:e.min.y,Po.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Po)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const pi=new Ve,Ai=new jr;class hl{constructor(){this.coordinateSystem=Kn}intersectsObject(e,t){if(!t.isArrayCamera||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(pi.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Ai.setFromProjectionMatrix(pi,i.coordinateSystem,i.reversedDepth),Ai.intersectsObject(e))return!0}return!1}intersectsSprite(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(pi.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Ai.setFromProjectionMatrix(pi,i.coordinateSystem,i.reversedDepth),Ai.intersectsSprite(e))return!0}return!1}intersectsSphere(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(pi.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Ai.setFromProjectionMatrix(pi,i.coordinateSystem,i.reversedDepth),Ai.intersectsSphere(e))return!0}return!1}intersectsBox(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(pi.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Ai.setFromProjectionMatrix(pi,i.coordinateSystem,i.reversedDepth),Ai.intersectsBox(e))return!0}return!1}containsPoint(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(pi.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Ai.setFromProjectionMatrix(pi,i.coordinateSystem,i.reversedDepth),Ai.containsPoint(e))return!0}return!1}clone(){return new hl}}function jl(s,e){return s-e}function dy(s,e){return s.z-e.z}function fy(s,e){return e.z-s.z}class py{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n,i){const r=this.pool,a=this.list;this.index>=r.length&&r.push({start:-1,count:-1,z:-1,index:-1});const o=r[this.index];a.push(o),this.index++,o.start=e,o.count=t,o.z=n,o.index=i}reset(){this.list.length=0,this.index=0}}const Fn=new Ve,Ay=new ue(1,1,1),Ld=new jr,my=new hl,Fo=new $t,ms=new un,ua=new S,Pd=new S,gy=new S,Zl=new py,mn=new Be,Uo=[];function yy(s,e,t=0){const n=e.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==e.array.constructor){const i=s.count;for(let r=0;r<i;r++)for(let a=0;a<n;a++)e.setComponent(r+t,a,s.getComponent(r,a))}else e.array.set(s.array,t*n);e.needsUpdate=!0}function gs(s,e){if(s.constructor!==e.constructor){const t=Math.min(s.length,e.length);for(let n=0;n<t;n++)e[n]=s[n]}else{const t=Math.min(s.length,e.length);e.set(new s.constructor(s.buffer,0,t))}}class IA extends Be{constructor(e,t,n=t*2,i){super(new Je,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new Qn(t,e,e,Vt,en);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new Qn(t,e,e,Ja,Gi);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new Qn(t,e,e,Vt,en);n.colorSpace=dt.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const r in e.attributes){const a=e.getAttribute(r),{array:o,itemSize:c,normalized:l}=a,h=new o.constructor(n*c),u=new ot(h,c,l);t.setAttribute(r,u)}if(e.getIndex()!==null){const r=n>65535?new Uint32Array(i):new Uint16Array(i);t.setIndex(new ot(r,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),r=t.getAttribute(n);if(i.itemSize!==r.itemSize||i.normalized!==r.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new $t);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const r=t[n].geometryIndex;this.getMatrixAt(n,Fn),this.getBoundingBoxAt(r,Fo).applyMatrix4(Fn),e.union(Fo)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new un);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const r=t[n].geometryIndex;this.getMatrixAt(n,Fn),this.getBoundingSphereAt(r,ms).applyMatrix4(Fn),e.union(ms)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:e};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(jl),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const r=this._matricesTexture;Fn.identity().toArray(r.image.data,i*16),r.needsUpdate=!0;const a=this._colorsTexture;return a&&(Ay.toArray(a.image.data,i*4),a.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(e,t=-1,n=-1){this._initializeGeometry(e),this._validateGeometry(e);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},r=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const a=e.getIndex();if(a!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?a.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let c;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(jl),c=this._availableGeometryIds.shift(),r[c]=i):(c=this._geometryCount,this._geometryCount++,r.push(i)),this.setGeometryAt(c,e),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,c}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,r=n.getIndex(),a=t.getIndex(),o=this._geometryInfo[e];if(i&&a.count>o.reservedIndexCount||t.attributes.position.count>o.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const c=o.vertexStart,l=o.reservedVertexCount;o.vertexCount=t.getAttribute("position").count;for(const h in n.attributes){const u=t.getAttribute(h),d=n.getAttribute(h);yy(u,d,c);const f=u.itemSize;for(let p=u.count,g=l;p<g;p++){const m=c+p;for(let A=0;A<f;A++)d.setComponent(m,A,0)}d.needsUpdate=!0,d.addUpdateRange(c*f,l*f)}if(i){const h=o.indexStart,u=o.reservedIndexCount;o.indexCount=t.getIndex().count;for(let d=0;d<a.count;d++)r.setX(h+d,c+a.getX(d));for(let d=a.count,f=u;d<f;d++)r.setX(h+d,c);r.needsUpdate=!0,r.addUpdateRange(h,o.reservedIndexCount)}return o.start=i?o.indexStart:o.vertexStart,o.count=i?o.indexCount:o.vertexCount,o.boundingBox=null,t.boundingBox!==null&&(o.boundingBox=t.boundingBox.clone()),o.boundingSphere=null,t.boundingSphere!==null&&(o.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const n=this._instanceInfo;for(let i=0,r=n.length;i<r;i++)n[i].active&&n[i].geometryIndex===e&&this.deleteInstance(i);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const n=this._geometryInfo,i=n.map((a,o)=>o).sort((a,o)=>n[a].vertexStart-n[o].vertexStart),r=this.geometry;for(let a=0,o=n.length;a<o;a++){const c=i[a],l=n[c];if(l.active!==!1){if(r.index!==null){if(l.indexStart!==t){const{indexStart:h,vertexStart:u,reservedIndexCount:d}=l,f=r.index,p=f.array,g=e-u;for(let m=h;m<h+d;m++)p[m]=p[m]+g;f.array.copyWithin(t,h,h+d),f.addUpdateRange(t,d),l.indexStart=t}t+=l.reservedIndexCount}if(l.vertexStart!==e){const{vertexStart:h,reservedVertexCount:u}=l,d=r.attributes;for(const f in d){const p=d[f],{array:g,itemSize:m}=p;g.copyWithin(e*m,h*m,(h+u)*m),p.addUpdateRange(e*m,u*m)}l.vertexStart=e}e+=l.reservedVertexCount,l.start=r.index?l.indexStart:l.vertexStart,this._nextIndexStart=r.index?l.indexStart+l.reservedIndexCount:0,this._nextVertexStart=l.vertexStart+l.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingBox===null){const r=new $t,a=n.index,o=n.attributes.position;for(let c=i.start,l=i.start+i.count;c<l;c++){let h=c;a&&(h=a.getX(h)),r.expandByPoint(ua.fromBufferAttribute(o,h))}i.boundingBox=r}return t.copy(i.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingSphere===null){const r=new un;this.getBoundingBoxAt(e,Fo),Fo.getCenter(r.center);const a=n.index,o=n.attributes.position;let c=0;for(let l=i.start,h=i.start+i.count;l<h;l++){let u=l;a&&(u=a.getX(u)),ua.fromBufferAttribute(o,u),c=Math.max(c,r.center.distanceToSquared(ua))}r.radius=Math.sqrt(c),i.boundingSphere=r}return t.copy(i.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const n=this._matricesTexture,i=this._matricesTexture.image.data;return t.toArray(i,e*16),n.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const n=this._geometryInfo[e];return t.vertexStart=n.vertexStart,t.vertexCount=n.vertexCount,t.reservedVertexCount=n.reservedVertexCount,t.indexStart=n.indexStart,t.indexCount=n.indexCount,t.reservedIndexCount=n.reservedIndexCount,t.start=n.start,t.count=n.count,t}setInstanceCount(e){const t=this._availableInstanceIds,n=this._instanceInfo;for(t.sort(jl);t[t.length-1]===n.length-1;)n.pop(),t.pop();if(e<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const i=new Int32Array(e),r=new Int32Array(e);gs(this._multiDrawCounts,i),gs(this._multiDrawStarts,r),this._multiDrawCounts=i,this._multiDrawStarts=r,this._maxInstanceCount=e;const a=this._indirectTexture,o=this._matricesTexture,c=this._colorsTexture;a.dispose(),this._initIndirectTexture(),gs(a.image.data,this._indirectTexture.image.data),o.dispose(),this._initMatricesTexture(),gs(o.image.data,this._matricesTexture.image.data),c&&(c.dispose(),this._initColorsTexture(),gs(c.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const n=[...this._geometryInfo].filter(o=>o.active);if(Math.max(...n.map(o=>o.vertexStart+o.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(c=>c.indexStart+c.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const r=this.geometry;r.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new Je,this._initializeGeometry(r));const a=this.geometry;r.index&&gs(r.index.array,a.index.array);for(const o in r.attributes)gs(r.attributes[o].array,a.attributes[o].array)}raycast(e,t){const n=this._instanceInfo,i=this._geometryInfo,r=this.matrixWorld,a=this.geometry;mn.material=this.material,mn.geometry.index=a.index,mn.geometry.attributes=a.attributes,mn.geometry.boundingBox===null&&(mn.geometry.boundingBox=new $t),mn.geometry.boundingSphere===null&&(mn.geometry.boundingSphere=new un);for(let o=0,c=n.length;o<c;o++){if(!n[o].visible||!n[o].active)continue;const l=n[o].geometryIndex,h=i[l];mn.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(o,mn.matrixWorld).premultiply(r),this.getBoundingBoxAt(l,mn.geometry.boundingBox),this.getBoundingSphereAt(l,mn.geometry.boundingSphere),mn.raycast(e,Uo);for(let u=0,d=Uo.length;u<d;u++){const f=Uo[u];f.object=this,f.batchId=o,t.push(f)}Uo.length=0}mn.material=null,mn.geometry.index=null,mn.geometry.attributes={},mn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._availableInstanceIds=e._availableInstanceIds.slice(),this._availableGeometryIds=e._availableGeometryIds.slice(),this._nextIndexStart=e._nextIndexStart,this._nextVertexStart=e._nextVertexStart,this._geometryCount=e._geometryCount,this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._indirectTexture=e._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(e,t,n,i,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const a=i.getIndex(),o=a===null?1:a.array.BYTES_PER_ELEMENT,c=this._instanceInfo,l=this._multiDrawStarts,h=this._multiDrawCounts,u=this._geometryInfo,d=this.perObjectFrustumCulled,f=this._indirectTexture,p=f.image.data,g=n.isArrayCamera?my:Ld;d&&!n.isArrayCamera&&(Fn.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Ld.setFromProjectionMatrix(Fn,n.coordinateSystem,n.reversedDepth));let m=0;if(this.sortObjects){Fn.copy(this.matrixWorld).invert(),ua.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Fn),Pd.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(Fn);for(let x=0,b=c.length;x<b;x++)if(c[x].visible&&c[x].active){const _=c[x].geometryIndex;this.getMatrixAt(x,Fn),this.getBoundingSphereAt(_,ms).applyMatrix4(Fn);let C=!1;if(d&&(C=!g.intersectsSphere(ms,n)),!C){const v=u[_],I=gy.subVectors(ms.center,ua).dot(Pd);Zl.push(v.start,v.count,I,x)}}const A=Zl.list,y=this.customSort;y===null?A.sort(r.transparent?fy:dy):y.call(this,A,n);for(let x=0,b=A.length;x<b;x++){const _=A[x];l[m]=_.start*o,h[m]=_.count,p[m]=_.index,m++}Zl.reset()}else for(let A=0,y=c.length;A<y;A++)if(c[A].visible&&c[A].active){const x=c[A].geometryIndex;let b=!1;if(d&&(this.getMatrixAt(A,Fn),this.getBoundingSphereAt(x,ms).applyMatrix4(Fn),b=!g.intersectsSphere(ms,n)),!b){const _=u[x];l[m]=_.start*o,h[m]=_.count,p[m]=A,m++}}f.needsUpdate=!0,this._multiDrawCount=m,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,r,a){this.onBeforeRender(e,null,i,r,a)}}class dn extends nn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ue(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const qc=new S,Xc=new S,Fd=new Ve,da=new Jr,No=new un,$l=new S,Ud=new S;class _i extends lt{constructor(e=new Je,t=new dn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)qc.fromBufferAttribute(t,i-1),Xc.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=qc.distanceTo(Xc);e.setAttribute("lineDistance",new Ge(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),No.copy(n.boundingSphere),No.applyMatrix4(i),No.radius+=r,e.ray.intersectsSphere(No)===!1)return;Fd.copy(i).invert(),da.copy(e.ray).applyMatrix4(Fd);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,l=this.isLineSegments?2:1,h=n.index,d=n.attributes.position;if(h!==null){const f=Math.max(0,a.start),p=Math.min(h.count,a.start+a.count);for(let g=f,m=p-1;g<m;g+=l){const A=h.getX(g),y=h.getX(g+1),x=Oo(this,e,da,c,A,y,g);x&&t.push(x)}if(this.isLineLoop){const g=h.getX(p-1),m=h.getX(f),A=Oo(this,e,da,c,g,m,p-1);A&&t.push(A)}}else{const f=Math.max(0,a.start),p=Math.min(d.count,a.start+a.count);for(let g=f,m=p-1;g<m;g+=l){const A=Oo(this,e,da,c,g,g+1,g);A&&t.push(A)}if(this.isLineLoop){const g=Oo(this,e,da,c,p-1,f,p-1);g&&t.push(g)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}function Oo(s,e,t,n,i,r,a){const o=s.geometry.attributes.position;if(qc.fromBufferAttribute(o,i),Xc.fromBufferAttribute(o,r),t.distanceSqToSegment(qc,Xc,$l,Ud)>n)return;$l.applyMatrix4(s.matrixWorld);const l=e.ray.origin.distanceTo($l);if(!(l<e.near||l>e.far))return{distance:l,point:Ud.clone().applyMatrix4(s.matrixWorld),index:a,face:null,faceIndex:null,barycoord:null,object:s}}const Nd=new S,Od=new S;class di extends _i{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)Nd.fromBufferAttribute(t,i),Od.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Nd.distanceTo(Od);e.setAttribute("lineDistance",new Ge(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Su extends _i{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class no extends nn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new ue(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const kd=new Ve,qh=new Jr,ko=new un,Qo=new S;class ul extends lt{constructor(e=new Je,t=new no){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),ko.copy(n.boundingSphere),ko.applyMatrix4(i),ko.radius+=r,e.ray.intersectsSphere(ko)===!1)return;kd.copy(i).invert(),qh.copy(e.ray).applyMatrix4(kd);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,l=n.index,u=n.attributes.position;if(l!==null){const d=Math.max(0,a.start),f=Math.min(l.count,a.start+a.count);for(let p=d,g=f;p<g;p++){const m=l.getX(p);Qo.fromBufferAttribute(u,m),Qd(Qo,m,c,i,e,t,this)}}else{const d=Math.max(0,a.start),f=Math.min(u.count,a.start+a.count);for(let p=d,g=f;p<g;p++)Qo.fromBufferAttribute(u,p),Qd(Qo,p,c,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}function Qd(s,e,t,n,i,r,a){const o=qh.distanceSqToPoint(s);if(o<t){const c=new S;qh.closestPointToPoint(s,c),c.applyMatrix4(n);const l=i.ray.origin.distanceTo(c);if(l<i.near||l>i.far)return;r.push({distance:l,distanceToRay:Math.sqrt(o),point:c,index:e,face:null,faceIndex:null,barycoord:null,object:a})}}class MA extends Wt{constructor(e,t,n,i,r=Ht,a=Ht,o,c,l){super(e,t,n,i,r,a,o,c,l),this.isVideoTexture=!0,this.generateMipmaps=!1,this._requestVideoFrameCallbackId=0;const h=this;function u(){h.needsUpdate=!0,h._requestVideoFrameCallbackId=e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&(this._requestVideoFrameCallbackId=e.requestVideoFrameCallback(u))}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}dispose(){this._requestVideoFrameCallbackId!==0&&this.source.data.cancelVideoFrameCallback(this._requestVideoFrameCallbackId),super.dispose()}}class by extends MA{constructor(e,t,n,i,r,a,o,c){super({},e,t,n,i,r,a,o,c),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class xy extends Wt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Jt,this.minFilter=Jt,this.generateMipmaps=!1,this.needsUpdate=!0}}class Zr extends Wt{constructor(e,t,n,i,r,a,o,c,l,h,u,d){super(null,a,o,c,l,h,i,r,u,d),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class TA extends Zr{constructor(e,t,n,i,r,a){super(e,t,n,r,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Yn,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class BA extends Zr{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,Qi),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class RA extends Wt{constructor(e,t,n,i,r,a,o,c,l){super(e,t,n,i,r,a,o,c,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Iu extends Wt{constructor(e,t,n=Gi,i,r,a,o=Jt,c=Jt,l,h=Nr,u=1){if(h!==Nr&&h!==Or)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const d={width:e,height:t,depth:u};super(d,i,r,a,o,c,h,n,l),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new ts(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Mu extends Wt{constructor(e=null){super(),this.sourceTexture=e,this.isExternalTexture=!0}copy(e){return super.copy(e),this.sourceTexture=e.sourceTexture,this}}class io extends Je{constructor(e=1,t=1,n=4,i=8,r=1){super(),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i,heightSegments:r},t=Math.max(0,t),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),r=Math.max(1,Math.floor(r));const a=[],o=[],c=[],l=[],h=t/2,u=Math.PI/2*e,d=t,f=2*u+d,p=n*2+r,g=i+1,m=new S,A=new S;for(let y=0;y<=p;y++){let x=0,b=0,_=0,C=0;if(y<=n){const E=y/n,w=E*Math.PI/2;b=-h-e*Math.cos(w),_=e*Math.sin(w),C=-e*Math.cos(w),x=E*u}else if(y<=n+r){const E=(y-n)/r;b=-h+E*t,_=e,C=0,x=u+E*d}else{const E=(y-n-r)/n,w=E*Math.PI/2;b=h+e*Math.sin(w),_=e*Math.cos(w),C=e*Math.sin(w),x=u+d+E*u}const v=Math.max(0,Math.min(1,x/f));let I=0;y===0?I=.5/i:y===p&&(I=-.5/i);for(let E=0;E<=i;E++){const w=E/i,T=w*Math.PI*2,R=Math.sin(T),U=Math.cos(T);A.x=-_*U,A.y=b,A.z=_*R,o.push(A.x,A.y,A.z),m.set(-_*U,C,_*R),m.normalize(),c.push(m.x,m.y,m.z),l.push(w+I,v)}if(y>0){const E=(y-1)*g;for(let w=0;w<i;w++){const T=E+w,R=E+w+1,U=y*g+w,O=y*g+w+1;a.push(T,R,U),a.push(R,O,U)}}}this.setIndex(a),this.setAttribute("position",new Ge(o,3)),this.setAttribute("normal",new Ge(c,3)),this.setAttribute("uv",new Ge(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new io(e.radius,e.height,e.capSegments,e.radialSegments,e.heightSegments)}}class so extends Je{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],a=[],o=[],c=[],l=new S,h=new ie;a.push(0,0,0),o.push(0,0,1),c.push(.5,.5);for(let u=0,d=3;u<=t;u++,d+=3){const f=n+u/t*i;l.x=e*Math.cos(f),l.y=e*Math.sin(f),a.push(l.x,l.y,l.z),o.push(0,0,1),h.x=(a[d]/e+1)/2,h.y=(a[d+1]/e+1)/2,c.push(h.x,h.y)}for(let u=1;u<=t;u++)r.push(u,u+1,0);this.setIndex(r),this.setAttribute("position",new Ge(a,3)),this.setAttribute("normal",new Ge(o,3)),this.setAttribute("uv",new Ge(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new so(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Gt extends Je{constructor(e=1,t=1,n=1,i=32,r=1,a=!1,o=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:c};const l=this;i=Math.floor(i),r=Math.floor(r);const h=[],u=[],d=[],f=[];let p=0;const g=[],m=n/2;let A=0;y(),a===!1&&(e>0&&x(!0),t>0&&x(!1)),this.setIndex(h),this.setAttribute("position",new Ge(u,3)),this.setAttribute("normal",new Ge(d,3)),this.setAttribute("uv",new Ge(f,2));function y(){const b=new S,_=new S;let C=0;const v=(t-e)/n;for(let I=0;I<=r;I++){const E=[],w=I/r,T=w*(t-e)+e;for(let R=0;R<=i;R++){const U=R/i,O=U*c+o,N=Math.sin(O),k=Math.cos(O);_.x=T*N,_.y=-w*n+m,_.z=T*k,u.push(_.x,_.y,_.z),b.set(N,v,k).normalize(),d.push(b.x,b.y,b.z),f.push(U,1-w),E.push(p++)}g.push(E)}for(let I=0;I<i;I++)for(let E=0;E<r;E++){const w=g[E][I],T=g[E+1][I],R=g[E+1][I+1],U=g[E][I+1];(e>0||E!==0)&&(h.push(w,T,U),C+=3),(t>0||E!==r-1)&&(h.push(T,R,U),C+=3)}l.addGroup(A,C,0),A+=C}function x(b){const _=p,C=new ie,v=new S;let I=0;const E=b===!0?e:t,w=b===!0?1:-1;for(let R=1;R<=i;R++)u.push(0,m*w,0),d.push(0,w,0),f.push(.5,.5),p++;const T=p;for(let R=0;R<=i;R++){const O=R/i*c+o,N=Math.cos(O),k=Math.sin(O);v.x=E*k,v.y=m*w,v.z=E*N,u.push(v.x,v.y,v.z),d.push(0,w,0),C.x=N*.5+.5,C.y=k*.5*w+.5,f.push(C.x,C.y),p++}for(let R=0;R<i;R++){const U=_+R,O=T+R;b===!0?h.push(O,O+1,U):h.push(O+1,O,U),I+=3}l.addGroup(A,I,b===!0?1:2),A+=I}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Gt(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Hi extends Gt{constructor(e=1,t=1,n=32,i=1,r=!1,a=0,o=Math.PI*2){super(0,e,t,n,i,r,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:o}}static fromJSON(e){return new Hi(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class cs extends Je{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],a=[];o(i),l(n),h(),this.setAttribute("position",new Ge(r,3)),this.setAttribute("normal",new Ge(r.slice(),3)),this.setAttribute("uv",new Ge(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function o(y){const x=new S,b=new S,_=new S;for(let C=0;C<t.length;C+=3)f(t[C+0],x),f(t[C+1],b),f(t[C+2],_),c(x,b,_,y)}function c(y,x,b,_){const C=_+1,v=[];for(let I=0;I<=C;I++){v[I]=[];const E=y.clone().lerp(b,I/C),w=x.clone().lerp(b,I/C),T=C-I;for(let R=0;R<=T;R++)R===0&&I===C?v[I][R]=E:v[I][R]=E.clone().lerp(w,R/T)}for(let I=0;I<C;I++)for(let E=0;E<2*(C-I)-1;E++){const w=Math.floor(E/2);E%2===0?(d(v[I][w+1]),d(v[I+1][w]),d(v[I][w])):(d(v[I][w+1]),d(v[I+1][w+1]),d(v[I+1][w]))}}function l(y){const x=new S;for(let b=0;b<r.length;b+=3)x.x=r[b+0],x.y=r[b+1],x.z=r[b+2],x.normalize().multiplyScalar(y),r[b+0]=x.x,r[b+1]=x.y,r[b+2]=x.z}function h(){const y=new S;for(let x=0;x<r.length;x+=3){y.x=r[x+0],y.y=r[x+1],y.z=r[x+2];const b=m(y)/2/Math.PI+.5,_=A(y)/Math.PI+.5;a.push(b,1-_)}p(),u()}function u(){for(let y=0;y<a.length;y+=6){const x=a[y+0],b=a[y+2],_=a[y+4],C=Math.max(x,b,_),v=Math.min(x,b,_);C>.9&&v<.1&&(x<.2&&(a[y+0]+=1),b<.2&&(a[y+2]+=1),_<.2&&(a[y+4]+=1))}}function d(y){r.push(y.x,y.y,y.z)}function f(y,x){const b=y*3;x.x=e[b+0],x.y=e[b+1],x.z=e[b+2]}function p(){const y=new S,x=new S,b=new S,_=new S,C=new ie,v=new ie,I=new ie;for(let E=0,w=0;E<r.length;E+=9,w+=6){y.set(r[E+0],r[E+1],r[E+2]),x.set(r[E+3],r[E+4],r[E+5]),b.set(r[E+6],r[E+7],r[E+8]),C.set(a[w+0],a[w+1]),v.set(a[w+2],a[w+3]),I.set(a[w+4],a[w+5]),_.copy(y).add(x).add(b).divideScalar(3);const T=m(_);g(C,w+0,y,T),g(v,w+2,x,T),g(I,w+4,b,T)}}function g(y,x,b,_){_<0&&y.x===1&&(a[x]=y.x-1),b.x===0&&b.z===0&&(a[x]=_/2/Math.PI+.5)}function m(y){return Math.atan2(y.z,-y.x)}function A(y){return Math.atan2(-y.y,Math.sqrt(y.x*y.x+y.z*y.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new cs(e.vertices,e.indices,e.radius,e.details)}}class dl extends cs{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new dl(e.radius,e.detail)}}const Go=new S,Ho=new S,eh=new S,zo=new Dn;class DA extends Je{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(Qs*t),a=e.getIndex(),o=e.getAttribute("position"),c=a?a.count:o.count,l=[0,0,0],h=["a","b","c"],u=new Array(3),d={},f=[];for(let p=0;p<c;p+=3){a?(l[0]=a.getX(p),l[1]=a.getX(p+1),l[2]=a.getX(p+2)):(l[0]=p,l[1]=p+1,l[2]=p+2);const{a:g,b:m,c:A}=zo;if(g.fromBufferAttribute(o,l[0]),m.fromBufferAttribute(o,l[1]),A.fromBufferAttribute(o,l[2]),zo.getNormal(eh),u[0]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,u[1]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,u[2]=`${Math.round(A.x*i)},${Math.round(A.y*i)},${Math.round(A.z*i)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let y=0;y<3;y++){const x=(y+1)%3,b=u[y],_=u[x],C=zo[h[y]],v=zo[h[x]],I=`${b}_${_}`,E=`${_}_${b}`;E in d&&d[E]?(eh.dot(d[E].normal)<=r&&(f.push(C.x,C.y,C.z),f.push(v.x,v.y,v.z)),d[E]=null):I in d||(d[I]={index0:l[y],index1:l[x],normal:eh.clone()})}}for(const p in d)if(d[p]){const{index0:g,index1:m}=d[p];Go.fromBufferAttribute(o,g),Ho.fromBufferAttribute(o,m),f.push(Go.x,Go.y,Go.z),f.push(Ho.x,Ho.y,Ho.z)}this.setAttribute("position",new Ge(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class fi{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const n=this.getLengths();let i=0;const r=n.length;let a;t?a=t:a=e*n[r-1];let o=0,c=r-1,l;for(;o<=c;)if(i=Math.floor(o+(c-o)/2),l=n[i]-a,l<0)o=i+1;else if(l>0)c=i-1;else{c=i;break}if(i=c,n[i]===a)return i/(r-1);const h=n[i],d=n[i+1]-h,f=(a-h)/d;return(i+f)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),o=this.getPoint(r),c=t||(a.isVector2?new ie:new S);return c.copy(o).sub(a).normalize(),c}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t=!1){const n=new S,i=[],r=[],a=[],o=new S,c=new Ve;for(let f=0;f<=e;f++){const p=f/e;i[f]=this.getTangentAt(p,new S)}r[0]=new S,a[0]=new S;let l=Number.MAX_VALUE;const h=Math.abs(i[0].x),u=Math.abs(i[0].y),d=Math.abs(i[0].z);h<=l&&(l=h,n.set(1,0,0)),u<=l&&(l=u,n.set(0,1,0)),d<=l&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),a[0].crossVectors(i[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),a[f]=a[f-1].clone(),o.crossVectors(i[f-1],i[f]),o.length()>Number.EPSILON){o.normalize();const p=Math.acos(tt(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(c.makeRotationAxis(o,p))}a[f].crossVectors(i[f],r[f])}if(t===!0){let f=Math.acos(tt(r[0].dot(r[e]),-1,1));f/=e,i[0].dot(o.crossVectors(r[0],r[e]))>0&&(f=-f);for(let p=1;p<=e;p++)r[p].applyMatrix4(c.makeRotationAxis(i[p],f*p)),a[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class fl extends fi{constructor(e=0,t=0,n=1,i=1,r=0,a=Math.PI*2,o=!1,c=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=o,this.aRotation=c}getPoint(e,t=new ie){const n=t,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(a?r=0:r=i),this.aClockwise===!0&&!a&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+e*r;let c=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=c-this.aX,f=l-this.aY;c=d*h-f*u+this.aX,l=d*u+f*h+this.aY}return n.set(c,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class LA extends fl{constructor(e,t,n,i,r,a){super(e,t,n,n,i,r,a),this.isArcCurve=!0,this.type="ArcCurve"}}function Tu(){let s=0,e=0,t=0,n=0;function i(r,a,o,c){s=r,e=o,t=-3*r+3*a-2*o-c,n=2*r-2*a+o+c}return{initCatmullRom:function(r,a,o,c,l){i(a,o,l*(o-r),l*(c-a))},initNonuniformCatmullRom:function(r,a,o,c,l,h,u){let d=(a-r)/l-(o-r)/(l+h)+(o-a)/h,f=(o-a)/h-(c-a)/(h+u)+(c-o)/u;d*=h,f*=h,i(a,o,d,f)},calc:function(r){const a=r*r,o=a*r;return s+e*r+t*a+n*o}}}const Vo=new S,th=new Tu,nh=new Tu,ih=new Tu;class ro extends fi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new S){const n=t,i=this.points,r=i.length,a=(r-(this.closed?0:1))*e;let o=Math.floor(a),c=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:c===0&&o===r-1&&(o=r-2,c=1);let l,h;this.closed||o>0?l=i[(o-1)%r]:(Vo.subVectors(i[0],i[1]).add(i[0]),l=Vo);const u=i[o%r],d=i[(o+1)%r];if(this.closed||o+2<r?h=i[(o+2)%r]:(Vo.subVectors(i[r-1],i[r-2]).add(i[r-1]),h=Vo),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(l.distanceToSquared(u),f),g=Math.pow(u.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(h),f);g<1e-4&&(g=1),p<1e-4&&(p=g),m<1e-4&&(m=g),th.initNonuniformCatmullRom(l.x,u.x,d.x,h.x,p,g,m),nh.initNonuniformCatmullRom(l.y,u.y,d.y,h.y,p,g,m),ih.initNonuniformCatmullRom(l.z,u.z,d.z,h.z,p,g,m)}else this.curveType==="catmullrom"&&(th.initCatmullRom(l.x,u.x,d.x,h.x,this.tension),nh.initCatmullRom(l.y,u.y,d.y,h.y,this.tension),ih.initCatmullRom(l.z,u.z,d.z,h.z,this.tension));return n.set(th.calc(c),nh.calc(c),ih.calc(c)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new S().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Gd(s,e,t,n,i){const r=(n-e)*.5,a=(i-t)*.5,o=s*s,c=s*o;return(2*t-2*n+r+a)*c+(-3*t+3*n-2*r-a)*o+r*s+t}function _y(s,e){const t=1-s;return t*t*e}function Ey(s,e){return 2*(1-s)*s*e}function vy(s,e){return s*s*e}function va(s,e,t,n){return _y(s,e)+Ey(s,t)+vy(s,n)}function wy(s,e){const t=1-s;return t*t*t*e}function Cy(s,e){const t=1-s;return 3*t*t*s*e}function Sy(s,e){return 3*(1-s)*s*s*e}function Iy(s,e){return s*s*s*e}function wa(s,e,t,n,i){return wy(s,e)+Cy(s,t)+Sy(s,n)+Iy(s,i)}class Bu extends fi{constructor(e=new ie,t=new ie,n=new ie,i=new ie){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ie){const n=t,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(wa(e,i.x,r.x,a.x,o.x),wa(e,i.y,r.y,a.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class PA extends fi{constructor(e=new S,t=new S,n=new S,i=new S){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new S){const n=t,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(wa(e,i.x,r.x,a.x,o.x),wa(e,i.y,r.y,a.y,o.y),wa(e,i.z,r.z,a.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Ru extends fi{constructor(e=new ie,t=new ie){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ie){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ie){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class FA extends fi{constructor(e=new S,t=new S){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new S){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new S){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Du extends fi{constructor(e=new ie,t=new ie,n=new ie){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ie){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(va(e,i.x,r.x,a.x),va(e,i.y,r.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Lu extends fi{constructor(e=new S,t=new S,n=new S){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new S){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(va(e,i.x,r.x,a.x),va(e,i.y,r.y,a.y),va(e,i.z,r.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Pu extends fi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ie){const n=t,i=this.points,r=(i.length-1)*e,a=Math.floor(r),o=r-a,c=i[a===0?a:a-1],l=i[a],h=i[a>i.length-2?i.length-1:a+1],u=i[a>i.length-3?i.length-1:a+2];return n.set(Gd(o,c.x,l.x,h.x,u.x),Gd(o,c.y,l.y,h.y,u.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ie().fromArray(i))}return this}}var Yc=Object.freeze({__proto__:null,ArcCurve:LA,CatmullRomCurve3:ro,CubicBezierCurve:Bu,CubicBezierCurve3:PA,EllipseCurve:fl,LineCurve:Ru,LineCurve3:FA,QuadraticBezierCurve:Du,QuadraticBezierCurve3:Lu,SplineCurve:Pu});class UA extends fi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Yc[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const a=i[r]-n,o=this.curves[r],c=o.getLength(),l=c===0?0:1-a/c;return o.getPointAt(l,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],o=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,c=a.getPoints(o);for(let l=0;l<c.length;l++){const h=c[l];n&&n.equals(h)||(t.push(h),n=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Yc[i.type]().fromJSON(i))}return this}}class Kc extends UA{constructor(e){super(),this.type="Path",this.currentPoint=new ie,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Ru(this.currentPoint.clone(),new ie(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new Du(this.currentPoint.clone(),new ie(e,t),new ie(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,a){const o=new Bu(this.currentPoint.clone(),new ie(e,t),new ie(n,i),new ie(r,a));return this.curves.push(o),this.currentPoint.set(r,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Pu(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,a){const o=this.currentPoint.x,c=this.currentPoint.y;return this.absarc(e+o,t+c,n,i,r,a),this}absarc(e,t,n,i,r,a){return this.absellipse(e,t,n,n,i,r,a),this}ellipse(e,t,n,i,r,a,o,c){const l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,n,i,r,a,o,c),this}absellipse(e,t,n,i,r,a,o,c){const l=new fl(e,t,n,i,r,a,o,c);if(this.curves.length>0){const u=l.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(l);const h=l.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Gs extends Kc{constructor(e){super(e),this.uuid=Jn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Kc().fromJSON(i))}return this}}function My(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=NA(s,0,i,t,!0);const a=[];if(!r||r.next===r.prev)return a;let o,c,l;if(n&&(r=Ly(s,e,r,t)),s.length>80*t){o=1/0,c=1/0;let h=-1/0,u=-1/0;for(let d=t;d<i;d+=t){const f=s[d],p=s[d+1];f<o&&(o=f),p<c&&(c=p),f>h&&(h=f),p>u&&(u=p)}l=Math.max(h-o,u-c),l=l!==0?32767/l:0}return Ha(r,a,t,o,c,l,0),a}function NA(s,e,t,n,i){let r;if(i===Vy(s,e,t,n)>0)for(let a=e;a<t;a+=n)r=Hd(a/n|0,s[a],s[a+1],r);else for(let a=t-n;a>=e;a-=n)r=Hd(a/n|0,s[a],s[a+1],r);return r&&Xr(r,r.next)&&(Va(r),r=r.next),r}function qs(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(Xr(t,t.next)||qt(t.prev,t,t.next)===0)){if(Va(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Ha(s,e,t,n,i,r,a){if(!s)return;!a&&r&&Oy(s,n,i,r);let o=s;for(;s.prev!==s.next;){const c=s.prev,l=s.next;if(r?By(s,n,i,r):Ty(s)){e.push(c.i,s.i,l.i),Va(s),s=l.next,o=l.next;continue}if(s=l,s===o){a?a===1?(s=Ry(qs(s),e),Ha(s,e,t,n,i,r,2)):a===2&&Dy(s,e,t,n,i,r):Ha(qs(s),e,t,n,i,r,1);break}}}function Ty(s){const e=s.prev,t=s,n=s.next;if(qt(e,t,n)>=0)return!1;const i=e.x,r=t.x,a=n.x,o=e.y,c=t.y,l=n.y,h=Math.min(i,r,a),u=Math.min(o,c,l),d=Math.max(i,r,a),f=Math.max(o,c,l);let p=n.next;for(;p!==e;){if(p.x>=h&&p.x<=d&&p.y>=u&&p.y<=f&&xa(i,o,r,c,a,l,p.x,p.y)&&qt(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function By(s,e,t,n){const i=s.prev,r=s,a=s.next;if(qt(i,r,a)>=0)return!1;const o=i.x,c=r.x,l=a.x,h=i.y,u=r.y,d=a.y,f=Math.min(o,c,l),p=Math.min(h,u,d),g=Math.max(o,c,l),m=Math.max(h,u,d),A=Xh(f,p,e,t,n),y=Xh(g,m,e,t,n);let x=s.prevZ,b=s.nextZ;for(;x&&x.z>=A&&b&&b.z<=y;){if(x.x>=f&&x.x<=g&&x.y>=p&&x.y<=m&&x!==i&&x!==a&&xa(o,h,c,u,l,d,x.x,x.y)&&qt(x.prev,x,x.next)>=0||(x=x.prevZ,b.x>=f&&b.x<=g&&b.y>=p&&b.y<=m&&b!==i&&b!==a&&xa(o,h,c,u,l,d,b.x,b.y)&&qt(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;x&&x.z>=A;){if(x.x>=f&&x.x<=g&&x.y>=p&&x.y<=m&&x!==i&&x!==a&&xa(o,h,c,u,l,d,x.x,x.y)&&qt(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;b&&b.z<=y;){if(b.x>=f&&b.x<=g&&b.y>=p&&b.y<=m&&b!==i&&b!==a&&xa(o,h,c,u,l,d,b.x,b.y)&&qt(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function Ry(s,e){let t=s;do{const n=t.prev,i=t.next.next;!Xr(n,i)&&kA(n,t,t.next,i)&&za(n,i)&&za(i,n)&&(e.push(n.i,t.i,i.i),Va(t),Va(t.next),t=s=i),t=t.next}while(t!==s);return qs(t)}function Dy(s,e,t,n,i,r){let a=s;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&Gy(a,o)){let c=QA(a,o);a=qs(a,a.next),c=qs(c,c.next),Ha(a,e,t,n,i,r,0),Ha(c,e,t,n,i,r,0);return}o=o.next}a=a.next}while(a!==s)}function Ly(s,e,t,n){const i=[];for(let r=0,a=e.length;r<a;r++){const o=e[r]*n,c=r<a-1?e[r+1]*n:s.length,l=NA(s,o,c,n,!1);l===l.next&&(l.steiner=!0),i.push(Qy(l))}i.sort(Py);for(let r=0;r<i.length;r++)t=Fy(i[r],t);return t}function Py(s,e){let t=s.x-e.x;if(t===0&&(t=s.y-e.y,t===0)){const n=(s.next.y-s.y)/(s.next.x-s.x),i=(e.next.y-e.y)/(e.next.x-e.x);t=n-i}return t}function Fy(s,e){const t=Uy(s,e);if(!t)return e;const n=QA(t,s);return qs(n,n.next),qs(t,t.next)}function Uy(s,e){let t=e;const n=s.x,i=s.y;let r=-1/0,a;if(Xr(s,t))return t;do{if(Xr(s,t.next))return t.next;if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const u=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(u<=n&&u>r&&(r=u,a=t.x<t.next.x?t:t.next,u===n))return a}t=t.next}while(t!==e);if(!a)return null;const o=a,c=a.x,l=a.y;let h=1/0;t=a;do{if(n>=t.x&&t.x>=c&&n!==t.x&&OA(i<l?n:r,i,c,l,i<l?r:n,i,t.x,t.y)){const u=Math.abs(i-t.y)/(n-t.x);za(t,s)&&(u<h||u===h&&(t.x>a.x||t.x===a.x&&Ny(a,t)))&&(a=t,h=u)}t=t.next}while(t!==o);return a}function Ny(s,e){return qt(s.prev,s,e.prev)<0&&qt(e.next,s,s.next)<0}function Oy(s,e,t,n){let i=s;do i.z===0&&(i.z=Xh(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,ky(i)}function ky(s){let e,t=1;do{let n=s,i;s=null;let r=null;for(e=0;n;){e++;let a=n,o=0;for(let l=0;l<t&&(o++,a=a.nextZ,!!a);l++);let c=t;for(;o>0||c>0&&a;)o!==0&&(c===0||!a||n.z<=a.z)?(i=n,n=n.nextZ,o--):(i=a,a=a.nextZ,c--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;n=a}r.nextZ=null,t*=2}while(e>1);return s}function Xh(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function Qy(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function OA(s,e,t,n,i,r,a,o){return(i-a)*(e-o)>=(s-a)*(r-o)&&(s-a)*(n-o)>=(t-a)*(e-o)&&(t-a)*(r-o)>=(i-a)*(n-o)}function xa(s,e,t,n,i,r,a,o){return!(s===a&&e===o)&&OA(s,e,t,n,i,r,a,o)}function Gy(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!Hy(s,e)&&(za(s,e)&&za(e,s)&&zy(s,e)&&(qt(s.prev,s,e.prev)||qt(s,e.prev,e))||Xr(s,e)&&qt(s.prev,s,s.next)>0&&qt(e.prev,e,e.next)>0)}function qt(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Xr(s,e){return s.x===e.x&&s.y===e.y}function kA(s,e,t,n){const i=qo(qt(s,e,t)),r=qo(qt(s,e,n)),a=qo(qt(t,n,s)),o=qo(qt(t,n,e));return!!(i!==r&&a!==o||i===0&&Wo(s,t,e)||r===0&&Wo(s,n,e)||a===0&&Wo(t,s,n)||o===0&&Wo(t,e,n))}function Wo(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function qo(s){return s>0?1:s<0?-1:0}function Hy(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&kA(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function za(s,e){return qt(s.prev,s,s.next)<0?qt(s,e,s.next)>=0&&qt(s,s.prev,e)>=0:qt(s,e,s.prev)<0||qt(s,s.next,e)<0}function zy(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function QA(s,e){const t=Yh(s.i,s.x,s.y),n=Yh(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function Hd(s,e,t,n){const i=Yh(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Va(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Yh(s,e,t){return{i:s,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function Vy(s,e,t,n){let i=0;for(let r=e,a=t-n;r<t;r+=n)i+=(s[a]-s[r])*(s[r+1]+s[a+1]),a=r;return i}class Wy{static triangulate(e,t,n=2){return My(e,t,n)}}class li{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return li.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];zd(e),Vd(n,e);let a=e.length;t.forEach(zd);for(let c=0;c<t.length;c++)i.push(a),a+=t[c].length,Vd(n,t[c]);const o=Wy.triangulate(n,i);for(let c=0;c<o.length;c+=3)r.push(o.slice(c,c+3));return r}}function zd(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function Vd(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class pl extends Je{constructor(e=new Gs([new ie(.5,.5),new ie(-.5,.5),new ie(-.5,-.5),new ie(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let o=0,c=e.length;o<c;o++){const l=e[o];a(l)}this.setAttribute("position",new Ge(i,3)),this.setAttribute("uv",new Ge(r,2)),this.computeVertexNormals();function a(o){const c=[],l=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,u=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,g=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const A=t.extrudePath,y=t.UVGenerator!==void 0?t.UVGenerator:qy;let x,b=!1,_,C,v,I;A&&(x=A.getSpacedPoints(h),b=!0,d=!1,_=A.computeFrenetFrames(h,!1),C=new S,v=new S,I=new S),d||(m=0,f=0,p=0,g=0);const E=o.extractPoints(l);let w=E.shape;const T=E.holes;if(!li.isClockWise(w)){w=w.reverse();for(let pe=0,le=T.length;pe<le;pe++){const oe=T[pe];li.isClockWise(oe)&&(T[pe]=oe.reverse())}}function U(pe){const oe=10000000000000001e-36;let re=pe[0];for(let _e=1;_e<=pe.length;_e++){const me=_e%pe.length,be=pe[me],qe=be.x-re.x,Ke=be.y-re.y,D=qe*qe+Ke*Ke,M=Math.max(Math.abs(be.x),Math.abs(be.y),Math.abs(re.x),Math.abs(re.y)),z=oe*M*M;if(D<=z){pe.splice(me,1),_e--;continue}re=be}}U(w),T.forEach(U);const O=T.length,N=w;for(let pe=0;pe<O;pe++){const le=T[pe];w=w.concat(le)}function k(pe,le,oe){return le||console.error("THREE.ExtrudeGeometry: vec does not exist"),pe.clone().addScaledVector(le,oe)}const te=w.length;function Q(pe,le,oe){let re,_e,me;const be=pe.x-le.x,qe=pe.y-le.y,Ke=oe.x-pe.x,D=oe.y-pe.y,M=be*be+qe*qe,z=be*D-qe*Ke;if(Math.abs(z)>Number.EPSILON){const Y=Math.sqrt(M),de=Math.sqrt(Ke*Ke+D*D),ee=le.x-qe/Y,Pe=le.y+be/Y,xe=oe.x-D/de,De=oe.y+Ke/de,Fe=((xe-ee)*D-(De-Pe)*Ke)/(be*D-qe*Ke);re=ee+be*Fe-pe.x,_e=Pe+qe*Fe-pe.y;const ge=re*re+_e*_e;if(ge<=2)return new ie(re,_e);me=Math.sqrt(ge/2)}else{let Y=!1;be>Number.EPSILON?Ke>Number.EPSILON&&(Y=!0):be<-Number.EPSILON?Ke<-Number.EPSILON&&(Y=!0):Math.sign(qe)===Math.sign(D)&&(Y=!0),Y?(re=-qe,_e=be,me=Math.sqrt(M)):(re=be,_e=qe,me=Math.sqrt(M/2))}return new ie(re/me,_e/me)}const $=[];for(let pe=0,le=N.length,oe=le-1,re=pe+1;pe<le;pe++,oe++,re++)oe===le&&(oe=0),re===le&&(re=0),$[pe]=Q(N[pe],N[oe],N[re]);const ae=[];let Ae,Ce=$.concat();for(let pe=0,le=O;pe<le;pe++){const oe=T[pe];Ae=[];for(let re=0,_e=oe.length,me=_e-1,be=re+1;re<_e;re++,me++,be++)me===_e&&(me=0),be===_e&&(be=0),Ae[re]=Q(oe[re],oe[me],oe[be]);ae.push(Ae),Ce=Ce.concat(Ae)}let Ie;if(m===0)Ie=li.triangulateShape(N,T);else{const pe=[],le=[];for(let oe=0;oe<m;oe++){const re=oe/m,_e=f*Math.cos(re*Math.PI/2),me=p*Math.sin(re*Math.PI/2)+g;for(let be=0,qe=N.length;be<qe;be++){const Ke=k(N[be],$[be],me);Qe(Ke.x,Ke.y,-_e),re===0&&pe.push(Ke)}for(let be=0,qe=O;be<qe;be++){const Ke=T[be];Ae=ae[be];const D=[];for(let M=0,z=Ke.length;M<z;M++){const Y=k(Ke[M],Ae[M],me);Qe(Y.x,Y.y,-_e),re===0&&D.push(Y)}re===0&&le.push(D)}}Ie=li.triangulateShape(pe,le)}const je=Ie.length,$e=p+g;for(let pe=0;pe<te;pe++){const le=d?k(w[pe],Ce[pe],$e):w[pe];b?(v.copy(_.normals[0]).multiplyScalar(le.x),C.copy(_.binormals[0]).multiplyScalar(le.y),I.copy(x[0]).add(v).add(C),Qe(I.x,I.y,I.z)):Qe(le.x,le.y,0)}for(let pe=1;pe<=h;pe++)for(let le=0;le<te;le++){const oe=d?k(w[le],Ce[le],$e):w[le];b?(v.copy(_.normals[pe]).multiplyScalar(oe.x),C.copy(_.binormals[pe]).multiplyScalar(oe.y),I.copy(x[pe]).add(v).add(C),Qe(I.x,I.y,I.z)):Qe(oe.x,oe.y,u/h*pe)}for(let pe=m-1;pe>=0;pe--){const le=pe/m,oe=f*Math.cos(le*Math.PI/2),re=p*Math.sin(le*Math.PI/2)+g;for(let _e=0,me=N.length;_e<me;_e++){const be=k(N[_e],$[_e],re);Qe(be.x,be.y,u+oe)}for(let _e=0,me=T.length;_e<me;_e++){const be=T[_e];Ae=ae[_e];for(let qe=0,Ke=be.length;qe<Ke;qe++){const D=k(be[qe],Ae[qe],re);b?Qe(D.x,D.y+x[h-1].y,x[h-1].x+oe):Qe(D.x,D.y,u+oe)}}}j(),se();function j(){const pe=i.length/3;if(d){let le=0,oe=te*le;for(let re=0;re<je;re++){const _e=Ie[re];Le(_e[2]+oe,_e[1]+oe,_e[0]+oe)}le=h+m*2,oe=te*le;for(let re=0;re<je;re++){const _e=Ie[re];Le(_e[0]+oe,_e[1]+oe,_e[2]+oe)}}else{for(let le=0;le<je;le++){const oe=Ie[le];Le(oe[2],oe[1],oe[0])}for(let le=0;le<je;le++){const oe=Ie[le];Le(oe[0]+te*h,oe[1]+te*h,oe[2]+te*h)}}n.addGroup(pe,i.length/3-pe,0)}function se(){const pe=i.length/3;let le=0;Me(N,le),le+=N.length;for(let oe=0,re=T.length;oe<re;oe++){const _e=T[oe];Me(_e,le),le+=_e.length}n.addGroup(pe,i.length/3-pe,1)}function Me(pe,le){let oe=pe.length;for(;--oe>=0;){const re=oe;let _e=oe-1;_e<0&&(_e=pe.length-1);for(let me=0,be=h+m*2;me<be;me++){const qe=te*me,Ke=te*(me+1),D=le+re+qe,M=le+_e+qe,z=le+_e+Ke,Y=le+re+Ke;st(D,M,z,Y)}}}function Qe(pe,le,oe){c.push(pe),c.push(le),c.push(oe)}function Le(pe,le,oe){xt(pe),xt(le),xt(oe);const re=i.length/3,_e=y.generateTopUV(n,i,re-3,re-2,re-1);P(_e[0]),P(_e[1]),P(_e[2])}function st(pe,le,oe,re){xt(pe),xt(le),xt(re),xt(le),xt(oe),xt(re);const _e=i.length/3,me=y.generateSideWallUV(n,i,_e-6,_e-3,_e-2,_e-1);P(me[0]),P(me[1]),P(me[3]),P(me[1]),P(me[2]),P(me[3])}function xt(pe){i.push(c[pe*3+0]),i.push(c[pe*3+1]),i.push(c[pe*3+2])}function P(pe){r.push(pe.x),r.push(pe.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Xy(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,a=e.shapes.length;r<a;r++){const o=t[e.shapes[r]];n.push(o)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Yc[i.type]().fromJSON(i)),new pl(n,e.options)}}const qy={generateTopUV:function(s,e,t,n,i){const r=e[t*3],a=e[t*3+1],o=e[n*3],c=e[n*3+1],l=e[i*3],h=e[i*3+1];return[new ie(r,a),new ie(o,c),new ie(l,h)]},generateSideWallUV:function(s,e,t,n,i,r){const a=e[t*3],o=e[t*3+1],c=e[t*3+2],l=e[n*3],h=e[n*3+1],u=e[n*3+2],d=e[i*3],f=e[i*3+1],p=e[i*3+2],g=e[r*3],m=e[r*3+1],A=e[r*3+2];return Math.abs(o-h)<Math.abs(a-l)?[new ie(a,1-c),new ie(l,1-u),new ie(d,1-p),new ie(g,1-A)]:[new ie(o,1-c),new ie(h,1-u),new ie(f,1-p),new ie(m,1-A)]}};function Xy(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Al extends cs{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Al(e.radius,e.detail)}}class ml extends Je{constructor(e=[new ie(0,-.5),new ie(.5,0),new ie(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=tt(i,0,Math.PI*2);const r=[],a=[],o=[],c=[],l=[],h=1/t,u=new S,d=new ie,f=new S,p=new S,g=new S;let m=0,A=0;for(let y=0;y<=e.length-1;y++)switch(y){case 0:m=e[y+1].x-e[y].x,A=e[y+1].y-e[y].y,f.x=A*1,f.y=-m,f.z=A*0,g.copy(f),f.normalize(),c.push(f.x,f.y,f.z);break;case e.length-1:c.push(g.x,g.y,g.z);break;default:m=e[y+1].x-e[y].x,A=e[y+1].y-e[y].y,f.x=A*1,f.y=-m,f.z=A*0,p.copy(f),f.x+=g.x,f.y+=g.y,f.z+=g.z,f.normalize(),c.push(f.x,f.y,f.z),g.copy(p)}for(let y=0;y<=t;y++){const x=n+y*h*i,b=Math.sin(x),_=Math.cos(x);for(let C=0;C<=e.length-1;C++){u.x=e[C].x*b,u.y=e[C].y,u.z=e[C].x*_,a.push(u.x,u.y,u.z),d.x=y/t,d.y=C/(e.length-1),o.push(d.x,d.y);const v=c[3*C+0]*b,I=c[3*C+1],E=c[3*C+0]*_;l.push(v,I,E)}}for(let y=0;y<t;y++)for(let x=0;x<e.length-1;x++){const b=x+y*e.length,_=b,C=b+e.length,v=b+e.length+1,I=b+1;r.push(_,C,I),r.push(v,I,C)}this.setIndex(r),this.setAttribute("position",new Ge(a,3)),this.setAttribute("uv",new Ge(o,2)),this.setAttribute("normal",new Ge(l,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ml(e.points,e.segments,e.phiStart,e.phiLength)}}class ao extends cs{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ao(e.radius,e.detail)}}class ni extends Je{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,o=Math.floor(n),c=Math.floor(i),l=o+1,h=c+1,u=e/o,d=t/c,f=[],p=[],g=[],m=[];for(let A=0;A<h;A++){const y=A*d-a;for(let x=0;x<l;x++){const b=x*u-r;p.push(b,-y,0),g.push(0,0,1),m.push(x/o),m.push(1-A/c)}}for(let A=0;A<c;A++)for(let y=0;y<o;y++){const x=y+l*A,b=y+l*(A+1),_=y+1+l*(A+1),C=y+1+l*A;f.push(x,b,C),f.push(b,_,C)}this.setIndex(f),this.setAttribute("position",new Ge(p,3)),this.setAttribute("normal",new Ge(g,3)),this.setAttribute("uv",new Ge(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ni(e.width,e.height,e.widthSegments,e.heightSegments)}}class oo extends Je{constructor(e=.5,t=1,n=32,i=1,r=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const o=[],c=[],l=[],h=[];let u=e;const d=(t-e)/i,f=new S,p=new ie;for(let g=0;g<=i;g++){for(let m=0;m<=n;m++){const A=r+m/n*a;f.x=u*Math.cos(A),f.y=u*Math.sin(A),c.push(f.x,f.y,f.z),l.push(0,0,1),p.x=(f.x/t+1)/2,p.y=(f.y/t+1)/2,h.push(p.x,p.y)}u+=d}for(let g=0;g<i;g++){const m=g*(n+1);for(let A=0;A<n;A++){const y=A+m,x=y,b=y+n+1,_=y+n+2,C=y+1;o.push(x,b,C),o.push(b,_,C)}}this.setIndex(o),this.setAttribute("position",new Ge(c,3)),this.setAttribute("normal",new Ge(l,3)),this.setAttribute("uv",new Ge(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new oo(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class gl extends Je{constructor(e=new Gs([new ie(0,.5),new ie(-.5,-.5),new ie(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],a=[];let o=0,c=0;if(Array.isArray(e)===!1)l(e);else for(let h=0;h<e.length;h++)l(e[h]),this.addGroup(o,c,h),o+=c,c=0;this.setIndex(n),this.setAttribute("position",new Ge(i,3)),this.setAttribute("normal",new Ge(r,3)),this.setAttribute("uv",new Ge(a,2));function l(h){const u=i.length/3,d=h.extractPoints(t);let f=d.shape;const p=d.holes;li.isClockWise(f)===!1&&(f=f.reverse());for(let m=0,A=p.length;m<A;m++){const y=p[m];li.isClockWise(y)===!0&&(p[m]=y.reverse())}const g=li.triangulateShape(f,p);for(let m=0,A=p.length;m<A;m++){const y=p[m];f=f.concat(y)}for(let m=0,A=f.length;m<A;m++){const y=f[m];i.push(y.x,y.y,0),r.push(0,0,1),a.push(y.x,y.y)}for(let m=0,A=g.length;m<A;m++){const y=g[m],x=y[0]+u,b=y[1]+u,_=y[2]+u;n.push(x,b,_),c+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return Yy(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const a=t[e.shapes[i]];n.push(a)}return new gl(n,e.curveSegments)}}function Yy(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class Gn extends Je{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(a+o,Math.PI);let l=0;const h=[],u=new S,d=new S,f=[],p=[],g=[],m=[];for(let A=0;A<=n;A++){const y=[],x=A/n;let b=0;A===0&&a===0?b=.5/t:A===n&&c===Math.PI&&(b=-.5/t);for(let _=0;_<=t;_++){const C=_/t;u.x=-e*Math.cos(i+C*r)*Math.sin(a+x*o),u.y=e*Math.cos(a+x*o),u.z=e*Math.sin(i+C*r)*Math.sin(a+x*o),p.push(u.x,u.y,u.z),d.copy(u).normalize(),g.push(d.x,d.y,d.z),m.push(C+b,1-x),y.push(l++)}h.push(y)}for(let A=0;A<n;A++)for(let y=0;y<t;y++){const x=h[A][y+1],b=h[A][y],_=h[A+1][y],C=h[A+1][y+1];(A!==0||a>0)&&f.push(x,b,C),(A!==n-1||c<Math.PI)&&f.push(b,_,C)}this.setIndex(f),this.setAttribute("position",new Ge(p,3)),this.setAttribute("normal",new Ge(g,3)),this.setAttribute("uv",new Ge(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Gn(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class yl extends cs{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new yl(e.radius,e.detail)}}class co extends Je{constructor(e=1,t=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],c=[],l=[],h=new S,u=new S,d=new S;for(let f=0;f<=n;f++)for(let p=0;p<=i;p++){const g=p/i*r,m=f/n*Math.PI*2;u.x=(e+t*Math.cos(m))*Math.cos(g),u.y=(e+t*Math.cos(m))*Math.sin(g),u.z=t*Math.sin(m),o.push(u.x,u.y,u.z),h.x=e*Math.cos(g),h.y=e*Math.sin(g),d.subVectors(u,h).normalize(),c.push(d.x,d.y,d.z),l.push(p/i),l.push(f/n)}for(let f=1;f<=n;f++)for(let p=1;p<=i;p++){const g=(i+1)*f+p-1,m=(i+1)*(f-1)+p-1,A=(i+1)*(f-1)+p,y=(i+1)*f+p;a.push(g,m,y),a.push(m,A,y)}this.setIndex(a),this.setAttribute("position",new Ge(o,3)),this.setAttribute("normal",new Ge(c,3)),this.setAttribute("uv",new Ge(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new co(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class bl extends Je{constructor(e=1,t=.4,n=64,i=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:a},n=Math.floor(n),i=Math.floor(i);const o=[],c=[],l=[],h=[],u=new S,d=new S,f=new S,p=new S,g=new S,m=new S,A=new S;for(let x=0;x<=n;++x){const b=x/n*r*Math.PI*2;y(b,r,a,e,f),y(b+.01,r,a,e,p),m.subVectors(p,f),A.addVectors(p,f),g.crossVectors(m,A),A.crossVectors(g,m),g.normalize(),A.normalize();for(let _=0;_<=i;++_){const C=_/i*Math.PI*2,v=-t*Math.cos(C),I=t*Math.sin(C);u.x=f.x+(v*A.x+I*g.x),u.y=f.y+(v*A.y+I*g.y),u.z=f.z+(v*A.z+I*g.z),c.push(u.x,u.y,u.z),d.subVectors(u,f).normalize(),l.push(d.x,d.y,d.z),h.push(x/n),h.push(_/i)}}for(let x=1;x<=n;x++)for(let b=1;b<=i;b++){const _=(i+1)*(x-1)+(b-1),C=(i+1)*x+(b-1),v=(i+1)*x+b,I=(i+1)*(x-1)+b;o.push(_,C,I),o.push(C,v,I)}this.setIndex(o),this.setAttribute("position",new Ge(c,3)),this.setAttribute("normal",new Ge(l,3)),this.setAttribute("uv",new Ge(h,2));function y(x,b,_,C,v){const I=Math.cos(x),E=Math.sin(x),w=_/b*x,T=Math.cos(w);v.x=C*(2+T)*.5*I,v.y=C*(2+T)*E*.5,v.z=C*Math.sin(w)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new bl(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class xl extends Je{constructor(e=new Lu(new S(-1,-1,0),new S(-1,1,0),new S(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new S,c=new S,l=new ie;let h=new S;const u=[],d=[],f=[],p=[];g(),this.setIndex(p),this.setAttribute("position",new Ge(u,3)),this.setAttribute("normal",new Ge(d,3)),this.setAttribute("uv",new Ge(f,2));function g(){for(let x=0;x<t;x++)m(x);m(r===!1?t:0),y(),A()}function m(x){h=e.getPointAt(x/t,h);const b=a.normals[x],_=a.binormals[x];for(let C=0;C<=i;C++){const v=C/i*Math.PI*2,I=Math.sin(v),E=-Math.cos(v);c.x=E*b.x+I*_.x,c.y=E*b.y+I*_.y,c.z=E*b.z+I*_.z,c.normalize(),d.push(c.x,c.y,c.z),o.x=h.x+n*c.x,o.y=h.y+n*c.y,o.z=h.z+n*c.z,u.push(o.x,o.y,o.z)}}function A(){for(let x=1;x<=t;x++)for(let b=1;b<=i;b++){const _=(i+1)*(x-1)+(b-1),C=(i+1)*x+(b-1),v=(i+1)*x+b,I=(i+1)*(x-1)+b;p.push(_,C,I),p.push(C,v,I)}}function y(){for(let x=0;x<=t;x++)for(let b=0;b<=i;b++)l.x=x/t,l.y=b/i,f.push(l.x,l.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new xl(new Yc[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class GA extends Je{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new S,r=new S;if(e.index!==null){const a=e.attributes.position,o=e.index;let c=e.groups;c.length===0&&(c=[{start:0,count:o.count,materialIndex:0}]);for(let l=0,h=c.length;l<h;++l){const u=c[l],d=u.start,f=u.count;for(let p=d,g=d+f;p<g;p+=3)for(let m=0;m<3;m++){const A=o.getX(p+m),y=o.getX(p+(m+1)%3);i.fromBufferAttribute(a,A),r.fromBufferAttribute(a,y),Wd(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const a=e.attributes.position;for(let o=0,c=a.count/3;o<c;o++)for(let l=0;l<3;l++){const h=3*o+l,u=3*o+(l+1)%3;i.fromBufferAttribute(a,h),r.fromBufferAttribute(a,u),Wd(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new Ge(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Wd(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var qd=Object.freeze({__proto__:null,BoxGeometry:Ut,CapsuleGeometry:io,CircleGeometry:so,ConeGeometry:Hi,CylinderGeometry:Gt,DodecahedronGeometry:dl,EdgesGeometry:DA,ExtrudeGeometry:pl,IcosahedronGeometry:Al,LatheGeometry:ml,OctahedronGeometry:ao,PlaneGeometry:ni,PolyhedronGeometry:cs,RingGeometry:oo,ShapeGeometry:gl,SphereGeometry:Gn,TetrahedronGeometry:yl,TorusGeometry:co,TorusKnotGeometry:bl,TubeGeometry:xl,WireframeGeometry:GA});class HA extends nn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new ue(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class zA extends jn{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class rt extends nn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new ue(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=os,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new zn,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class hn extends rt{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ie(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return tt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new ue(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new ue(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ue(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class VA extends nn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new ue(16777215),this.specular=new ue(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=os,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new zn,this.combine=qa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class WA extends nn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ue(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=os,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class qA extends nn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=os,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class XA extends nn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new ue(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=os,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new zn,this.combine=qa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Fu extends nn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=cA,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Uu extends nn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class YA extends nn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ue(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=os,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class KA extends dn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Fs(s,e){return!s||s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function JA(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function jA(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Kh(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,a=0;a!==n;++r){const o=t[r]*e;for(let c=0;c!==e;++c)i[a++]=s[o+c]}return i}function Nu(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let a=r[n];if(a!==void 0)if(Array.isArray(a))do a=r[n],a!==void 0&&(e.push(r.time),t.push(...a)),r=s[i++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[n],a!==void 0&&(e.push(r.time),a.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do a=r[n],a!==void 0&&(e.push(r.time),t.push(a)),r=s[i++];while(r!==void 0)}function Ky(s,e,t,n,i=30){const r=s.clone();r.name=e;const a=[];for(let c=0;c<r.tracks.length;++c){const l=r.tracks[c],h=l.getValueSize(),u=[],d=[];for(let f=0;f<l.times.length;++f){const p=l.times[f]*i;if(!(p<t||p>=n)){u.push(l.times[f]);for(let g=0;g<h;++g)d.push(l.values[f*h+g])}}u.length!==0&&(l.times=Fs(u,l.times.constructor),l.values=Fs(d,l.values.constructor),a.push(l))}r.tracks=a;let o=1/0;for(let c=0;c<r.tracks.length;++c)o>r.tracks[c].times[0]&&(o=r.tracks[c].times[0]);for(let c=0;c<r.tracks.length;++c)r.tracks[c].shift(-1*o);return r.resetDuration(),r}function Jy(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let a=0;a<i;++a){const o=t.tracks[a],c=o.ValueTypeName;if(c==="bool"||c==="string")continue;const l=s.tracks.find(function(A){return A.name===o.name&&A.ValueTypeName===c});if(l===void 0)continue;let h=0;const u=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let d=0;const f=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=o.times.length-1;let g;if(r<=o.times[0]){const A=h,y=u-h;g=o.values.slice(A,y)}else if(r>=o.times[p]){const A=p*u+h,y=A+u-h;g=o.values.slice(A,y)}else{const A=o.createInterpolant(),y=h,x=u-h;A.evaluate(r),g=A.resultBuffer.slice(y,x)}c==="quaternion"&&new tn().fromArray(g).normalize().conjugate().toArray(g);const m=l.times.length;for(let A=0;A<m;++A){const y=A*f+d;if(c==="quaternion")tn.multiplyQuaternionsFlat(l.values,y,g,0,l.values,y);else{const x=f-d*2;for(let b=0;b<x;++b)l.values[y+b]-=g[b]}}}return s.blendMode=Au,s}class jy{static convertArray(e,t){return Fs(e,t)}static isTypedArray(e){return JA(e)}static getKeyframeOrder(e){return jA(e)}static sortedArray(e,t,n){return Kh(e,t,n)}static flattenJSON(e,t,n,i){Nu(e,t,n,i)}static subclip(e,t,n,i,r=30){return Ky(e,t,n,i,r)}static makeClipAdditive(e,t=0,n=e,i=30){return Jy(e,t,n,i)}}class $r{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let o=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===o)break;if(r=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=r)){const o=t[1];e<o&&(n=2,r=o);for(let c=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===c)break;if(i=r,r=t[--n-1],e>=r)break t}a=n,n=0;break n}break e}for(;n<a;){const o=n+a>>>1;e<t[o]?a=o:n=o+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let a=0;a!==i;++a)t[a]=n[r+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class ZA extends $r{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ls,endingEnd:Ls}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,a=e+1,o=i[r],c=i[a];if(o===void 0)switch(this.getSettings_().endingStart){case Ps:r=e,o=2*t-n;break;case Ua:r=i.length-2,o=t+i[r]-i[r+1];break;default:r=e,o=n}if(c===void 0)switch(this.getSettings_().endingEnd){case Ps:a=e,c=2*n-t;break;case Ua:a=1,c=n+i[1]-i[0];break;default:a=e-1,c=t}const l=(n-t)*.5,h=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(c-n),this._offsetPrev=r*h,this._offsetNext=a*h}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=e*o,l=c-o,h=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(n-t)/(i-t),g=p*p,m=g*p,A=-d*m+2*d*g-d*p,y=(1+d)*m+(-1.5-2*d)*g+(-.5+d)*p+1,x=(-1-f)*m+(1.5+f)*g+.5*p,b=f*m-f*g;for(let _=0;_!==o;++_)r[_]=A*a[h+_]+y*a[l+_]+x*a[c+_]+b*a[u+_];return r}}class Ou extends $r{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=e*o,l=c-o,h=(n-t)/(i-t),u=1-h;for(let d=0;d!==o;++d)r[d]=a[l+d]*u+a[c+d]*h;return r}}class $A extends $r{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class ii{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Fs(t,this.TimeBufferType),this.values=Fs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Fs(e.times,Array),values:Fs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new $A(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Ou(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new ZA(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Hr:t=this.InterpolantFactoryMethodDiscrete;break;case zr:t=this.InterpolantFactoryMethodLinear;break;case Ac:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Hr;case this.InterpolantFactoryMethodLinear:return zr;case this.InterpolantFactoryMethodSmooth:return Ac}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;a!==-1&&n[a]>t;)--a;if(++a,r!==0||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const o=this.getValueSize();this.times=n.slice(r,a),this.values=this.values.slice(r*o,a*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==r;o++){const c=n[o];if(typeof c=="number"&&isNaN(c)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,c),e=!1;break}if(a!==null&&a>c){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,c,a),e=!1;break}a=c}if(i!==void 0&&JA(i))for(let o=0,c=i.length;o!==c;++o){const l=i[o];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,l),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Ac,r=e.length-1;let a=1;for(let o=1;o<r;++o){let c=!1;const l=e[o],h=e[o+1];if(l!==h&&(o!==1||l!==e[0]))if(i)c=!0;else{const u=o*n,d=u-n,f=u+n;for(let p=0;p!==n;++p){const g=t[u+p];if(g!==t[d+p]||g!==t[f+p]){c=!0;break}}}if(c){if(o!==a){e[a]=e[o];const u=o*n,d=a*n;for(let f=0;f!==n;++f)t[d+f]=t[u+f]}++a}}if(r>0){e[a]=e[r];for(let o=r*n,c=a*n,l=0;l!==n;++l)t[c+l]=t[o+l];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}ii.prototype.ValueTypeName="";ii.prototype.TimeBufferType=Float32Array;ii.prototype.ValueBufferType=Float32Array;ii.prototype.DefaultInterpolation=zr;class Js extends ii{constructor(e,t,n){super(e,t,n)}}Js.prototype.ValueTypeName="bool";Js.prototype.ValueBufferType=Array;Js.prototype.DefaultInterpolation=Hr;Js.prototype.InterpolantFactoryMethodLinear=void 0;Js.prototype.InterpolantFactoryMethodSmooth=void 0;class ku extends ii{constructor(e,t,n,i){super(e,t,n,i)}}ku.prototype.ValueTypeName="color";class Xs extends ii{constructor(e,t,n,i){super(e,t,n,i)}}Xs.prototype.ValueTypeName="number";class em extends $r{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=(n-t)/(i-t);let l=e*o;for(let h=l+o;l!==h;l+=4)tn.slerpFlat(r,0,a,l-o,a,l,c);return r}}class Ys extends ii{constructor(e,t,n,i){super(e,t,n,i)}InterpolantFactoryMethodLinear(e){return new em(this.times,this.values,this.getValueSize(),e)}}Ys.prototype.ValueTypeName="quaternion";Ys.prototype.InterpolantFactoryMethodSmooth=void 0;class js extends ii{constructor(e,t,n){super(e,t,n)}}js.prototype.ValueTypeName="string";js.prototype.ValueBufferType=Array;js.prototype.DefaultInterpolation=Hr;js.prototype.InterpolantFactoryMethodLinear=void 0;js.prototype.InterpolantFactoryMethodSmooth=void 0;class Ks extends ii{constructor(e,t,n,i){super(e,t,n,i)}}Ks.prototype.ValueTypeName="vector";class Yr{constructor(e="",t=-1,n=[],i=sl){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Jn(),this.userData={},this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,o=n.length;a!==o;++a)t.push($y(n[a]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r.userData=JSON.parse(e.userData||"{}"),r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode,userData:JSON.stringify(e.userData)};for(let r=0,a=n.length;r!==a;++r)t.push(ii.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,a=[];for(let o=0;o<r;o++){let c=[],l=[];c.push((o+r-1)%r,o,(o+1)%r),l.push(0,1,0);const h=jA(c);c=Kh(c,1,h),l=Kh(l,1,h),!i&&c[0]===0&&(c.push(r),l.push(l[0])),a.push(new Xs(".morphTargetInfluences["+t[o].name+"]",c,l).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,c=e.length;o<c;o++){const l=e[o],h=l.name.match(r);if(h&&h.length>1){const u=h[1];let d=i[u];d||(i[u]=d=[]),d.push(l)}}const a=[];for(const o in i)a.push(this.CreateFromMorphTargetSequence(o,i[o],t,n));return a}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(u,d,f,p,g){if(f.length!==0){const m=[],A=[];Nu(f,m,A,p),m.length!==0&&g.push(new u(d,m,A))}},i=[],r=e.name||"default",a=e.fps||30,o=e.blendMode;let c=e.length||-1;const l=e.hierarchy||[];for(let u=0;u<l.length;u++){const d=l[u].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let g=0;g<d[p].morphTargets.length;g++)f[d[p].morphTargets[g]]=-1;for(const g in f){const m=[],A=[];for(let y=0;y!==d[p].morphTargets.length;++y){const x=d[p];m.push(x.time),A.push(x.morphTarget===g?1:0)}i.push(new Xs(".morphTargetInfluence["+g+"]",m,A))}c=f.length*a}else{const f=".bones["+t[u].name+"]";n(Ks,f+".position",d,"pos",i),n(Ys,f+".quaternion",d,"rot",i),n(Ks,f+".scale",d,"scl",i)}}return i.length===0?null:new this(r,c,i,o)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let n=0;n<this.tracks.length;n++)e.push(this.tracks[n].clone());const t=new this.constructor(this.name,this.duration,e,this.blendMode);return t.userData=JSON.parse(JSON.stringify(this.userData)),t}toJSON(){return this.constructor.toJSON(this)}}function Zy(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Xs;case"vector":case"vector2":case"vector3":case"vector4":return Ks;case"color":return ku;case"quaternion":return Ys;case"bool":case"boolean":return Js;case"string":return js}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function $y(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Zy(s.type);if(s.times===void 0){const t=[],n=[];Nu(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const bi={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Qu{constructor(e,t,n){const i=this;let r=!1,a=0,o=0,c;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.abortController=new AbortController,this.itemStart=function(h){o++,r===!1&&i.onStart!==void 0&&i.onStart(h,a,o),r=!0},this.itemEnd=function(h){a++,i.onProgress!==void 0&&i.onProgress(h,a,o),a===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(h){i.onError!==void 0&&i.onError(h)},this.resolveURL=function(h){return c?c(h):h},this.setURLModifier=function(h){return c=h,this},this.addHandler=function(h,u){return l.push(h,u),this},this.removeHandler=function(h){const u=l.indexOf(h);return u!==-1&&l.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=l.length;u<d;u+=2){const f=l[u],p=l[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return p}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const tm=new Qu;class fn{constructor(e){this.manager=e!==void 0?e:tm,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}abort(){return this}}fn.DEFAULT_MATERIAL_NAME="__DEFAULT";const Bi={};class eb extends Error{constructor(e,t){super(e),this.response=t}}class xn extends fn{constructor(e){super(e),this.mimeType="",this.responseType="",this._abortController=new AbortController}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=bi.get(`file:${e}`);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Bi[e]!==void 0){Bi[e].push({onLoad:t,onProgress:n,onError:i});return}Bi[e]=[],Bi[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal}),o=this.mimeType,c=this.responseType;fetch(a).then(l=>{if(l.status===200||l.status===0){if(l.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||l.body===void 0||l.body.getReader===void 0)return l;const h=Bi[e],u=l.body.getReader(),d=l.headers.get("X-File-Size")||l.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let g=0;const m=new ReadableStream({start(A){y();function y(){u.read().then(({done:x,value:b})=>{if(x)A.close();else{g+=b.byteLength;const _=new ProgressEvent("progress",{lengthComputable:p,loaded:g,total:f});for(let C=0,v=h.length;C<v;C++){const I=h[C];I.onProgress&&I.onProgress(_)}A.enqueue(b),y()}},x=>{A.error(x)})}}});return new Response(m)}else throw new eb(`fetch for "${l.url}" responded with ${l.status}: ${l.statusText}`,l)}).then(l=>{switch(c){case"arraybuffer":return l.arrayBuffer();case"blob":return l.blob();case"document":return l.text().then(h=>new DOMParser().parseFromString(h,o));case"json":return l.json();default:if(o==="")return l.text();{const u=/charset="?([^;"\s]*)"?/i.exec(o),d=u&&u[1]?u[1].toLowerCase():void 0,f=new TextDecoder(d);return l.arrayBuffer().then(p=>f.decode(p))}}}).then(l=>{bi.add(`file:${e}`,l);const h=Bi[e];delete Bi[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onLoad&&f.onLoad(l)}}).catch(l=>{const h=Bi[e];if(h===void 0)throw this.manager.itemError(e),l;delete Bi[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onError&&f.onError(l)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}class tb extends fn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new xn(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Yr.parse(e[n]);t.push(i)}return t}}class nb extends fn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=[],o=new Zr,c=new xn(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(r.withCredentials);let l=0;function h(u){c.load(e[u],function(d){const f=r.parse(d,!0);a[u]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},l+=1,l===6&&(f.mipmapCount===1&&(o.minFilter=Ht),o.image=a,o.format=f.format,o.needsUpdate=!0,t&&t(o))},n,i)}if(Array.isArray(e))for(let u=0,d=e.length;u<d;++u)h(u);else c.load(e,function(u){const d=r.parse(u,!0);if(d.isCubemap){const f=d.mipmaps.length/d.mipmapCount;for(let p=0;p<f;p++){a[p]={mipmaps:[]};for(let g=0;g<d.mipmapCount;g++)a[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+g]),a[p].format=d.format,a[p].width=d.width,a[p].height=d.height}o.image=a}else o.image.width=d.width,o.image.height=d.height,o.mipmaps=d.mipmaps;d.mipmapCount===1&&(o.minFilter=Ht),o.format=d.format,o.needsUpdate=!0,t&&t(o)},n,i);return o}}const mr=new WeakMap;class Wa extends fn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=bi.get(`image:${e}`);if(a!==void 0){if(a.complete===!0)r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0);else{let u=mr.get(a);u===void 0&&(u=[],mr.set(a,u)),u.push({onLoad:t,onError:i})}return a}const o=ka("img");function c(){h(),t&&t(this);const u=mr.get(this)||[];for(let d=0;d<u.length;d++){const f=u[d];f.onLoad&&f.onLoad(this)}mr.delete(this),r.manager.itemEnd(e)}function l(u){h(),i&&i(u),bi.remove(`image:${e}`);const d=mr.get(this)||[];for(let f=0;f<d.length;f++){const p=d[f];p.onError&&p.onError(u)}mr.delete(this),r.manager.itemError(e),r.manager.itemEnd(e)}function h(){o.removeEventListener("load",c,!1),o.removeEventListener("error",l,!1)}return o.addEventListener("load",c,!1),o.addEventListener("error",l,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),bi.add(`image:${e}`,o),r.manager.itemStart(e),o.src=e,o}}class ib extends fn{constructor(e){super(e)}load(e,t,n,i){const r=new Za;r.colorSpace=St;const a=new Wa(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function c(l){a.load(e[l],function(h){r.images[l]=h,o++,o===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let l=0;l<e.length;++l)c(l);return r}}class sb extends fn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Qn,o=new xn(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(e,function(c){let l;try{l=r.parse(c)}catch(h){if(i!==void 0)i(h);else{console.error(h);return}}l.image!==void 0?a.image=l.image:l.data!==void 0&&(a.image.width=l.width,a.image.height=l.height,a.image.data=l.data),a.wrapS=l.wrapS!==void 0?l.wrapS:Yn,a.wrapT=l.wrapT!==void 0?l.wrapT:Yn,a.magFilter=l.magFilter!==void 0?l.magFilter:Ht,a.minFilter=l.minFilter!==void 0?l.minFilter:Ht,a.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.colorSpace!==void 0&&(a.colorSpace=l.colorSpace),l.flipY!==void 0&&(a.flipY=l.flipY),l.format!==void 0&&(a.format=l.format),l.type!==void 0&&(a.type=l.type),l.mipmaps!==void 0&&(a.mipmaps=l.mipmaps,a.minFilter=kn),l.mipmapCount===1&&(a.minFilter=Ht),l.generateMipmaps!==void 0&&(a.generateMipmaps=l.generateMipmaps),a.needsUpdate=!0,t&&t(a,l)},n,i),a}}class Gu extends fn{constructor(e){super(e)}load(e,t,n,i){const r=new Wt,a=new Wa(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){r.image=o,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class ls extends lt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new ue(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class Hu extends ls{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(lt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new ue(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const sh=new Ve,Xd=new S,Yd=new S;class zu{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ie(512,512),this.mapType=ut,this.map=null,this.mapPass=null,this.matrix=new Ve,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new jr,this._frameExtents=new ie(1,1),this._viewportCount=1,this._viewports=[new bt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Xd.setFromMatrixPosition(e.matrixWorld),t.position.copy(Xd),Yd.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Yd),t.updateMatrixWorld(),sh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(sh,t.coordinateSystem,t.reversedDepth),t.reversedDepth?n.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(sh)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class rb extends zu{constructor(){super(new Zt(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){const t=this.camera,n=Wr*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class _l extends ls{constructor(e,t,n=0,i=Math.PI/3,r=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(lt.DEFAULT_UP),this.updateMatrix(),this.target=new lt,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new rb}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Kd=new Ve,fa=new S,rh=new S;class ab extends zu{constructor(){super(new Zt(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ie(4,2),this._viewportCount=6,this._viewports=[new bt(2,1,1,1),new bt(0,1,1,1),new bt(3,1,1,1),new bt(1,1,1,1),new bt(3,0,1,1),new bt(1,0,1,1)],this._cubeDirections=[new S(1,0,0),new S(-1,0,0),new S(0,0,1),new S(0,0,-1),new S(0,1,0),new S(0,-1,0)],this._cubeUps=[new S(0,1,0),new S(0,1,0),new S(0,1,0),new S(0,1,0),new S(0,0,1),new S(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),fa.setFromMatrixPosition(e.matrixWorld),n.position.copy(fa),rh.copy(n.position),rh.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(rh),n.updateMatrixWorld(),i.makeTranslation(-fa.x,-fa.y,-fa.z),Kd.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Kd,n.coordinateSystem,n.reversedDepth)}}class Oi extends ls{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new ab}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class lo extends ol{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,o=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,a=r+l*this.view.width,o-=h*this.view.offsetY,c=o-h*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,c,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class ob extends zu{constructor(){super(new lo(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class ho extends ls{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(lt.DEFAULT_UP),this.updateMatrix(),this.target=new lt,this.shadow=new ob}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class nm extends ls{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class im extends ls{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class sm{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new S)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*r)),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],1.092548*(n*r)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*r),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],2*.429043*n*r),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class rm extends ls{constructor(e=new sm,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class El extends fn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,a=new xn(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new ue().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(i.dispersion=e.dispersion),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const a=e.uniforms[r];switch(i.uniforms[r]={},a.type){case"t":i.uniforms[r].value=n(a.value);break;case"c":i.uniforms[r].value=new ue().setHex(a.value);break;case"v2":i.uniforms[r].value=new ie().fromArray(a.value);break;case"v3":i.uniforms[r].value=new S().fromArray(a.value);break;case"v4":i.uniforms[r].value=new bt().fromArray(a.value);break;case"m3":i.uniforms[r].value=new at().fromArray(a.value);break;case"m4":i.uniforms[r].value=new Ve().fromArray(a.value);break;default:i.uniforms[r].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new ie().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ie().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return El.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:HA,SpriteMaterial:vu,RawShaderMaterial:zA,ShaderMaterial:jn,PointsMaterial:no,MeshPhysicalMaterial:hn,MeshStandardMaterial:rt,MeshPhongMaterial:VA,MeshToonMaterial:WA,MeshNormalMaterial:qA,MeshLambertMaterial:XA,MeshDepthMaterial:Fu,MeshDistanceMaterial:Uu,MeshBasicMaterial:yn,MeshMatcapMaterial:YA,LineDashedMaterial:KA,LineBasicMaterial:dn,Material:nn};return new t[e]}}class ki{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class am extends Je{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class om extends fn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new xn(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(f,p){if(t[p]!==void 0)return t[p];const m=f.interleavedBuffers[p],A=r(f,m.buffer),y=Sr(m.type,A),x=new eo(y,m.stride);return x.uuid=m.uuid,t[p]=x,x}function r(f,p){if(n[p]!==void 0)return n[p];const m=f.arrayBuffers[p],A=new Uint32Array(m).buffer;return n[p]=A,A}const a=e.isInstancedBufferGeometry?new am:new Je,o=e.data.index;if(o!==void 0){const f=Sr(o.type,o.array);a.setIndex(new ot(f,1))}const c=e.data.attributes;for(const f in c){const p=c[f];let g;if(p.isInterleavedBufferAttribute){const m=i(e.data,p.data);g=new as(m,p.itemSize,p.offset,p.normalized)}else{const m=Sr(p.type,p.array),A=p.isInstancedBufferAttribute?Ws:ot;g=new A(m,p.itemSize,p.normalized)}p.name!==void 0&&(g.name=p.name),p.usage!==void 0&&g.setUsage(p.usage),a.setAttribute(f,g)}const l=e.data.morphAttributes;if(l)for(const f in l){const p=l[f],g=[];for(let m=0,A=p.length;m<A;m++){const y=p[m];let x;if(y.isInterleavedBufferAttribute){const b=i(e.data,y.data);x=new as(b,y.itemSize,y.offset,y.normalized)}else{const b=Sr(y.type,y.array);x=new ot(b,y.itemSize,y.normalized)}y.name!==void 0&&(x.name=y.name),g.push(x)}a.morphAttributes[f]=g}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const u=e.data.groups||e.data.drawcalls||e.data.offsets;if(u!==void 0)for(let f=0,p=u.length;f!==p;++f){const g=u[f];a.addGroup(g.start,g.count,g.materialIndex)}const d=e.data.boundingSphere;return d!==void 0&&(a.boundingSphere=new un().fromJSON(d)),e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class cb extends fn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=this.path===""?ki.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const o=new xn(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(c){let l=null;try{l=JSON.parse(c)}catch(u){i!==void 0&&i(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}const h=l.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(l,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?ki.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new xn(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const a=await r.loadAsync(e,t),o=JSON.parse(a),c=o.metadata;if(c===void 0||c.type===void 0||c.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(o)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(l)}),o=this.parseTextures(e.textures,a),c=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,r,c,o,n),h=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,h),this.bindLightTargets(l),t!==void 0){let u=!1;for(const d in a)if(a[d].data instanceof HTMLImageElement){u=!0;break}u===!1&&t(l)}return l}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,r),o=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,i,o,a,t),l=this.parseSkeletons(e.skeletons,c);return this.bindSkeletons(c,l),this.bindLightTargets(c),c}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new Gs().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,a=e.length;r<a;r++){const o=new to().fromJSON(e[r],i);n[o.uuid]=o}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new om;for(let r=0,a=e.length;r<a;r++){let o;const c=e[r];switch(c.type){case"BufferGeometry":case"InstancedBufferGeometry":o=i.parse(c);break;default:c.type in qd?o=qd[c.type].fromJSON(c,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${c.type}"`)}o.uuid=c.uuid,c.name!==void 0&&(o.name=c.name),c.userData!==void 0&&(o.userData=c.userData),n[c.uuid]=o}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new El;r.setTextures(t);for(let a=0,o=e.length;a<o;a++){const c=e[a];n[c.uuid]===void 0&&(n[c.uuid]=r.parse(c)),i[c.uuid]=n[c.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=Yr.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function a(c){return n.manager.itemStart(c),r.load(c,function(){n.manager.itemEnd(c)},void 0,function(){n.manager.itemError(c),n.manager.itemEnd(c)})}function o(c){if(typeof c=="string"){const l=c,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l)?l:n.resourcePath+l;return a(h)}else return c.data?{data:Sr(c.type,c.data),width:c.width,height:c.height}:null}if(e!==void 0&&e.length>0){const c=new Qu(t);r=new Wa(c),r.setCrossOrigin(this.crossOrigin);for(let l=0,h=e.length;l<h;l++){const u=e[l],d=u.url;if(Array.isArray(d)){const f=[];for(let p=0,g=d.length;p<g;p++){const m=d[p],A=o(m);A!==null&&(A instanceof HTMLImageElement?f.push(A):f.push(new Qn(A.data,A.width,A.height)))}i[u.uuid]=new ts(f)}else{const f=o(u.url);i[u.uuid]=new ts(f)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(a){if(typeof a=="string"){const o=a,c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(o)?o:t.resourcePath+o;return await i.loadAsync(c)}else return a.data?{data:Sr(a.type,a.data),width:a.width,height:a.height}:null}if(e!==void 0&&e.length>0){i=new Wa(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,o=e.length;a<o;a++){const c=e[a],l=c.url;if(Array.isArray(l)){const h=[];for(let u=0,d=l.length;u<d;u++){const f=l[u],p=await r(f);p!==null&&(p instanceof HTMLImageElement?h.push(p):h.push(new Qn(p.data,p.width,p.height)))}n[c.uuid]=new ts(h)}else{const h=await r(c.url);n[c.uuid]=new ts(h)}}}return n}parseTextures(e,t){function n(r,a){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),a[r])}const i={};if(e!==void 0)for(let r=0,a=e.length;r<a;r++){const o=e[r];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);const c=t[o.image],l=c.data;let h;Array.isArray(l)?(h=new Za,l.length===6&&(h.needsUpdate=!0)):(l&&l.data?h=new Qn:h=new Wt,l&&(h.needsUpdate=!0)),h.source=c,h.uuid=o.uuid,o.name!==void 0&&(h.name=o.name),o.mapping!==void 0&&(h.mapping=n(o.mapping,lb)),o.channel!==void 0&&(h.channel=o.channel),o.offset!==void 0&&h.offset.fromArray(o.offset),o.repeat!==void 0&&h.repeat.fromArray(o.repeat),o.center!==void 0&&h.center.fromArray(o.center),o.rotation!==void 0&&(h.rotation=o.rotation),o.wrap!==void 0&&(h.wrapS=n(o.wrap[0],Jd),h.wrapT=n(o.wrap[1],Jd)),o.format!==void 0&&(h.format=o.format),o.internalFormat!==void 0&&(h.internalFormat=o.internalFormat),o.type!==void 0&&(h.type=o.type),o.colorSpace!==void 0&&(h.colorSpace=o.colorSpace),o.minFilter!==void 0&&(h.minFilter=n(o.minFilter,jd)),o.magFilter!==void 0&&(h.magFilter=n(o.magFilter,jd)),o.anisotropy!==void 0&&(h.anisotropy=o.anisotropy),o.flipY!==void 0&&(h.flipY=o.flipY),o.generateMipmaps!==void 0&&(h.generateMipmaps=o.generateMipmaps),o.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(h.unpackAlignment=o.unpackAlignment),o.compareFunction!==void 0&&(h.compareFunction=o.compareFunction),o.userData!==void 0&&(h.userData=o.userData),i[o.uuid]=h}return i}parseObject(e,t,n,i,r){let a;function o(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function c(d){if(d!==void 0){if(Array.isArray(d)){const f=[];for(let p=0,g=d.length;p<g;p++){const m=d[p];n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),f.push(n[m])}return f}return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),n[d]}}function l(d){return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),i[d]}let h,u;switch(e.type){case"Scene":a=new Eu,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new ue(e.background):a.background=l(e.background)),e.environment!==void 0&&(a.environment=l(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new $a(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new cl(e.fog.color,e.fog.density)),e.fog.name!==""&&(a.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(a.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&a.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(a.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&a.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":a=new Zt(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new lo(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new nm(e.color,e.intensity);break;case"DirectionalLight":a=new ho(e.color,e.intensity),a.target=e.target||"";break;case"PointLight":a=new Oi(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new im(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new _l(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),a.target=e.target||"";break;case"HemisphereLight":a=new Hu(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new rm().fromJSON(e);break;case"SkinnedMesh":h=o(e.geometry),u=c(e.material),a=new Cu(h,u),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":h=o(e.geometry),u=c(e.material),a=new Be(h,u);break;case"InstancedMesh":h=o(e.geometry),u=c(e.material);const d=e.count,f=e.instanceMatrix,p=e.instanceColor;a=new Bn(h,u,d),a.instanceMatrix=new Ws(new Float32Array(f.array),16),p!==void 0&&(a.instanceColor=new Ws(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":h=o(e.geometry),u=c(e.material),a=new IA(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,u),a.geometry=h,a.perObjectFrustumCulled=e.perObjectFrustumCulled,a.sortObjects=e.sortObjects,a._drawRanges=e.drawRanges,a._reservedRanges=e.reservedRanges,a._geometryInfo=e.geometryInfo.map(g=>{let m=null,A=null;return g.boundingBox!==void 0&&(m=new $t().fromJSON(g.boundingBox)),g.boundingSphere!==void 0&&(A=new un().fromJSON(g.boundingSphere)),{...g,boundingBox:m,boundingSphere:A}}),a._instanceInfo=e.instanceInfo,a._availableInstanceIds=e._availableInstanceIds,a._availableGeometryIds=e._availableGeometryIds,a._nextIndexStart=e.nextIndexStart,a._nextVertexStart=e.nextVertexStart,a._geometryCount=e.geometryCount,a._maxInstanceCount=e.maxInstanceCount,a._maxVertexCount=e.maxVertexCount,a._maxIndexCount=e.maxIndexCount,a._geometryInitialized=e.geometryInitialized,a._matricesTexture=l(e.matricesTexture.uuid),a._indirectTexture=l(e.indirectTexture.uuid),e.colorsTexture!==void 0&&(a._colorsTexture=l(e.colorsTexture.uuid)),e.boundingSphere!==void 0&&(a.boundingSphere=new un().fromJSON(e.boundingSphere)),e.boundingBox!==void 0&&(a.boundingBox=new $t().fromJSON(e.boundingBox));break;case"LOD":a=new wu;break;case"Line":a=new _i(o(e.geometry),c(e.material));break;case"LineLoop":a=new Su(o(e.geometry),c(e.material));break;case"LineSegments":a=new di(o(e.geometry),c(e.material));break;case"PointCloud":case"Points":a=new ul(o(e.geometry),c(e.material));break;case"Sprite":a=new SA(c(e.material));break;case"Group":a=new Lt;break;case"Bone":a=new ll;break;default:a=new lt}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.up!==void 0&&a.up.fromArray(e.up),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(a.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let f=0;f<d.length;f++)a.add(this.parseObject(d[f],t,n,i,r))}if(e.animations!==void 0){const d=e.animations;for(let f=0;f<d.length;f++){const p=d[f];a.animations.push(r[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const d=e.levels;for(let f=0;f<d.length;f++){const p=d[f],g=a.getObjectByProperty("uuid",p.object);g!==void 0&&a.addLevel(g,p.distance,p.hysteresis)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,i=e.getObjectByProperty("uuid",n);i!==void 0?t.target=i:t.target=new lt}})}}const lb={UVMapping:Zc,CubeReflectionMapping:Qi,CubeRefractionMapping:rs,EquirectangularReflectionMapping:Ia,EquirectangularRefractionMapping:Ma,CubeUVReflectionMapping:Kr},Jd={RepeatWrapping:Hn,ClampToEdgeWrapping:Yn,MirroredRepeatWrapping:Lr},jd={NearestFilter:Jt,NearestMipmapNearestFilter:Xa,NearestMipmapLinearFilter:Ds,LinearFilter:Ht,LinearMipmapNearestFilter:Mr,LinearMipmapLinearFilter:kn},ah=new WeakMap;class cm extends fn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"},this._abortController=new AbortController}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=bi.get(`image-bitmap:${e}`);if(a!==void 0){if(r.manager.itemStart(e),a.then){a.then(l=>{if(ah.has(a)===!0)i&&i(ah.get(a)),r.manager.itemError(e),r.manager.itemEnd(e);else return t&&t(l),r.manager.itemEnd(e),l});return}return setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a}const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,o.signal=typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal;const c=fetch(e,o).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(l){return bi.add(`image-bitmap:${e}`,l),t&&t(l),r.manager.itemEnd(e),l}).catch(function(l){i&&i(l),ah.set(c,l),bi.remove(`image-bitmap:${e}`),r.manager.itemError(e),r.manager.itemEnd(e)});bi.add(`image-bitmap:${e}`,c),r.manager.itemStart(e)}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}let Xo;class Vu{static getContext(){return Xo===void 0&&(Xo=new(window.AudioContext||window.webkitAudioContext)),Xo}static setContext(e){Xo=e}}class lm extends fn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new xn(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){try{const l=c.slice(0);Vu.getContext().decodeAudioData(l,function(u){t(u)}).catch(o)}catch(l){o(l)}},n,i);function o(c){i?i(c):console.error(c),r.manager.itemError(e)}}}const Zd=new Ve,$d=new Ve,ys=new Ve;class hb{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Zt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Zt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,ys.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,a=t.near*Math.tan(Qs*t.fov*.5)/t.zoom;let o,c;$d.elements[12]=-i,Zd.elements[12]=i,o=-a*t.aspect+r,c=a*t.aspect+r,ys.elements[0]=2*t.near/(c-o),ys.elements[8]=(c+o)/(c-o),this.cameraL.projectionMatrix.copy(ys),o=-a*t.aspect-r,c=a*t.aspect-r,ys.elements[0]=2*t.near/(c-o),ys.elements[8]=(c+o)/(c-o),this.cameraR.projectionMatrix.copy(ys)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply($d),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Zd)}}class hm extends Zt{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class Wu{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=performance.now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}const bs=new S,oh=new tn,ub=new S,xs=new S,_s=new S;class um extends lt{constructor(){super(),this.type="AudioListener",this.context=Vu.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Wu}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(bs,oh,ub),xs.set(0,0,-1).applyQuaternion(oh),_s.set(0,1,0).applyQuaternion(oh),t.positionX){const n=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(bs.x,n),t.positionY.linearRampToValueAtTime(bs.y,n),t.positionZ.linearRampToValueAtTime(bs.z,n),t.forwardX.linearRampToValueAtTime(xs.x,n),t.forwardY.linearRampToValueAtTime(xs.y,n),t.forwardZ.linearRampToValueAtTime(xs.z,n),t.upX.linearRampToValueAtTime(_s.x,n),t.upY.linearRampToValueAtTime(_s.y,n),t.upZ.linearRampToValueAtTime(_s.z,n)}else t.setPosition(bs.x,bs.y,bs.z),t.setOrientation(xs.x,xs.y,xs.z,_s.x,_s.y,_s.z)}}class qu extends lt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const Es=new S,ef=new tn,db=new S,vs=new S;class dm extends qu{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Es,ef,db),vs.set(0,0,1).applyQuaternion(ef);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Es.x,n),t.positionY.linearRampToValueAtTime(Es.y,n),t.positionZ.linearRampToValueAtTime(Es.z,n),t.orientationX.linearRampToValueAtTime(vs.x,n),t.orientationY.linearRampToValueAtTime(vs.y,n),t.orientationZ.linearRampToValueAtTime(vs.z,n)}else t.setPosition(Es.x,Es.y,Es.z),t.setOrientation(vs.x,vs.y,vs.z)}}class fb{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class fm{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,a;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==i;++o)n[r+o]=n[o];a=t}else{a+=t;const o=t/a;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const c=t*this._origIndex;this._mixBufferRegion(n,i,c,1-r,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let c=t,l=t+t;c!==l;++c)if(n[c]!==n[c+t]){o.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,a=i;r!==a;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let a=0;a!==r;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){tn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const a=this._workIndex*r;tn.multiplyQuaternionsFlat(e,a,e,t,e,n),tn.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,r){const a=1-i;for(let o=0;o!==r;++o){const c=t+o;e[c]=e[c]*a+e[n+o]*i}}_lerpAdditive(e,t,n,i,r){for(let a=0;a!==r;++a){const o=t+a;e[o]=e[o]+e[n+a]*i}}}const Xu="\\[\\]\\.:\\/",pb=new RegExp("["+Xu+"]","g"),Yu="[^"+Xu+"]",Ab="[^"+Xu.replace("\\.","")+"]",mb=/((?:WC+[\/:])*)/.source.replace("WC",Yu),gb=/(WCOD+)?/.source.replace("WCOD",Ab),yb=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Yu),bb=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Yu),xb=new RegExp("^"+mb+gb+yb+bb+"$"),_b=["material","materials","bones","map"];class Eb{constructor(e,t,n){const i=n||wt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class wt{constructor(e,t,n){this.path=t,this.parsedPath=n||wt.parseTrackName(t),this.node=wt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new wt.Composite(e,t,n):new wt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(pb,"")}static parseTrackName(e){const t=xb.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);_b.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let a=0;a<r.length;a++){const o=r[a];if(o.name===t||o.uuid===t)return o;const c=n(o.children);if(c)return c}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=wt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let l=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===l){l=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(l!==void 0){if(e[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[l]}}const a=e[i];if(a===void 0){const l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?o=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}c=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else a.fromArray!==void 0&&a.toArray!==void 0?(c=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(c=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}wt.Composite=Eb;wt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};wt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};wt.prototype.GetterByBindingType=[wt.prototype._getValue_direct,wt.prototype._getValue_array,wt.prototype._getValue_arrayElement,wt.prototype._getValue_toArray];wt.prototype.SetterByBindingTypeAndVersioning=[[wt.prototype._setValue_direct,wt.prototype._setValue_direct_setNeedsUpdate,wt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[wt.prototype._setValue_array,wt.prototype._setValue_array_setNeedsUpdate,wt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[wt.prototype._setValue_arrayElement,wt.prototype._setValue_arrayElement_setNeedsUpdate,wt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[wt.prototype._setValue_fromArray,wt.prototype._setValue_fromArray_setNeedsUpdate,wt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class vb{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Jn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,a=r.length;let o,c=e.length,l=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const d=arguments[h],f=d.uuid;let p=t[f];if(p===void 0){p=c++,t[f]=p,e.push(d);for(let g=0,m=a;g!==m;++g)r[g].push(new wt(d,n[g],i[g]))}else if(p<l){o=e[p];const g=--l,m=e[g];t[m.uuid]=p,e[p]=m,t[f]=g,e[g]=d;for(let A=0,y=a;A!==y;++A){const x=r[A],b=x[g];let _=x[p];x[p]=b,_===void 0&&(_=new wt(d,n[A],i[A])),x[g]=_}}else e[p]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let a=0,o=arguments.length;a!==o;++a){const c=arguments[a],l=c.uuid,h=t[l];if(h!==void 0&&h>=r){const u=r++,d=e[u];t[d.uuid]=h,e[h]=d,t[l]=u,e[u]=c;for(let f=0,p=i;f!==p;++f){const g=n[f],m=g[u],A=g[h];g[h]=m,g[u]=A}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,a=e.length;for(let o=0,c=arguments.length;o!==c;++o){const l=arguments[o],h=l.uuid,u=t[h];if(u!==void 0)if(delete t[h],u<r){const d=--r,f=e[d],p=--a,g=e[p];t[f.uuid]=u,e[u]=f,t[g.uuid]=d,e[d]=g,e.pop();for(let m=0,A=i;m!==A;++m){const y=n[m],x=y[d],b=y[p];y[u]=x,y[d]=b,y.pop()}}else{const d=--a,f=e[d];d>0&&(t[f.uuid]=u),e[u]=f,e.pop();for(let p=0,g=i;p!==g;++p){const m=n[p];m[u]=m[d],m.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const a=this._paths,o=this._parsedPaths,c=this._objects,l=c.length,h=this.nCachedObjects_,u=new Array(l);i=r.length,n[e]=i,a.push(e),o.push(t),r.push(u);for(let d=h,f=c.length;d!==f;++d){const p=c[d];u[d]=new wt(p,e,t)}return u}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,a=this._bindings,o=a.length-1,c=a[o],l=e[o];t[l]=n,a[n]=c,a.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}}class pm{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,a=r.length,o=new Array(a),c={endingStart:Ls,endingEnd:Ls};for(let l=0;l!==a;++l){const h=r[l].createInterpolant(null);o[l]=h,h.settings=c}this._interpolantSettings=c,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=rA,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n=!1){if(e.fadeOut(t),this.fadeIn(t),n===!0){const i=this._clip.duration,r=e._clip.duration,a=r/i,o=i/r;e.warp(1,a,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,n=!1){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);const c=o.parameterPositions,l=o.sampleValues;return c[0]=r,c[1]=r+n,l[0]=e/a,l[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const c=(e-r)*n;c<0||n===0?t=0:(this._startTime=null,t=n*c)}t*=this._updateTimeScale(e);const a=this._updateTime(t),o=this._updateWeight(e);if(o>0){const c=this._interpolants,l=this._propertyBindings;switch(this.blendMode){case Au:for(let h=0,u=c.length;h!==u;++h)c[h].evaluate(a),l[h].accumulateAdditive(o);break;case sl:default:for(let h=0,u=c.length;h!==u;++h)c[h].evaluate(a),l[h].accumulate(i,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const a=n===aA;if(e===0)return r===-1?i:a&&(r&1)===1?t-i:i;if(n===sA){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const o=Math.floor(i/t);i-=t*o,r+=Math.abs(o);const c=this.repetitions-r;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(c===1){const l=e<0;this._setEndings(l,!l,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=i;if(a&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Ps,i.endingEnd=Ps):(e?i.endingStart=this.zeroSlopeAtStart?Ps:Ls:i.endingStart=Ua,t?i.endingEnd=this.zeroSlopeAtEnd?Ps:Ls:i.endingEnd=Ua)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,c=a.sampleValues;return o[0]=r,c[0]=t,o[1]=r+e,c[1]=n,this}}const wb=new Float32Array(1);class Am extends Ei{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,a=e._propertyBindings,o=e._interpolants,c=n.uuid,l=this._bindingsByRootAndName;let h=l[c];h===void 0&&(h={},l[c]=h);for(let u=0;u!==r;++u){const d=i[u],f=d.name;let p=h[f];if(p!==void 0)++p.referenceCount,a[u]=p;else{if(p=a[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,c,f));continue}const g=t&&t._propertyBindings[u].binding.parsedPath;p=new fm(wt.create(n,f,g),d.ValueTypeName,d.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,c,f),a[u]=p}o[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let a=r[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{const o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,a=this._actionsByClip,o=a[r],c=o.knownActions,l=c[c.length-1],h=e._byClipCacheIndex;l._byClipCacheIndex=h,c[h]=l,c.pop(),e._byClipCacheIndex=null;const u=o.actionByRoot,d=(e._localRoot||this._root).uuid;delete u[d],c.length===0&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,o=a[i],c=t[t.length-1],l=e._cacheIndex;c._cacheIndex=l,t[l]=c,t.pop(),delete o[r],Object.keys(o).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Ou(new Float32Array(2),new Float32Array(2),1,wb),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let a=typeof e=="string"?Yr.findByName(i,e):e;const o=a!==null?a.uuid:e,c=this._actionsByClip[o];let l=null;if(n===void 0&&(a!==null?n=a.blendMode:n=sl),c!==void 0){const u=c.actionByRoot[r];if(u!==void 0&&u.blendMode===n)return u;l=c.knownActions[0],a===null&&(a=l._clip)}if(a===null)return null;const h=new pm(this,a,t,n);return this._bindAction(h,l),this._addInactiveAction(h,o,r),h}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?Yr.findByName(n,e):e,a=r?r.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let l=0;l!==n;++l)t[l]._update(i,e,r,a);const o=this._bindings,c=this._nActiveBindings;for(let l=0;l!==c;++l)o[l].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const a=r.knownActions;for(let o=0,c=a.length;o!==c;++o){const l=a[o];this._deactivateAction(l);const h=l._cacheIndex,u=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(l)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const o=n[a].actionByRoot,c=o[t];c!==void 0&&(this._deactivateAction(c),this._removeInactiveAction(c))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const a in r){const o=r[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Cb extends bu{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new ja(null,e,t,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Ku{constructor(e){this.value=e}clone(){return new Ku(this.value.clone===void 0?this.value:this.value.clone())}}let Sb=0;class Ib extends Ei{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:Sb++}),this.name="",this.usage=Oa,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const r=Array.isArray(t[n])?t[n]:[t[n]];for(let a=0;a<r.length;a++)this.uniforms.push(r[a].clone())}return this}clone(){return new this.constructor().copy(this)}}class Mb extends eo{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class Tb{constructor(e,t,n,i,r,a=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.normalized=a,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const tf=new Ve;class Ju{constructor(e,t,n=0,i=1/0){this.ray=new Jr(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new al,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return tf.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(tf),this}intersectObject(e,t=!0,n=[]){return Jh(e,this,n,t),n.sort(nf),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)Jh(e[i],this,n,t);return n.sort(nf),n}}function nf(s,e){return s.distance-e.distance}function Jh(s,e,t,n){let i=!0;if(s.layers.test(e.layers)&&s.raycast(e,t)===!1&&(i=!1),i===!0&&n===!0){const r=s.children;for(let a=0,o=r.length;a<o;a++)Jh(r[a],e,t,!0)}}class Bb{constructor(){this._previousTime=0,this._currentTime=0,this._startTime=performance.now(),this._delta=0,this._elapsed=0,this._timescale=1,this._document=null,this._pageVisibilityHandler=null}connect(e){this._document=e,e.hidden!==void 0&&(this._pageVisibilityHandler=Rb.bind(this),e.addEventListener("visibilitychange",this._pageVisibilityHandler,!1))}disconnect(){this._pageVisibilityHandler!==null&&(this._document.removeEventListener("visibilitychange",this._pageVisibilityHandler),this._pageVisibilityHandler=null),this._document=null}getDelta(){return this._delta/1e3}getElapsed(){return this._elapsed/1e3}getTimescale(){return this._timescale}setTimescale(e){return this._timescale=e,this}reset(){return this._currentTime=performance.now()-this._startTime,this}dispose(){this.disconnect()}update(e){return this._pageVisibilityHandler!==null&&this._document.hidden===!0?this._delta=0:(this._previousTime=this._currentTime,this._currentTime=(e!==void 0?e:performance.now())-this._startTime,this._delta=(this._currentTime-this._previousTime)*this._timescale,this._elapsed+=this._delta),this}}function Rb(){this._document.hidden===!1&&this.reset()}class Db{constructor(e=1,t=0,n=0){this.radius=e,this.phi=t,this.theta=n}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=tt(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(tt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class Lb{constructor(e=1,t=0,n=0){this.radius=e,this.theta=t,this.y=n}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}class ju{constructor(e,t,n,i){ju.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){const r=this.elements;return r[0]=e,r[2]=t,r[1]=n,r[3]=i,this}}const sf=new ie;class Pb{constructor(e=new ie(1/0,1/0),t=new ie(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=sf.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,sf).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const rf=new S,Yo=new S,gr=new S,yr=new S,ch=new S,Fb=new S,Ub=new S;class mm{constructor(e=new S,t=new S){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){rf.subVectors(e,this.start),Yo.subVectors(this.end,this.start);const n=Yo.dot(Yo);let r=Yo.dot(rf)/n;return t&&(r=tt(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}distanceSqToLine3(e,t=Fb,n=Ub){const i=10000000000000001e-32;let r,a;const o=this.start,c=e.start,l=this.end,h=e.end;gr.subVectors(l,o),yr.subVectors(h,c),ch.subVectors(o,c);const u=gr.dot(gr),d=yr.dot(yr),f=yr.dot(ch);if(u<=i&&d<=i)return t.copy(o),n.copy(c),t.sub(n),t.dot(t);if(u<=i)r=0,a=f/d,a=tt(a,0,1);else{const p=gr.dot(ch);if(d<=i)a=0,r=tt(-p/u,0,1);else{const g=gr.dot(yr),m=u*d-g*g;m!==0?r=tt((g*f-p*d)/m,0,1):r=0,a=(g*r+f)/d,a<0?(a=0,r=tt(-p/u,0,1)):a>1&&(a=1,r=tt((g-p)/u,0,1))}}return t.copy(o).add(gr.multiplyScalar(r)),n.copy(c).add(yr.multiplyScalar(a)),t.sub(n),t.dot(t)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const af=new S;class Nb extends lt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new Je,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,o=1,c=32;a<c;a++,o++){const l=a/c*Math.PI*2,h=o/c*Math.PI*2;i.push(Math.cos(l),Math.sin(l),1,Math.cos(h),Math.sin(h),1)}n.setAttribute("position",new Ge(i,3));const r=new dn({fog:!1,toneMapped:!1});this.cone=new di(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),af.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(af),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ji=new S,Ko=new Ve,lh=new Ve;class Ob extends di{constructor(e){const t=gm(e),n=new Je,i=[],r=[];for(let l=0;l<t.length;l++){const h=t[l];h.parent&&h.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(0,0,0),r.push(0,0,0))}n.setAttribute("position",new Ge(i,3)),n.setAttribute("color",new Ge(r,3));const a=new dn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,a),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;const o=new ue(255),c=new ue(65280);this.setColors(o,c)}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");lh.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<t.length;r++){const o=t[r];o.parent&&o.parent.isBone&&(Ko.multiplyMatrices(lh,o.matrixWorld),ji.setFromMatrixPosition(Ko),i.setXYZ(a,ji.x,ji.y,ji.z),Ko.multiplyMatrices(lh,o.parent.matrixWorld),ji.setFromMatrixPosition(Ko),i.setXYZ(a+1,ji.x,ji.y,ji.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}setColors(e,t){const i=this.geometry.getAttribute("color");for(let r=0;r<i.count;r+=2)i.setXYZ(r,e.r,e.g,e.b),i.setXYZ(r+1,t.r,t.g,t.b);return i.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}function gm(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push(...gm(s.children[t]));return e}class kb extends Be{constructor(e,t,n){const i=new Gn(t,4,2),r=new yn({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Qb=new S,of=new ue,cf=new ue;class Gb extends lt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new ao(t);i.rotateY(Math.PI*.5),this.material=new yn({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),a=new Float32Array(r.count*3);i.setAttribute("color",new ot(a,3)),this.add(new Be(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");of.copy(this.light.color),cf.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?of:cf;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(Qb.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Hb extends di{constructor(e=10,t=10,n=4473924,i=8947848){n=new ue(n),i=new ue(i);const r=t/2,a=e/t,o=e/2,c=[],l=[];for(let d=0,f=0,p=-o;d<=t;d++,p+=a){c.push(-o,0,p,o,0,p),c.push(p,0,-o,p,0,o);const g=d===r?n:i;g.toArray(l,f),f+=3,g.toArray(l,f),f+=3,g.toArray(l,f),f+=3,g.toArray(l,f),f+=3}const h=new Je;h.setAttribute("position",new Ge(c,3)),h.setAttribute("color",new Ge(l,3));const u=new dn({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class zb extends di{constructor(e=10,t=16,n=8,i=64,r=4473924,a=8947848){r=new ue(r),a=new ue(a);const o=[],c=[];if(t>1)for(let u=0;u<t;u++){const d=u/t*(Math.PI*2),f=Math.sin(d)*e,p=Math.cos(d)*e;o.push(0,0,0),o.push(f,0,p);const g=u&1?r:a;c.push(g.r,g.g,g.b),c.push(g.r,g.g,g.b)}for(let u=0;u<n;u++){const d=u&1?r:a,f=e-e/n*u;for(let p=0;p<i;p++){let g=p/i*(Math.PI*2),m=Math.sin(g)*f,A=Math.cos(g)*f;o.push(m,0,A),c.push(d.r,d.g,d.b),g=(p+1)/i*(Math.PI*2),m=Math.sin(g)*f,A=Math.cos(g)*f,o.push(m,0,A),c.push(d.r,d.g,d.b)}}const l=new Je;l.setAttribute("position",new Ge(o,3)),l.setAttribute("color",new Ge(c,3));const h=new dn({vertexColors:!0,toneMapped:!1});super(l,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const lf=new S,Jo=new S,hf=new S;class Vb extends lt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new Je;i.setAttribute("position",new Ge([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new dn({fog:!1,toneMapped:!1});this.lightPlane=new _i(i,r),this.add(this.lightPlane),i=new Je,i.setAttribute("position",new Ge([0,0,0,0,0,1],3)),this.targetLine=new _i(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),lf.setFromMatrixPosition(this.light.matrixWorld),Jo.setFromMatrixPosition(this.light.target.matrixWorld),hf.subVectors(Jo,lf),this.lightPlane.lookAt(Jo),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Jo),this.targetLine.scale.z=hf.length()}}const jo=new S,Xt=new ol;class Wb extends di{constructor(e){const t=new Je,n=new dn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],a={};o("n1","n2"),o("n2","n4"),o("n4","n3"),o("n3","n1"),o("f1","f2"),o("f2","f4"),o("f4","f3"),o("f3","f1"),o("n1","f1"),o("n2","f2"),o("n3","f3"),o("n4","f4"),o("p","n1"),o("p","n2"),o("p","n3"),o("p","n4"),o("u1","u2"),o("u2","u3"),o("u3","u1"),o("c","t"),o("p","c"),o("cn1","cn2"),o("cn3","cn4"),o("cf1","cf2"),o("cf3","cf4");function o(p,g){c(p),c(g)}function c(p){i.push(0,0,0),r.push(0,0,0),a[p]===void 0&&(a[p]=[]),a[p].push(i.length/3-1)}t.setAttribute("position",new Ge(i,3)),t.setAttribute("color",new Ge(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const l=new ue(16755200),h=new ue(16711680),u=new ue(43775),d=new ue(16777215),f=new ue(3355443);this.setColors(l,h,u,d,f)}setColors(e,t,n,i,r){const o=this.geometry.getAttribute("color");return o.setXYZ(0,e.r,e.g,e.b),o.setXYZ(1,e.r,e.g,e.b),o.setXYZ(2,e.r,e.g,e.b),o.setXYZ(3,e.r,e.g,e.b),o.setXYZ(4,e.r,e.g,e.b),o.setXYZ(5,e.r,e.g,e.b),o.setXYZ(6,e.r,e.g,e.b),o.setXYZ(7,e.r,e.g,e.b),o.setXYZ(8,e.r,e.g,e.b),o.setXYZ(9,e.r,e.g,e.b),o.setXYZ(10,e.r,e.g,e.b),o.setXYZ(11,e.r,e.g,e.b),o.setXYZ(12,e.r,e.g,e.b),o.setXYZ(13,e.r,e.g,e.b),o.setXYZ(14,e.r,e.g,e.b),o.setXYZ(15,e.r,e.g,e.b),o.setXYZ(16,e.r,e.g,e.b),o.setXYZ(17,e.r,e.g,e.b),o.setXYZ(18,e.r,e.g,e.b),o.setXYZ(19,e.r,e.g,e.b),o.setXYZ(20,e.r,e.g,e.b),o.setXYZ(21,e.r,e.g,e.b),o.setXYZ(22,e.r,e.g,e.b),o.setXYZ(23,e.r,e.g,e.b),o.setXYZ(24,t.r,t.g,t.b),o.setXYZ(25,t.r,t.g,t.b),o.setXYZ(26,t.r,t.g,t.b),o.setXYZ(27,t.r,t.g,t.b),o.setXYZ(28,t.r,t.g,t.b),o.setXYZ(29,t.r,t.g,t.b),o.setXYZ(30,t.r,t.g,t.b),o.setXYZ(31,t.r,t.g,t.b),o.setXYZ(32,n.r,n.g,n.b),o.setXYZ(33,n.r,n.g,n.b),o.setXYZ(34,n.r,n.g,n.b),o.setXYZ(35,n.r,n.g,n.b),o.setXYZ(36,n.r,n.g,n.b),o.setXYZ(37,n.r,n.g,n.b),o.setXYZ(38,i.r,i.g,i.b),o.setXYZ(39,i.r,i.g,i.b),o.setXYZ(40,r.r,r.g,r.b),o.setXYZ(41,r.r,r.g,r.b),o.setXYZ(42,r.r,r.g,r.b),o.setXYZ(43,r.r,r.g,r.b),o.setXYZ(44,r.r,r.g,r.b),o.setXYZ(45,r.r,r.g,r.b),o.setXYZ(46,r.r,r.g,r.b),o.setXYZ(47,r.r,r.g,r.b),o.setXYZ(48,r.r,r.g,r.b),o.setXYZ(49,r.r,r.g,r.b),o.needsUpdate=!0,this}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;let r,a;if(Xt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),this.camera.reversedDepth===!0)r=1,a=0;else if(this.camera.coordinateSystem===Kn)r=-1,a=1;else if(this.camera.coordinateSystem===Vr)r=0,a=1;else throw new Error("THREE.CameraHelper.update(): Invalid coordinate system: "+this.camera.coordinateSystem);Kt("c",t,e,Xt,0,0,r),Kt("t",t,e,Xt,0,0,a),Kt("n1",t,e,Xt,-n,-i,r),Kt("n2",t,e,Xt,n,-i,r),Kt("n3",t,e,Xt,-n,i,r),Kt("n4",t,e,Xt,n,i,r),Kt("f1",t,e,Xt,-n,-i,a),Kt("f2",t,e,Xt,n,-i,a),Kt("f3",t,e,Xt,-n,i,a),Kt("f4",t,e,Xt,n,i,a),Kt("u1",t,e,Xt,n*.7,i*1.1,r),Kt("u2",t,e,Xt,-n*.7,i*1.1,r),Kt("u3",t,e,Xt,0,i*2,r),Kt("cf1",t,e,Xt,-n,0,a),Kt("cf2",t,e,Xt,n,0,a),Kt("cf3",t,e,Xt,0,-i,a),Kt("cf4",t,e,Xt,0,i,a),Kt("cn1",t,e,Xt,-n,0,r),Kt("cn2",t,e,Xt,n,0,r),Kt("cn3",t,e,Xt,0,-i,r),Kt("cn4",t,e,Xt,0,i,r),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Kt(s,e,t,n,i,r,a){jo.set(i,r,a).unproject(n);const o=e[s];if(o!==void 0){const c=t.getAttribute("position");for(let l=0,h=o.length;l<h;l++)c.setXYZ(o[l],jo.x,jo.y,jo.z)}}const Zo=new $t;class qb extends di{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new Je;r.setIndex(new ot(n,1)),r.setAttribute("position",new ot(i,3)),super(r,new dn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Zo.setFromObject(this.object),Zo.isEmpty())return;const e=Zo.min,t=Zo.max,n=this.geometry.attributes.position,i=n.array;i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=e.x,i[4]=t.y,i[5]=t.z,i[6]=e.x,i[7]=e.y,i[8]=t.z,i[9]=t.x,i[10]=e.y,i[11]=t.z,i[12]=t.x,i[13]=t.y,i[14]=e.z,i[15]=e.x,i[16]=t.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=t.x,i[22]=e.y,i[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Xb extends di{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new Je;r.setIndex(new ot(n,1)),r.setAttribute("position",new Ge(i,3)),super(r,new dn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class Yb extends _i{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new Je;a.setAttribute("position",new Ge(r,3)),a.computeBoundingSphere(),super(a,new dn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const o=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],c=new Je;c.setAttribute("position",new Ge(o,3)),c.computeBoundingSphere(),this.add(new Be(c,new yn({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const uf=new S;let $o,hh;class Kb extends lt{constructor(e=new S(0,0,1),t=new S(0,0,0),n=1,i=16776960,r=n*.2,a=r*.2){super(),this.type="ArrowHelper",$o===void 0&&($o=new Je,$o.setAttribute("position",new Ge([0,0,0,0,1,0],3)),hh=new Hi(.5,1,5,1),hh.translate(0,-.5,0)),this.position.copy(t),this.line=new _i($o,new dn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Be(hh,new yn({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{uf.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(uf,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Jb extends di{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Je;i.setAttribute("position",new Ge(t,3)),i.setAttribute("color",new Ge(n,3));const r=new dn({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new ue,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class jb{constructor(){this.type="ShapePath",this.color=new ue,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Kc,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,a){return this.currentPath.bezierCurveTo(e,t,n,i,r,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(A){const y=[];for(let x=0,b=A.length;x<b;x++){const _=A[x],C=new Gs;C.curves=_.curves,y.push(C)}return y}function n(A,y){const x=y.length;let b=!1;for(let _=x-1,C=0;C<x;_=C++){let v=y[_],I=y[C],E=I.x-v.x,w=I.y-v.y;if(Math.abs(w)>Number.EPSILON){if(w<0&&(v=y[C],E=-E,I=y[_],w=-w),A.y<v.y||A.y>I.y)continue;if(A.y===v.y){if(A.x===v.x)return!0}else{const T=w*(A.x-v.x)-E*(A.y-v.y);if(T===0)return!0;if(T<0)continue;b=!b}}else{if(A.y!==v.y)continue;if(I.x<=A.x&&A.x<=v.x||v.x<=A.x&&A.x<=I.x)return!0}}return b}const i=li.isClockWise,r=this.subPaths;if(r.length===0)return[];let a,o,c;const l=[];if(r.length===1)return o=r[0],c=new Gs,c.curves=o.curves,l.push(c),l;let h=!i(r[0].getPoints());h=e?!h:h;const u=[],d=[];let f=[],p=0,g;d[p]=void 0,f[p]=[];for(let A=0,y=r.length;A<y;A++)o=r[A],g=o.getPoints(),a=i(g),a=e?!a:a,a?(!h&&d[p]&&p++,d[p]={s:new Gs,p:g},d[p].s.curves=o.curves,h&&p++,f[p]=[]):f[p].push({h:o,p:g[0]});if(!d[0])return t(r);if(d.length>1){let A=!1,y=0;for(let x=0,b=d.length;x<b;x++)u[x]=[];for(let x=0,b=d.length;x<b;x++){const _=f[x];for(let C=0;C<_.length;C++){const v=_[C];let I=!0;for(let E=0;E<d.length;E++)n(v.p,d[E].p)&&(x!==E&&y++,I?(I=!1,u[E].push(v)):A=!0);I&&u[x].push(v)}}y>0&&A===!1&&(f=u)}let m;for(let A=0,y=d.length;A<y;A++){c=d[A].s,l.push(c),m=f[A];for(let x=0,b=m.length;x<b;x++)c.holes.push(m[x].h)}return l}}class Zb extends Ei{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function $b(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function ex(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function tx(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function jh(s,e,t,n){const i=nx(n);switch(t){case pu:return s*e;case Pi:return s*e/i.components*i.byteLength;case Ja:return s*e/i.components*i.byteLength;case es:return s*e*2/i.components*i.byteLength;case nl:return s*e*2/i.components*i.byteLength;case Ur:return s*e*3/i.components*i.byteLength;case Vt:return s*e*4/i.components*i.byteLength;case il:return s*e*4/i.components*i.byteLength;case Ns:case ns:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case Os:case Tr:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Rc:case kr:return Math.max(s,16)*Math.max(e,8)/4;case Ta:case zs:return Math.max(s,8)*Math.max(e,8)/2;case Ba:case Qr:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case Gr:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case is:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Dc:return Math.floor((s+4)/5)*Math.floor((e+3)/4)*16;case Lc:return Math.floor((s+4)/5)*Math.floor((e+4)/5)*16;case Pc:return Math.floor((s+5)/6)*Math.floor((e+4)/5)*16;case ks:return Math.floor((s+5)/6)*Math.floor((e+5)/6)*16;case Fc:return Math.floor((s+7)/8)*Math.floor((e+4)/5)*16;case Uc:return Math.floor((s+7)/8)*Math.floor((e+5)/6)*16;case Nc:return Math.floor((s+7)/8)*Math.floor((e+7)/8)*16;case Oc:return Math.floor((s+9)/10)*Math.floor((e+4)/5)*16;case kc:return Math.floor((s+9)/10)*Math.floor((e+5)/6)*16;case Qc:return Math.floor((s+9)/10)*Math.floor((e+7)/8)*16;case Gc:return Math.floor((s+9)/10)*Math.floor((e+9)/10)*16;case Hc:return Math.floor((s+11)/12)*Math.floor((e+9)/10)*16;case zc:return Math.floor((s+11)/12)*Math.floor((e+11)/12)*16;case Vs:case Vc:case Ra:return Math.ceil(s/4)*Math.ceil(e/4)*16;case Da:case La:return Math.ceil(s/4)*Math.ceil(e/4)*8;case Pa:case Fa:return Math.ceil(s/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function nx(s){switch(s){case ut:case du:return{byteLength:1,components:1};case Pr:case fu:case qn:return{byteLength:2,components:1};case el:case tl:return{byteLength:2,components:4};case Gi:case $c:case en:return{byteLength:4,components:1};case Ya:case Ka:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}class ix{static contain(e,t){return $b(e,t)}static cover(e,t){return ex(e,t)}static fill(e){return tx(e)}static getByteLength(e,t,n,i){return jh(e,t,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:jc}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=jc);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function ym(){let s=null,e=!1,t=null,n=null;function i(r,a){t(r,a),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function sx(s){const e=new WeakMap;function t(o,c){const l=o.array,h=o.usage,u=l.byteLength,d=s.createBuffer();s.bindBuffer(c,d),s.bufferData(c,l,h),o.onUploadCallback();let f;if(l instanceof Float32Array)f=s.FLOAT;else if(typeof Float16Array<"u"&&l instanceof Float16Array)f=s.HALF_FLOAT;else if(l instanceof Uint16Array)o.isFloat16BufferAttribute?f=s.HALF_FLOAT:f=s.UNSIGNED_SHORT;else if(l instanceof Int16Array)f=s.SHORT;else if(l instanceof Uint32Array)f=s.UNSIGNED_INT;else if(l instanceof Int32Array)f=s.INT;else if(l instanceof Int8Array)f=s.BYTE;else if(l instanceof Uint8Array)f=s.UNSIGNED_BYTE;else if(l instanceof Uint8ClampedArray)f=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+l);return{buffer:d,type:f,bytesPerElement:l.BYTES_PER_ELEMENT,version:o.version,size:u}}function n(o,c,l){const h=c.array,u=c.updateRanges;if(s.bindBuffer(l,o),u.length===0)s.bufferSubData(l,0,h);else{u.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<u.length;f++){const p=u[d],g=u[f];g.start<=p.start+p.count+1?p.count=Math.max(p.count,g.start+g.count-p.start):(++d,u[d]=g)}u.length=d+1;for(let f=0,p=u.length;f<p;f++){const g=u[f];s.bufferSubData(l,g.start*h.BYTES_PER_ELEMENT,h,g.start,g.count)}c.clearUpdateRanges()}c.onUploadCallback()}function i(o){return o.isInterleavedBufferAttribute&&(o=o.data),e.get(o)}function r(o){o.isInterleavedBufferAttribute&&(o=o.data);const c=e.get(o);c&&(s.deleteBuffer(c.buffer),e.delete(o))}function a(o,c){if(o.isInterleavedBufferAttribute&&(o=o.data),o.isGLBufferAttribute){const h=e.get(o);(!h||h.version<o.version)&&e.set(o,{buffer:o.buffer,type:o.type,bytesPerElement:o.elementSize,version:o.version});return}const l=e.get(o);if(l===void 0)e.set(o,t(o,c));else if(l.version<o.version){if(l.size!==o.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(l.buffer,o,c),l.version=o.version}}return{get:i,remove:r,update:a}}var rx=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,ax=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,ox=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,cx=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,lx=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,hx=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,ux=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,dx=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,fx=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,px=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,Ax=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,mx=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,gx=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,yx=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,bx=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,xx=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,_x=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Ex=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,vx=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,wx=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Cx=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Sx=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,Ix=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,Mx=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Tx=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Bx=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Rx=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Dx=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,Lx=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Px=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Fx="gl_FragColor = linearToOutputTexel( gl_FragColor );",Ux=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Nx=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Ox=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,kx=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Qx=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Gx=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Hx=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,zx=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Vx=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Wx=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,qx=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Xx=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Yx=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Kx=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Jx=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,jx=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,Zx=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,$x=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,e_=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,t_=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,n_=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,i_=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,s_=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,r_=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,a_=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,o_=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,c_=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,l_=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,h_=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,u_=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,d_=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,f_=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,p_=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,A_=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,m_=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,g_=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,y_=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,b_=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,x_=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,__=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,E_=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,v_=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,w_=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,C_=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,S_=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,I_=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,M_=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,T_=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,B_=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,R_=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,D_=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,L_=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,P_=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,F_=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,U_=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,N_=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,O_=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,k_=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Q_=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow( sampler2D shadow, vec2 uv, float compare ) {
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare, distribution.x );
		#endif
		if ( hard_shadow != 1.0 ) {
			float distance = compare - distribution.x;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,G_=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,H_=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,z_=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,V_=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,W_=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,q_=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,X_=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Y_=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,K_=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,J_=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,j_=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Z_=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,$_=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,eE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,tE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,nE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,iE=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const sE=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,rE=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,aE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,oE=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,cE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,lE=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,hE=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,uE=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSED_DEPTH_BUFFER
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,dE=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,fE=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,pE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,AE=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,mE=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,gE=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,yE=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,bE=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xE=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,_E=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,EE=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,vE=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wE=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,CE=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,SE=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,IE=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ME=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,TE=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,BE=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,RE=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,DE=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,LE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,PE=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,FE=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,UE=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,NE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ht={alphahash_fragment:rx,alphahash_pars_fragment:ax,alphamap_fragment:ox,alphamap_pars_fragment:cx,alphatest_fragment:lx,alphatest_pars_fragment:hx,aomap_fragment:ux,aomap_pars_fragment:dx,batching_pars_vertex:fx,batching_vertex:px,begin_vertex:Ax,beginnormal_vertex:mx,bsdfs:gx,iridescence_fragment:yx,bumpmap_pars_fragment:bx,clipping_planes_fragment:xx,clipping_planes_pars_fragment:_x,clipping_planes_pars_vertex:Ex,clipping_planes_vertex:vx,color_fragment:wx,color_pars_fragment:Cx,color_pars_vertex:Sx,color_vertex:Ix,common:Mx,cube_uv_reflection_fragment:Tx,defaultnormal_vertex:Bx,displacementmap_pars_vertex:Rx,displacementmap_vertex:Dx,emissivemap_fragment:Lx,emissivemap_pars_fragment:Px,colorspace_fragment:Fx,colorspace_pars_fragment:Ux,envmap_fragment:Nx,envmap_common_pars_fragment:Ox,envmap_pars_fragment:kx,envmap_pars_vertex:Qx,envmap_physical_pars_fragment:jx,envmap_vertex:Gx,fog_vertex:Hx,fog_pars_vertex:zx,fog_fragment:Vx,fog_pars_fragment:Wx,gradientmap_pars_fragment:qx,lightmap_pars_fragment:Xx,lights_lambert_fragment:Yx,lights_lambert_pars_fragment:Kx,lights_pars_begin:Jx,lights_toon_fragment:Zx,lights_toon_pars_fragment:$x,lights_phong_fragment:e_,lights_phong_pars_fragment:t_,lights_physical_fragment:n_,lights_physical_pars_fragment:i_,lights_fragment_begin:s_,lights_fragment_maps:r_,lights_fragment_end:a_,logdepthbuf_fragment:o_,logdepthbuf_pars_fragment:c_,logdepthbuf_pars_vertex:l_,logdepthbuf_vertex:h_,map_fragment:u_,map_pars_fragment:d_,map_particle_fragment:f_,map_particle_pars_fragment:p_,metalnessmap_fragment:A_,metalnessmap_pars_fragment:m_,morphinstance_vertex:g_,morphcolor_vertex:y_,morphnormal_vertex:b_,morphtarget_pars_vertex:x_,morphtarget_vertex:__,normal_fragment_begin:E_,normal_fragment_maps:v_,normal_pars_fragment:w_,normal_pars_vertex:C_,normal_vertex:S_,normalmap_pars_fragment:I_,clearcoat_normal_fragment_begin:M_,clearcoat_normal_fragment_maps:T_,clearcoat_pars_fragment:B_,iridescence_pars_fragment:R_,opaque_fragment:D_,packing:L_,premultiplied_alpha_fragment:P_,project_vertex:F_,dithering_fragment:U_,dithering_pars_fragment:N_,roughnessmap_fragment:O_,roughnessmap_pars_fragment:k_,shadowmap_pars_fragment:Q_,shadowmap_pars_vertex:G_,shadowmap_vertex:H_,shadowmask_pars_fragment:z_,skinbase_vertex:V_,skinning_pars_vertex:W_,skinning_vertex:q_,skinnormal_vertex:X_,specularmap_fragment:Y_,specularmap_pars_fragment:K_,tonemapping_fragment:J_,tonemapping_pars_fragment:j_,transmission_fragment:Z_,transmission_pars_fragment:$_,uv_pars_fragment:eE,uv_pars_vertex:tE,uv_vertex:nE,worldpos_vertex:iE,background_vert:sE,background_frag:rE,backgroundCube_vert:aE,backgroundCube_frag:oE,cube_vert:cE,cube_frag:lE,depth_vert:hE,depth_frag:uE,distanceRGBA_vert:dE,distanceRGBA_frag:fE,equirect_vert:pE,equirect_frag:AE,linedashed_vert:mE,linedashed_frag:gE,meshbasic_vert:yE,meshbasic_frag:bE,meshlambert_vert:xE,meshlambert_frag:_E,meshmatcap_vert:EE,meshmatcap_frag:vE,meshnormal_vert:wE,meshnormal_frag:CE,meshphong_vert:SE,meshphong_frag:IE,meshphysical_vert:ME,meshphysical_frag:TE,meshtoon_vert:BE,meshtoon_frag:RE,points_vert:DE,points_frag:LE,shadow_vert:PE,shadow_frag:FE,sprite_vert:UE,sprite_frag:NE},Te={common:{diffuse:{value:new ue(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new at},alphaMap:{value:null},alphaMapTransform:{value:new at},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new at}},envmap:{envMap:{value:null},envMapRotation:{value:new at},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new at}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new at}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new at},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new at},normalScale:{value:new ie(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new at},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new at}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new at}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new at}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ue(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ue(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new at},alphaTest:{value:0},uvTransform:{value:new at}},sprite:{diffuse:{value:new ue(16777215)},opacity:{value:1},center:{value:new ie(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new at},alphaMap:{value:null},alphaMapTransform:{value:new at},alphaTest:{value:0}}},oi={basic:{uniforms:Tn([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.fog]),vertexShader:ht.meshbasic_vert,fragmentShader:ht.meshbasic_frag},lambert:{uniforms:Tn([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,Te.lights,{emissive:{value:new ue(0)}}]),vertexShader:ht.meshlambert_vert,fragmentShader:ht.meshlambert_frag},phong:{uniforms:Tn([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,Te.lights,{emissive:{value:new ue(0)},specular:{value:new ue(1118481)},shininess:{value:30}}]),vertexShader:ht.meshphong_vert,fragmentShader:ht.meshphong_frag},standard:{uniforms:Tn([Te.common,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.roughnessmap,Te.metalnessmap,Te.fog,Te.lights,{emissive:{value:new ue(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag},toon:{uniforms:Tn([Te.common,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.gradientmap,Te.fog,Te.lights,{emissive:{value:new ue(0)}}]),vertexShader:ht.meshtoon_vert,fragmentShader:ht.meshtoon_frag},matcap:{uniforms:Tn([Te.common,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,{matcap:{value:null}}]),vertexShader:ht.meshmatcap_vert,fragmentShader:ht.meshmatcap_frag},points:{uniforms:Tn([Te.points,Te.fog]),vertexShader:ht.points_vert,fragmentShader:ht.points_frag},dashed:{uniforms:Tn([Te.common,Te.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ht.linedashed_vert,fragmentShader:ht.linedashed_frag},depth:{uniforms:Tn([Te.common,Te.displacementmap]),vertexShader:ht.depth_vert,fragmentShader:ht.depth_frag},normal:{uniforms:Tn([Te.common,Te.bumpmap,Te.normalmap,Te.displacementmap,{opacity:{value:1}}]),vertexShader:ht.meshnormal_vert,fragmentShader:ht.meshnormal_frag},sprite:{uniforms:Tn([Te.sprite,Te.fog]),vertexShader:ht.sprite_vert,fragmentShader:ht.sprite_frag},background:{uniforms:{uvTransform:{value:new at},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ht.background_vert,fragmentShader:ht.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new at}},vertexShader:ht.backgroundCube_vert,fragmentShader:ht.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ht.cube_vert,fragmentShader:ht.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ht.equirect_vert,fragmentShader:ht.equirect_frag},distanceRGBA:{uniforms:Tn([Te.common,Te.displacementmap,{referencePosition:{value:new S},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ht.distanceRGBA_vert,fragmentShader:ht.distanceRGBA_frag},shadow:{uniforms:Tn([Te.lights,Te.fog,{color:{value:new ue(0)},opacity:{value:1}}]),vertexShader:ht.shadow_vert,fragmentShader:ht.shadow_frag}};oi.physical={uniforms:Tn([oi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new at},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new at},clearcoatNormalScale:{value:new ie(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new at},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new at},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new at},sheen:{value:0},sheenColor:{value:new ue(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new at},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new at},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new at},transmissionSamplerSize:{value:new ie},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new at},attenuationDistance:{value:0},attenuationColor:{value:new ue(0)},specularColor:{value:new ue(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new at},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new at},anisotropyVector:{value:new ie},anisotropyMap:{value:null},anisotropyMapTransform:{value:new at}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag};const ec={r:0,b:0,g:0},ws=new zn,OE=new Ve;function kE(s,e,t,n,i,r,a){const o=new ue(0);let c=r===!0?0:1,l,h,u=null,d=0,f=null;function p(x){let b=x.isScene===!0?x.background:null;return b&&b.isTexture&&(b=(x.backgroundBlurriness>0?t:e).get(b)),b}function g(x){let b=!1;const _=p(x);_===null?A(o,c):_&&_.isColor&&(A(_,1),b=!0);const C=s.xr.getEnvironmentBlendMode();C==="additive"?n.buffers.color.setClear(0,0,0,1,a):C==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(s.autoClear||b)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function m(x,b){const _=p(b);_&&(_.isCubeTexture||_.mapping===Kr)?(h===void 0&&(h=new Be(new Ut(1,1,1),new jn({name:"BackgroundCubeMaterial",uniforms:qr(oi.backgroundCube.uniforms),vertexShader:oi.backgroundCube.vertexShader,fragmentShader:oi.backgroundCube.fragmentShader,side:bn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(C,v,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(h)),ws.copy(b.backgroundRotation),ws.x*=-1,ws.y*=-1,ws.z*=-1,_.isCubeTexture&&_.isRenderTargetTexture===!1&&(ws.y*=-1,ws.z*=-1),h.material.uniforms.envMap.value=_,h.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=b.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(OE.makeRotationFromEuler(ws)),h.material.toneMapped=dt.getTransfer(_.colorSpace)!==Pt,(u!==_||d!==_.version||f!==s.toneMapping)&&(h.material.needsUpdate=!0,u=_,d=_.version,f=s.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null)):_&&_.isTexture&&(l===void 0&&(l=new Be(new ni(2,2),new jn({name:"BackgroundMaterial",uniforms:qr(oi.background.uniforms),vertexShader:oi.background.vertexShader,fragmentShader:oi.background.fragmentShader,side:hi,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=_,l.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,l.material.toneMapped=dt.getTransfer(_.colorSpace)!==Pt,_.matrixAutoUpdate===!0&&_.updateMatrix(),l.material.uniforms.uvTransform.value.copy(_.matrix),(u!==_||d!==_.version||f!==s.toneMapping)&&(l.material.needsUpdate=!0,u=_,d=_.version,f=s.toneMapping),l.layers.enableAll(),x.unshift(l,l.geometry,l.material,0,0,null))}function A(x,b){x.getRGB(ec,EA(s)),n.buffers.color.setClear(ec.r,ec.g,ec.b,b,a)}function y(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),l!==void 0&&(l.geometry.dispose(),l.material.dispose(),l=void 0)}return{getClearColor:function(){return o},setClearColor:function(x,b=1){o.set(x),c=b,A(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(x){c=x,A(o,c)},render:g,addToRenderList:m,dispose:y}}function QE(s,e){const t=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=d(null);let r=i,a=!1;function o(w,T,R,U,O){let N=!1;const k=u(U,R,T);r!==k&&(r=k,l(r.object)),N=f(w,U,R,O),N&&p(w,U,R,O),O!==null&&e.update(O,s.ELEMENT_ARRAY_BUFFER),(N||a)&&(a=!1,b(w,T,R,U),O!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e.get(O).buffer))}function c(){return s.createVertexArray()}function l(w){return s.bindVertexArray(w)}function h(w){return s.deleteVertexArray(w)}function u(w,T,R){const U=R.wireframe===!0;let O=n[w.id];O===void 0&&(O={},n[w.id]=O);let N=O[T.id];N===void 0&&(N={},O[T.id]=N);let k=N[U];return k===void 0&&(k=d(c()),N[U]=k),k}function d(w){const T=[],R=[],U=[];for(let O=0;O<t;O++)T[O]=0,R[O]=0,U[O]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:T,enabledAttributes:R,attributeDivisors:U,object:w,attributes:{},index:null}}function f(w,T,R,U){const O=r.attributes,N=T.attributes;let k=0;const te=R.getAttributes();for(const Q in te)if(te[Q].location>=0){const ae=O[Q];let Ae=N[Q];if(Ae===void 0&&(Q==="instanceMatrix"&&w.instanceMatrix&&(Ae=w.instanceMatrix),Q==="instanceColor"&&w.instanceColor&&(Ae=w.instanceColor)),ae===void 0||ae.attribute!==Ae||Ae&&ae.data!==Ae.data)return!0;k++}return r.attributesNum!==k||r.index!==U}function p(w,T,R,U){const O={},N=T.attributes;let k=0;const te=R.getAttributes();for(const Q in te)if(te[Q].location>=0){let ae=N[Q];ae===void 0&&(Q==="instanceMatrix"&&w.instanceMatrix&&(ae=w.instanceMatrix),Q==="instanceColor"&&w.instanceColor&&(ae=w.instanceColor));const Ae={};Ae.attribute=ae,ae&&ae.data&&(Ae.data=ae.data),O[Q]=Ae,k++}r.attributes=O,r.attributesNum=k,r.index=U}function g(){const w=r.newAttributes;for(let T=0,R=w.length;T<R;T++)w[T]=0}function m(w){A(w,0)}function A(w,T){const R=r.newAttributes,U=r.enabledAttributes,O=r.attributeDivisors;R[w]=1,U[w]===0&&(s.enableVertexAttribArray(w),U[w]=1),O[w]!==T&&(s.vertexAttribDivisor(w,T),O[w]=T)}function y(){const w=r.newAttributes,T=r.enabledAttributes;for(let R=0,U=T.length;R<U;R++)T[R]!==w[R]&&(s.disableVertexAttribArray(R),T[R]=0)}function x(w,T,R,U,O,N,k){k===!0?s.vertexAttribIPointer(w,T,R,O,N):s.vertexAttribPointer(w,T,R,U,O,N)}function b(w,T,R,U){g();const O=U.attributes,N=R.getAttributes(),k=T.defaultAttributeValues;for(const te in N){const Q=N[te];if(Q.location>=0){let $=O[te];if($===void 0&&(te==="instanceMatrix"&&w.instanceMatrix&&($=w.instanceMatrix),te==="instanceColor"&&w.instanceColor&&($=w.instanceColor)),$!==void 0){const ae=$.normalized,Ae=$.itemSize,Ce=e.get($);if(Ce===void 0)continue;const Ie=Ce.buffer,je=Ce.type,$e=Ce.bytesPerElement,j=je===s.INT||je===s.UNSIGNED_INT||$.gpuType===$c;if($.isInterleavedBufferAttribute){const se=$.data,Me=se.stride,Qe=$.offset;if(se.isInstancedInterleavedBuffer){for(let Le=0;Le<Q.locationSize;Le++)A(Q.location+Le,se.meshPerAttribute);w.isInstancedMesh!==!0&&U._maxInstanceCount===void 0&&(U._maxInstanceCount=se.meshPerAttribute*se.count)}else for(let Le=0;Le<Q.locationSize;Le++)m(Q.location+Le);s.bindBuffer(s.ARRAY_BUFFER,Ie);for(let Le=0;Le<Q.locationSize;Le++)x(Q.location+Le,Ae/Q.locationSize,je,ae,Me*$e,(Qe+Ae/Q.locationSize*Le)*$e,j)}else{if($.isInstancedBufferAttribute){for(let se=0;se<Q.locationSize;se++)A(Q.location+se,$.meshPerAttribute);w.isInstancedMesh!==!0&&U._maxInstanceCount===void 0&&(U._maxInstanceCount=$.meshPerAttribute*$.count)}else for(let se=0;se<Q.locationSize;se++)m(Q.location+se);s.bindBuffer(s.ARRAY_BUFFER,Ie);for(let se=0;se<Q.locationSize;se++)x(Q.location+se,Ae/Q.locationSize,je,ae,Ae*$e,Ae/Q.locationSize*se*$e,j)}}else if(k!==void 0){const ae=k[te];if(ae!==void 0)switch(ae.length){case 2:s.vertexAttrib2fv(Q.location,ae);break;case 3:s.vertexAttrib3fv(Q.location,ae);break;case 4:s.vertexAttrib4fv(Q.location,ae);break;default:s.vertexAttrib1fv(Q.location,ae)}}}}y()}function _(){I();for(const w in n){const T=n[w];for(const R in T){const U=T[R];for(const O in U)h(U[O].object),delete U[O];delete T[R]}delete n[w]}}function C(w){if(n[w.id]===void 0)return;const T=n[w.id];for(const R in T){const U=T[R];for(const O in U)h(U[O].object),delete U[O];delete T[R]}delete n[w.id]}function v(w){for(const T in n){const R=n[T];if(R[w.id]===void 0)continue;const U=R[w.id];for(const O in U)h(U[O].object),delete U[O];delete R[w.id]}}function I(){E(),a=!0,r!==i&&(r=i,l(r.object))}function E(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:o,reset:I,resetDefaultState:E,dispose:_,releaseStatesOfGeometry:C,releaseStatesOfProgram:v,initAttributes:g,enableAttribute:m,disableUnusedAttributes:y}}function GE(s,e,t){let n;function i(l){n=l}function r(l,h){s.drawArrays(n,l,h),t.update(h,n,1)}function a(l,h,u){u!==0&&(s.drawArraysInstanced(n,l,h,u),t.update(h,n,u))}function o(l,h,u){if(u===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,l,0,h,0,u);let f=0;for(let p=0;p<u;p++)f+=h[p];t.update(f,n,1)}function c(l,h,u,d){if(u===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<l.length;p++)a(l[p],h[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(n,l,0,h,0,d,0,u);let p=0;for(let g=0;g<u;g++)p+=h[g]*d[g];t.update(p,n,1)}}this.setMode=i,this.render=r,this.renderInstances=a,this.renderMultiDraw=o,this.renderMultiDrawInstances=c}function HE(s,e,t,n){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const v=e.get("EXT_texture_filter_anisotropic");i=s.getParameter(v.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function a(v){return!(v!==Vt&&n.convert(v)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function o(v){const I=v===qn&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(v!==ut&&n.convert(v)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&v!==en&&!I)}function c(v){if(v==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";v="mediump"}return v==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=t.precision!==void 0?t.precision:"highp";const h=c(l);h!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",h,"instead."),l=h);const u=t.logarithmicDepthBuffer===!0,d=t.reversedDepthBuffer===!0&&e.has("EXT_clip_control"),f=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),p=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),g=s.getParameter(s.MAX_TEXTURE_SIZE),m=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),A=s.getParameter(s.MAX_VERTEX_ATTRIBS),y=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),x=s.getParameter(s.MAX_VARYING_VECTORS),b=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),_=p>0,C=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:c,textureFormatReadable:a,textureTypeReadable:o,precision:l,logarithmicDepthBuffer:u,reversedDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:g,maxCubemapSize:m,maxAttributes:A,maxVertexUniforms:y,maxVaryings:x,maxFragmentUniforms:b,vertexTextures:_,maxSamples:C}}function zE(s){const e=this;let t=null,n=0,i=!1,r=!1;const a=new On,o=new at,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const f=u.length!==0||d||n!==0||i;return i=d,n=u.length,f},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,d){t=h(u,d,0)},this.setState=function(u,d,f){const p=u.clippingPlanes,g=u.clipIntersection,m=u.clipShadows,A=s.get(u);if(!i||p===null||p.length===0||r&&!m)r?h(null):l();else{const y=r?0:n,x=y*4;let b=A.clippingState||null;c.value=b,b=h(p,d,x,f);for(let _=0;_!==x;++_)b[_]=t[_];A.clippingState=b,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=y}};function l(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(u,d,f,p){const g=u!==null?u.length:0;let m=null;if(g!==0){if(m=c.value,p!==!0||m===null){const A=f+g*4,y=d.matrixWorldInverse;o.getNormalMatrix(y),(m===null||m.length<A)&&(m=new Float32Array(A));for(let x=0,b=f;x!==g;++x,b+=4)a.copy(u[x]).applyMatrix4(y,o),a.normal.toArray(m,b),m[b+3]=a.constant}c.value=m,c.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,m}}function VE(s){let e=new WeakMap;function t(a,o){return o===Ia?a.mapping=Qi:o===Ma&&(a.mapping=rs),a}function n(a){if(a&&a.isTexture){const o=a.mapping;if(o===Ia||o===Ma)if(e.has(a)){const c=e.get(a).texture;return t(c,a.mapping)}else{const c=a.image;if(c&&c.height>0){const l=new wA(c.height);return l.fromEquirectangularTexture(s,a),e.set(a,l),a.addEventListener("dispose",i),t(l.texture,a.mapping)}else return null}}return a}function i(a){const o=a.target;o.removeEventListener("dispose",i);const c=e.get(o);c!==void 0&&(e.delete(o),c.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}const Ir=4,df=[.125,.215,.35,.446,.526,.582],Ts=20,uh=new lo,ff=new ue;let dh=null,fh=0,ph=0,Ah=!1;const Ms=(1+Math.sqrt(5))/2,br=1/Ms,pf=[new S(-Ms,br,0),new S(Ms,br,0),new S(-br,0,Ms),new S(br,0,Ms),new S(0,Ms,-br),new S(0,Ms,br),new S(-1,1,-1),new S(1,1,-1),new S(-1,1,1),new S(1,1,1)],WE=new S;class Zh{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100,r={}){const{size:a=256,position:o=WE}=r;dh=this._renderer.getRenderTarget(),fh=this._renderer.getActiveCubeFace(),ph=this._renderer.getActiveMipmapLevel(),Ah=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(a);const c=this._allocateTargets();return c.depthBuffer=!0,this._sceneToCubeUV(e,n,i,c,o),t>0&&this._blur(c,0,0,t),this._applyPMREM(c),this._cleanup(c),c}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=gf(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=mf(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(dh,fh,ph),this._renderer.xr.enabled=Ah,e.scissorTest=!1,tc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Qi||e.mapping===rs?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),dh=this._renderer.getRenderTarget(),fh=this._renderer.getActiveCubeFace(),ph=this._renderer.getActiveMipmapLevel(),Ah=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Ht,minFilter:Ht,generateMipmaps:!1,type:qn,format:Vt,colorSpace:Qt,depthBuffer:!1},i=Af(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Af(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=qE(r)),this._blurMaterial=XE(r,e,t)}return i}_compileMaterial(e){const t=new Be(this._lodPlanes[0],e);this._renderer.compile(t,uh)}_sceneToCubeUV(e,t,n,i,r){const c=new Zt(90,1,t,n),l=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,d=u.autoClear,f=u.toneMapping;u.getClearColor(ff),u.toneMapping=Ui,u.autoClear=!1,u.state.buffers.depth.getReversed()&&(u.setRenderTarget(i),u.clearDepth(),u.setRenderTarget(null));const g=new yn({name:"PMREM.Background",side:bn,depthWrite:!1,depthTest:!1}),m=new Be(new Ut,g);let A=!1;const y=e.background;y?y.isColor&&(g.color.copy(y),e.background=null,A=!0):(g.color.copy(ff),A=!0);for(let x=0;x<6;x++){const b=x%3;b===0?(c.up.set(0,l[x],0),c.position.set(r.x,r.y,r.z),c.lookAt(r.x+h[x],r.y,r.z)):b===1?(c.up.set(0,0,l[x]),c.position.set(r.x,r.y,r.z),c.lookAt(r.x,r.y+h[x],r.z)):(c.up.set(0,l[x],0),c.position.set(r.x,r.y,r.z),c.lookAt(r.x,r.y,r.z+h[x]));const _=this._cubeSize;tc(i,b*_,x>2?_:0,_,_),u.setRenderTarget(i),A&&u.render(m,c),u.render(e,c)}m.geometry.dispose(),m.material.dispose(),u.toneMapping=f,u.autoClear=d,e.background=y}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Qi||e.mapping===rs;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=gf()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=mf());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new Be(this._lodPlanes[0],r),o=r.uniforms;o.envMap.value=e;const c=this._cubeSize;tc(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(a,uh)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let r=1;r<i;r++){const a=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=pf[(i-r-1)%pf.length];this._blur(e,r-1,r,a,o)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,o){const c=this._renderer,l=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new Be(this._lodPlanes[i],l),d=l.uniforms,f=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Ts-1),g=r/p,m=isFinite(r)?1+Math.floor(h*g):Ts;m>Ts&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Ts}`);const A=[];let y=0;for(let v=0;v<Ts;++v){const I=v/g,E=Math.exp(-I*I/2);A.push(E),v===0?y+=E:v<m&&(y+=2*E)}for(let v=0;v<A.length;v++)A[v]=A[v]/y;d.envMap.value=e.texture,d.samples.value=m,d.weights.value=A,d.latitudinal.value=a==="latitudinal",o&&(d.poleAxis.value=o);const{_lodMax:x}=this;d.dTheta.value=p,d.mipInt.value=x-n;const b=this._sizeLods[i],_=3*b*(i>x-Ir?i-x+Ir:0),C=4*(this._cubeSize-b);tc(t,_,C,3*b,2*b),c.setRenderTarget(t),c.render(u,uh)}}function qE(s){const e=[],t=[],n=[];let i=s;const r=s-Ir+1+df.length;for(let a=0;a<r;a++){const o=Math.pow(2,i);t.push(o);let c=1/o;a>s-Ir?c=df[a-s+Ir-1]:a===0&&(c=0),n.push(c);const l=1/(o-2),h=-l,u=1+l,d=[h,h,u,h,u,u,h,h,u,u,h,u],f=6,p=6,g=3,m=2,A=1,y=new Float32Array(g*p*f),x=new Float32Array(m*p*f),b=new Float32Array(A*p*f);for(let C=0;C<f;C++){const v=C%3*2/3-1,I=C>2?0:-1,E=[v,I,0,v+2/3,I,0,v+2/3,I+1,0,v,I,0,v+2/3,I+1,0,v,I+1,0];y.set(E,g*p*C),x.set(d,m*p*C);const w=[C,C,C,C,C,C];b.set(w,A*p*C)}const _=new Je;_.setAttribute("position",new ot(y,g)),_.setAttribute("uv",new ot(x,m)),_.setAttribute("faceIndex",new ot(b,A)),e.push(_),i>Ir&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Af(s,e,t){const n=new ui(s,e,t);return n.texture.mapping=Kr,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function tc(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function XE(s,e,t){const n=new Float32Array(Ts),i=new S(0,1,0);return new jn({name:"SphericalGaussianBlur",defines:{n:Ts,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Zu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Fi,depthTest:!1,depthWrite:!1})}function mf(){return new jn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Zu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Fi,depthTest:!1,depthWrite:!1})}function gf(){return new jn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Zu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Fi,depthTest:!1,depthWrite:!1})}function Zu(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function YE(s){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture){const c=o.mapping,l=c===Ia||c===Ma,h=c===Qi||c===rs;if(l||h){let u=e.get(o);const d=u!==void 0?u.texture.pmremVersion:0;if(o.isRenderTargetTexture&&o.pmremVersion!==d)return t===null&&(t=new Zh(s)),u=l?t.fromEquirectangular(o,u):t.fromCubemap(o,u),u.texture.pmremVersion=o.pmremVersion,e.set(o,u),u.texture;if(u!==void 0)return u.texture;{const f=o.image;return l&&f&&f.height>0||h&&f&&i(f)?(t===null&&(t=new Zh(s)),u=l?t.fromEquirectangular(o):t.fromCubemap(o),u.texture.pmremVersion=o.pmremVersion,e.set(o,u),o.addEventListener("dispose",r),u.texture):null}}}return o}function i(o){let c=0;const l=6;for(let h=0;h<l;h++)o[h]!==void 0&&c++;return c===l}function r(o){const c=o.target;c.removeEventListener("dispose",r);const l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function KE(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&Qa("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function JE(s,e,t,n){const i={},r=new WeakMap;function a(u){const d=u.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);d.removeEventListener("dispose",a),delete i[d.id];const f=r.get(d);f&&(e.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function o(u,d){return i[d.id]===!0||(d.addEventListener("dispose",a),i[d.id]=!0,t.memory.geometries++),d}function c(u){const d=u.attributes;for(const f in d)e.update(d[f],s.ARRAY_BUFFER)}function l(u){const d=[],f=u.index,p=u.attributes.position;let g=0;if(f!==null){const y=f.array;g=f.version;for(let x=0,b=y.length;x<b;x+=3){const _=y[x+0],C=y[x+1],v=y[x+2];d.push(_,C,C,v,v,_)}}else if(p!==void 0){const y=p.array;g=p.version;for(let x=0,b=y.length/3-1;x<b;x+=3){const _=x+0,C=x+1,v=x+2;d.push(_,C,C,v,v,_)}}else return;const m=new(yA(d)?_u:xu)(d,1);m.version=g;const A=r.get(u);A&&e.remove(A),r.set(u,m)}function h(u){const d=r.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&l(u)}else l(u);return r.get(u)}return{get:o,update:c,getWireframeAttribute:h}}function jE(s,e,t){let n;function i(d){n=d}let r,a;function o(d){r=d.type,a=d.bytesPerElement}function c(d,f){s.drawElements(n,f,r,d*a),t.update(f,n,1)}function l(d,f,p){p!==0&&(s.drawElementsInstanced(n,f,r,d*a,p),t.update(f,n,p))}function h(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,f,0,r,d,0,p);let m=0;for(let A=0;A<p;A++)m+=f[A];t.update(m,n,1)}function u(d,f,p,g){if(p===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let A=0;A<d.length;A++)l(d[A]/a,f[A],g[A]);else{m.multiDrawElementsInstancedWEBGL(n,f,0,r,d,0,g,0,p);let A=0;for(let y=0;y<p;y++)A+=f[y]*g[y];t.update(A,n,1)}}this.setMode=i,this.setIndex=o,this.render=c,this.renderInstances=l,this.renderMultiDraw=h,this.renderMultiDrawInstances=u}function ZE(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,o){switch(t.calls++,a){case s.TRIANGLES:t.triangles+=o*(r/3);break;case s.LINES:t.lines+=o*(r/2);break;case s.LINE_STRIP:t.lines+=o*(r-1);break;case s.LINE_LOOP:t.lines+=o*r;break;case s.POINTS:t.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function $E(s,e,t){const n=new WeakMap,i=new bt;function r(a,o,c){const l=a.morphTargetInfluences,h=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,u=h!==void 0?h.length:0;let d=n.get(o);if(d===void 0||d.count!==u){let E=function(){v.dispose(),n.delete(o),o.removeEventListener("dispose",E)};d!==void 0&&d.texture.dispose();const f=o.morphAttributes.position!==void 0,p=o.morphAttributes.normal!==void 0,g=o.morphAttributes.color!==void 0,m=o.morphAttributes.position||[],A=o.morphAttributes.normal||[],y=o.morphAttributes.color||[];let x=0;f===!0&&(x=1),p===!0&&(x=2),g===!0&&(x=3);let b=o.attributes.position.count*x,_=1;b>e.maxTextureSize&&(_=Math.ceil(b/e.maxTextureSize),b=e.maxTextureSize);const C=new Float32Array(b*_*4*u),v=new rl(C,b,_,u);v.type=en,v.needsUpdate=!0;const I=x*4;for(let w=0;w<u;w++){const T=m[w],R=A[w],U=y[w],O=b*_*4*w;for(let N=0;N<T.count;N++){const k=N*I;f===!0&&(i.fromBufferAttribute(T,N),C[O+k+0]=i.x,C[O+k+1]=i.y,C[O+k+2]=i.z,C[O+k+3]=0),p===!0&&(i.fromBufferAttribute(R,N),C[O+k+4]=i.x,C[O+k+5]=i.y,C[O+k+6]=i.z,C[O+k+7]=0),g===!0&&(i.fromBufferAttribute(U,N),C[O+k+8]=i.x,C[O+k+9]=i.y,C[O+k+10]=i.z,C[O+k+11]=U.itemSize===4?i.w:1)}}d={count:u,texture:v,size:new ie(b,_)},n.set(o,d),o.addEventListener("dispose",E)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)c.getUniforms().setValue(s,"morphTexture",a.morphTexture,t);else{let f=0;for(let g=0;g<l.length;g++)f+=l[g];const p=o.morphTargetsRelative?1:1-f;c.getUniforms().setValue(s,"morphTargetBaseInfluence",p),c.getUniforms().setValue(s,"morphTargetInfluences",l)}c.getUniforms().setValue(s,"morphTargetsTexture",d.texture,t),c.getUniforms().setValue(s,"morphTargetsTextureSize",d.size)}return{update:r}}function ev(s,e,t,n){let i=new WeakMap;function r(c){const l=n.render.frame,h=c.geometry,u=e.get(c,h);if(i.get(u)!==l&&(e.update(u),i.set(u,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",o)===!1&&c.addEventListener("dispose",o),i.get(c)!==l&&(t.update(c.instanceMatrix,s.ARRAY_BUFFER),c.instanceColor!==null&&t.update(c.instanceColor,s.ARRAY_BUFFER),i.set(c,l))),c.isSkinnedMesh){const d=c.skeleton;i.get(d)!==l&&(d.update(),i.set(d,l))}return u}function a(){i=new WeakMap}function o(c){const l=c.target;l.removeEventListener("dispose",o),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:r,dispose:a}}const bm=new Wt,yf=new Iu(1,1),xm=new rl,_m=new ja,Em=new Za,bf=[],xf=[],_f=new Float32Array(16),Ef=new Float32Array(9),vf=new Float32Array(4);function ea(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=bf[i];if(r===void 0&&(r=new Float32Array(i),bf[i]=r),e!==0){n.toArray(r,0);for(let a=1,o=0;a!==e;++a)o+=t,s[a].toArray(r,o)}return r}function sn(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function rn(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function vl(s,e){let t=xf[e];t===void 0&&(t=new Int32Array(e),xf[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function tv(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function nv(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(sn(t,e))return;s.uniform2fv(this.addr,e),rn(t,e)}}function iv(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(sn(t,e))return;s.uniform3fv(this.addr,e),rn(t,e)}}function sv(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(sn(t,e))return;s.uniform4fv(this.addr,e),rn(t,e)}}function rv(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(sn(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),rn(t,e)}else{if(sn(t,n))return;vf.set(n),s.uniformMatrix2fv(this.addr,!1,vf),rn(t,n)}}function av(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(sn(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),rn(t,e)}else{if(sn(t,n))return;Ef.set(n),s.uniformMatrix3fv(this.addr,!1,Ef),rn(t,n)}}function ov(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(sn(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),rn(t,e)}else{if(sn(t,n))return;_f.set(n),s.uniformMatrix4fv(this.addr,!1,_f),rn(t,n)}}function cv(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function lv(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(sn(t,e))return;s.uniform2iv(this.addr,e),rn(t,e)}}function hv(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(sn(t,e))return;s.uniform3iv(this.addr,e),rn(t,e)}}function uv(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(sn(t,e))return;s.uniform4iv(this.addr,e),rn(t,e)}}function dv(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function fv(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(sn(t,e))return;s.uniform2uiv(this.addr,e),rn(t,e)}}function pv(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(sn(t,e))return;s.uniform3uiv(this.addr,e),rn(t,e)}}function Av(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(sn(t,e))return;s.uniform4uiv(this.addr,e),rn(t,e)}}function mv(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let r;this.type===s.SAMPLER_2D_SHADOW?(yf.compareFunction=gu,r=yf):r=bm,t.setTexture2D(e||r,i)}function gv(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||_m,i)}function yv(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Em,i)}function bv(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||xm,i)}function xv(s){switch(s){case 5126:return tv;case 35664:return nv;case 35665:return iv;case 35666:return sv;case 35674:return rv;case 35675:return av;case 35676:return ov;case 5124:case 35670:return cv;case 35667:case 35671:return lv;case 35668:case 35672:return hv;case 35669:case 35673:return uv;case 5125:return dv;case 36294:return fv;case 36295:return pv;case 36296:return Av;case 35678:case 36198:case 36298:case 36306:case 35682:return mv;case 35679:case 36299:case 36307:return gv;case 35680:case 36300:case 36308:case 36293:return yv;case 36289:case 36303:case 36311:case 36292:return bv}}function _v(s,e){s.uniform1fv(this.addr,e)}function Ev(s,e){const t=ea(e,this.size,2);s.uniform2fv(this.addr,t)}function vv(s,e){const t=ea(e,this.size,3);s.uniform3fv(this.addr,t)}function wv(s,e){const t=ea(e,this.size,4);s.uniform4fv(this.addr,t)}function Cv(s,e){const t=ea(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function Sv(s,e){const t=ea(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function Iv(s,e){const t=ea(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function Mv(s,e){s.uniform1iv(this.addr,e)}function Tv(s,e){s.uniform2iv(this.addr,e)}function Bv(s,e){s.uniform3iv(this.addr,e)}function Rv(s,e){s.uniform4iv(this.addr,e)}function Dv(s,e){s.uniform1uiv(this.addr,e)}function Lv(s,e){s.uniform2uiv(this.addr,e)}function Pv(s,e){s.uniform3uiv(this.addr,e)}function Fv(s,e){s.uniform4uiv(this.addr,e)}function Uv(s,e,t){const n=this.cache,i=e.length,r=vl(t,i);sn(n,r)||(s.uniform1iv(this.addr,r),rn(n,r));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||bm,r[a])}function Nv(s,e,t){const n=this.cache,i=e.length,r=vl(t,i);sn(n,r)||(s.uniform1iv(this.addr,r),rn(n,r));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||_m,r[a])}function Ov(s,e,t){const n=this.cache,i=e.length,r=vl(t,i);sn(n,r)||(s.uniform1iv(this.addr,r),rn(n,r));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||Em,r[a])}function kv(s,e,t){const n=this.cache,i=e.length,r=vl(t,i);sn(n,r)||(s.uniform1iv(this.addr,r),rn(n,r));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||xm,r[a])}function Qv(s){switch(s){case 5126:return _v;case 35664:return Ev;case 35665:return vv;case 35666:return wv;case 35674:return Cv;case 35675:return Sv;case 35676:return Iv;case 5124:case 35670:return Mv;case 35667:case 35671:return Tv;case 35668:case 35672:return Bv;case 35669:case 35673:return Rv;case 5125:return Dv;case 36294:return Lv;case 36295:return Pv;case 36296:return Fv;case 35678:case 36198:case 36298:case 36306:case 35682:return Uv;case 35679:case 36299:case 36307:return Nv;case 35680:case 36300:case 36308:case 36293:return Ov;case 36289:case 36303:case 36311:case 36292:return kv}}class Gv{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=xv(t.type)}}class Hv{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=Qv(t.type)}}class zv{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const o=i[r];o.setValue(e,t[o.id],n)}}}const mh=/(\w+)(\])?(\[|\.)?/g;function wf(s,e){s.seq.push(e),s.map[e.id]=e}function Vv(s,e,t){const n=s.name,i=n.length;for(mh.lastIndex=0;;){const r=mh.exec(n),a=mh.lastIndex;let o=r[1];const c=r[2]==="]",l=r[3];if(c&&(o=o|0),l===void 0||l==="["&&a+2===i){wf(t,l===void 0?new Gv(o,s,e):new Hv(o,s,e));break}else{let u=t.map[o];u===void 0&&(u=new zv(o),wf(t,u)),t=u}}}class gc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),a=e.getUniformLocation(t,r.name);Vv(r,a,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const o=t[r],c=n[o.id];c.needsUpdate!==!1&&o.setValue(e,c.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const a=e[i];a.id in t&&n.push(a)}return n}}function Cf(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}const Wv=37297;let qv=0;function Xv(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let a=i;a<r;a++){const o=a+1;n.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return n.join(`
`)}const Sf=new at;function Yv(s){dt._getMatrix(Sf,dt.workingColorSpace,s);const e=`mat3( ${Sf.elements.map(t=>t.toFixed(4))} )`;switch(dt.getTransfer(s)){case Na:return[e,"LinearTransferOETF"];case Pt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[e,"LinearTransferOETF"]}}function If(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),r=(s.getShaderInfoLog(e)||"").trim();if(n&&r==="")return"";const a=/ERROR: 0:(\d+)/.exec(r);if(a){const o=parseInt(a[1]);return t.toUpperCase()+`

`+r+`

`+Xv(s.getShaderSource(e),o)}else return r}function Kv(s,e){const t=Yv(e);return[`vec4 ${s}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function Jv(s,e){let t;switch(e){case jp:t="Linear";break;case Zp:t="Reinhard";break;case $p:t="Cineon";break;case uu:t="ACESFilmic";break;case tA:t="AgX";break;case nA:t="Neutral";break;case eA:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const nc=new S;function jv(){dt.getLuminanceCoefficients(nc);const s=nc.x.toFixed(4),e=nc.y.toFixed(4),t=nc.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function Zv(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(_a).join(`
`)}function $v(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function ew(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),a=r.name;let o=1;r.type===s.FLOAT_MAT2&&(o=2),r.type===s.FLOAT_MAT3&&(o=3),r.type===s.FLOAT_MAT4&&(o=4),t[a]={type:r.type,location:s.getAttribLocation(e,a),locationSize:o}}return t}function _a(s){return s!==""}function Mf(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Tf(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const tw=/^[ \t]*#include +<([\w\d./]+)>/gm;function $h(s){return s.replace(tw,iw)}const nw=new Map;function iw(s,e){let t=ht[e];if(t===void 0){const n=nw.get(e);if(n!==void 0)t=ht[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return $h(t)}const sw=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Bf(s){return s.replace(sw,rw)}function rw(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Rf(s){let e=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function aw(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===lu?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===hu?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===mi&&(e="SHADOWMAP_TYPE_VSM"),e}function ow(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Qi:case rs:e="ENVMAP_TYPE_CUBE";break;case Kr:e="ENVMAP_TYPE_CUBE_UV";break}return e}function cw(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case rs:e="ENVMAP_MODE_REFRACTION";break}return e}function lw(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case qa:e="ENVMAP_BLENDING_MULTIPLY";break;case Kp:e="ENVMAP_BLENDING_MIX";break;case Jp:e="ENVMAP_BLENDING_ADD";break}return e}function hw(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function uw(s,e,t,n){const i=s.getContext(),r=t.defines;let a=t.vertexShader,o=t.fragmentShader;const c=aw(t),l=ow(t),h=cw(t),u=lw(t),d=hw(t),f=Zv(t),p=$v(r),g=i.createProgram();let m,A,y=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(_a).join(`
`),m.length>0&&(m+=`
`),A=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(_a).join(`
`),A.length>0&&(A+=`
`)):(m=[Rf(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",t.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(_a).join(`
`),A=[Rf(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",t.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ui?"#define TONE_MAPPING":"",t.toneMapping!==Ui?ht.tonemapping_pars_fragment:"",t.toneMapping!==Ui?Jv("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ht.colorspace_pars_fragment,Kv("linearToOutputTexel",t.outputColorSpace),jv(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(_a).join(`
`)),a=$h(a),a=Mf(a,t),a=Tf(a,t),o=$h(o),o=Mf(o,t),o=Tf(o,t),a=Bf(a),o=Bf(o),t.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,m=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,A=["#define varying in",t.glslVersion===Wh?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Wh?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+A);const x=y+m+a,b=y+A+o,_=Cf(i,i.VERTEX_SHADER,x),C=Cf(i,i.FRAGMENT_SHADER,b);i.attachShader(g,_),i.attachShader(g,C),t.index0AttributeName!==void 0?i.bindAttribLocation(g,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g);function v(T){if(s.debug.checkShaderErrors){const R=i.getProgramInfoLog(g)||"",U=i.getShaderInfoLog(_)||"",O=i.getShaderInfoLog(C)||"",N=R.trim(),k=U.trim(),te=O.trim();let Q=!0,$=!0;if(i.getProgramParameter(g,i.LINK_STATUS)===!1)if(Q=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,g,_,C);else{const ae=If(i,_,"vertex"),Ae=If(i,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,i.VALIDATE_STATUS)+`

Material Name: `+T.name+`
Material Type: `+T.type+`

Program Info Log: `+N+`
`+ae+`
`+Ae)}else N!==""?console.warn("THREE.WebGLProgram: Program Info Log:",N):(k===""||te==="")&&($=!1);$&&(T.diagnostics={runnable:Q,programLog:N,vertexShader:{log:k,prefix:m},fragmentShader:{log:te,prefix:A}})}i.deleteShader(_),i.deleteShader(C),I=new gc(i,g),E=ew(i,g)}let I;this.getUniforms=function(){return I===void 0&&v(this),I};let E;this.getAttributes=function(){return E===void 0&&v(this),E};let w=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return w===!1&&(w=i.getProgramParameter(g,Wv)),w},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=qv++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=_,this.fragmentShader=C,this}let dw=0;class fw{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new pw(e),t.set(e,n)),n}}class pw{constructor(e){this.id=dw++,this.code=e,this.usedTimes=0}}function Aw(s,e,t,n,i,r,a){const o=new al,c=new fw,l=new Set,h=[],u=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(E){return l.add(E),E===0?"uv":`uv${E}`}function m(E,w,T,R,U){const O=R.fog,N=U.geometry,k=E.isMeshStandardMaterial?R.environment:null,te=(E.isMeshStandardMaterial?t:e).get(E.envMap||k),Q=te&&te.mapping===Kr?te.image.height:null,$=p[E.type];E.precision!==null&&(f=i.getMaxPrecision(E.precision),f!==E.precision&&console.warn("THREE.WebGLProgram.getParameters:",E.precision,"not supported, using",f,"instead."));const ae=N.morphAttributes.position||N.morphAttributes.normal||N.morphAttributes.color,Ae=ae!==void 0?ae.length:0;let Ce=0;N.morphAttributes.position!==void 0&&(Ce=1),N.morphAttributes.normal!==void 0&&(Ce=2),N.morphAttributes.color!==void 0&&(Ce=3);let Ie,je,$e,j;if($){const he=oi[$];Ie=he.vertexShader,je=he.fragmentShader}else Ie=E.vertexShader,je=E.fragmentShader,c.update(E),$e=c.getVertexShaderID(E),j=c.getFragmentShaderID(E);const se=s.getRenderTarget(),Me=s.state.buffers.depth.getReversed(),Qe=U.isInstancedMesh===!0,Le=U.isBatchedMesh===!0,st=!!E.map,xt=!!E.matcap,P=!!te,pe=!!E.aoMap,le=!!E.lightMap,oe=!!E.bumpMap,re=!!E.normalMap,_e=!!E.displacementMap,me=!!E.emissiveMap,be=!!E.metalnessMap,qe=!!E.roughnessMap,Ke=E.anisotropy>0,D=E.clearcoat>0,M=E.dispersion>0,z=E.iridescence>0,Y=E.sheen>0,de=E.transmission>0,ee=Ke&&!!E.anisotropyMap,Pe=D&&!!E.clearcoatMap,xe=D&&!!E.clearcoatNormalMap,De=D&&!!E.clearcoatRoughnessMap,Fe=z&&!!E.iridescenceMap,ge=z&&!!E.iridescenceThicknessMap,Ee=Y&&!!E.sheenColorMap,Ne=Y&&!!E.sheenRoughnessMap,He=!!E.specularMap,W=!!E.specularColorMap,fe=!!E.specularIntensityMap,L=de&&!!E.transmissionMap,K=de&&!!E.thicknessMap,ne=!!E.gradientMap,ce=!!E.alphaMap,Z=E.alphaTest>0,q=!!E.alphaHash,ve=!!E.extensions;let F=Ui;E.toneMapped&&(se===null||se.isXRRenderTarget===!0)&&(F=s.toneMapping);const J={shaderID:$,shaderType:E.type,shaderName:E.name,vertexShader:Ie,fragmentShader:je,defines:E.defines,customVertexShaderID:$e,customFragmentShaderID:j,isRawShaderMaterial:E.isRawShaderMaterial===!0,glslVersion:E.glslVersion,precision:f,batching:Le,batchingColor:Le&&U._colorsTexture!==null,instancing:Qe,instancingColor:Qe&&U.instanceColor!==null,instancingMorph:Qe&&U.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:se===null?s.outputColorSpace:se.isXRRenderTarget===!0?se.texture.colorSpace:Qt,alphaToCoverage:!!E.alphaToCoverage,map:st,matcap:xt,envMap:P,envMapMode:P&&te.mapping,envMapCubeUVHeight:Q,aoMap:pe,lightMap:le,bumpMap:oe,normalMap:re,displacementMap:d&&_e,emissiveMap:me,normalMapObjectSpace:re&&E.normalMapType===hA,normalMapTangentSpace:re&&E.normalMapType===os,metalnessMap:be,roughnessMap:qe,anisotropy:Ke,anisotropyMap:ee,clearcoat:D,clearcoatMap:Pe,clearcoatNormalMap:xe,clearcoatRoughnessMap:De,dispersion:M,iridescence:z,iridescenceMap:Fe,iridescenceThicknessMap:ge,sheen:Y,sheenColorMap:Ee,sheenRoughnessMap:Ne,specularMap:He,specularColorMap:W,specularIntensityMap:fe,transmission:de,transmissionMap:L,thicknessMap:K,gradientMap:ne,opaque:E.transparent===!1&&E.blending===Us&&E.alphaToCoverage===!1,alphaMap:ce,alphaTest:Z,alphaHash:q,combine:E.combine,mapUv:st&&g(E.map.channel),aoMapUv:pe&&g(E.aoMap.channel),lightMapUv:le&&g(E.lightMap.channel),bumpMapUv:oe&&g(E.bumpMap.channel),normalMapUv:re&&g(E.normalMap.channel),displacementMapUv:_e&&g(E.displacementMap.channel),emissiveMapUv:me&&g(E.emissiveMap.channel),metalnessMapUv:be&&g(E.metalnessMap.channel),roughnessMapUv:qe&&g(E.roughnessMap.channel),anisotropyMapUv:ee&&g(E.anisotropyMap.channel),clearcoatMapUv:Pe&&g(E.clearcoatMap.channel),clearcoatNormalMapUv:xe&&g(E.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:De&&g(E.clearcoatRoughnessMap.channel),iridescenceMapUv:Fe&&g(E.iridescenceMap.channel),iridescenceThicknessMapUv:ge&&g(E.iridescenceThicknessMap.channel),sheenColorMapUv:Ee&&g(E.sheenColorMap.channel),sheenRoughnessMapUv:Ne&&g(E.sheenRoughnessMap.channel),specularMapUv:He&&g(E.specularMap.channel),specularColorMapUv:W&&g(E.specularColorMap.channel),specularIntensityMapUv:fe&&g(E.specularIntensityMap.channel),transmissionMapUv:L&&g(E.transmissionMap.channel),thicknessMapUv:K&&g(E.thicknessMap.channel),alphaMapUv:ce&&g(E.alphaMap.channel),vertexTangents:!!N.attributes.tangent&&(re||Ke),vertexColors:E.vertexColors,vertexAlphas:E.vertexColors===!0&&!!N.attributes.color&&N.attributes.color.itemSize===4,pointsUvs:U.isPoints===!0&&!!N.attributes.uv&&(st||ce),fog:!!O,useFog:E.fog===!0,fogExp2:!!O&&O.isFogExp2,flatShading:E.flatShading===!0&&E.wireframe===!1,sizeAttenuation:E.sizeAttenuation===!0,logarithmicDepthBuffer:u,reversedDepthBuffer:Me,skinning:U.isSkinnedMesh===!0,morphTargets:N.morphAttributes.position!==void 0,morphNormals:N.morphAttributes.normal!==void 0,morphColors:N.morphAttributes.color!==void 0,morphTargetsCount:Ae,morphTextureStride:Ce,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numLightProbes:w.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:E.dithering,shadowMapEnabled:s.shadowMap.enabled&&T.length>0,shadowMapType:s.shadowMap.type,toneMapping:F,decodeVideoTexture:st&&E.map.isVideoTexture===!0&&dt.getTransfer(E.map.colorSpace)===Pt,decodeVideoTextureEmissive:me&&E.emissiveMap.isVideoTexture===!0&&dt.getTransfer(E.emissiveMap.colorSpace)===Pt,premultipliedAlpha:E.premultipliedAlpha,doubleSided:E.side===ln,flipSided:E.side===bn,useDepthPacking:E.depthPacking>=0,depthPacking:E.depthPacking||0,index0AttributeName:E.index0AttributeName,extensionClipCullDistance:ve&&E.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(ve&&E.extensions.multiDraw===!0||Le)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:E.customProgramCacheKey()};return J.vertexUv1s=l.has(1),J.vertexUv2s=l.has(2),J.vertexUv3s=l.has(3),l.clear(),J}function A(E){const w=[];if(E.shaderID?w.push(E.shaderID):(w.push(E.customVertexShaderID),w.push(E.customFragmentShaderID)),E.defines!==void 0)for(const T in E.defines)w.push(T),w.push(E.defines[T]);return E.isRawShaderMaterial===!1&&(y(w,E),x(w,E),w.push(s.outputColorSpace)),w.push(E.customProgramCacheKey),w.join()}function y(E,w){E.push(w.precision),E.push(w.outputColorSpace),E.push(w.envMapMode),E.push(w.envMapCubeUVHeight),E.push(w.mapUv),E.push(w.alphaMapUv),E.push(w.lightMapUv),E.push(w.aoMapUv),E.push(w.bumpMapUv),E.push(w.normalMapUv),E.push(w.displacementMapUv),E.push(w.emissiveMapUv),E.push(w.metalnessMapUv),E.push(w.roughnessMapUv),E.push(w.anisotropyMapUv),E.push(w.clearcoatMapUv),E.push(w.clearcoatNormalMapUv),E.push(w.clearcoatRoughnessMapUv),E.push(w.iridescenceMapUv),E.push(w.iridescenceThicknessMapUv),E.push(w.sheenColorMapUv),E.push(w.sheenRoughnessMapUv),E.push(w.specularMapUv),E.push(w.specularColorMapUv),E.push(w.specularIntensityMapUv),E.push(w.transmissionMapUv),E.push(w.thicknessMapUv),E.push(w.combine),E.push(w.fogExp2),E.push(w.sizeAttenuation),E.push(w.morphTargetsCount),E.push(w.morphAttributeCount),E.push(w.numDirLights),E.push(w.numPointLights),E.push(w.numSpotLights),E.push(w.numSpotLightMaps),E.push(w.numHemiLights),E.push(w.numRectAreaLights),E.push(w.numDirLightShadows),E.push(w.numPointLightShadows),E.push(w.numSpotLightShadows),E.push(w.numSpotLightShadowsWithMaps),E.push(w.numLightProbes),E.push(w.shadowMapType),E.push(w.toneMapping),E.push(w.numClippingPlanes),E.push(w.numClipIntersection),E.push(w.depthPacking)}function x(E,w){o.disableAll(),w.supportsVertexTextures&&o.enable(0),w.instancing&&o.enable(1),w.instancingColor&&o.enable(2),w.instancingMorph&&o.enable(3),w.matcap&&o.enable(4),w.envMap&&o.enable(5),w.normalMapObjectSpace&&o.enable(6),w.normalMapTangentSpace&&o.enable(7),w.clearcoat&&o.enable(8),w.iridescence&&o.enable(9),w.alphaTest&&o.enable(10),w.vertexColors&&o.enable(11),w.vertexAlphas&&o.enable(12),w.vertexUv1s&&o.enable(13),w.vertexUv2s&&o.enable(14),w.vertexUv3s&&o.enable(15),w.vertexTangents&&o.enable(16),w.anisotropy&&o.enable(17),w.alphaHash&&o.enable(18),w.batching&&o.enable(19),w.dispersion&&o.enable(20),w.batchingColor&&o.enable(21),w.gradientMap&&o.enable(22),E.push(o.mask),o.disableAll(),w.fog&&o.enable(0),w.useFog&&o.enable(1),w.flatShading&&o.enable(2),w.logarithmicDepthBuffer&&o.enable(3),w.reversedDepthBuffer&&o.enable(4),w.skinning&&o.enable(5),w.morphTargets&&o.enable(6),w.morphNormals&&o.enable(7),w.morphColors&&o.enable(8),w.premultipliedAlpha&&o.enable(9),w.shadowMapEnabled&&o.enable(10),w.doubleSided&&o.enable(11),w.flipSided&&o.enable(12),w.useDepthPacking&&o.enable(13),w.dithering&&o.enable(14),w.transmission&&o.enable(15),w.sheen&&o.enable(16),w.opaque&&o.enable(17),w.pointsUvs&&o.enable(18),w.decodeVideoTexture&&o.enable(19),w.decodeVideoTextureEmissive&&o.enable(20),w.alphaToCoverage&&o.enable(21),E.push(o.mask)}function b(E){const w=p[E.type];let T;if(w){const R=oi[w];T=Ga.clone(R.uniforms)}else T=E.uniforms;return T}function _(E,w){let T;for(let R=0,U=h.length;R<U;R++){const O=h[R];if(O.cacheKey===w){T=O,++T.usedTimes;break}}return T===void 0&&(T=new uw(s,w,E,r),h.push(T)),T}function C(E){if(--E.usedTimes===0){const w=h.indexOf(E);h[w]=h[h.length-1],h.pop(),E.destroy()}}function v(E){c.remove(E)}function I(){c.dispose()}return{getParameters:m,getProgramCacheKey:A,getUniforms:b,acquireProgram:_,releaseProgram:C,releaseShaderCache:v,programs:h,dispose:I}}function mw(){let s=new WeakMap;function e(a){return s.has(a)}function t(a){let o=s.get(a);return o===void 0&&(o={},s.set(a,o)),o}function n(a){s.delete(a)}function i(a,o,c){s.get(a)[o]=c}function r(){s=new WeakMap}return{has:e,get:t,remove:n,update:i,dispose:r}}function gw(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function Df(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function Lf(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function a(u,d,f,p,g,m){let A=s[e];return A===void 0?(A={id:u.id,object:u,geometry:d,material:f,groupOrder:p,renderOrder:u.renderOrder,z:g,group:m},s[e]=A):(A.id=u.id,A.object=u,A.geometry=d,A.material=f,A.groupOrder=p,A.renderOrder=u.renderOrder,A.z=g,A.group=m),e++,A}function o(u,d,f,p,g,m){const A=a(u,d,f,p,g,m);f.transmission>0?n.push(A):f.transparent===!0?i.push(A):t.push(A)}function c(u,d,f,p,g,m){const A=a(u,d,f,p,g,m);f.transmission>0?n.unshift(A):f.transparent===!0?i.unshift(A):t.unshift(A)}function l(u,d){t.length>1&&t.sort(u||gw),n.length>1&&n.sort(d||Df),i.length>1&&i.sort(d||Df)}function h(){for(let u=e,d=s.length;u<d;u++){const f=s[u];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:o,unshift:c,finish:h,sort:l}}function yw(){let s=new WeakMap;function e(n,i){const r=s.get(n);let a;return r===void 0?(a=new Lf,s.set(n,[a])):i>=r.length?(a=new Lf,r.push(a)):a=r[i],a}function t(){s=new WeakMap}return{get:e,dispose:t}}function bw(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new S,color:new ue};break;case"SpotLight":t={position:new S,direction:new S,color:new ue,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new S,color:new ue,distance:0,decay:0};break;case"HemisphereLight":t={direction:new S,skyColor:new ue,groundColor:new ue};break;case"RectAreaLight":t={color:new ue,position:new S,halfWidth:new S,halfHeight:new S};break}return s[e.id]=t,t}}}function xw(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ie};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ie};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ie,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let _w=0;function Ew(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function vw(s){const e=new bw,t=xw(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let l=0;l<9;l++)n.probe.push(new S);const i=new S,r=new Ve,a=new Ve;function o(l){let h=0,u=0,d=0;for(let E=0;E<9;E++)n.probe[E].set(0,0,0);let f=0,p=0,g=0,m=0,A=0,y=0,x=0,b=0,_=0,C=0,v=0;l.sort(Ew);for(let E=0,w=l.length;E<w;E++){const T=l[E],R=T.color,U=T.intensity,O=T.distance,N=T.shadow&&T.shadow.map?T.shadow.map.texture:null;if(T.isAmbientLight)h+=R.r*U,u+=R.g*U,d+=R.b*U;else if(T.isLightProbe){for(let k=0;k<9;k++)n.probe[k].addScaledVector(T.sh.coefficients[k],U);v++}else if(T.isDirectionalLight){const k=e.get(T);if(k.color.copy(T.color).multiplyScalar(T.intensity),T.castShadow){const te=T.shadow,Q=t.get(T);Q.shadowIntensity=te.intensity,Q.shadowBias=te.bias,Q.shadowNormalBias=te.normalBias,Q.shadowRadius=te.radius,Q.shadowMapSize=te.mapSize,n.directionalShadow[f]=Q,n.directionalShadowMap[f]=N,n.directionalShadowMatrix[f]=T.shadow.matrix,y++}n.directional[f]=k,f++}else if(T.isSpotLight){const k=e.get(T);k.position.setFromMatrixPosition(T.matrixWorld),k.color.copy(R).multiplyScalar(U),k.distance=O,k.coneCos=Math.cos(T.angle),k.penumbraCos=Math.cos(T.angle*(1-T.penumbra)),k.decay=T.decay,n.spot[g]=k;const te=T.shadow;if(T.map&&(n.spotLightMap[_]=T.map,_++,te.updateMatrices(T),T.castShadow&&C++),n.spotLightMatrix[g]=te.matrix,T.castShadow){const Q=t.get(T);Q.shadowIntensity=te.intensity,Q.shadowBias=te.bias,Q.shadowNormalBias=te.normalBias,Q.shadowRadius=te.radius,Q.shadowMapSize=te.mapSize,n.spotShadow[g]=Q,n.spotShadowMap[g]=N,b++}g++}else if(T.isRectAreaLight){const k=e.get(T);k.color.copy(R).multiplyScalar(U),k.halfWidth.set(T.width*.5,0,0),k.halfHeight.set(0,T.height*.5,0),n.rectArea[m]=k,m++}else if(T.isPointLight){const k=e.get(T);if(k.color.copy(T.color).multiplyScalar(T.intensity),k.distance=T.distance,k.decay=T.decay,T.castShadow){const te=T.shadow,Q=t.get(T);Q.shadowIntensity=te.intensity,Q.shadowBias=te.bias,Q.shadowNormalBias=te.normalBias,Q.shadowRadius=te.radius,Q.shadowMapSize=te.mapSize,Q.shadowCameraNear=te.camera.near,Q.shadowCameraFar=te.camera.far,n.pointShadow[p]=Q,n.pointShadowMap[p]=N,n.pointShadowMatrix[p]=T.shadow.matrix,x++}n.point[p]=k,p++}else if(T.isHemisphereLight){const k=e.get(T);k.skyColor.copy(T.color).multiplyScalar(U),k.groundColor.copy(T.groundColor).multiplyScalar(U),n.hemi[A]=k,A++}}m>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Te.LTC_FLOAT_1,n.rectAreaLTC2=Te.LTC_FLOAT_2):(n.rectAreaLTC1=Te.LTC_HALF_1,n.rectAreaLTC2=Te.LTC_HALF_2)),n.ambient[0]=h,n.ambient[1]=u,n.ambient[2]=d;const I=n.hash;(I.directionalLength!==f||I.pointLength!==p||I.spotLength!==g||I.rectAreaLength!==m||I.hemiLength!==A||I.numDirectionalShadows!==y||I.numPointShadows!==x||I.numSpotShadows!==b||I.numSpotMaps!==_||I.numLightProbes!==v)&&(n.directional.length=f,n.spot.length=g,n.rectArea.length=m,n.point.length=p,n.hemi.length=A,n.directionalShadow.length=y,n.directionalShadowMap.length=y,n.pointShadow.length=x,n.pointShadowMap.length=x,n.spotShadow.length=b,n.spotShadowMap.length=b,n.directionalShadowMatrix.length=y,n.pointShadowMatrix.length=x,n.spotLightMatrix.length=b+_-C,n.spotLightMap.length=_,n.numSpotLightShadowsWithMaps=C,n.numLightProbes=v,I.directionalLength=f,I.pointLength=p,I.spotLength=g,I.rectAreaLength=m,I.hemiLength=A,I.numDirectionalShadows=y,I.numPointShadows=x,I.numSpotShadows=b,I.numSpotMaps=_,I.numLightProbes=v,n.version=_w++)}function c(l,h){let u=0,d=0,f=0,p=0,g=0;const m=h.matrixWorldInverse;for(let A=0,y=l.length;A<y;A++){const x=l[A];if(x.isDirectionalLight){const b=n.directional[u];b.direction.setFromMatrixPosition(x.matrixWorld),i.setFromMatrixPosition(x.target.matrixWorld),b.direction.sub(i),b.direction.transformDirection(m),u++}else if(x.isSpotLight){const b=n.spot[f];b.position.setFromMatrixPosition(x.matrixWorld),b.position.applyMatrix4(m),b.direction.setFromMatrixPosition(x.matrixWorld),i.setFromMatrixPosition(x.target.matrixWorld),b.direction.sub(i),b.direction.transformDirection(m),f++}else if(x.isRectAreaLight){const b=n.rectArea[p];b.position.setFromMatrixPosition(x.matrixWorld),b.position.applyMatrix4(m),a.identity(),r.copy(x.matrixWorld),r.premultiply(m),a.extractRotation(r),b.halfWidth.set(x.width*.5,0,0),b.halfHeight.set(0,x.height*.5,0),b.halfWidth.applyMatrix4(a),b.halfHeight.applyMatrix4(a),p++}else if(x.isPointLight){const b=n.point[d];b.position.setFromMatrixPosition(x.matrixWorld),b.position.applyMatrix4(m),d++}else if(x.isHemisphereLight){const b=n.hemi[g];b.direction.setFromMatrixPosition(x.matrixWorld),b.direction.transformDirection(m),g++}}}return{setup:o,setupView:c,state:n}}function Pf(s){const e=new vw(s),t=[],n=[];function i(h){l.camera=h,t.length=0,n.length=0}function r(h){t.push(h)}function a(h){n.push(h)}function o(){e.setup(t)}function c(h){e.setupView(t,h)}const l={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:l,setupLights:o,setupLightsView:c,pushLight:r,pushShadow:a}}function ww(s){let e=new WeakMap;function t(i,r=0){const a=e.get(i);let o;return a===void 0?(o=new Pf(s),e.set(i,[o])):r>=a.length?(o=new Pf(s),a.push(o)):o=a[r],o}function n(){e=new WeakMap}return{get:t,dispose:n}}const Cw=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Sw=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Iw(s,e,t){let n=new jr;const i=new ie,r=new ie,a=new bt,o=new Fu({depthPacking:lA}),c=new Uu,l={},h=t.maxTextureSize,u={[hi]:bn,[bn]:hi,[ln]:ln},d=new jn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ie},radius:{value:4}},vertexShader:Cw,fragmentShader:Sw}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new Je;p.setAttribute("position",new ot(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new Be(p,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=lu;let A=this.type;this.render=function(C,v,I){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||C.length===0)return;const E=s.getRenderTarget(),w=s.getActiveCubeFace(),T=s.getActiveMipmapLevel(),R=s.state;R.setBlending(Fi),R.buffers.depth.getReversed()===!0?R.buffers.color.setClear(0,0,0,0):R.buffers.color.setClear(1,1,1,1),R.buffers.depth.setTest(!0),R.setScissorTest(!1);const U=A!==mi&&this.type===mi,O=A===mi&&this.type!==mi;for(let N=0,k=C.length;N<k;N++){const te=C[N],Q=te.shadow;if(Q===void 0){console.warn("THREE.WebGLShadowMap:",te,"has no shadow.");continue}if(Q.autoUpdate===!1&&Q.needsUpdate===!1)continue;i.copy(Q.mapSize);const $=Q.getFrameExtents();if(i.multiply($),r.copy(Q.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(r.x=Math.floor(h/$.x),i.x=r.x*$.x,Q.mapSize.x=r.x),i.y>h&&(r.y=Math.floor(h/$.y),i.y=r.y*$.y,Q.mapSize.y=r.y)),Q.map===null||U===!0||O===!0){const Ae=this.type!==mi?{minFilter:Jt,magFilter:Jt}:{};Q.map!==null&&Q.map.dispose(),Q.map=new ui(i.x,i.y,Ae),Q.map.texture.name=te.name+".shadowMap",Q.camera.updateProjectionMatrix()}s.setRenderTarget(Q.map),s.clear();const ae=Q.getViewportCount();for(let Ae=0;Ae<ae;Ae++){const Ce=Q.getViewport(Ae);a.set(r.x*Ce.x,r.y*Ce.y,r.x*Ce.z,r.y*Ce.w),R.viewport(a),Q.updateMatrices(te,Ae),n=Q.getFrustum(),b(v,I,Q.camera,te,this.type)}Q.isPointLightShadow!==!0&&this.type===mi&&y(Q,I),Q.needsUpdate=!1}A=this.type,m.needsUpdate=!1,s.setRenderTarget(E,w,T)};function y(C,v){const I=e.update(g);d.defines.VSM_SAMPLES!==C.blurSamples&&(d.defines.VSM_SAMPLES=C.blurSamples,f.defines.VSM_SAMPLES=C.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),C.mapPass===null&&(C.mapPass=new ui(i.x,i.y)),d.uniforms.shadow_pass.value=C.map.texture,d.uniforms.resolution.value=C.mapSize,d.uniforms.radius.value=C.radius,s.setRenderTarget(C.mapPass),s.clear(),s.renderBufferDirect(v,null,I,d,g,null),f.uniforms.shadow_pass.value=C.mapPass.texture,f.uniforms.resolution.value=C.mapSize,f.uniforms.radius.value=C.radius,s.setRenderTarget(C.map),s.clear(),s.renderBufferDirect(v,null,I,f,g,null)}function x(C,v,I,E){let w=null;const T=I.isPointLight===!0?C.customDistanceMaterial:C.customDepthMaterial;if(T!==void 0)w=T;else if(w=I.isPointLight===!0?c:o,s.localClippingEnabled&&v.clipShadows===!0&&Array.isArray(v.clippingPlanes)&&v.clippingPlanes.length!==0||v.displacementMap&&v.displacementScale!==0||v.alphaMap&&v.alphaTest>0||v.map&&v.alphaTest>0||v.alphaToCoverage===!0){const R=w.uuid,U=v.uuid;let O=l[R];O===void 0&&(O={},l[R]=O);let N=O[U];N===void 0&&(N=w.clone(),O[U]=N,v.addEventListener("dispose",_)),w=N}if(w.visible=v.visible,w.wireframe=v.wireframe,E===mi?w.side=v.shadowSide!==null?v.shadowSide:v.side:w.side=v.shadowSide!==null?v.shadowSide:u[v.side],w.alphaMap=v.alphaMap,w.alphaTest=v.alphaToCoverage===!0?.5:v.alphaTest,w.map=v.map,w.clipShadows=v.clipShadows,w.clippingPlanes=v.clippingPlanes,w.clipIntersection=v.clipIntersection,w.displacementMap=v.displacementMap,w.displacementScale=v.displacementScale,w.displacementBias=v.displacementBias,w.wireframeLinewidth=v.wireframeLinewidth,w.linewidth=v.linewidth,I.isPointLight===!0&&w.isMeshDistanceMaterial===!0){const R=s.properties.get(w);R.light=I}return w}function b(C,v,I,E,w){if(C.visible===!1)return;if(C.layers.test(v.layers)&&(C.isMesh||C.isLine||C.isPoints)&&(C.castShadow||C.receiveShadow&&w===mi)&&(!C.frustumCulled||n.intersectsObject(C))){C.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,C.matrixWorld);const U=e.update(C),O=C.material;if(Array.isArray(O)){const N=U.groups;for(let k=0,te=N.length;k<te;k++){const Q=N[k],$=O[Q.materialIndex];if($&&$.visible){const ae=x(C,$,E,w);C.onBeforeShadow(s,C,v,I,U,ae,Q),s.renderBufferDirect(I,null,U,ae,C,Q),C.onAfterShadow(s,C,v,I,U,ae,Q)}}}else if(O.visible){const N=x(C,O,E,w);C.onBeforeShadow(s,C,v,I,U,N,null),s.renderBufferDirect(I,null,U,N,C,null),C.onAfterShadow(s,C,v,I,U,N,null)}}const R=C.children;for(let U=0,O=R.length;U<O;U++)b(R[U],v,I,E,w)}function _(C){C.target.removeEventListener("dispose",_);for(const I in l){const E=l[I],w=C.target.uuid;w in E&&(E[w].dispose(),delete E[w])}}}const Mw={[wc]:Cc,[Sc]:Tc,[Ic]:Bc,[Hs]:Mc,[Cc]:wc,[Tc]:Sc,[Bc]:Ic,[Mc]:Hs};function Tw(s,e){function t(){let L=!1;const K=new bt;let ne=null;const ce=new bt(0,0,0,0);return{setMask:function(Z){ne!==Z&&!L&&(s.colorMask(Z,Z,Z,Z),ne=Z)},setLocked:function(Z){L=Z},setClear:function(Z,q,ve,F,J){J===!0&&(Z*=F,q*=F,ve*=F),K.set(Z,q,ve,F),ce.equals(K)===!1&&(s.clearColor(Z,q,ve,F),ce.copy(K))},reset:function(){L=!1,ne=null,ce.set(-1,0,0,0)}}}function n(){let L=!1,K=!1,ne=null,ce=null,Z=null;return{setReversed:function(q){if(K!==q){const ve=e.get("EXT_clip_control");q?ve.clipControlEXT(ve.LOWER_LEFT_EXT,ve.ZERO_TO_ONE_EXT):ve.clipControlEXT(ve.LOWER_LEFT_EXT,ve.NEGATIVE_ONE_TO_ONE_EXT),K=q;const F=Z;Z=null,this.setClear(F)}},getReversed:function(){return K},setTest:function(q){q?se(s.DEPTH_TEST):Me(s.DEPTH_TEST)},setMask:function(q){ne!==q&&!L&&(s.depthMask(q),ne=q)},setFunc:function(q){if(K&&(q=Mw[q]),ce!==q){switch(q){case wc:s.depthFunc(s.NEVER);break;case Cc:s.depthFunc(s.ALWAYS);break;case Sc:s.depthFunc(s.LESS);break;case Hs:s.depthFunc(s.LEQUAL);break;case Ic:s.depthFunc(s.EQUAL);break;case Mc:s.depthFunc(s.GEQUAL);break;case Tc:s.depthFunc(s.GREATER);break;case Bc:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}ce=q}},setLocked:function(q){L=q},setClear:function(q){Z!==q&&(K&&(q=1-q),s.clearDepth(q),Z=q)},reset:function(){L=!1,ne=null,ce=null,Z=null,K=!1}}}function i(){let L=!1,K=null,ne=null,ce=null,Z=null,q=null,ve=null,F=null,J=null;return{setTest:function(he){L||(he?se(s.STENCIL_TEST):Me(s.STENCIL_TEST))},setMask:function(he){K!==he&&!L&&(s.stencilMask(he),K=he)},setFunc:function(he,Ue,et){(ne!==he||ce!==Ue||Z!==et)&&(s.stencilFunc(he,Ue,et),ne=he,ce=Ue,Z=et)},setOp:function(he,Ue,et){(q!==he||ve!==Ue||F!==et)&&(s.stencilOp(he,Ue,et),q=he,ve=Ue,F=et)},setLocked:function(he){L=he},setClear:function(he){J!==he&&(s.clearStencil(he),J=he)},reset:function(){L=!1,K=null,ne=null,ce=null,Z=null,q=null,ve=null,F=null,J=null}}}const r=new t,a=new n,o=new i,c=new WeakMap,l=new WeakMap;let h={},u={},d=new WeakMap,f=[],p=null,g=!1,m=null,A=null,y=null,x=null,b=null,_=null,C=null,v=new ue(0,0,0),I=0,E=!1,w=null,T=null,R=null,U=null,O=null;const N=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let k=!1,te=0;const Q=s.getParameter(s.VERSION);Q.indexOf("WebGL")!==-1?(te=parseFloat(/^WebGL (\d)/.exec(Q)[1]),k=te>=1):Q.indexOf("OpenGL ES")!==-1&&(te=parseFloat(/^OpenGL ES (\d)/.exec(Q)[1]),k=te>=2);let $=null,ae={};const Ae=s.getParameter(s.SCISSOR_BOX),Ce=s.getParameter(s.VIEWPORT),Ie=new bt().fromArray(Ae),je=new bt().fromArray(Ce);function $e(L,K,ne,ce){const Z=new Uint8Array(4),q=s.createTexture();s.bindTexture(L,q),s.texParameteri(L,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(L,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let ve=0;ve<ne;ve++)L===s.TEXTURE_3D||L===s.TEXTURE_2D_ARRAY?s.texImage3D(K,0,s.RGBA,1,1,ce,0,s.RGBA,s.UNSIGNED_BYTE,Z):s.texImage2D(K+ve,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Z);return q}const j={};j[s.TEXTURE_2D]=$e(s.TEXTURE_2D,s.TEXTURE_2D,1),j[s.TEXTURE_CUBE_MAP]=$e(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),j[s.TEXTURE_2D_ARRAY]=$e(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),j[s.TEXTURE_3D]=$e(s.TEXTURE_3D,s.TEXTURE_3D,1,1),r.setClear(0,0,0,1),a.setClear(1),o.setClear(0),se(s.DEPTH_TEST),a.setFunc(Hs),oe(!1),re(Qh),se(s.CULL_FACE),pe(Fi);function se(L){h[L]!==!0&&(s.enable(L),h[L]=!0)}function Me(L){h[L]!==!1&&(s.disable(L),h[L]=!1)}function Qe(L,K){return u[L]!==K?(s.bindFramebuffer(L,K),u[L]=K,L===s.DRAW_FRAMEBUFFER&&(u[s.FRAMEBUFFER]=K),L===s.FRAMEBUFFER&&(u[s.DRAW_FRAMEBUFFER]=K),!0):!1}function Le(L,K){let ne=f,ce=!1;if(L){ne=d.get(K),ne===void 0&&(ne=[],d.set(K,ne));const Z=L.textures;if(ne.length!==Z.length||ne[0]!==s.COLOR_ATTACHMENT0){for(let q=0,ve=Z.length;q<ve;q++)ne[q]=s.COLOR_ATTACHMENT0+q;ne.length=Z.length,ce=!0}}else ne[0]!==s.BACK&&(ne[0]=s.BACK,ce=!0);ce&&s.drawBuffers(ne)}function st(L){return p!==L?(s.useProgram(L),p=L,!0):!1}const xt={[$i]:s.FUNC_ADD,[Dp]:s.FUNC_SUBTRACT,[Lp]:s.FUNC_REVERSE_SUBTRACT};xt[Pp]=s.MIN,xt[Fp]=s.MAX;const P={[Up]:s.ZERO,[Np]:s.ONE,[Op]:s.SRC_COLOR,[Ec]:s.SRC_ALPHA,[Vp]:s.SRC_ALPHA_SATURATE,[Hp]:s.DST_COLOR,[Qp]:s.DST_ALPHA,[kp]:s.ONE_MINUS_SRC_COLOR,[vc]:s.ONE_MINUS_SRC_ALPHA,[zp]:s.ONE_MINUS_DST_COLOR,[Gp]:s.ONE_MINUS_DST_ALPHA,[Wp]:s.CONSTANT_COLOR,[qp]:s.ONE_MINUS_CONSTANT_COLOR,[Xp]:s.CONSTANT_ALPHA,[Yp]:s.ONE_MINUS_CONSTANT_ALPHA};function pe(L,K,ne,ce,Z,q,ve,F,J,he){if(L===Fi){g===!0&&(Me(s.BLEND),g=!1);return}if(g===!1&&(se(s.BLEND),g=!0),L!==Rp){if(L!==m||he!==E){if((A!==$i||b!==$i)&&(s.blendEquation(s.FUNC_ADD),A=$i,b=$i),he)switch(L){case Us:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case _c:s.blendFunc(s.ONE,s.ONE);break;case Gh:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case Hh:s.blendFuncSeparate(s.DST_COLOR,s.ONE_MINUS_SRC_ALPHA,s.ZERO,s.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",L);break}else switch(L){case Us:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case _c:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE,s.ONE,s.ONE);break;case Gh:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Hh:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",L);break}y=null,x=null,_=null,C=null,v.set(0,0,0),I=0,m=L,E=he}return}Z=Z||K,q=q||ne,ve=ve||ce,(K!==A||Z!==b)&&(s.blendEquationSeparate(xt[K],xt[Z]),A=K,b=Z),(ne!==y||ce!==x||q!==_||ve!==C)&&(s.blendFuncSeparate(P[ne],P[ce],P[q],P[ve]),y=ne,x=ce,_=q,C=ve),(F.equals(v)===!1||J!==I)&&(s.blendColor(F.r,F.g,F.b,J),v.copy(F),I=J),m=L,E=!1}function le(L,K){L.side===ln?Me(s.CULL_FACE):se(s.CULL_FACE);let ne=L.side===bn;K&&(ne=!ne),oe(ne),L.blending===Us&&L.transparent===!1?pe(Fi):pe(L.blending,L.blendEquation,L.blendSrc,L.blendDst,L.blendEquationAlpha,L.blendSrcAlpha,L.blendDstAlpha,L.blendColor,L.blendAlpha,L.premultipliedAlpha),a.setFunc(L.depthFunc),a.setTest(L.depthTest),a.setMask(L.depthWrite),r.setMask(L.colorWrite);const ce=L.stencilWrite;o.setTest(ce),ce&&(o.setMask(L.stencilWriteMask),o.setFunc(L.stencilFunc,L.stencilRef,L.stencilFuncMask),o.setOp(L.stencilFail,L.stencilZFail,L.stencilZPass)),me(L.polygonOffset,L.polygonOffsetFactor,L.polygonOffsetUnits),L.alphaToCoverage===!0?se(s.SAMPLE_ALPHA_TO_COVERAGE):Me(s.SAMPLE_ALPHA_TO_COVERAGE)}function oe(L){w!==L&&(L?s.frontFace(s.CW):s.frontFace(s.CCW),w=L)}function re(L){L!==Tp?(se(s.CULL_FACE),L!==T&&(L===Qh?s.cullFace(s.BACK):L===Bp?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):Me(s.CULL_FACE),T=L}function _e(L){L!==R&&(k&&s.lineWidth(L),R=L)}function me(L,K,ne){L?(se(s.POLYGON_OFFSET_FILL),(U!==K||O!==ne)&&(s.polygonOffset(K,ne),U=K,O=ne)):Me(s.POLYGON_OFFSET_FILL)}function be(L){L?se(s.SCISSOR_TEST):Me(s.SCISSOR_TEST)}function qe(L){L===void 0&&(L=s.TEXTURE0+N-1),$!==L&&(s.activeTexture(L),$=L)}function Ke(L,K,ne){ne===void 0&&($===null?ne=s.TEXTURE0+N-1:ne=$);let ce=ae[ne];ce===void 0&&(ce={type:void 0,texture:void 0},ae[ne]=ce),(ce.type!==L||ce.texture!==K)&&($!==ne&&(s.activeTexture(ne),$=ne),s.bindTexture(L,K||j[L]),ce.type=L,ce.texture=K)}function D(){const L=ae[$];L!==void 0&&L.type!==void 0&&(s.bindTexture(L.type,null),L.type=void 0,L.texture=void 0)}function M(){try{s.compressedTexImage2D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function z(){try{s.compressedTexImage3D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function Y(){try{s.texSubImage2D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function de(){try{s.texSubImage3D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function ee(){try{s.compressedTexSubImage2D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function Pe(){try{s.compressedTexSubImage3D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function xe(){try{s.texStorage2D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function De(){try{s.texStorage3D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function Fe(){try{s.texImage2D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function ge(){try{s.texImage3D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function Ee(L){Ie.equals(L)===!1&&(s.scissor(L.x,L.y,L.z,L.w),Ie.copy(L))}function Ne(L){je.equals(L)===!1&&(s.viewport(L.x,L.y,L.z,L.w),je.copy(L))}function He(L,K){let ne=l.get(K);ne===void 0&&(ne=new WeakMap,l.set(K,ne));let ce=ne.get(L);ce===void 0&&(ce=s.getUniformBlockIndex(K,L.name),ne.set(L,ce))}function W(L,K){const ce=l.get(K).get(L);c.get(K)!==ce&&(s.uniformBlockBinding(K,ce,L.__bindingPointIndex),c.set(K,ce))}function fe(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),a.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),h={},$=null,ae={},u={},d=new WeakMap,f=[],p=null,g=!1,m=null,A=null,y=null,x=null,b=null,_=null,C=null,v=new ue(0,0,0),I=0,E=!1,w=null,T=null,R=null,U=null,O=null,Ie.set(0,0,s.canvas.width,s.canvas.height),je.set(0,0,s.canvas.width,s.canvas.height),r.reset(),a.reset(),o.reset()}return{buffers:{color:r,depth:a,stencil:o},enable:se,disable:Me,bindFramebuffer:Qe,drawBuffers:Le,useProgram:st,setBlending:pe,setMaterial:le,setFlipSided:oe,setCullFace:re,setLineWidth:_e,setPolygonOffset:me,setScissorTest:be,activeTexture:qe,bindTexture:Ke,unbindTexture:D,compressedTexImage2D:M,compressedTexImage3D:z,texImage2D:Fe,texImage3D:ge,updateUBOMapping:He,uniformBlockBinding:W,texStorage2D:xe,texStorage3D:De,texSubImage2D:Y,texSubImage3D:de,compressedTexSubImage2D:ee,compressedTexSubImage3D:Pe,scissor:Ee,viewport:Ne,reset:fe}}function Bw(s,e,t,n,i,r,a){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),l=new ie,h=new WeakMap;let u;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(D,M){return f?new OffscreenCanvas(D,M):ka("canvas")}function g(D,M,z){let Y=1;const de=Ke(D);if((de.width>z||de.height>z)&&(Y=z/Math.max(de.width,de.height)),Y<1)if(typeof HTMLImageElement<"u"&&D instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&D instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&D instanceof ImageBitmap||typeof VideoFrame<"u"&&D instanceof VideoFrame){const ee=Math.floor(Y*de.width),Pe=Math.floor(Y*de.height);u===void 0&&(u=p(ee,Pe));const xe=M?p(ee,Pe):u;return xe.width=ee,xe.height=Pe,xe.getContext("2d").drawImage(D,0,0,ee,Pe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+de.width+"x"+de.height+") to ("+ee+"x"+Pe+")."),xe}else return"data"in D&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+de.width+"x"+de.height+")."),D;return D}function m(D){return D.generateMipmaps}function A(D){s.generateMipmap(D)}function y(D){return D.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:D.isWebGL3DRenderTarget?s.TEXTURE_3D:D.isWebGLArrayRenderTarget||D.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function x(D,M,z,Y,de=!1){if(D!==null){if(s[D]!==void 0)return s[D];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+D+"'")}let ee=M;if(M===s.RED&&(z===s.FLOAT&&(ee=s.R32F),z===s.HALF_FLOAT&&(ee=s.R16F),z===s.UNSIGNED_BYTE&&(ee=s.R8)),M===s.RED_INTEGER&&(z===s.UNSIGNED_BYTE&&(ee=s.R8UI),z===s.UNSIGNED_SHORT&&(ee=s.R16UI),z===s.UNSIGNED_INT&&(ee=s.R32UI),z===s.BYTE&&(ee=s.R8I),z===s.SHORT&&(ee=s.R16I),z===s.INT&&(ee=s.R32I)),M===s.RG&&(z===s.FLOAT&&(ee=s.RG32F),z===s.HALF_FLOAT&&(ee=s.RG16F),z===s.UNSIGNED_BYTE&&(ee=s.RG8)),M===s.RG_INTEGER&&(z===s.UNSIGNED_BYTE&&(ee=s.RG8UI),z===s.UNSIGNED_SHORT&&(ee=s.RG16UI),z===s.UNSIGNED_INT&&(ee=s.RG32UI),z===s.BYTE&&(ee=s.RG8I),z===s.SHORT&&(ee=s.RG16I),z===s.INT&&(ee=s.RG32I)),M===s.RGB_INTEGER&&(z===s.UNSIGNED_BYTE&&(ee=s.RGB8UI),z===s.UNSIGNED_SHORT&&(ee=s.RGB16UI),z===s.UNSIGNED_INT&&(ee=s.RGB32UI),z===s.BYTE&&(ee=s.RGB8I),z===s.SHORT&&(ee=s.RGB16I),z===s.INT&&(ee=s.RGB32I)),M===s.RGBA_INTEGER&&(z===s.UNSIGNED_BYTE&&(ee=s.RGBA8UI),z===s.UNSIGNED_SHORT&&(ee=s.RGBA16UI),z===s.UNSIGNED_INT&&(ee=s.RGBA32UI),z===s.BYTE&&(ee=s.RGBA8I),z===s.SHORT&&(ee=s.RGBA16I),z===s.INT&&(ee=s.RGBA32I)),M===s.RGB&&(z===s.UNSIGNED_INT_5_9_9_9_REV&&(ee=s.RGB9_E5),z===s.UNSIGNED_INT_10F_11F_11F_REV&&(ee=s.R11F_G11F_B10F)),M===s.RGBA){const Pe=de?Na:dt.getTransfer(Y);z===s.FLOAT&&(ee=s.RGBA32F),z===s.HALF_FLOAT&&(ee=s.RGBA16F),z===s.UNSIGNED_BYTE&&(ee=Pe===Pt?s.SRGB8_ALPHA8:s.RGBA8),z===s.UNSIGNED_SHORT_4_4_4_4&&(ee=s.RGBA4),z===s.UNSIGNED_SHORT_5_5_5_1&&(ee=s.RGB5_A1)}return(ee===s.R16F||ee===s.R32F||ee===s.RG16F||ee===s.RG32F||ee===s.RGBA16F||ee===s.RGBA32F)&&e.get("EXT_color_buffer_float"),ee}function b(D,M){let z;return D?M===null||M===Gi||M===Fr?z=s.DEPTH24_STENCIL8:M===en?z=s.DEPTH32F_STENCIL8:M===Pr&&(z=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):M===null||M===Gi||M===Fr?z=s.DEPTH_COMPONENT24:M===en?z=s.DEPTH_COMPONENT32F:M===Pr&&(z=s.DEPTH_COMPONENT16),z}function _(D,M){return m(D)===!0||D.isFramebufferTexture&&D.minFilter!==Jt&&D.minFilter!==Ht?Math.log2(Math.max(M.width,M.height))+1:D.mipmaps!==void 0&&D.mipmaps.length>0?D.mipmaps.length:D.isCompressedTexture&&Array.isArray(D.image)?M.mipmaps.length:1}function C(D){const M=D.target;M.removeEventListener("dispose",C),I(M),M.isVideoTexture&&h.delete(M)}function v(D){const M=D.target;M.removeEventListener("dispose",v),w(M)}function I(D){const M=n.get(D);if(M.__webglInit===void 0)return;const z=D.source,Y=d.get(z);if(Y){const de=Y[M.__cacheKey];de.usedTimes--,de.usedTimes===0&&E(D),Object.keys(Y).length===0&&d.delete(z)}n.remove(D)}function E(D){const M=n.get(D);s.deleteTexture(M.__webglTexture);const z=D.source,Y=d.get(z);delete Y[M.__cacheKey],a.memory.textures--}function w(D){const M=n.get(D);if(D.depthTexture&&(D.depthTexture.dispose(),n.remove(D.depthTexture)),D.isWebGLCubeRenderTarget)for(let Y=0;Y<6;Y++){if(Array.isArray(M.__webglFramebuffer[Y]))for(let de=0;de<M.__webglFramebuffer[Y].length;de++)s.deleteFramebuffer(M.__webglFramebuffer[Y][de]);else s.deleteFramebuffer(M.__webglFramebuffer[Y]);M.__webglDepthbuffer&&s.deleteRenderbuffer(M.__webglDepthbuffer[Y])}else{if(Array.isArray(M.__webglFramebuffer))for(let Y=0;Y<M.__webglFramebuffer.length;Y++)s.deleteFramebuffer(M.__webglFramebuffer[Y]);else s.deleteFramebuffer(M.__webglFramebuffer);if(M.__webglDepthbuffer&&s.deleteRenderbuffer(M.__webglDepthbuffer),M.__webglMultisampledFramebuffer&&s.deleteFramebuffer(M.__webglMultisampledFramebuffer),M.__webglColorRenderbuffer)for(let Y=0;Y<M.__webglColorRenderbuffer.length;Y++)M.__webglColorRenderbuffer[Y]&&s.deleteRenderbuffer(M.__webglColorRenderbuffer[Y]);M.__webglDepthRenderbuffer&&s.deleteRenderbuffer(M.__webglDepthRenderbuffer)}const z=D.textures;for(let Y=0,de=z.length;Y<de;Y++){const ee=n.get(z[Y]);ee.__webglTexture&&(s.deleteTexture(ee.__webglTexture),a.memory.textures--),n.remove(z[Y])}n.remove(D)}let T=0;function R(){T=0}function U(){const D=T;return D>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+D+" texture units while this GPU supports only "+i.maxTextures),T+=1,D}function O(D){const M=[];return M.push(D.wrapS),M.push(D.wrapT),M.push(D.wrapR||0),M.push(D.magFilter),M.push(D.minFilter),M.push(D.anisotropy),M.push(D.internalFormat),M.push(D.format),M.push(D.type),M.push(D.generateMipmaps),M.push(D.premultiplyAlpha),M.push(D.flipY),M.push(D.unpackAlignment),M.push(D.colorSpace),M.join()}function N(D,M){const z=n.get(D);if(D.isVideoTexture&&be(D),D.isRenderTargetTexture===!1&&D.isExternalTexture!==!0&&D.version>0&&z.__version!==D.version){const Y=D.image;if(Y===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Y.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{j(z,D,M);return}}else D.isExternalTexture&&(z.__webglTexture=D.sourceTexture?D.sourceTexture:null);t.bindTexture(s.TEXTURE_2D,z.__webglTexture,s.TEXTURE0+M)}function k(D,M){const z=n.get(D);if(D.isRenderTargetTexture===!1&&D.version>0&&z.__version!==D.version){j(z,D,M);return}t.bindTexture(s.TEXTURE_2D_ARRAY,z.__webglTexture,s.TEXTURE0+M)}function te(D,M){const z=n.get(D);if(D.isRenderTargetTexture===!1&&D.version>0&&z.__version!==D.version){j(z,D,M);return}t.bindTexture(s.TEXTURE_3D,z.__webglTexture,s.TEXTURE0+M)}function Q(D,M){const z=n.get(D);if(D.version>0&&z.__version!==D.version){se(z,D,M);return}t.bindTexture(s.TEXTURE_CUBE_MAP,z.__webglTexture,s.TEXTURE0+M)}const $={[Hn]:s.REPEAT,[Yn]:s.CLAMP_TO_EDGE,[Lr]:s.MIRRORED_REPEAT},ae={[Jt]:s.NEAREST,[Xa]:s.NEAREST_MIPMAP_NEAREST,[Ds]:s.NEAREST_MIPMAP_LINEAR,[Ht]:s.LINEAR,[Mr]:s.LINEAR_MIPMAP_NEAREST,[kn]:s.LINEAR_MIPMAP_LINEAR},Ae={[uA]:s.NEVER,[gA]:s.ALWAYS,[dA]:s.LESS,[gu]:s.LEQUAL,[fA]:s.EQUAL,[mA]:s.GEQUAL,[pA]:s.GREATER,[AA]:s.NOTEQUAL};function Ce(D,M){if(M.type===en&&e.has("OES_texture_float_linear")===!1&&(M.magFilter===Ht||M.magFilter===Mr||M.magFilter===Ds||M.magFilter===kn||M.minFilter===Ht||M.minFilter===Mr||M.minFilter===Ds||M.minFilter===kn)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(D,s.TEXTURE_WRAP_S,$[M.wrapS]),s.texParameteri(D,s.TEXTURE_WRAP_T,$[M.wrapT]),(D===s.TEXTURE_3D||D===s.TEXTURE_2D_ARRAY)&&s.texParameteri(D,s.TEXTURE_WRAP_R,$[M.wrapR]),s.texParameteri(D,s.TEXTURE_MAG_FILTER,ae[M.magFilter]),s.texParameteri(D,s.TEXTURE_MIN_FILTER,ae[M.minFilter]),M.compareFunction&&(s.texParameteri(D,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(D,s.TEXTURE_COMPARE_FUNC,Ae[M.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(M.magFilter===Jt||M.minFilter!==Ds&&M.minFilter!==kn||M.type===en&&e.has("OES_texture_float_linear")===!1)return;if(M.anisotropy>1||n.get(M).__currentAnisotropy){const z=e.get("EXT_texture_filter_anisotropic");s.texParameterf(D,z.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(M.anisotropy,i.getMaxAnisotropy())),n.get(M).__currentAnisotropy=M.anisotropy}}}function Ie(D,M){let z=!1;D.__webglInit===void 0&&(D.__webglInit=!0,M.addEventListener("dispose",C));const Y=M.source;let de=d.get(Y);de===void 0&&(de={},d.set(Y,de));const ee=O(M);if(ee!==D.__cacheKey){de[ee]===void 0&&(de[ee]={texture:s.createTexture(),usedTimes:0},a.memory.textures++,z=!0),de[ee].usedTimes++;const Pe=de[D.__cacheKey];Pe!==void 0&&(de[D.__cacheKey].usedTimes--,Pe.usedTimes===0&&E(M)),D.__cacheKey=ee,D.__webglTexture=de[ee].texture}return z}function je(D,M,z){return Math.floor(Math.floor(D/z)/M)}function $e(D,M,z,Y){const ee=D.updateRanges;if(ee.length===0)t.texSubImage2D(s.TEXTURE_2D,0,0,0,M.width,M.height,z,Y,M.data);else{ee.sort((ge,Ee)=>ge.start-Ee.start);let Pe=0;for(let ge=1;ge<ee.length;ge++){const Ee=ee[Pe],Ne=ee[ge],He=Ee.start+Ee.count,W=je(Ne.start,M.width,4),fe=je(Ee.start,M.width,4);Ne.start<=He+1&&W===fe&&je(Ne.start+Ne.count-1,M.width,4)===W?Ee.count=Math.max(Ee.count,Ne.start+Ne.count-Ee.start):(++Pe,ee[Pe]=Ne)}ee.length=Pe+1;const xe=s.getParameter(s.UNPACK_ROW_LENGTH),De=s.getParameter(s.UNPACK_SKIP_PIXELS),Fe=s.getParameter(s.UNPACK_SKIP_ROWS);s.pixelStorei(s.UNPACK_ROW_LENGTH,M.width);for(let ge=0,Ee=ee.length;ge<Ee;ge++){const Ne=ee[ge],He=Math.floor(Ne.start/4),W=Math.ceil(Ne.count/4),fe=He%M.width,L=Math.floor(He/M.width),K=W,ne=1;s.pixelStorei(s.UNPACK_SKIP_PIXELS,fe),s.pixelStorei(s.UNPACK_SKIP_ROWS,L),t.texSubImage2D(s.TEXTURE_2D,0,fe,L,K,ne,z,Y,M.data)}D.clearUpdateRanges(),s.pixelStorei(s.UNPACK_ROW_LENGTH,xe),s.pixelStorei(s.UNPACK_SKIP_PIXELS,De),s.pixelStorei(s.UNPACK_SKIP_ROWS,Fe)}}function j(D,M,z){let Y=s.TEXTURE_2D;(M.isDataArrayTexture||M.isCompressedArrayTexture)&&(Y=s.TEXTURE_2D_ARRAY),M.isData3DTexture&&(Y=s.TEXTURE_3D);const de=Ie(D,M),ee=M.source;t.bindTexture(Y,D.__webglTexture,s.TEXTURE0+z);const Pe=n.get(ee);if(ee.version!==Pe.__version||de===!0){t.activeTexture(s.TEXTURE0+z);const xe=dt.getPrimaries(dt.workingColorSpace),De=M.colorSpace===ci?null:dt.getPrimaries(M.colorSpace),Fe=M.colorSpace===ci||xe===De?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,M.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,M.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,M.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Fe);let ge=g(M.image,!1,i.maxTextureSize);ge=qe(M,ge);const Ee=r.convert(M.format,M.colorSpace),Ne=r.convert(M.type);let He=x(M.internalFormat,Ee,Ne,M.colorSpace,M.isVideoTexture);Ce(Y,M);let W;const fe=M.mipmaps,L=M.isVideoTexture!==!0,K=Pe.__version===void 0||de===!0,ne=ee.dataReady,ce=_(M,ge);if(M.isDepthTexture)He=b(M.format===Or,M.type),K&&(L?t.texStorage2D(s.TEXTURE_2D,1,He,ge.width,ge.height):t.texImage2D(s.TEXTURE_2D,0,He,ge.width,ge.height,0,Ee,Ne,null));else if(M.isDataTexture)if(fe.length>0){L&&K&&t.texStorage2D(s.TEXTURE_2D,ce,He,fe[0].width,fe[0].height);for(let Z=0,q=fe.length;Z<q;Z++)W=fe[Z],L?ne&&t.texSubImage2D(s.TEXTURE_2D,Z,0,0,W.width,W.height,Ee,Ne,W.data):t.texImage2D(s.TEXTURE_2D,Z,He,W.width,W.height,0,Ee,Ne,W.data);M.generateMipmaps=!1}else L?(K&&t.texStorage2D(s.TEXTURE_2D,ce,He,ge.width,ge.height),ne&&$e(M,ge,Ee,Ne)):t.texImage2D(s.TEXTURE_2D,0,He,ge.width,ge.height,0,Ee,Ne,ge.data);else if(M.isCompressedTexture)if(M.isCompressedArrayTexture){L&&K&&t.texStorage3D(s.TEXTURE_2D_ARRAY,ce,He,fe[0].width,fe[0].height,ge.depth);for(let Z=0,q=fe.length;Z<q;Z++)if(W=fe[Z],M.format!==Vt)if(Ee!==null)if(L){if(ne)if(M.layerUpdates.size>0){const ve=jh(W.width,W.height,M.format,M.type);for(const F of M.layerUpdates){const J=W.data.subarray(F*ve/W.data.BYTES_PER_ELEMENT,(F+1)*ve/W.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Z,0,0,F,W.width,W.height,1,Ee,J)}M.clearLayerUpdates()}else t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Z,0,0,0,W.width,W.height,ge.depth,Ee,W.data)}else t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,Z,He,W.width,W.height,ge.depth,0,W.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else L?ne&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,Z,0,0,0,W.width,W.height,ge.depth,Ee,Ne,W.data):t.texImage3D(s.TEXTURE_2D_ARRAY,Z,He,W.width,W.height,ge.depth,0,Ee,Ne,W.data)}else{L&&K&&t.texStorage2D(s.TEXTURE_2D,ce,He,fe[0].width,fe[0].height);for(let Z=0,q=fe.length;Z<q;Z++)W=fe[Z],M.format!==Vt?Ee!==null?L?ne&&t.compressedTexSubImage2D(s.TEXTURE_2D,Z,0,0,W.width,W.height,Ee,W.data):t.compressedTexImage2D(s.TEXTURE_2D,Z,He,W.width,W.height,0,W.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):L?ne&&t.texSubImage2D(s.TEXTURE_2D,Z,0,0,W.width,W.height,Ee,Ne,W.data):t.texImage2D(s.TEXTURE_2D,Z,He,W.width,W.height,0,Ee,Ne,W.data)}else if(M.isDataArrayTexture)if(L){if(K&&t.texStorage3D(s.TEXTURE_2D_ARRAY,ce,He,ge.width,ge.height,ge.depth),ne)if(M.layerUpdates.size>0){const Z=jh(ge.width,ge.height,M.format,M.type);for(const q of M.layerUpdates){const ve=ge.data.subarray(q*Z/ge.data.BYTES_PER_ELEMENT,(q+1)*Z/ge.data.BYTES_PER_ELEMENT);t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,q,ge.width,ge.height,1,Ee,Ne,ve)}M.clearLayerUpdates()}else t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,ge.width,ge.height,ge.depth,Ee,Ne,ge.data)}else t.texImage3D(s.TEXTURE_2D_ARRAY,0,He,ge.width,ge.height,ge.depth,0,Ee,Ne,ge.data);else if(M.isData3DTexture)L?(K&&t.texStorage3D(s.TEXTURE_3D,ce,He,ge.width,ge.height,ge.depth),ne&&t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,ge.width,ge.height,ge.depth,Ee,Ne,ge.data)):t.texImage3D(s.TEXTURE_3D,0,He,ge.width,ge.height,ge.depth,0,Ee,Ne,ge.data);else if(M.isFramebufferTexture){if(K)if(L)t.texStorage2D(s.TEXTURE_2D,ce,He,ge.width,ge.height);else{let Z=ge.width,q=ge.height;for(let ve=0;ve<ce;ve++)t.texImage2D(s.TEXTURE_2D,ve,He,Z,q,0,Ee,Ne,null),Z>>=1,q>>=1}}else if(fe.length>0){if(L&&K){const Z=Ke(fe[0]);t.texStorage2D(s.TEXTURE_2D,ce,He,Z.width,Z.height)}for(let Z=0,q=fe.length;Z<q;Z++)W=fe[Z],L?ne&&t.texSubImage2D(s.TEXTURE_2D,Z,0,0,Ee,Ne,W):t.texImage2D(s.TEXTURE_2D,Z,He,Ee,Ne,W);M.generateMipmaps=!1}else if(L){if(K){const Z=Ke(ge);t.texStorage2D(s.TEXTURE_2D,ce,He,Z.width,Z.height)}ne&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Ee,Ne,ge)}else t.texImage2D(s.TEXTURE_2D,0,He,Ee,Ne,ge);m(M)&&A(Y),Pe.__version=ee.version,M.onUpdate&&M.onUpdate(M)}D.__version=M.version}function se(D,M,z){if(M.image.length!==6)return;const Y=Ie(D,M),de=M.source;t.bindTexture(s.TEXTURE_CUBE_MAP,D.__webglTexture,s.TEXTURE0+z);const ee=n.get(de);if(de.version!==ee.__version||Y===!0){t.activeTexture(s.TEXTURE0+z);const Pe=dt.getPrimaries(dt.workingColorSpace),xe=M.colorSpace===ci?null:dt.getPrimaries(M.colorSpace),De=M.colorSpace===ci||Pe===xe?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,M.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,M.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,M.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,De);const Fe=M.isCompressedTexture||M.image[0].isCompressedTexture,ge=M.image[0]&&M.image[0].isDataTexture,Ee=[];for(let q=0;q<6;q++)!Fe&&!ge?Ee[q]=g(M.image[q],!0,i.maxCubemapSize):Ee[q]=ge?M.image[q].image:M.image[q],Ee[q]=qe(M,Ee[q]);const Ne=Ee[0],He=r.convert(M.format,M.colorSpace),W=r.convert(M.type),fe=x(M.internalFormat,He,W,M.colorSpace),L=M.isVideoTexture!==!0,K=ee.__version===void 0||Y===!0,ne=de.dataReady;let ce=_(M,Ne);Ce(s.TEXTURE_CUBE_MAP,M);let Z;if(Fe){L&&K&&t.texStorage2D(s.TEXTURE_CUBE_MAP,ce,fe,Ne.width,Ne.height);for(let q=0;q<6;q++){Z=Ee[q].mipmaps;for(let ve=0;ve<Z.length;ve++){const F=Z[ve];M.format!==Vt?He!==null?L?ne&&t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+q,ve,0,0,F.width,F.height,He,F.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+q,ve,fe,F.width,F.height,0,F.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):L?ne&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+q,ve,0,0,F.width,F.height,He,W,F.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+q,ve,fe,F.width,F.height,0,He,W,F.data)}}}else{if(Z=M.mipmaps,L&&K){Z.length>0&&ce++;const q=Ke(Ee[0]);t.texStorage2D(s.TEXTURE_CUBE_MAP,ce,fe,q.width,q.height)}for(let q=0;q<6;q++)if(ge){L?ne&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+q,0,0,0,Ee[q].width,Ee[q].height,He,W,Ee[q].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+q,0,fe,Ee[q].width,Ee[q].height,0,He,W,Ee[q].data);for(let ve=0;ve<Z.length;ve++){const J=Z[ve].image[q].image;L?ne&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+q,ve+1,0,0,J.width,J.height,He,W,J.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+q,ve+1,fe,J.width,J.height,0,He,W,J.data)}}else{L?ne&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+q,0,0,0,He,W,Ee[q]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+q,0,fe,He,W,Ee[q]);for(let ve=0;ve<Z.length;ve++){const F=Z[ve];L?ne&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+q,ve+1,0,0,He,W,F.image[q]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+q,ve+1,fe,He,W,F.image[q])}}}m(M)&&A(s.TEXTURE_CUBE_MAP),ee.__version=de.version,M.onUpdate&&M.onUpdate(M)}D.__version=M.version}function Me(D,M,z,Y,de,ee){const Pe=r.convert(z.format,z.colorSpace),xe=r.convert(z.type),De=x(z.internalFormat,Pe,xe,z.colorSpace),Fe=n.get(M),ge=n.get(z);if(ge.__renderTarget=M,!Fe.__hasExternalTextures){const Ee=Math.max(1,M.width>>ee),Ne=Math.max(1,M.height>>ee);de===s.TEXTURE_3D||de===s.TEXTURE_2D_ARRAY?t.texImage3D(de,ee,De,Ee,Ne,M.depth,0,Pe,xe,null):t.texImage2D(de,ee,De,Ee,Ne,0,Pe,xe,null)}t.bindFramebuffer(s.FRAMEBUFFER,D),me(M)?o.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,Y,de,ge.__webglTexture,0,_e(M)):(de===s.TEXTURE_2D||de>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&de<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,Y,de,ge.__webglTexture,ee),t.bindFramebuffer(s.FRAMEBUFFER,null)}function Qe(D,M,z){if(s.bindRenderbuffer(s.RENDERBUFFER,D),M.depthBuffer){const Y=M.depthTexture,de=Y&&Y.isDepthTexture?Y.type:null,ee=b(M.stencilBuffer,de),Pe=M.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,xe=_e(M);me(M)?o.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,xe,ee,M.width,M.height):z?s.renderbufferStorageMultisample(s.RENDERBUFFER,xe,ee,M.width,M.height):s.renderbufferStorage(s.RENDERBUFFER,ee,M.width,M.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,Pe,s.RENDERBUFFER,D)}else{const Y=M.textures;for(let de=0;de<Y.length;de++){const ee=Y[de],Pe=r.convert(ee.format,ee.colorSpace),xe=r.convert(ee.type),De=x(ee.internalFormat,Pe,xe,ee.colorSpace),Fe=_e(M);z&&me(M)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Fe,De,M.width,M.height):me(M)?o.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Fe,De,M.width,M.height):s.renderbufferStorage(s.RENDERBUFFER,De,M.width,M.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function Le(D,M){if(M&&M.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,D),!(M.depthTexture&&M.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const Y=n.get(M.depthTexture);Y.__renderTarget=M,(!Y.__webglTexture||M.depthTexture.image.width!==M.width||M.depthTexture.image.height!==M.height)&&(M.depthTexture.image.width=M.width,M.depthTexture.image.height=M.height,M.depthTexture.needsUpdate=!0),N(M.depthTexture,0);const de=Y.__webglTexture,ee=_e(M);if(M.depthTexture.format===Nr)me(M)?o.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,de,0,ee):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,de,0);else if(M.depthTexture.format===Or)me(M)?o.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,de,0,ee):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,de,0);else throw new Error("Unknown depthTexture format")}function st(D){const M=n.get(D),z=D.isWebGLCubeRenderTarget===!0;if(M.__boundDepthTexture!==D.depthTexture){const Y=D.depthTexture;if(M.__depthDisposeCallback&&M.__depthDisposeCallback(),Y){const de=()=>{delete M.__boundDepthTexture,delete M.__depthDisposeCallback,Y.removeEventListener("dispose",de)};Y.addEventListener("dispose",de),M.__depthDisposeCallback=de}M.__boundDepthTexture=Y}if(D.depthTexture&&!M.__autoAllocateDepthBuffer){if(z)throw new Error("target.depthTexture not supported in Cube render targets");const Y=D.texture.mipmaps;Y&&Y.length>0?Le(M.__webglFramebuffer[0],D):Le(M.__webglFramebuffer,D)}else if(z){M.__webglDepthbuffer=[];for(let Y=0;Y<6;Y++)if(t.bindFramebuffer(s.FRAMEBUFFER,M.__webglFramebuffer[Y]),M.__webglDepthbuffer[Y]===void 0)M.__webglDepthbuffer[Y]=s.createRenderbuffer(),Qe(M.__webglDepthbuffer[Y],D,!1);else{const de=D.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ee=M.__webglDepthbuffer[Y];s.bindRenderbuffer(s.RENDERBUFFER,ee),s.framebufferRenderbuffer(s.FRAMEBUFFER,de,s.RENDERBUFFER,ee)}}else{const Y=D.texture.mipmaps;if(Y&&Y.length>0?t.bindFramebuffer(s.FRAMEBUFFER,M.__webglFramebuffer[0]):t.bindFramebuffer(s.FRAMEBUFFER,M.__webglFramebuffer),M.__webglDepthbuffer===void 0)M.__webglDepthbuffer=s.createRenderbuffer(),Qe(M.__webglDepthbuffer,D,!1);else{const de=D.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ee=M.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,ee),s.framebufferRenderbuffer(s.FRAMEBUFFER,de,s.RENDERBUFFER,ee)}}t.bindFramebuffer(s.FRAMEBUFFER,null)}function xt(D,M,z){const Y=n.get(D);M!==void 0&&Me(Y.__webglFramebuffer,D,D.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),z!==void 0&&st(D)}function P(D){const M=D.texture,z=n.get(D),Y=n.get(M);D.addEventListener("dispose",v);const de=D.textures,ee=D.isWebGLCubeRenderTarget===!0,Pe=de.length>1;if(Pe||(Y.__webglTexture===void 0&&(Y.__webglTexture=s.createTexture()),Y.__version=M.version,a.memory.textures++),ee){z.__webglFramebuffer=[];for(let xe=0;xe<6;xe++)if(M.mipmaps&&M.mipmaps.length>0){z.__webglFramebuffer[xe]=[];for(let De=0;De<M.mipmaps.length;De++)z.__webglFramebuffer[xe][De]=s.createFramebuffer()}else z.__webglFramebuffer[xe]=s.createFramebuffer()}else{if(M.mipmaps&&M.mipmaps.length>0){z.__webglFramebuffer=[];for(let xe=0;xe<M.mipmaps.length;xe++)z.__webglFramebuffer[xe]=s.createFramebuffer()}else z.__webglFramebuffer=s.createFramebuffer();if(Pe)for(let xe=0,De=de.length;xe<De;xe++){const Fe=n.get(de[xe]);Fe.__webglTexture===void 0&&(Fe.__webglTexture=s.createTexture(),a.memory.textures++)}if(D.samples>0&&me(D)===!1){z.__webglMultisampledFramebuffer=s.createFramebuffer(),z.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,z.__webglMultisampledFramebuffer);for(let xe=0;xe<de.length;xe++){const De=de[xe];z.__webglColorRenderbuffer[xe]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,z.__webglColorRenderbuffer[xe]);const Fe=r.convert(De.format,De.colorSpace),ge=r.convert(De.type),Ee=x(De.internalFormat,Fe,ge,De.colorSpace,D.isXRRenderTarget===!0),Ne=_e(D);s.renderbufferStorageMultisample(s.RENDERBUFFER,Ne,Ee,D.width,D.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+xe,s.RENDERBUFFER,z.__webglColorRenderbuffer[xe])}s.bindRenderbuffer(s.RENDERBUFFER,null),D.depthBuffer&&(z.__webglDepthRenderbuffer=s.createRenderbuffer(),Qe(z.__webglDepthRenderbuffer,D,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(ee){t.bindTexture(s.TEXTURE_CUBE_MAP,Y.__webglTexture),Ce(s.TEXTURE_CUBE_MAP,M);for(let xe=0;xe<6;xe++)if(M.mipmaps&&M.mipmaps.length>0)for(let De=0;De<M.mipmaps.length;De++)Me(z.__webglFramebuffer[xe][De],D,M,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+xe,De);else Me(z.__webglFramebuffer[xe],D,M,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+xe,0);m(M)&&A(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Pe){for(let xe=0,De=de.length;xe<De;xe++){const Fe=de[xe],ge=n.get(Fe);let Ee=s.TEXTURE_2D;(D.isWebGL3DRenderTarget||D.isWebGLArrayRenderTarget)&&(Ee=D.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(Ee,ge.__webglTexture),Ce(Ee,Fe),Me(z.__webglFramebuffer,D,Fe,s.COLOR_ATTACHMENT0+xe,Ee,0),m(Fe)&&A(Ee)}t.unbindTexture()}else{let xe=s.TEXTURE_2D;if((D.isWebGL3DRenderTarget||D.isWebGLArrayRenderTarget)&&(xe=D.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(xe,Y.__webglTexture),Ce(xe,M),M.mipmaps&&M.mipmaps.length>0)for(let De=0;De<M.mipmaps.length;De++)Me(z.__webglFramebuffer[De],D,M,s.COLOR_ATTACHMENT0,xe,De);else Me(z.__webglFramebuffer,D,M,s.COLOR_ATTACHMENT0,xe,0);m(M)&&A(xe),t.unbindTexture()}D.depthBuffer&&st(D)}function pe(D){const M=D.textures;for(let z=0,Y=M.length;z<Y;z++){const de=M[z];if(m(de)){const ee=y(D),Pe=n.get(de).__webglTexture;t.bindTexture(ee,Pe),A(ee),t.unbindTexture()}}}const le=[],oe=[];function re(D){if(D.samples>0){if(me(D)===!1){const M=D.textures,z=D.width,Y=D.height;let de=s.COLOR_BUFFER_BIT;const ee=D.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Pe=n.get(D),xe=M.length>1;if(xe)for(let Fe=0;Fe<M.length;Fe++)t.bindFramebuffer(s.FRAMEBUFFER,Pe.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Fe,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,Pe.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Fe,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,Pe.__webglMultisampledFramebuffer);const De=D.texture.mipmaps;De&&De.length>0?t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Pe.__webglFramebuffer[0]):t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Pe.__webglFramebuffer);for(let Fe=0;Fe<M.length;Fe++){if(D.resolveDepthBuffer&&(D.depthBuffer&&(de|=s.DEPTH_BUFFER_BIT),D.stencilBuffer&&D.resolveStencilBuffer&&(de|=s.STENCIL_BUFFER_BIT)),xe){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Pe.__webglColorRenderbuffer[Fe]);const ge=n.get(M[Fe]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,ge,0)}s.blitFramebuffer(0,0,z,Y,0,0,z,Y,de,s.NEAREST),c===!0&&(le.length=0,oe.length=0,le.push(s.COLOR_ATTACHMENT0+Fe),D.depthBuffer&&D.resolveDepthBuffer===!1&&(le.push(ee),oe.push(ee),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,oe)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,le))}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),xe)for(let Fe=0;Fe<M.length;Fe++){t.bindFramebuffer(s.FRAMEBUFFER,Pe.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Fe,s.RENDERBUFFER,Pe.__webglColorRenderbuffer[Fe]);const ge=n.get(M[Fe]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,Pe.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Fe,s.TEXTURE_2D,ge,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Pe.__webglMultisampledFramebuffer)}else if(D.depthBuffer&&D.resolveDepthBuffer===!1&&c){const M=D.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[M])}}}function _e(D){return Math.min(i.maxSamples,D.samples)}function me(D){const M=n.get(D);return D.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&M.__useRenderToTexture!==!1}function be(D){const M=a.render.frame;h.get(D)!==M&&(h.set(D,M),D.update())}function qe(D,M){const z=D.colorSpace,Y=D.format,de=D.type;return D.isCompressedTexture===!0||D.isVideoTexture===!0||z!==Qt&&z!==ci&&(dt.getTransfer(z)===Pt?(Y!==Vt||de!==ut)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",z)),M}function Ke(D){return typeof HTMLImageElement<"u"&&D instanceof HTMLImageElement?(l.width=D.naturalWidth||D.width,l.height=D.naturalHeight||D.height):typeof VideoFrame<"u"&&D instanceof VideoFrame?(l.width=D.displayWidth,l.height=D.displayHeight):(l.width=D.width,l.height=D.height),l}this.allocateTextureUnit=U,this.resetTextureUnits=R,this.setTexture2D=N,this.setTexture2DArray=k,this.setTexture3D=te,this.setTextureCube=Q,this.rebindTextures=xt,this.setupRenderTarget=P,this.updateRenderTargetMipmap=pe,this.updateMultisampleRenderTarget=re,this.setupDepthRenderbuffer=st,this.setupFrameBufferTexture=Me,this.useMultisampledRTT=me}function vm(s,e){function t(n,i=ci){let r;const a=dt.getTransfer(i);if(n===ut)return s.UNSIGNED_BYTE;if(n===el)return s.UNSIGNED_SHORT_4_4_4_4;if(n===tl)return s.UNSIGNED_SHORT_5_5_5_1;if(n===Ya)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===Ka)return s.UNSIGNED_INT_10F_11F_11F_REV;if(n===du)return s.BYTE;if(n===fu)return s.SHORT;if(n===Pr)return s.UNSIGNED_SHORT;if(n===$c)return s.INT;if(n===Gi)return s.UNSIGNED_INT;if(n===en)return s.FLOAT;if(n===qn)return s.HALF_FLOAT;if(n===pu)return s.ALPHA;if(n===Ur)return s.RGB;if(n===Vt)return s.RGBA;if(n===Nr)return s.DEPTH_COMPONENT;if(n===Or)return s.DEPTH_STENCIL;if(n===Pi)return s.RED;if(n===Ja)return s.RED_INTEGER;if(n===es)return s.RG;if(n===nl)return s.RG_INTEGER;if(n===il)return s.RGBA_INTEGER;if(n===Ns||n===ns||n===Os||n===Tr)if(a===Pt)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(n===Ns)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===ns)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Os)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Tr)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(n===Ns)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===ns)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Os)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Tr)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Ta||n===Rc||n===zs||n===kr)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(n===Ta)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Rc)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===zs)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===kr)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Ba||n===Qr||n===Gr)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(n===Ba||n===Qr)return a===Pt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===Gr)return a===Pt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===is||n===Dc||n===Lc||n===Pc||n===ks||n===Fc||n===Uc||n===Nc||n===Oc||n===kc||n===Qc||n===Gc||n===Hc||n===zc)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(n===is)return a===Pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Dc)return a===Pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Lc)return a===Pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Pc)return a===Pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===ks)return a===Pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Fc)return a===Pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Uc)return a===Pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Nc)return a===Pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Oc)return a===Pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===kc)return a===Pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Qc)return a===Pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Gc)return a===Pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Hc)return a===Pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===zc)return a===Pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Vs||n===Vc||n===Ra)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(n===Vs)return a===Pt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Vc)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Ra)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Da||n===La||n===Pa||n===Fa)if(r=e.get("EXT_texture_compression_rgtc"),r!==null){if(n===Da)return r.COMPRESSED_RED_RGTC1_EXT;if(n===La)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Pa)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Fa)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Fr?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:t}}const Rw=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,Dw=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class Lw{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t){if(this.texture===null){const n=new Mu(e.texture);(e.depthNear!==t.depthNear||e.depthFar!==t.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=n}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new jn({vertexShader:Rw,fragmentShader:Dw,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new Be(new ni(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class Pw extends Ei{constructor(e,t){super();const n=this;let i=null,r=1,a=null,o="local-floor",c=1,l=null,h=null,u=null,d=null,f=null,p=null;const g=typeof XRWebGLBinding<"u",m=new Lw,A={},y=t.getContextAttributes();let x=null,b=null;const _=[],C=[],v=new ie;let I=null;const E=new Zt;E.viewport=new bt;const w=new Zt;w.viewport=new bt;const T=[E,w],R=new hm;let U=null,O=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(j){let se=_[j];return se===void 0&&(se=new mc,_[j]=se),se.getTargetRaySpace()},this.getControllerGrip=function(j){let se=_[j];return se===void 0&&(se=new mc,_[j]=se),se.getGripSpace()},this.getHand=function(j){let se=_[j];return se===void 0&&(se=new mc,_[j]=se),se.getHandSpace()};function N(j){const se=C.indexOf(j.inputSource);if(se===-1)return;const Me=_[se];Me!==void 0&&(Me.update(j.inputSource,j.frame,l||a),Me.dispatchEvent({type:j.type,data:j.inputSource}))}function k(){i.removeEventListener("select",N),i.removeEventListener("selectstart",N),i.removeEventListener("selectend",N),i.removeEventListener("squeeze",N),i.removeEventListener("squeezestart",N),i.removeEventListener("squeezeend",N),i.removeEventListener("end",k),i.removeEventListener("inputsourceschange",te);for(let j=0;j<_.length;j++){const se=C[j];se!==null&&(C[j]=null,_[j].disconnect(se))}U=null,O=null,m.reset();for(const j in A)delete A[j];e.setRenderTarget(x),f=null,d=null,u=null,i=null,b=null,$e.stop(),n.isPresenting=!1,e.setPixelRatio(I),e.setSize(v.width,v.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(j){r=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(j){o=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(j){l=j},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u===null&&g&&(u=new XRWebGLBinding(i,t)),u},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(j){if(i=j,i!==null){if(x=e.getRenderTarget(),i.addEventListener("select",N),i.addEventListener("selectstart",N),i.addEventListener("selectend",N),i.addEventListener("squeeze",N),i.addEventListener("squeezestart",N),i.addEventListener("squeezeend",N),i.addEventListener("end",k),i.addEventListener("inputsourceschange",te),y.xrCompatible!==!0&&await t.makeXRCompatible(),I=e.getPixelRatio(),e.getSize(v),g&&"createProjectionLayer"in XRWebGLBinding.prototype){let Me=null,Qe=null,Le=null;y.depth&&(Le=y.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Me=y.stencil?Or:Nr,Qe=y.stencil?Fr:Gi);const st={colorFormat:t.RGBA8,depthFormat:Le,scaleFactor:r};u=this.getBinding(),d=u.createProjectionLayer(st),i.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),b=new ui(d.textureWidth,d.textureHeight,{format:Vt,type:ut,depthTexture:new Iu(d.textureWidth,d.textureHeight,Qe,void 0,void 0,void 0,void 0,void 0,void 0,Me),stencilBuffer:y.stencil,colorSpace:e.outputColorSpace,samples:y.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}else{const Me={antialias:y.antialias,alpha:!0,depth:y.depth,stencil:y.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(i,t,Me),i.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),b=new ui(f.framebufferWidth,f.framebufferHeight,{format:Vt,type:ut,colorSpace:e.outputColorSpace,stencilBuffer:y.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}b.isXRRenderTarget=!0,this.setFoveation(c),l=null,a=await i.requestReferenceSpace(o),$e.setContext(i),$e.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return m.getDepthTexture()};function te(j){for(let se=0;se<j.removed.length;se++){const Me=j.removed[se],Qe=C.indexOf(Me);Qe>=0&&(C[Qe]=null,_[Qe].disconnect(Me))}for(let se=0;se<j.added.length;se++){const Me=j.added[se];let Qe=C.indexOf(Me);if(Qe===-1){for(let st=0;st<_.length;st++)if(st>=C.length){C.push(Me),Qe=st;break}else if(C[st]===null){C[st]=Me,Qe=st;break}if(Qe===-1)break}const Le=_[Qe];Le&&Le.connect(Me)}}const Q=new S,$=new S;function ae(j,se,Me){Q.setFromMatrixPosition(se.matrixWorld),$.setFromMatrixPosition(Me.matrixWorld);const Qe=Q.distanceTo($),Le=se.projectionMatrix.elements,st=Me.projectionMatrix.elements,xt=Le[14]/(Le[10]-1),P=Le[14]/(Le[10]+1),pe=(Le[9]+1)/Le[5],le=(Le[9]-1)/Le[5],oe=(Le[8]-1)/Le[0],re=(st[8]+1)/st[0],_e=xt*oe,me=xt*re,be=Qe/(-oe+re),qe=be*-oe;if(se.matrixWorld.decompose(j.position,j.quaternion,j.scale),j.translateX(qe),j.translateZ(be),j.matrixWorld.compose(j.position,j.quaternion,j.scale),j.matrixWorldInverse.copy(j.matrixWorld).invert(),Le[10]===-1)j.projectionMatrix.copy(se.projectionMatrix),j.projectionMatrixInverse.copy(se.projectionMatrixInverse);else{const Ke=xt+be,D=P+be,M=_e-qe,z=me+(Qe-qe),Y=pe*P/D*Ke,de=le*P/D*Ke;j.projectionMatrix.makePerspective(M,z,Y,de,Ke,D),j.projectionMatrixInverse.copy(j.projectionMatrix).invert()}}function Ae(j,se){se===null?j.matrixWorld.copy(j.matrix):j.matrixWorld.multiplyMatrices(se.matrixWorld,j.matrix),j.matrixWorldInverse.copy(j.matrixWorld).invert()}this.updateCamera=function(j){if(i===null)return;let se=j.near,Me=j.far;m.texture!==null&&(m.depthNear>0&&(se=m.depthNear),m.depthFar>0&&(Me=m.depthFar)),R.near=w.near=E.near=se,R.far=w.far=E.far=Me,(U!==R.near||O!==R.far)&&(i.updateRenderState({depthNear:R.near,depthFar:R.far}),U=R.near,O=R.far),R.layers.mask=j.layers.mask|6,E.layers.mask=R.layers.mask&3,w.layers.mask=R.layers.mask&5;const Qe=j.parent,Le=R.cameras;Ae(R,Qe);for(let st=0;st<Le.length;st++)Ae(Le[st],Qe);Le.length===2?ae(R,E,w):R.projectionMatrix.copy(E.projectionMatrix),Ce(j,R,Qe)};function Ce(j,se,Me){Me===null?j.matrix.copy(se.matrixWorld):(j.matrix.copy(Me.matrixWorld),j.matrix.invert(),j.matrix.multiply(se.matrixWorld)),j.matrix.decompose(j.position,j.quaternion,j.scale),j.updateMatrixWorld(!0),j.projectionMatrix.copy(se.projectionMatrix),j.projectionMatrixInverse.copy(se.projectionMatrixInverse),j.isPerspectiveCamera&&(j.fov=Wr*2*Math.atan(1/j.projectionMatrix.elements[5]),j.zoom=1)}this.getCamera=function(){return R},this.getFoveation=function(){if(!(d===null&&f===null))return c},this.setFoveation=function(j){c=j,d!==null&&(d.fixedFoveation=j),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=j)},this.hasDepthSensing=function(){return m.texture!==null},this.getDepthSensingMesh=function(){return m.getMesh(R)},this.getCameraTexture=function(j){return A[j]};let Ie=null;function je(j,se){if(h=se.getViewerPose(l||a),p=se,h!==null){const Me=h.views;f!==null&&(e.setRenderTargetFramebuffer(b,f.framebuffer),e.setRenderTarget(b));let Qe=!1;Me.length!==R.cameras.length&&(R.cameras.length=0,Qe=!0);for(let P=0;P<Me.length;P++){const pe=Me[P];let le=null;if(f!==null)le=f.getViewport(pe);else{const re=u.getViewSubImage(d,pe);le=re.viewport,P===0&&(e.setRenderTargetTextures(b,re.colorTexture,re.depthStencilTexture),e.setRenderTarget(b))}let oe=T[P];oe===void 0&&(oe=new Zt,oe.layers.enable(P),oe.viewport=new bt,T[P]=oe),oe.matrix.fromArray(pe.transform.matrix),oe.matrix.decompose(oe.position,oe.quaternion,oe.scale),oe.projectionMatrix.fromArray(pe.projectionMatrix),oe.projectionMatrixInverse.copy(oe.projectionMatrix).invert(),oe.viewport.set(le.x,le.y,le.width,le.height),P===0&&(R.matrix.copy(oe.matrix),R.matrix.decompose(R.position,R.quaternion,R.scale)),Qe===!0&&R.cameras.push(oe)}const Le=i.enabledFeatures;if(Le&&Le.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&g){u=n.getBinding();const P=u.getDepthInformation(Me[0]);P&&P.isValid&&P.texture&&m.init(P,i.renderState)}if(Le&&Le.includes("camera-access")&&g){e.state.unbindTexture(),u=n.getBinding();for(let P=0;P<Me.length;P++){const pe=Me[P].camera;if(pe){let le=A[pe];le||(le=new Mu,A[pe]=le);const oe=u.getCameraImage(pe);le.sourceTexture=oe}}}}for(let Me=0;Me<_.length;Me++){const Qe=C[Me],Le=_[Me];Qe!==null&&Le!==void 0&&Le.update(Qe,se,l||a)}Ie&&Ie(j,se),se.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:se}),p=null}const $e=new ym;$e.setAnimationLoop(je),this.setAnimationLoop=function(j){Ie=j},this.dispose=function(){}}}const Cs=new zn,Fw=new Ve;function Uw(s,e){function t(m,A){m.matrixAutoUpdate===!0&&m.updateMatrix(),A.value.copy(m.matrix)}function n(m,A){A.color.getRGB(m.fogColor.value,EA(s)),A.isFog?(m.fogNear.value=A.near,m.fogFar.value=A.far):A.isFogExp2&&(m.fogDensity.value=A.density)}function i(m,A,y,x,b){A.isMeshBasicMaterial||A.isMeshLambertMaterial?r(m,A):A.isMeshToonMaterial?(r(m,A),u(m,A)):A.isMeshPhongMaterial?(r(m,A),h(m,A)):A.isMeshStandardMaterial?(r(m,A),d(m,A),A.isMeshPhysicalMaterial&&f(m,A,b)):A.isMeshMatcapMaterial?(r(m,A),p(m,A)):A.isMeshDepthMaterial?r(m,A):A.isMeshDistanceMaterial?(r(m,A),g(m,A)):A.isMeshNormalMaterial?r(m,A):A.isLineBasicMaterial?(a(m,A),A.isLineDashedMaterial&&o(m,A)):A.isPointsMaterial?c(m,A,y,x):A.isSpriteMaterial?l(m,A):A.isShadowMaterial?(m.color.value.copy(A.color),m.opacity.value=A.opacity):A.isShaderMaterial&&(A.uniformsNeedUpdate=!1)}function r(m,A){m.opacity.value=A.opacity,A.color&&m.diffuse.value.copy(A.color),A.emissive&&m.emissive.value.copy(A.emissive).multiplyScalar(A.emissiveIntensity),A.map&&(m.map.value=A.map,t(A.map,m.mapTransform)),A.alphaMap&&(m.alphaMap.value=A.alphaMap,t(A.alphaMap,m.alphaMapTransform)),A.bumpMap&&(m.bumpMap.value=A.bumpMap,t(A.bumpMap,m.bumpMapTransform),m.bumpScale.value=A.bumpScale,A.side===bn&&(m.bumpScale.value*=-1)),A.normalMap&&(m.normalMap.value=A.normalMap,t(A.normalMap,m.normalMapTransform),m.normalScale.value.copy(A.normalScale),A.side===bn&&m.normalScale.value.negate()),A.displacementMap&&(m.displacementMap.value=A.displacementMap,t(A.displacementMap,m.displacementMapTransform),m.displacementScale.value=A.displacementScale,m.displacementBias.value=A.displacementBias),A.emissiveMap&&(m.emissiveMap.value=A.emissiveMap,t(A.emissiveMap,m.emissiveMapTransform)),A.specularMap&&(m.specularMap.value=A.specularMap,t(A.specularMap,m.specularMapTransform)),A.alphaTest>0&&(m.alphaTest.value=A.alphaTest);const y=e.get(A),x=y.envMap,b=y.envMapRotation;x&&(m.envMap.value=x,Cs.copy(b),Cs.x*=-1,Cs.y*=-1,Cs.z*=-1,x.isCubeTexture&&x.isRenderTargetTexture===!1&&(Cs.y*=-1,Cs.z*=-1),m.envMapRotation.value.setFromMatrix4(Fw.makeRotationFromEuler(Cs)),m.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=A.reflectivity,m.ior.value=A.ior,m.refractionRatio.value=A.refractionRatio),A.lightMap&&(m.lightMap.value=A.lightMap,m.lightMapIntensity.value=A.lightMapIntensity,t(A.lightMap,m.lightMapTransform)),A.aoMap&&(m.aoMap.value=A.aoMap,m.aoMapIntensity.value=A.aoMapIntensity,t(A.aoMap,m.aoMapTransform))}function a(m,A){m.diffuse.value.copy(A.color),m.opacity.value=A.opacity,A.map&&(m.map.value=A.map,t(A.map,m.mapTransform))}function o(m,A){m.dashSize.value=A.dashSize,m.totalSize.value=A.dashSize+A.gapSize,m.scale.value=A.scale}function c(m,A,y,x){m.diffuse.value.copy(A.color),m.opacity.value=A.opacity,m.size.value=A.size*y,m.scale.value=x*.5,A.map&&(m.map.value=A.map,t(A.map,m.uvTransform)),A.alphaMap&&(m.alphaMap.value=A.alphaMap,t(A.alphaMap,m.alphaMapTransform)),A.alphaTest>0&&(m.alphaTest.value=A.alphaTest)}function l(m,A){m.diffuse.value.copy(A.color),m.opacity.value=A.opacity,m.rotation.value=A.rotation,A.map&&(m.map.value=A.map,t(A.map,m.mapTransform)),A.alphaMap&&(m.alphaMap.value=A.alphaMap,t(A.alphaMap,m.alphaMapTransform)),A.alphaTest>0&&(m.alphaTest.value=A.alphaTest)}function h(m,A){m.specular.value.copy(A.specular),m.shininess.value=Math.max(A.shininess,1e-4)}function u(m,A){A.gradientMap&&(m.gradientMap.value=A.gradientMap)}function d(m,A){m.metalness.value=A.metalness,A.metalnessMap&&(m.metalnessMap.value=A.metalnessMap,t(A.metalnessMap,m.metalnessMapTransform)),m.roughness.value=A.roughness,A.roughnessMap&&(m.roughnessMap.value=A.roughnessMap,t(A.roughnessMap,m.roughnessMapTransform)),A.envMap&&(m.envMapIntensity.value=A.envMapIntensity)}function f(m,A,y){m.ior.value=A.ior,A.sheen>0&&(m.sheenColor.value.copy(A.sheenColor).multiplyScalar(A.sheen),m.sheenRoughness.value=A.sheenRoughness,A.sheenColorMap&&(m.sheenColorMap.value=A.sheenColorMap,t(A.sheenColorMap,m.sheenColorMapTransform)),A.sheenRoughnessMap&&(m.sheenRoughnessMap.value=A.sheenRoughnessMap,t(A.sheenRoughnessMap,m.sheenRoughnessMapTransform))),A.clearcoat>0&&(m.clearcoat.value=A.clearcoat,m.clearcoatRoughness.value=A.clearcoatRoughness,A.clearcoatMap&&(m.clearcoatMap.value=A.clearcoatMap,t(A.clearcoatMap,m.clearcoatMapTransform)),A.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=A.clearcoatRoughnessMap,t(A.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),A.clearcoatNormalMap&&(m.clearcoatNormalMap.value=A.clearcoatNormalMap,t(A.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(A.clearcoatNormalScale),A.side===bn&&m.clearcoatNormalScale.value.negate())),A.dispersion>0&&(m.dispersion.value=A.dispersion),A.iridescence>0&&(m.iridescence.value=A.iridescence,m.iridescenceIOR.value=A.iridescenceIOR,m.iridescenceThicknessMinimum.value=A.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=A.iridescenceThicknessRange[1],A.iridescenceMap&&(m.iridescenceMap.value=A.iridescenceMap,t(A.iridescenceMap,m.iridescenceMapTransform)),A.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=A.iridescenceThicknessMap,t(A.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),A.transmission>0&&(m.transmission.value=A.transmission,m.transmissionSamplerMap.value=y.texture,m.transmissionSamplerSize.value.set(y.width,y.height),A.transmissionMap&&(m.transmissionMap.value=A.transmissionMap,t(A.transmissionMap,m.transmissionMapTransform)),m.thickness.value=A.thickness,A.thicknessMap&&(m.thicknessMap.value=A.thicknessMap,t(A.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=A.attenuationDistance,m.attenuationColor.value.copy(A.attenuationColor)),A.anisotropy>0&&(m.anisotropyVector.value.set(A.anisotropy*Math.cos(A.anisotropyRotation),A.anisotropy*Math.sin(A.anisotropyRotation)),A.anisotropyMap&&(m.anisotropyMap.value=A.anisotropyMap,t(A.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=A.specularIntensity,m.specularColor.value.copy(A.specularColor),A.specularColorMap&&(m.specularColorMap.value=A.specularColorMap,t(A.specularColorMap,m.specularColorMapTransform)),A.specularIntensityMap&&(m.specularIntensityMap.value=A.specularIntensityMap,t(A.specularIntensityMap,m.specularIntensityMapTransform))}function p(m,A){A.matcap&&(m.matcap.value=A.matcap)}function g(m,A){const y=e.get(A).light;m.referencePosition.value.setFromMatrixPosition(y.matrixWorld),m.nearDistance.value=y.shadow.camera.near,m.farDistance.value=y.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function Nw(s,e,t,n){let i={},r={},a=[];const o=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function c(y,x){const b=x.program;n.uniformBlockBinding(y,b)}function l(y,x){let b=i[y.id];b===void 0&&(p(y),b=h(y),i[y.id]=b,y.addEventListener("dispose",m));const _=x.program;n.updateUBOMapping(y,_);const C=e.render.frame;r[y.id]!==C&&(d(y),r[y.id]=C)}function h(y){const x=u();y.__bindingPointIndex=x;const b=s.createBuffer(),_=y.__size,C=y.usage;return s.bindBuffer(s.UNIFORM_BUFFER,b),s.bufferData(s.UNIFORM_BUFFER,_,C),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,x,b),b}function u(){for(let y=0;y<o;y++)if(a.indexOf(y)===-1)return a.push(y),y;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(y){const x=i[y.id],b=y.uniforms,_=y.__cache;s.bindBuffer(s.UNIFORM_BUFFER,x);for(let C=0,v=b.length;C<v;C++){const I=Array.isArray(b[C])?b[C]:[b[C]];for(let E=0,w=I.length;E<w;E++){const T=I[E];if(f(T,C,E,_)===!0){const R=T.__offset,U=Array.isArray(T.value)?T.value:[T.value];let O=0;for(let N=0;N<U.length;N++){const k=U[N],te=g(k);typeof k=="number"||typeof k=="boolean"?(T.__data[0]=k,s.bufferSubData(s.UNIFORM_BUFFER,R+O,T.__data)):k.isMatrix3?(T.__data[0]=k.elements[0],T.__data[1]=k.elements[1],T.__data[2]=k.elements[2],T.__data[3]=0,T.__data[4]=k.elements[3],T.__data[5]=k.elements[4],T.__data[6]=k.elements[5],T.__data[7]=0,T.__data[8]=k.elements[6],T.__data[9]=k.elements[7],T.__data[10]=k.elements[8],T.__data[11]=0):(k.toArray(T.__data,O),O+=te.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,R,T.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function f(y,x,b,_){const C=y.value,v=x+"_"+b;if(_[v]===void 0)return typeof C=="number"||typeof C=="boolean"?_[v]=C:_[v]=C.clone(),!0;{const I=_[v];if(typeof C=="number"||typeof C=="boolean"){if(I!==C)return _[v]=C,!0}else if(I.equals(C)===!1)return I.copy(C),!0}return!1}function p(y){const x=y.uniforms;let b=0;const _=16;for(let v=0,I=x.length;v<I;v++){const E=Array.isArray(x[v])?x[v]:[x[v]];for(let w=0,T=E.length;w<T;w++){const R=E[w],U=Array.isArray(R.value)?R.value:[R.value];for(let O=0,N=U.length;O<N;O++){const k=U[O],te=g(k),Q=b%_,$=Q%te.boundary,ae=Q+$;b+=$,ae!==0&&_-ae<te.storage&&(b+=_-ae),R.__data=new Float32Array(te.storage/Float32Array.BYTES_PER_ELEMENT),R.__offset=b,b+=te.storage}}}const C=b%_;return C>0&&(b+=_-C),y.__size=b,y.__cache={},this}function g(y){const x={boundary:0,storage:0};return typeof y=="number"||typeof y=="boolean"?(x.boundary=4,x.storage=4):y.isVector2?(x.boundary=8,x.storage=8):y.isVector3||y.isColor?(x.boundary=16,x.storage=12):y.isVector4?(x.boundary=16,x.storage=16):y.isMatrix3?(x.boundary=48,x.storage=48):y.isMatrix4?(x.boundary=64,x.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),x}function m(y){const x=y.target;x.removeEventListener("dispose",m);const b=a.indexOf(x.__bindingPointIndex);a.splice(b,1),s.deleteBuffer(i[x.id]),delete i[x.id],delete r[x.id]}function A(){for(const y in i)s.deleteBuffer(i[y]);a=[],i={},r={}}return{bind:c,update:l,dispose:A}}class wm{constructor(e={}){const{canvas:t=bA(),context:n=null,depth:i=!0,stencil:r=!1,alpha:a=!1,antialias:o=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1,reversedDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=n.getContextAttributes().alpha}else f=a;const p=new Uint32Array(4),g=new Int32Array(4);let m=null,A=null;const y=[],x=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=Ui,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const b=this;let _=!1;this._outputColorSpace=St;let C=0,v=0,I=null,E=-1,w=null;const T=new bt,R=new bt;let U=null;const O=new ue(0);let N=0,k=t.width,te=t.height,Q=1,$=null,ae=null;const Ae=new bt(0,0,k,te),Ce=new bt(0,0,k,te);let Ie=!1;const je=new jr;let $e=!1,j=!1;const se=new Ve,Me=new S,Qe=new bt,Le={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let st=!1;function xt(){return I===null?Q:1}let P=n;function pe(B,H){return t.getContext(B,H)}try{const B={alpha:!0,depth:i,stencil:r,antialias:o,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${jc}`),t.addEventListener("webglcontextlost",ne,!1),t.addEventListener("webglcontextrestored",ce,!1),t.addEventListener("webglcontextcreationerror",Z,!1),P===null){const H="webgl2";if(P=pe(H,B),P===null)throw pe(H)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(B){throw console.error("THREE.WebGLRenderer: "+B.message),B}let le,oe,re,_e,me,be,qe,Ke,D,M,z,Y,de,ee,Pe,xe,De,Fe,ge,Ee,Ne,He,W,fe;function L(){le=new KE(P),le.init(),He=new vm(P,le),oe=new HE(P,le,e,He),re=new Tw(P,le),oe.reversedDepthBuffer&&d&&re.buffers.depth.setReversed(!0),_e=new ZE(P),me=new mw,be=new Bw(P,le,re,me,oe,He,_e),qe=new VE(b),Ke=new YE(b),D=new sx(P),W=new QE(P,D),M=new JE(P,D,_e,W),z=new ev(P,M,D,_e),ge=new $E(P,oe,be),xe=new zE(me),Y=new Aw(b,qe,Ke,le,oe,W,xe),de=new Uw(b,me),ee=new yw,Pe=new ww(le),Fe=new kE(b,qe,Ke,re,z,f,c),De=new Iw(b,z,oe),fe=new Nw(P,_e,oe,re),Ee=new GE(P,le,_e),Ne=new jE(P,le,_e),_e.programs=Y.programs,b.capabilities=oe,b.extensions=le,b.properties=me,b.renderLists=ee,b.shadowMap=De,b.state=re,b.info=_e}L();const K=new Pw(b,P);this.xr=K,this.getContext=function(){return P},this.getContextAttributes=function(){return P.getContextAttributes()},this.forceContextLoss=function(){const B=le.get("WEBGL_lose_context");B&&B.loseContext()},this.forceContextRestore=function(){const B=le.get("WEBGL_lose_context");B&&B.restoreContext()},this.getPixelRatio=function(){return Q},this.setPixelRatio=function(B){B!==void 0&&(Q=B,this.setSize(k,te,!1))},this.getSize=function(B){return B.set(k,te)},this.setSize=function(B,H,V=!0){if(K.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}k=B,te=H,t.width=Math.floor(B*Q),t.height=Math.floor(H*Q),V===!0&&(t.style.width=B+"px",t.style.height=H+"px"),this.setViewport(0,0,B,H)},this.getDrawingBufferSize=function(B){return B.set(k*Q,te*Q).floor()},this.setDrawingBufferSize=function(B,H,V){k=B,te=H,Q=V,t.width=Math.floor(B*V),t.height=Math.floor(H*V),this.setViewport(0,0,B,H)},this.getCurrentViewport=function(B){return B.copy(T)},this.getViewport=function(B){return B.copy(Ae)},this.setViewport=function(B,H,V,X){B.isVector4?Ae.set(B.x,B.y,B.z,B.w):Ae.set(B,H,V,X),re.viewport(T.copy(Ae).multiplyScalar(Q).round())},this.getScissor=function(B){return B.copy(Ce)},this.setScissor=function(B,H,V,X){B.isVector4?Ce.set(B.x,B.y,B.z,B.w):Ce.set(B,H,V,X),re.scissor(R.copy(Ce).multiplyScalar(Q).round())},this.getScissorTest=function(){return Ie},this.setScissorTest=function(B){re.setScissorTest(Ie=B)},this.setOpaqueSort=function(B){$=B},this.setTransparentSort=function(B){ae=B},this.getClearColor=function(B){return B.copy(Fe.getClearColor())},this.setClearColor=function(){Fe.setClearColor(...arguments)},this.getClearAlpha=function(){return Fe.getClearAlpha()},this.setClearAlpha=function(){Fe.setClearAlpha(...arguments)},this.clear=function(B=!0,H=!0,V=!0){let X=0;if(B){let G=!1;if(I!==null){const ye=I.texture.format;G=ye===il||ye===nl||ye===Ja}if(G){const ye=I.texture.type,Se=ye===ut||ye===Gi||ye===Pr||ye===Fr||ye===el||ye===tl,Oe=Fe.getClearColor(),Re=Fe.getClearAlpha(),We=Oe.r,ze=Oe.g,ke=Oe.b;Se?(p[0]=We,p[1]=ze,p[2]=ke,p[3]=Re,P.clearBufferuiv(P.COLOR,0,p)):(g[0]=We,g[1]=ze,g[2]=ke,g[3]=Re,P.clearBufferiv(P.COLOR,0,g))}else X|=P.COLOR_BUFFER_BIT}H&&(X|=P.DEPTH_BUFFER_BIT),V&&(X|=P.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),P.clear(X)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ne,!1),t.removeEventListener("webglcontextrestored",ce,!1),t.removeEventListener("webglcontextcreationerror",Z,!1),Fe.dispose(),ee.dispose(),Pe.dispose(),me.dispose(),qe.dispose(),Ke.dispose(),z.dispose(),W.dispose(),fe.dispose(),Y.dispose(),K.dispose(),K.removeEventListener("sessionstart",et),K.removeEventListener("sessionend",Xe),Et.stop()};function ne(B){B.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),_=!0}function ce(){console.log("THREE.WebGLRenderer: Context Restored."),_=!1;const B=_e.autoReset,H=De.enabled,V=De.autoUpdate,X=De.needsUpdate,G=De.type;L(),_e.autoReset=B,De.enabled=H,De.autoUpdate=V,De.needsUpdate=X,De.type=G}function Z(B){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",B.statusMessage)}function q(B){const H=B.target;H.removeEventListener("dispose",q),ve(H)}function ve(B){F(B),me.remove(B)}function F(B){const H=me.get(B).programs;H!==void 0&&(H.forEach(function(V){Y.releaseProgram(V)}),B.isShaderMaterial&&Y.releaseShaderCache(B))}this.renderBufferDirect=function(B,H,V,X,G,ye){H===null&&(H=Le);const Se=G.isMesh&&G.matrixWorld.determinant()<0,Oe=Mt(B,H,V,X,G);re.setMaterial(X,Se);let Re=V.index,We=1;if(X.wireframe===!0){if(Re=M.getWireframeAttribute(V),Re===void 0)return;We=2}const ze=V.drawRange,ke=V.attributes.position;let nt=ze.start*We,yt=(ze.start+ze.count)*We;ye!==null&&(nt=Math.max(nt,ye.start*We),yt=Math.min(yt,(ye.start+ye.count)*We)),Re!==null?(nt=Math.max(nt,0),yt=Math.min(yt,Re.count)):ke!=null&&(nt=Math.max(nt,0),yt=Math.min(yt,ke.count));const Dt=yt-nt;if(Dt<0||Dt===1/0)return;W.setup(G,X,Oe,V,Re);let vt,Tt=Ee;if(Re!==null&&(vt=D.get(Re),Tt=Ne,Tt.setIndex(vt)),G.isMesh)X.wireframe===!0?(re.setLineWidth(X.wireframeLinewidth*xt()),Tt.setMode(P.LINES)):Tt.setMode(P.TRIANGLES);else if(G.isLine){let Ye=X.linewidth;Ye===void 0&&(Ye=1),re.setLineWidth(Ye*xt()),G.isLineSegments?Tt.setMode(P.LINES):G.isLineLoop?Tt.setMode(P.LINE_LOOP):Tt.setMode(P.LINE_STRIP)}else G.isPoints?Tt.setMode(P.POINTS):G.isSprite&&Tt.setMode(P.TRIANGLES);if(G.isBatchedMesh)if(G._multiDrawInstances!==null)Qa("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Tt.renderMultiDrawInstances(G._multiDrawStarts,G._multiDrawCounts,G._multiDrawCount,G._multiDrawInstances);else if(le.get("WEBGL_multi_draw"))Tt.renderMultiDraw(G._multiDrawStarts,G._multiDrawCounts,G._multiDrawCount);else{const Ye=G._multiDrawStarts,Ft=G._multiDrawCounts,mt=G._multiDrawCount,Bt=Re?D.get(Re).bytesPerElement:1,_n=me.get(X).currentProgram.getUniforms();for(let Yt=0;Yt<mt;Yt++)_n.setValue(P,"_gl_DrawID",Yt),Tt.render(Ye[Yt]/Bt,Ft[Yt])}else if(G.isInstancedMesh)Tt.renderInstances(nt,Dt,G.count);else if(V.isInstancedBufferGeometry){const Ye=V._maxInstanceCount!==void 0?V._maxInstanceCount:1/0,Ft=Math.min(V.instanceCount,Ye);Tt.renderInstances(nt,Dt,Ft)}else Tt.render(nt,Dt)};function J(B,H,V){B.transparent===!0&&B.side===ln&&B.forceSinglePass===!1?(B.side=bn,B.needsUpdate=!0,It(B,H,V),B.side=hi,B.needsUpdate=!0,It(B,H,V),B.side=ln):It(B,H,V)}this.compile=function(B,H,V=null){V===null&&(V=B),A=Pe.get(V),A.init(H),x.push(A),V.traverseVisible(function(G){G.isLight&&G.layers.test(H.layers)&&(A.pushLight(G),G.castShadow&&A.pushShadow(G))}),B!==V&&B.traverseVisible(function(G){G.isLight&&G.layers.test(H.layers)&&(A.pushLight(G),G.castShadow&&A.pushShadow(G))}),A.setupLights();const X=new Set;return B.traverse(function(G){if(!(G.isMesh||G.isPoints||G.isLine||G.isSprite))return;const ye=G.material;if(ye)if(Array.isArray(ye))for(let Se=0;Se<ye.length;Se++){const Oe=ye[Se];J(Oe,V,G),X.add(Oe)}else J(ye,V,G),X.add(ye)}),A=x.pop(),X},this.compileAsync=function(B,H,V=null){const X=this.compile(B,H,V);return new Promise(G=>{function ye(){if(X.forEach(function(Se){me.get(Se).currentProgram.isReady()&&X.delete(Se)}),X.size===0){G(B);return}setTimeout(ye,10)}le.get("KHR_parallel_shader_compile")!==null?ye():setTimeout(ye,10)})};let he=null;function Ue(B){he&&he(B)}function et(){Et.stop()}function Xe(){Et.start()}const Et=new ym;Et.setAnimationLoop(Ue),typeof self<"u"&&Et.setContext(self),this.setAnimationLoop=function(B){he=B,K.setAnimationLoop(B),B===null?Et.stop():Et.start()},K.addEventListener("sessionstart",et),K.addEventListener("sessionend",Xe),this.render=function(B,H){if(H!==void 0&&H.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(_===!0)return;if(B.matrixWorldAutoUpdate===!0&&B.updateMatrixWorld(),H.parent===null&&H.matrixWorldAutoUpdate===!0&&H.updateMatrixWorld(),K.enabled===!0&&K.isPresenting===!0&&(K.cameraAutoUpdate===!0&&K.updateCamera(H),H=K.getCamera()),B.isScene===!0&&B.onBeforeRender(b,B,H,I),A=Pe.get(B,x.length),A.init(H),x.push(A),se.multiplyMatrices(H.projectionMatrix,H.matrixWorldInverse),je.setFromProjectionMatrix(se,Kn,H.reversedDepth),j=this.localClippingEnabled,$e=xe.init(this.clippingPlanes,j),m=ee.get(B,y.length),m.init(),y.push(m),K.enabled===!0&&K.isPresenting===!0){const ye=b.xr.getDepthSensingMesh();ye!==null&&ft(ye,H,-1/0,b.sortObjects)}ft(B,H,0,b.sortObjects),m.finish(),b.sortObjects===!0&&m.sort($,ae),st=K.enabled===!1||K.isPresenting===!1||K.hasDepthSensing()===!1,st&&Fe.addToRenderList(m,B),this.info.render.frame++,$e===!0&&xe.beginShadows();const V=A.state.shadowsArray;De.render(V,B,H),$e===!0&&xe.endShadows(),this.info.autoReset===!0&&this.info.reset();const X=m.opaque,G=m.transmissive;if(A.setupLights(),H.isArrayCamera){const ye=H.cameras;if(G.length>0)for(let Se=0,Oe=ye.length;Se<Oe;Se++){const Re=ye[Se];pt(X,G,B,Re)}st&&Fe.render(B);for(let Se=0,Oe=ye.length;Se<Oe;Se++){const Re=ye[Se];Ze(m,B,Re,Re.viewport)}}else G.length>0&&pt(X,G,B,H),st&&Fe.render(B),Ze(m,B,H);I!==null&&v===0&&(be.updateMultisampleRenderTarget(I),be.updateRenderTargetMipmap(I)),B.isScene===!0&&B.onAfterRender(b,B,H),W.resetDefaultState(),E=-1,w=null,x.pop(),x.length>0?(A=x[x.length-1],$e===!0&&xe.setGlobalState(b.clippingPlanes,A.state.camera)):A=null,y.pop(),y.length>0?m=y[y.length-1]:m=null};function ft(B,H,V,X){if(B.visible===!1)return;if(B.layers.test(H.layers)){if(B.isGroup)V=B.renderOrder;else if(B.isLOD)B.autoUpdate===!0&&B.update(H);else if(B.isLight)A.pushLight(B),B.castShadow&&A.pushShadow(B);else if(B.isSprite){if(!B.frustumCulled||je.intersectsSprite(B)){X&&Qe.setFromMatrixPosition(B.matrixWorld).applyMatrix4(se);const Se=z.update(B),Oe=B.material;Oe.visible&&m.push(B,Se,Oe,V,Qe.z,null)}}else if((B.isMesh||B.isLine||B.isPoints)&&(!B.frustumCulled||je.intersectsObject(B))){const Se=z.update(B),Oe=B.material;if(X&&(B.boundingSphere!==void 0?(B.boundingSphere===null&&B.computeBoundingSphere(),Qe.copy(B.boundingSphere.center)):(Se.boundingSphere===null&&Se.computeBoundingSphere(),Qe.copy(Se.boundingSphere.center)),Qe.applyMatrix4(B.matrixWorld).applyMatrix4(se)),Array.isArray(Oe)){const Re=Se.groups;for(let We=0,ze=Re.length;We<ze;We++){const ke=Re[We],nt=Oe[ke.materialIndex];nt&&nt.visible&&m.push(B,Se,nt,V,Qe.z,ke)}}else Oe.visible&&m.push(B,Se,Oe,V,Qe.z,null)}}const ye=B.children;for(let Se=0,Oe=ye.length;Se<Oe;Se++)ft(ye[Se],H,V,X)}function Ze(B,H,V,X){const G=B.opaque,ye=B.transmissive,Se=B.transparent;A.setupLightsView(V),$e===!0&&xe.setGlobalState(b.clippingPlanes,V),X&&re.viewport(T.copy(X)),G.length>0&&Rt(G,H,V),ye.length>0&&Rt(ye,H,V),Se.length>0&&Rt(Se,H,V),re.buffers.depth.setTest(!0),re.buffers.depth.setMask(!0),re.buffers.color.setMask(!0),re.setPolygonOffset(!1)}function pt(B,H,V,X){if((V.isScene===!0?V.overrideMaterial:null)!==null)return;A.state.transmissionRenderTarget[X.id]===void 0&&(A.state.transmissionRenderTarget[X.id]=new ui(1,1,{generateMipmaps:!0,type:le.has("EXT_color_buffer_half_float")||le.has("EXT_color_buffer_float")?qn:ut,minFilter:kn,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:dt.workingColorSpace}));const ye=A.state.transmissionRenderTarget[X.id],Se=X.viewport||T;ye.setSize(Se.z*b.transmissionResolutionScale,Se.w*b.transmissionResolutionScale);const Oe=b.getRenderTarget(),Re=b.getActiveCubeFace(),We=b.getActiveMipmapLevel();b.setRenderTarget(ye),b.getClearColor(O),N=b.getClearAlpha(),N<1&&b.setClearColor(16777215,.5),b.clear(),st&&Fe.render(V);const ze=b.toneMapping;b.toneMapping=Ui;const ke=X.viewport;if(X.viewport!==void 0&&(X.viewport=void 0),A.setupLightsView(X),$e===!0&&xe.setGlobalState(b.clippingPlanes,X),Rt(B,V,X),be.updateMultisampleRenderTarget(ye),be.updateRenderTargetMipmap(ye),le.has("WEBGL_multisampled_render_to_texture")===!1){let nt=!1;for(let yt=0,Dt=H.length;yt<Dt;yt++){const vt=H[yt],Tt=vt.object,Ye=vt.geometry,Ft=vt.material,mt=vt.group;if(Ft.side===ln&&Tt.layers.test(X.layers)){const Bt=Ft.side;Ft.side=bn,Ft.needsUpdate=!0,_t(Tt,V,X,Ye,Ft,mt),Ft.side=Bt,Ft.needsUpdate=!0,nt=!0}}nt===!0&&(be.updateMultisampleRenderTarget(ye),be.updateRenderTargetMipmap(ye))}b.setRenderTarget(Oe,Re,We),b.setClearColor(O,N),ke!==void 0&&(X.viewport=ke),b.toneMapping=ze}function Rt(B,H,V){const X=H.isScene===!0?H.overrideMaterial:null;for(let G=0,ye=B.length;G<ye;G++){const Se=B[G],Oe=Se.object,Re=Se.geometry,We=Se.group;let ze=Se.material;ze.allowOverride===!0&&X!==null&&(ze=X),Oe.layers.test(V.layers)&&_t(Oe,H,V,Re,ze,We)}}function _t(B,H,V,X,G,ye){B.onBeforeRender(b,H,V,X,G,ye),B.modelViewMatrix.multiplyMatrices(V.matrixWorldInverse,B.matrixWorld),B.normalMatrix.getNormalMatrix(B.modelViewMatrix),G.onBeforeRender(b,H,V,X,B,ye),G.transparent===!0&&G.side===ln&&G.forceSinglePass===!1?(G.side=bn,G.needsUpdate=!0,b.renderBufferDirect(V,H,X,G,B,ye),G.side=hi,G.needsUpdate=!0,b.renderBufferDirect(V,H,X,G,B,ye),G.side=ln):b.renderBufferDirect(V,H,X,G,B,ye),B.onAfterRender(b,H,V,X,G,ye)}function It(B,H,V){H.isScene!==!0&&(H=Le);const X=me.get(B),G=A.state.lights,ye=A.state.shadowsArray,Se=G.state.version,Oe=Y.getParameters(B,G.state,ye,H,V),Re=Y.getProgramCacheKey(Oe);let We=X.programs;X.environment=B.isMeshStandardMaterial?H.environment:null,X.fog=H.fog,X.envMap=(B.isMeshStandardMaterial?Ke:qe).get(B.envMap||X.environment),X.envMapRotation=X.environment!==null&&B.envMap===null?H.environmentRotation:B.envMapRotation,We===void 0&&(B.addEventListener("dispose",q),We=new Map,X.programs=We);let ze=We.get(Re);if(ze!==void 0){if(X.currentProgram===ze&&X.lightsStateVersion===Se)return At(B,Oe),ze}else Oe.uniforms=Y.getUniforms(B),B.onBeforeCompile(Oe,b),ze=Y.acquireProgram(Oe,Re),We.set(Re,ze),X.uniforms=Oe.uniforms;const ke=X.uniforms;return(!B.isShaderMaterial&&!B.isRawShaderMaterial||B.clipping===!0)&&(ke.clippingPlanes=xe.uniform),At(B,Oe),X.needsLights=zt(B),X.lightsStateVersion=Se,X.needsLights&&(ke.ambientLightColor.value=G.state.ambient,ke.lightProbe.value=G.state.probe,ke.directionalLights.value=G.state.directional,ke.directionalLightShadows.value=G.state.directionalShadow,ke.spotLights.value=G.state.spot,ke.spotLightShadows.value=G.state.spotShadow,ke.rectAreaLights.value=G.state.rectArea,ke.ltc_1.value=G.state.rectAreaLTC1,ke.ltc_2.value=G.state.rectAreaLTC2,ke.pointLights.value=G.state.point,ke.pointLightShadows.value=G.state.pointShadow,ke.hemisphereLights.value=G.state.hemi,ke.directionalShadowMap.value=G.state.directionalShadowMap,ke.directionalShadowMatrix.value=G.state.directionalShadowMatrix,ke.spotShadowMap.value=G.state.spotShadowMap,ke.spotLightMatrix.value=G.state.spotLightMatrix,ke.spotLightMap.value=G.state.spotLightMap,ke.pointShadowMap.value=G.state.pointShadowMap,ke.pointShadowMatrix.value=G.state.pointShadowMatrix),X.currentProgram=ze,X.uniformsList=null,ze}function Ct(B){if(B.uniformsList===null){const H=B.currentProgram.getUniforms();B.uniformsList=gc.seqWithValue(H.seq,B.uniforms)}return B.uniformsList}function At(B,H){const V=me.get(B);V.outputColorSpace=H.outputColorSpace,V.batching=H.batching,V.batchingColor=H.batchingColor,V.instancing=H.instancing,V.instancingColor=H.instancingColor,V.instancingMorph=H.instancingMorph,V.skinning=H.skinning,V.morphTargets=H.morphTargets,V.morphNormals=H.morphNormals,V.morphColors=H.morphColors,V.morphTargetsCount=H.morphTargetsCount,V.numClippingPlanes=H.numClippingPlanes,V.numIntersection=H.numClipIntersection,V.vertexAlphas=H.vertexAlphas,V.vertexTangents=H.vertexTangents,V.toneMapping=H.toneMapping}function Mt(B,H,V,X,G){H.isScene!==!0&&(H=Le),be.resetTextureUnits();const ye=H.fog,Se=X.isMeshStandardMaterial?H.environment:null,Oe=I===null?b.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:Qt,Re=(X.isMeshStandardMaterial?Ke:qe).get(X.envMap||Se),We=X.vertexColors===!0&&!!V.attributes.color&&V.attributes.color.itemSize===4,ze=!!V.attributes.tangent&&(!!X.normalMap||X.anisotropy>0),ke=!!V.morphAttributes.position,nt=!!V.morphAttributes.normal,yt=!!V.morphAttributes.color;let Dt=Ui;X.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(Dt=b.toneMapping);const vt=V.morphAttributes.position||V.morphAttributes.normal||V.morphAttributes.color,Tt=vt!==void 0?vt.length:0,Ye=me.get(X),Ft=A.state.lights;if($e===!0&&(j===!0||B!==w)){const wn=B===w&&X.id===E;xe.setState(X,B,wn)}let mt=!1;X.version===Ye.__version?(Ye.needsLights&&Ye.lightsStateVersion!==Ft.state.version||Ye.outputColorSpace!==Oe||G.isBatchedMesh&&Ye.batching===!1||!G.isBatchedMesh&&Ye.batching===!0||G.isBatchedMesh&&Ye.batchingColor===!0&&G.colorTexture===null||G.isBatchedMesh&&Ye.batchingColor===!1&&G.colorTexture!==null||G.isInstancedMesh&&Ye.instancing===!1||!G.isInstancedMesh&&Ye.instancing===!0||G.isSkinnedMesh&&Ye.skinning===!1||!G.isSkinnedMesh&&Ye.skinning===!0||G.isInstancedMesh&&Ye.instancingColor===!0&&G.instanceColor===null||G.isInstancedMesh&&Ye.instancingColor===!1&&G.instanceColor!==null||G.isInstancedMesh&&Ye.instancingMorph===!0&&G.morphTexture===null||G.isInstancedMesh&&Ye.instancingMorph===!1&&G.morphTexture!==null||Ye.envMap!==Re||X.fog===!0&&Ye.fog!==ye||Ye.numClippingPlanes!==void 0&&(Ye.numClippingPlanes!==xe.numPlanes||Ye.numIntersection!==xe.numIntersection)||Ye.vertexAlphas!==We||Ye.vertexTangents!==ze||Ye.morphTargets!==ke||Ye.morphNormals!==nt||Ye.morphColors!==yt||Ye.toneMapping!==Dt||Ye.morphTargetsCount!==Tt)&&(mt=!0):(mt=!0,Ye.__version=X.version);let Bt=Ye.currentProgram;mt===!0&&(Bt=It(X,H,G));let _n=!1,Yt=!1,wi=!1;const Nt=Bt.getUniforms(),En=Ye.uniforms;if(re.useProgram(Bt.program)&&(_n=!0,Yt=!0,wi=!0),X.id!==E&&(E=X.id,Yt=!0),_n||w!==B){re.buffers.depth.getReversed()&&B.reversedDepth!==!0&&(B._reversedDepth=!0,B.updateProjectionMatrix()),Nt.setValue(P,"projectionMatrix",B.projectionMatrix),Nt.setValue(P,"viewMatrix",B.matrixWorldInverse);const Pn=Nt.map.cameraPosition;Pn!==void 0&&Pn.setValue(P,Me.setFromMatrixPosition(B.matrixWorld)),oe.logarithmicDepthBuffer&&Nt.setValue(P,"logDepthBufFC",2/(Math.log(B.far+1)/Math.LN2)),(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial)&&Nt.setValue(P,"isOrthographic",B.isOrthographicCamera===!0),w!==B&&(w=B,Yt=!0,wi=!0)}if(G.isSkinnedMesh){Nt.setOptional(P,G,"bindMatrix"),Nt.setOptional(P,G,"bindMatrixInverse");const wn=G.skeleton;wn&&(wn.boneTexture===null&&wn.computeBoneTexture(),Nt.setValue(P,"boneTexture",wn.boneTexture,be))}G.isBatchedMesh&&(Nt.setOptional(P,G,"batchingTexture"),Nt.setValue(P,"batchingTexture",G._matricesTexture,be),Nt.setOptional(P,G,"batchingIdTexture"),Nt.setValue(P,"batchingIdTexture",G._indirectTexture,be),Nt.setOptional(P,G,"batchingColorTexture"),G._colorsTexture!==null&&Nt.setValue(P,"batchingColorTexture",G._colorsTexture,be));const vn=V.morphAttributes;if((vn.position!==void 0||vn.normal!==void 0||vn.color!==void 0)&&ge.update(G,V,Bt),(Yt||Ye.receiveShadow!==G.receiveShadow)&&(Ye.receiveShadow=G.receiveShadow,Nt.setValue(P,"receiveShadow",G.receiveShadow)),X.isMeshGouraudMaterial&&X.envMap!==null&&(En.envMap.value=Re,En.flipEnvMap.value=Re.isCubeTexture&&Re.isRenderTargetTexture===!1?-1:1),X.isMeshStandardMaterial&&X.envMap===null&&H.environment!==null&&(En.envMapIntensity.value=H.environmentIntensity),Yt&&(Nt.setValue(P,"toneMappingExposure",b.toneMappingExposure),Ye.needsLights&&vi(En,wi),ye&&X.fog===!0&&de.refreshFogUniforms(En,ye),de.refreshMaterialUniforms(En,X,Q,te,A.state.transmissionRenderTarget[B.id]),gc.upload(P,Ct(Ye),En,be)),X.isShaderMaterial&&X.uniformsNeedUpdate===!0&&(gc.upload(P,Ct(Ye),En,be),X.uniformsNeedUpdate=!1),X.isSpriteMaterial&&Nt.setValue(P,"center",G.center),Nt.setValue(P,"modelViewMatrix",G.modelViewMatrix),Nt.setValue(P,"normalMatrix",G.normalMatrix),Nt.setValue(P,"modelMatrix",G.matrixWorld),X.isShaderMaterial||X.isRawShaderMaterial){const wn=X.uniformsGroups;for(let Pn=0,Sl=wn.length;Pn<Sl;Pn++){const us=wn[Pn];fe.update(us,Bt),fe.bind(us,Bt)}}return Bt}function vi(B,H){B.ambientLightColor.needsUpdate=H,B.lightProbe.needsUpdate=H,B.directionalLights.needsUpdate=H,B.directionalLightShadows.needsUpdate=H,B.pointLights.needsUpdate=H,B.pointLightShadows.needsUpdate=H,B.spotLights.needsUpdate=H,B.spotLightShadows.needsUpdate=H,B.rectAreaLights.needsUpdate=H,B.hemisphereLights.needsUpdate=H}function zt(B){return B.isMeshLambertMaterial||B.isMeshToonMaterial||B.isMeshPhongMaterial||B.isMeshStandardMaterial||B.isShadowMaterial||B.isShaderMaterial&&B.lights===!0}this.getActiveCubeFace=function(){return C},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(B,H,V){const X=me.get(B);X.__autoAllocateDepthBuffer=B.resolveDepthBuffer===!1,X.__autoAllocateDepthBuffer===!1&&(X.__useRenderToTexture=!1),me.get(B.texture).__webglTexture=H,me.get(B.depthTexture).__webglTexture=X.__autoAllocateDepthBuffer?void 0:V,X.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(B,H){const V=me.get(B);V.__webglFramebuffer=H,V.__useDefaultFramebuffer=H===void 0};const hs=P.createFramebuffer();this.setRenderTarget=function(B,H=0,V=0){I=B,C=H,v=V;let X=!0,G=null,ye=!1,Se=!1;if(B){const Re=me.get(B);if(Re.__useDefaultFramebuffer!==void 0)re.bindFramebuffer(P.FRAMEBUFFER,null),X=!1;else if(Re.__webglFramebuffer===void 0)be.setupRenderTarget(B);else if(Re.__hasExternalTextures)be.rebindTextures(B,me.get(B.texture).__webglTexture,me.get(B.depthTexture).__webglTexture);else if(B.depthBuffer){const ke=B.depthTexture;if(Re.__boundDepthTexture!==ke){if(ke!==null&&me.has(ke)&&(B.width!==ke.image.width||B.height!==ke.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");be.setupDepthRenderbuffer(B)}}const We=B.texture;(We.isData3DTexture||We.isDataArrayTexture||We.isCompressedArrayTexture)&&(Se=!0);const ze=me.get(B).__webglFramebuffer;B.isWebGLCubeRenderTarget?(Array.isArray(ze[H])?G=ze[H][V]:G=ze[H],ye=!0):B.samples>0&&be.useMultisampledRTT(B)===!1?G=me.get(B).__webglMultisampledFramebuffer:Array.isArray(ze)?G=ze[V]:G=ze,T.copy(B.viewport),R.copy(B.scissor),U=B.scissorTest}else T.copy(Ae).multiplyScalar(Q).floor(),R.copy(Ce).multiplyScalar(Q).floor(),U=Ie;if(V!==0&&(G=hs),re.bindFramebuffer(P.FRAMEBUFFER,G)&&X&&re.drawBuffers(B,G),re.viewport(T),re.scissor(R),re.setScissorTest(U),ye){const Re=me.get(B.texture);P.framebufferTexture2D(P.FRAMEBUFFER,P.COLOR_ATTACHMENT0,P.TEXTURE_CUBE_MAP_POSITIVE_X+H,Re.__webglTexture,V)}else if(Se){const Re=H;for(let We=0;We<B.textures.length;We++){const ze=me.get(B.textures[We]);P.framebufferTextureLayer(P.FRAMEBUFFER,P.COLOR_ATTACHMENT0+We,ze.__webglTexture,V,Re)}}else if(B!==null&&V!==0){const Re=me.get(B.texture);P.framebufferTexture2D(P.FRAMEBUFFER,P.COLOR_ATTACHMENT0,P.TEXTURE_2D,Re.__webglTexture,V)}E=-1},this.readRenderTargetPixels=function(B,H,V,X,G,ye,Se,Oe=0){if(!(B&&B.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Re=me.get(B).__webglFramebuffer;if(B.isWebGLCubeRenderTarget&&Se!==void 0&&(Re=Re[Se]),Re){re.bindFramebuffer(P.FRAMEBUFFER,Re);try{const We=B.textures[Oe],ze=We.format,ke=We.type;if(!oe.textureFormatReadable(ze)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!oe.textureTypeReadable(ke)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}H>=0&&H<=B.width-X&&V>=0&&V<=B.height-G&&(B.textures.length>1&&P.readBuffer(P.COLOR_ATTACHMENT0+Oe),P.readPixels(H,V,X,G,He.convert(ze),He.convert(ke),ye))}finally{const We=I!==null?me.get(I).__webglFramebuffer:null;re.bindFramebuffer(P.FRAMEBUFFER,We)}}},this.readRenderTargetPixelsAsync=async function(B,H,V,X,G,ye,Se,Oe=0){if(!(B&&B.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Re=me.get(B).__webglFramebuffer;if(B.isWebGLCubeRenderTarget&&Se!==void 0&&(Re=Re[Se]),Re)if(H>=0&&H<=B.width-X&&V>=0&&V<=B.height-G){re.bindFramebuffer(P.FRAMEBUFFER,Re);const We=B.textures[Oe],ze=We.format,ke=We.type;if(!oe.textureFormatReadable(ze))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!oe.textureTypeReadable(ke))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const nt=P.createBuffer();P.bindBuffer(P.PIXEL_PACK_BUFFER,nt),P.bufferData(P.PIXEL_PACK_BUFFER,ye.byteLength,P.STREAM_READ),B.textures.length>1&&P.readBuffer(P.COLOR_ATTACHMENT0+Oe),P.readPixels(H,V,X,G,He.convert(ze),He.convert(ke),0);const yt=I!==null?me.get(I).__webglFramebuffer:null;re.bindFramebuffer(P.FRAMEBUFFER,yt);const Dt=P.fenceSync(P.SYNC_GPU_COMMANDS_COMPLETE,0);return P.flush(),await R0(P,Dt,4),P.bindBuffer(P.PIXEL_PACK_BUFFER,nt),P.getBufferSubData(P.PIXEL_PACK_BUFFER,0,ye),P.deleteBuffer(nt),P.deleteSync(Dt),ye}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(B,H=null,V=0){const X=Math.pow(2,-V),G=Math.floor(B.image.width*X),ye=Math.floor(B.image.height*X),Se=H!==null?H.x:0,Oe=H!==null?H.y:0;be.setTexture2D(B,0),P.copyTexSubImage2D(P.TEXTURE_2D,V,0,0,Se,Oe,G,ye),re.unbindTexture()};const zi=P.createFramebuffer(),Vi=P.createFramebuffer();this.copyTextureToTexture=function(B,H,V=null,X=null,G=0,ye=null){ye===null&&(G!==0?(Qa("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),ye=G,G=0):ye=0);let Se,Oe,Re,We,ze,ke,nt,yt,Dt;const vt=B.isCompressedTexture?B.mipmaps[ye]:B.image;if(V!==null)Se=V.max.x-V.min.x,Oe=V.max.y-V.min.y,Re=V.isBox3?V.max.z-V.min.z:1,We=V.min.x,ze=V.min.y,ke=V.isBox3?V.min.z:0;else{const vn=Math.pow(2,-G);Se=Math.floor(vt.width*vn),Oe=Math.floor(vt.height*vn),B.isDataArrayTexture?Re=vt.depth:B.isData3DTexture?Re=Math.floor(vt.depth*vn):Re=1,We=0,ze=0,ke=0}X!==null?(nt=X.x,yt=X.y,Dt=X.z):(nt=0,yt=0,Dt=0);const Tt=He.convert(H.format),Ye=He.convert(H.type);let Ft;H.isData3DTexture?(be.setTexture3D(H,0),Ft=P.TEXTURE_3D):H.isDataArrayTexture||H.isCompressedArrayTexture?(be.setTexture2DArray(H,0),Ft=P.TEXTURE_2D_ARRAY):(be.setTexture2D(H,0),Ft=P.TEXTURE_2D),P.pixelStorei(P.UNPACK_FLIP_Y_WEBGL,H.flipY),P.pixelStorei(P.UNPACK_PREMULTIPLY_ALPHA_WEBGL,H.premultiplyAlpha),P.pixelStorei(P.UNPACK_ALIGNMENT,H.unpackAlignment);const mt=P.getParameter(P.UNPACK_ROW_LENGTH),Bt=P.getParameter(P.UNPACK_IMAGE_HEIGHT),_n=P.getParameter(P.UNPACK_SKIP_PIXELS),Yt=P.getParameter(P.UNPACK_SKIP_ROWS),wi=P.getParameter(P.UNPACK_SKIP_IMAGES);P.pixelStorei(P.UNPACK_ROW_LENGTH,vt.width),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,vt.height),P.pixelStorei(P.UNPACK_SKIP_PIXELS,We),P.pixelStorei(P.UNPACK_SKIP_ROWS,ze),P.pixelStorei(P.UNPACK_SKIP_IMAGES,ke);const Nt=B.isDataArrayTexture||B.isData3DTexture,En=H.isDataArrayTexture||H.isData3DTexture;if(B.isDepthTexture){const vn=me.get(B),wn=me.get(H),Pn=me.get(vn.__renderTarget),Sl=me.get(wn.__renderTarget);re.bindFramebuffer(P.READ_FRAMEBUFFER,Pn.__webglFramebuffer),re.bindFramebuffer(P.DRAW_FRAMEBUFFER,Sl.__webglFramebuffer);for(let us=0;us<Re;us++)Nt&&(P.framebufferTextureLayer(P.READ_FRAMEBUFFER,P.COLOR_ATTACHMENT0,me.get(B).__webglTexture,G,ke+us),P.framebufferTextureLayer(P.DRAW_FRAMEBUFFER,P.COLOR_ATTACHMENT0,me.get(H).__webglTexture,ye,Dt+us)),P.blitFramebuffer(We,ze,Se,Oe,nt,yt,Se,Oe,P.DEPTH_BUFFER_BIT,P.NEAREST);re.bindFramebuffer(P.READ_FRAMEBUFFER,null),re.bindFramebuffer(P.DRAW_FRAMEBUFFER,null)}else if(G!==0||B.isRenderTargetTexture||me.has(B)){const vn=me.get(B),wn=me.get(H);re.bindFramebuffer(P.READ_FRAMEBUFFER,zi),re.bindFramebuffer(P.DRAW_FRAMEBUFFER,Vi);for(let Pn=0;Pn<Re;Pn++)Nt?P.framebufferTextureLayer(P.READ_FRAMEBUFFER,P.COLOR_ATTACHMENT0,vn.__webglTexture,G,ke+Pn):P.framebufferTexture2D(P.READ_FRAMEBUFFER,P.COLOR_ATTACHMENT0,P.TEXTURE_2D,vn.__webglTexture,G),En?P.framebufferTextureLayer(P.DRAW_FRAMEBUFFER,P.COLOR_ATTACHMENT0,wn.__webglTexture,ye,Dt+Pn):P.framebufferTexture2D(P.DRAW_FRAMEBUFFER,P.COLOR_ATTACHMENT0,P.TEXTURE_2D,wn.__webglTexture,ye),G!==0?P.blitFramebuffer(We,ze,Se,Oe,nt,yt,Se,Oe,P.COLOR_BUFFER_BIT,P.NEAREST):En?P.copyTexSubImage3D(Ft,ye,nt,yt,Dt+Pn,We,ze,Se,Oe):P.copyTexSubImage2D(Ft,ye,nt,yt,We,ze,Se,Oe);re.bindFramebuffer(P.READ_FRAMEBUFFER,null),re.bindFramebuffer(P.DRAW_FRAMEBUFFER,null)}else En?B.isDataTexture||B.isData3DTexture?P.texSubImage3D(Ft,ye,nt,yt,Dt,Se,Oe,Re,Tt,Ye,vt.data):H.isCompressedArrayTexture?P.compressedTexSubImage3D(Ft,ye,nt,yt,Dt,Se,Oe,Re,Tt,vt.data):P.texSubImage3D(Ft,ye,nt,yt,Dt,Se,Oe,Re,Tt,Ye,vt):B.isDataTexture?P.texSubImage2D(P.TEXTURE_2D,ye,nt,yt,Se,Oe,Tt,Ye,vt.data):B.isCompressedTexture?P.compressedTexSubImage2D(P.TEXTURE_2D,ye,nt,yt,vt.width,vt.height,Tt,vt.data):P.texSubImage2D(P.TEXTURE_2D,ye,nt,yt,Se,Oe,Tt,Ye,vt);P.pixelStorei(P.UNPACK_ROW_LENGTH,mt),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,Bt),P.pixelStorei(P.UNPACK_SKIP_PIXELS,_n),P.pixelStorei(P.UNPACK_SKIP_ROWS,Yt),P.pixelStorei(P.UNPACK_SKIP_IMAGES,wi),ye===0&&H.generateMipmaps&&P.generateMipmap(Ft),re.unbindTexture()},this.initRenderTarget=function(B){me.get(B).__webglFramebuffer===void 0&&be.setupRenderTarget(B)},this.initTexture=function(B){B.isCubeTexture?be.setTextureCube(B,0):B.isData3DTexture?be.setTexture3D(B,0):B.isDataArrayTexture||B.isCompressedArrayTexture?be.setTexture2DArray(B,0):be.setTexture2D(B,0),re.unbindTexture()},this.resetState=function(){C=0,v=0,I=null,re.reset(),W.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Kn}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=dt._getDrawingBufferColorSpace(e),t.unpackColorSpace=dt._getUnpackColorSpace()}}const Ow=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:uu,AddEquation:$i,AddOperation:Jp,AdditiveAnimationBlendMode:Au,AdditiveBlending:_c,AgXToneMapping:tA,AlphaFormat:pu,AlwaysCompare:gA,AlwaysDepth:Cc,AlwaysStencilFunc:Vh,AmbientLight:nm,AnimationAction:pm,AnimationClip:Yr,AnimationLoader:tb,AnimationMixer:Am,AnimationObjectGroup:vb,AnimationUtils:jy,ArcCurve:LA,ArrayCamera:hm,ArrowHelper:Kb,AttachedBindMode:zh,Audio:qu,AudioAnalyser:fb,AudioContext:Vu,AudioListener:um,AudioLoader:lm,AxesHelper:Jb,BackSide:bn,BasicDepthPacking:cA,BasicShadowMap:Fg,BatchedMesh:IA,Bone:ll,BooleanKeyframeTrack:Js,Box2:Pb,Box3:$t,Box3Helper:Xb,BoxGeometry:Ut,BoxHelper:qb,BufferAttribute:ot,BufferGeometry:Je,BufferGeometryLoader:om,ByteType:du,Cache:bi,Camera:ol,CameraHelper:Wb,CanvasTexture:RA,CapsuleGeometry:io,CatmullRomCurve3:ro,CineonToneMapping:$p,CircleGeometry:so,ClampToEdgeWrapping:Yn,Clock:Wu,Color:ue,ColorKeyframeTrack:ku,ColorManagement:dt,CompressedArrayTexture:TA,CompressedCubeTexture:BA,CompressedTexture:Zr,CompressedTextureLoader:nb,ConeGeometry:Hi,ConstantAlphaFactor:Xp,ConstantColorFactor:Wp,Controls:Zb,CubeCamera:vA,CubeReflectionMapping:Qi,CubeRefractionMapping:rs,CubeTexture:Za,CubeTextureLoader:ib,CubeUVReflectionMapping:Kr,CubicBezierCurve:Bu,CubicBezierCurve3:PA,CubicInterpolant:ZA,CullFaceBack:Qh,CullFaceFront:Bp,CullFaceFrontBack:Pg,CullFaceNone:Tp,Curve:fi,CurvePath:UA,CustomBlending:Rp,CustomToneMapping:eA,CylinderGeometry:Gt,Cylindrical:Lb,Data3DTexture:ja,DataArrayTexture:rl,DataTexture:Qn,DataTextureLoader:sb,DataUtils:q0,DecrementStencilOp:qg,DecrementWrapStencilOp:Yg,DefaultLoadingManager:tm,DepthFormat:Nr,DepthStencilFormat:Or,DepthTexture:Iu,DetachedBindMode:iA,DirectionalLight:ho,DirectionalLightHelper:Vb,DiscreteInterpolant:$A,DodecahedronGeometry:dl,DoubleSide:ln,DstAlphaFactor:Qp,DstColorFactor:Hp,DynamicCopyUsage:c0,DynamicDrawUsage:$n,DynamicReadUsage:r0,EdgesGeometry:DA,EllipseCurve:fl,EqualCompare:fA,EqualDepth:Ic,EqualStencilFunc:Zg,EquirectangularReflectionMapping:Ia,EquirectangularRefractionMapping:Ma,Euler:zn,EventDispatcher:Ei,ExternalTexture:Mu,ExtrudeGeometry:pl,FileLoader:xn,Float16BufferAttribute:$0,Float32BufferAttribute:Ge,FloatType:en,Fog:$a,FogExp2:cl,FramebufferTexture:xy,FrontSide:hi,Frustum:jr,FrustumArray:hl,GLBufferAttribute:Tb,GLSL1:h0,GLSL3:Wh,GreaterCompare:pA,GreaterDepth:Tc,GreaterEqualCompare:mA,GreaterEqualDepth:Mc,GreaterEqualStencilFunc:n0,GreaterStencilFunc:e0,GridHelper:Hb,Group:Lt,HalfFloatType:qn,HemisphereLight:Hu,HemisphereLightHelper:Gb,IcosahedronGeometry:Al,ImageBitmapLoader:cm,ImageLoader:Wa,ImageUtils:xA,IncrementStencilOp:Wg,IncrementWrapStencilOp:Xg,InstancedBufferAttribute:Ws,InstancedBufferGeometry:am,InstancedInterleavedBuffer:Mb,InstancedMesh:Bn,Int16BufferAttribute:j0,Int32BufferAttribute:Z0,Int8BufferAttribute:Y0,IntType:$c,InterleavedBuffer:eo,InterleavedBufferAttribute:as,Interpolant:$r,InterpolateDiscrete:Hr,InterpolateLinear:zr,InterpolateSmooth:Ac,InterpolationSamplingMode:f0,InterpolationSamplingType:d0,InvertStencilOp:Kg,KeepStencilOp:Is,KeyframeTrack:ii,LOD:wu,LatheGeometry:ml,Layers:al,LessCompare:dA,LessDepth:Sc,LessEqualCompare:gu,LessEqualDepth:Hs,LessEqualStencilFunc:$g,LessStencilFunc:jg,Light:ls,LightProbe:rm,Line:_i,Line3:mm,LineBasicMaterial:dn,LineCurve:Ru,LineCurve3:FA,LineDashedMaterial:KA,LineLoop:Su,LineSegments:di,LinearFilter:Ht,LinearInterpolant:Ou,LinearMipMapLinearFilter:kg,LinearMipMapNearestFilter:Og,LinearMipmapLinearFilter:kn,LinearMipmapNearestFilter:Mr,LinearSRGBColorSpace:Qt,LinearToneMapping:jp,LinearTransfer:Na,Loader:fn,LoaderUtils:ki,LoadingManager:Qu,LoopOnce:sA,LoopPingPong:aA,LoopRepeat:rA,MOUSE:Dg,Material:nn,MaterialLoader:El,MathUtils:we,Matrix2:ju,Matrix3:at,Matrix4:Ve,MaxEquation:Fp,Mesh:Be,MeshBasicMaterial:yn,MeshDepthMaterial:Fu,MeshDistanceMaterial:Uu,MeshLambertMaterial:XA,MeshMatcapMaterial:YA,MeshNormalMaterial:qA,MeshPhongMaterial:VA,MeshPhysicalMaterial:hn,MeshStandardMaterial:rt,MeshToonMaterial:WA,MinEquation:Pp,MirroredRepeatWrapping:Lr,MixOperation:Kp,MultiplyBlending:Hh,MultiplyOperation:qa,NearestFilter:Jt,NearestMipMapLinearFilter:Ng,NearestMipMapNearestFilter:Ug,NearestMipmapLinearFilter:Ds,NearestMipmapNearestFilter:Xa,NeutralToneMapping:nA,NeverCompare:uA,NeverDepth:wc,NeverStencilFunc:Jg,NoBlending:Fi,NoColorSpace:ci,NoToneMapping:Ui,NormalAnimationBlendMode:sl,NormalBlending:Us,NotEqualCompare:AA,NotEqualDepth:Bc,NotEqualStencilFunc:t0,NumberKeyframeTrack:Xs,Object3D:lt,ObjectLoader:cb,ObjectSpaceNormalMap:hA,OctahedronGeometry:ao,OneFactor:Np,OneMinusConstantAlphaFactor:Yp,OneMinusConstantColorFactor:qp,OneMinusDstAlphaFactor:Gp,OneMinusDstColorFactor:zp,OneMinusSrcAlphaFactor:vc,OneMinusSrcColorFactor:kp,OrthographicCamera:lo,PCFShadowMap:lu,PCFSoftShadowMap:hu,PMREMGenerator:Zh,Path:Kc,PerspectiveCamera:Zt,Plane:On,PlaneGeometry:ni,PlaneHelper:Yb,PointLight:Oi,PointLightHelper:kb,Points:ul,PointsMaterial:no,PolarGridHelper:zb,PolyhedronGeometry:cs,PositionalAudio:dm,PropertyBinding:wt,PropertyMixer:fm,QuadraticBezierCurve:Du,QuadraticBezierCurve3:Lu,Quaternion:tn,QuaternionKeyframeTrack:Ys,QuaternionLinearInterpolant:em,RED_GREEN_RGTC2_Format:Pa,RED_RGTC1_Format:Da,REVISION:jc,RGBADepthPacking:lA,RGBAFormat:Vt,RGBAIntegerFormat:il,RGBA_ASTC_10x10_Format:Gc,RGBA_ASTC_10x5_Format:Oc,RGBA_ASTC_10x6_Format:kc,RGBA_ASTC_10x8_Format:Qc,RGBA_ASTC_12x10_Format:Hc,RGBA_ASTC_12x12_Format:zc,RGBA_ASTC_4x4_Format:is,RGBA_ASTC_5x4_Format:Dc,RGBA_ASTC_5x5_Format:Lc,RGBA_ASTC_6x5_Format:Pc,RGBA_ASTC_6x6_Format:ks,RGBA_ASTC_8x5_Format:Fc,RGBA_ASTC_8x6_Format:Uc,RGBA_ASTC_8x8_Format:Nc,RGBA_BPTC_Format:Vs,RGBA_ETC2_EAC_Format:Gr,RGBA_PVRTC_2BPPV1_Format:kr,RGBA_PVRTC_4BPPV1_Format:zs,RGBA_S3TC_DXT1_Format:ns,RGBA_S3TC_DXT3_Format:Os,RGBA_S3TC_DXT5_Format:Tr,RGBDepthPacking:Gg,RGBFormat:Ur,RGBIntegerFormat:Qg,RGB_BPTC_SIGNED_Format:Vc,RGB_BPTC_UNSIGNED_Format:Ra,RGB_ETC1_Format:Ba,RGB_ETC2_Format:Qr,RGB_PVRTC_2BPPV1_Format:Rc,RGB_PVRTC_4BPPV1_Format:Ta,RGB_S3TC_DXT1_Format:Ns,RGDepthPacking:Hg,RGFormat:es,RGIntegerFormat:nl,RawShaderMaterial:zA,Ray:Jr,Raycaster:Ju,RectAreaLight:im,RedFormat:Pi,RedIntegerFormat:Ja,ReinhardToneMapping:Zp,RenderTarget:bu,RenderTarget3D:Cb,RepeatWrapping:Hn,ReplaceStencilOp:Vg,ReverseSubtractEquation:Lp,RingGeometry:oo,SIGNED_RED_GREEN_RGTC2_Format:Fa,SIGNED_RED_RGTC1_Format:La,SRGBColorSpace:St,SRGBTransfer:Pt,Scene:Eu,ShaderChunk:ht,ShaderLib:oi,ShaderMaterial:jn,ShadowMaterial:HA,Shape:Gs,ShapeGeometry:gl,ShapePath:jb,ShapeUtils:li,ShortType:fu,Skeleton:to,SkeletonHelper:Ob,SkinnedMesh:Cu,Source:ts,Sphere:un,SphereGeometry:Gn,Spherical:Db,SphericalHarmonics3:sm,SplineCurve:Pu,SpotLight:_l,SpotLightHelper:Nb,Sprite:SA,SpriteMaterial:vu,SrcAlphaFactor:Ec,SrcAlphaSaturateFactor:Vp,SrcColorFactor:Op,StaticCopyUsage:o0,StaticDrawUsage:Oa,StaticReadUsage:s0,StereoCamera:hb,StreamCopyUsage:l0,StreamDrawUsage:i0,StreamReadUsage:a0,StringKeyframeTrack:js,SubtractEquation:Dp,SubtractiveBlending:Gh,TOUCH:Lg,TangentSpaceNormalMap:os,TetrahedronGeometry:yl,Texture:Wt,TextureLoader:Gu,TextureUtils:ix,Timer:Bb,TimestampQuery:u0,TorusGeometry:co,TorusKnotGeometry:bl,Triangle:Dn,TriangleFanDrawMode:Wc,TriangleStripDrawMode:mu,TrianglesDrawMode:oA,TubeGeometry:xl,UVMapping:Zc,Uint16BufferAttribute:xu,Uint32BufferAttribute:_u,Uint8BufferAttribute:K0,Uint8ClampedBufferAttribute:J0,Uniform:Ku,UniformsGroup:Ib,UniformsLib:Te,UniformsUtils:Ga,UnsignedByteType:ut,UnsignedInt101111Type:Ka,UnsignedInt248Type:Fr,UnsignedInt5999Type:Ya,UnsignedIntType:Gi,UnsignedShort4444Type:el,UnsignedShort5551Type:tl,UnsignedShortType:Pr,VSMShadowMap:mi,Vector2:ie,Vector3:S,Vector4:bt,VectorKeyframeTrack:Ks,VideoFrameTexture:by,VideoTexture:MA,WebGL3DRenderTarget:U0,WebGLArrayRenderTarget:F0,WebGLCoordinateSystem:Kn,WebGLCubeRenderTarget:wA,WebGLRenderTarget:ui,WebGLRenderer:wm,WebGLUtils:vm,WebGPUCoordinateSystem:Vr,WebXRController:mc,WireframeGeometry:GA,WrapAroundEnding:Ua,ZeroCurvatureEnding:Ls,ZeroFactor:Up,ZeroSlopeEnding:Ps,ZeroStencilOp:zg,createCanvasElement:bA},Symbol.toStringTag,{value:"Module"}));function Cm(){try{return import.meta}catch(s){console.debug("import.meta is not available in this environment",s);return}}function yc(s){return typeof s!="string"||s.length===0||s.endsWith("/")?s:`${s}/`}function kw(){const s=Cm();if(!s||typeof s.url!="string")return null;try{const e=new URL(s.url),{pathname:t}=e,n=t.lastIndexOf("/assets/");if(n>=0){const i=t.slice(0,n+1);return yc(i)}}catch(e){console.debug("Failed to derive bundled base URL from import.meta.url",e)}return null}function ta(){var n;const s=Cm(),e=s&&s.env?s.env.BASE_URL:void 0;if(typeof e=="string"&&e.length>0&&e!=="/")return yc(e);const t=kw();if(t)return t;if(typeof e=="string"&&e.length>0)return yc(e);if(typeof window<"u"&&typeof((n=window.location)==null?void 0:n.pathname)=="string"){const{pathname:i}=window.location;if(i&&i!==""){const r=i.lastIndexOf("/");if(r>=0)return yc(i.slice(0,r+1))}}return"/"}function Qw(){var e;const s=ta();if(typeof window>"u"||!((e=window.location)!=null&&e.origin))return new URL(s,"http://localhost");try{return new URL(s,window.location.origin)}catch{return new URL("/",window.location.origin)}}class Gw{constructor(e,t,n,i){this.scene=e,this.camera=t,this.lightingRef=n,this.anchors=i,this.listener=new um,this.camera.add(this.listener),this.loader=new lm;const r=this.listener.context;this.masterGain=r.createGain(),this.masterGain.gain.value=.9,this.masterGain.connect(this.listener.getInput()),this.bus={ambience:r.createGain(),voices:r.createGain(),effects:r.createGain()},this.bus.ambience.gain.value=.9,this.bus.voices.gain.value=.7,this.bus.effects.gain.value=.7,this.bus.ambience.connect(this.masterGain),this.bus.voices.connect(this.masterGain),this.bus.effects.connect(this.masterGain),this.buffers=new Map,this.emitters=[],this.oneShotTimers=[],this.ready=!1,this.zones={harbor:{pos:i.harbor,radius:50},agora:{pos:i.agora,radius:40},acropolis:{pos:i.acropolis,radius:40}}}logMissing(e,t){console.info(`[audio] Optional asset missing: ${e} (${t}). Drop a file at public/${t} to enable.`)}async loadBuffer(e,t){if(!t)return null;const n=this.buffers.get(e);if(n)return n;try{const i=await new Promise((r,a)=>this.loader.load(t,r,void 0,a));return this.buffers.set(e,i),i}catch{return this.logMissing(e,t),null}}_makePositional(e,t,n="ambience",{loop:i=!0,volume:r=.6,refDistance:a=12,maxDistance:o=80,rolloff:c=1}={}){if(!e)return null;const l=new dm(this.listener);l.setBuffer(e),l.setLoop(i),l.setRefDistance(a),l.setMaxDistance(o),l.setRolloffFactor(c),l.setVolume(r),l.userData.group=n;const h=l.getOutput?l.getOutput():l.source;if(h&&this.bus[n]){try{h.disconnect()}catch{}h.connect(this.bus[n])}const u=new lt;return u.position.copy(t),u.add(l),this.scene.add(u),this.emitters.push({obj:u,src:l,group:n}),l}_makeGlobal(e,t="ambience",{loop:n=!0,volume:i=.3}={}){if(!e)return null;const r=new qu(this.listener);r.setBuffer(e),r.setLoop(n),r.setVolume(i),r.userData.group=t;const a=r.getOutput?r.getOutput():r.source;if(a&&this.bus[t]){try{a.disconnect()}catch{}a.connect(this.bus[t])}return this.emitters.push({obj:this.camera,src:r,group:t}),r}async initFromManifest(e="audio/manifest.json"){var _,C,v,I,E,w;const t=Qw(),n=ta(),i=t,r=T=>{if(!T)return T;try{return new URL(T,i).toString()}catch{return console.warn(`[audio] Failed to resolve asset path: ${T}. Using as-is.`),T}};function a(T){return(T.headers.get("content-type")||"").includes("text/html")}async function o(T){try{const R=await fetch(T,{method:"GET"});return!R.ok||a(R)||!(R.headers.get("content-type")||"").includes("json")?null:await R.json()}catch{return null}}const c=[r(e),r(`${n}audio/manifest.json`)];let l=null;for(const T of c){console.log("[audio] manifest probe:",T);const R=await o(T);if(R){l=R;break}}l||(console.warn("[audio] manifest.json not found via candidates:",c),l={ambient:{},effects:{}});const h=l.ambient??{},u=l.effects??{},d=await this.loadBuffer("sea",r(h.sea)),f=await this.loadBuffer("gulls",r(h.gulls)),p=await this.loadBuffer("wind",r(h.wind)),g=await this.loadBuffer("market",r(h.market)),m=await this.loadBuffer("fountain",r(h.fountain)),A=await this.loadBuffer("lyre",r(h.lyre)),y=await this.loadBuffer("blacksmith",r(u.blacksmith)),x=await this.loadBuffer("goats",r(u.goats)),b=await this.loadBuffer("cart",r(u.cart));(_=this._makeGlobal(d,"ambience",{volume:.25}))==null||_.play(),(C=this._makeGlobal(p,"ambience",{volume:.05}))==null||C.play(),(v=this._makePositional(f,this.zones.harbor.pos,"ambience",{volume:.35,refDistance:16,maxDistance:120}))==null||v.play(),(I=this._makePositional(g,this.zones.agora.pos,"voices",{volume:.35,refDistance:10}))==null||I.play(),(E=this._makePositional(m,this.zones.agora.pos.clone().add(new S(6,0,-4)),"ambience",{volume:.25,refDistance:8}))==null||E.play(),(w=this._makePositional(A,this.zones.acropolis.pos,"ambience",{volume:.22,refDistance:10}))==null||w.play(),this.scheduleOneShots(y,this.zones.agora.pos.clone().add(new S(-8,0,6)),"effects",12,22),this.scheduleOneShots(x,this.zones.harbor.pos.clone().add(new S(18,0,10)),"effects",18,38),this.scheduleOneShots(b,this.zones.agora.pos.clone().add(new S(12,0,-12)),"effects",25,45),this.ready=!0}scheduleOneShots(e,t,n,i=12,r=24){if(!e)return;const a=()=>{const l=this._makePositional(e,t,n,{loop:!1,volume:.35,refDistance:8});l&&l.play();const h=(Math.random()*(r-i)+i)*1e3,u=setTimeout(a,h);this.oneShotTimers.push(u)},o=(Math.random()*(r-i)+i)*1e3,c=setTimeout(a,o);this.oneShotTimers.push(c)}update(e){var i,r;if(!this.ready)return;const t=((r=(i=this.lightingRef)==null?void 0:i.getNightFactor)==null?void 0:r.call(i))??0,n=(a,o,c)=>a+(o-a)*c;this.bus.voices.gain.value=n(.75,.35,t),this.bus.ambience.gain.value=n(.85,.95,t),this.masterGain.gain.value=n(.9,.8,t)}async ensureUserGestureResume(){const e=this.listener.context;if(e.state==="running")return;const t=async()=>{try{await e.resume()}catch{}window.removeEventListener("pointerdown",t),window.removeEventListener("keydown",t)};window.addEventListener("pointerdown",t),window.addEventListener("keydown",t)}dispose(){this.emitters.forEach(({obj:e,src:t})=>{try{t.stop()}catch{}e&&e!==this.camera&&this.scene.remove(e)}),this.oneShotTimers.forEach(e=>clearTimeout(e)),this.emitters=[],this.buffers.clear();try{this.camera.remove(this.listener)}catch{}}}function Hw(s,e={}){if(!s)return null;const t=e.key??"F10",n=document.createElement("div");Object.assign(n.style,{position:"fixed",top:"12px",right:"170px",padding:"10px 12px",background:"rgba(0,0,0,0.55)",backdropFilter:"blur(4px)",borderRadius:"10px",color:"#fff",font:"12px/1.2 ui-sans-serif, system-ui",zIndex:9999,userSelect:"none"});const i=(a,o,c=.8)=>{const l=document.createElement("div");l.style.display="flex",l.style.alignItems="center",l.style.margin="4px 0";const h=document.createElement("span");h.textContent=a,h.style.width="80px";const u=document.createElement("input");return u.type="range",u.min="0",u.max="1",u.step="0.01",u.value=String(c),u.style.width="140px",u.addEventListener("input",()=>{o.gain.value=Number(u.value)}),l.appendChild(h),l.appendChild(u),l};n.appendChild(i("Master",s.masterGain,.9)),n.appendChild(i("Ambience",s.bus.ambience,.9)),n.appendChild(i("Voices",s.bus.voices,.7)),n.appendChild(i("Effects",s.bus.effects,.7)),document.body.appendChild(n);const r=a=>{a.key===t&&(n.style.display=n.style.display!=="none"?"none":"block",a.preventDefault())};return window.addEventListener("keydown",r),{dispose(){window.removeEventListener("keydown",r),n.remove()}}}class wl extends Be{constructor(){const e=wl.SkyShader,t=new jn({name:e.name,uniforms:Ga.clone(e.uniforms),vertexShader:e.vertexShader,fragmentShader:e.fragmentShader,side:bn,depthWrite:!1});super(new Ut(1,1,1),t),this.isSky=!0}}wl.SkyShader={name:"SkyShader",uniforms:{turbidity:{value:2},rayleigh:{value:1},mieCoefficient:{value:.005},mieDirectionalG:{value:.8},sunPosition:{value:new S},up:{value:new S(0,1,0)}},vertexShader:`
		uniform vec3 sunPosition;
		uniform float rayleigh;
		uniform float turbidity;
		uniform float mieCoefficient;
		uniform vec3 up;

		varying vec3 vWorldPosition;
		varying vec3 vSunDirection;
		varying float vSunfade;
		varying vec3 vBetaR;
		varying vec3 vBetaM;
		varying float vSunE;

		// constants for atmospheric scattering
		const float e = 2.71828182845904523536028747135266249775724709369995957;
		const float pi = 3.141592653589793238462643383279502884197169;

		// wavelength of used primaries, according to preetham
		const vec3 lambda = vec3( 680E-9, 550E-9, 450E-9 );
		// this pre-calculation replaces older TotalRayleigh(vec3 lambda) function:
		// (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn))
		const vec3 totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );

		// mie stuff
		// K coefficient for the primaries
		const float v = 4.0;
		const vec3 K = vec3( 0.686, 0.678, 0.666 );
		// MieConst = pi * pow( ( 2.0 * pi ) / lambda, vec3( v - 2.0 ) ) * K
		const vec3 MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );

		// earth shadow hack
		// cutoffAngle = pi / 1.95;
		const float cutoffAngle = 1.6110731556870734;
		const float steepness = 1.5;
		const float EE = 1000.0;

		float sunIntensity( float zenithAngleCos ) {
			zenithAngleCos = clamp( zenithAngleCos, -1.0, 1.0 );
			return EE * max( 0.0, 1.0 - pow( e, -( ( cutoffAngle - acos( zenithAngleCos ) ) / steepness ) ) );
		}

		vec3 totalMie( float T ) {
			float c = ( 0.2 * T ) * 10E-18;
			return 0.434 * c * MieConst;
		}

		void main() {

			vec4 worldPosition = modelMatrix * vec4( position, 1.0 );
			vWorldPosition = worldPosition.xyz;

			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
			gl_Position.z = gl_Position.w; // set z to camera.far

			vSunDirection = normalize( sunPosition );

			vSunE = sunIntensity( dot( vSunDirection, up ) );

			vSunfade = 1.0 - clamp( 1.0 - exp( ( sunPosition.y / 450000.0 ) ), 0.0, 1.0 );

			float rayleighCoefficient = rayleigh - ( 1.0 * ( 1.0 - vSunfade ) );

			// extinction (absorption + out scattering)
			// rayleigh coefficients
			vBetaR = totalRayleigh * rayleighCoefficient;

			// mie coefficients
			vBetaM = totalMie( turbidity ) * mieCoefficient;

		}`,fragmentShader:`
		varying vec3 vWorldPosition;
		varying vec3 vSunDirection;
		varying float vSunfade;
		varying vec3 vBetaR;
		varying vec3 vBetaM;
		varying float vSunE;

		uniform float mieDirectionalG;
		uniform vec3 up;

		// constants for atmospheric scattering
		const float pi = 3.141592653589793238462643383279502884197169;

		const float n = 1.0003; // refractive index of air
		const float N = 2.545E25; // number of molecules per unit volume for air at 288.15K and 1013mb (sea level -45 celsius)

		// optical length at zenith for molecules
		const float rayleighZenithLength = 8.4E3;
		const float mieZenithLength = 1.25E3;
		// 66 arc seconds -> degrees, and the cosine of that
		const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;

		// 3.0 / ( 16.0 * pi )
		const float THREE_OVER_SIXTEENPI = 0.05968310365946075;
		// 1.0 / ( 4.0 * pi )
		const float ONE_OVER_FOURPI = 0.07957747154594767;

		float rayleighPhase( float cosTheta ) {
			return THREE_OVER_SIXTEENPI * ( 1.0 + pow( cosTheta, 2.0 ) );
		}

		float hgPhase( float cosTheta, float g ) {
			float g2 = pow( g, 2.0 );
			float inverse = 1.0 / pow( 1.0 - 2.0 * g * cosTheta + g2, 1.5 );
			return ONE_OVER_FOURPI * ( ( 1.0 - g2 ) * inverse );
		}

		void main() {

			vec3 direction = normalize( vWorldPosition - cameraPosition );

			// optical length
			// cutoff angle at 90 to avoid singularity in next formula.
			float zenithAngle = acos( max( 0.0, dot( up, direction ) ) );
			float inverse = 1.0 / ( cos( zenithAngle ) + 0.15 * pow( 93.885 - ( ( zenithAngle * 180.0 ) / pi ), -1.253 ) );
			float sR = rayleighZenithLength * inverse;
			float sM = mieZenithLength * inverse;

			// combined extinction factor
			vec3 Fex = exp( -( vBetaR * sR + vBetaM * sM ) );

			// in scattering
			float cosTheta = dot( direction, vSunDirection );

			float rPhase = rayleighPhase( cosTheta * 0.5 + 0.5 );
			vec3 betaRTheta = vBetaR * rPhase;

			float mPhase = hgPhase( cosTheta, mieDirectionalG );
			vec3 betaMTheta = vBetaM * mPhase;

			vec3 Lin = pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * ( 1.0 - Fex ), vec3( 1.5 ) );
			Lin *= mix( vec3( 1.0 ), pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * Fex, vec3( 1.0 / 2.0 ) ), clamp( pow( 1.0 - dot( up, vSunDirection ), 5.0 ), 0.0, 1.0 ) );

			// nightsky
			float theta = acos( direction.y ); // elevation --> y-axis, [-pi/2, pi/2]
			float phi = atan( direction.z, direction.x ); // azimuth --> x-axis [-pi/2, pi/2]
			vec2 uv = vec2( phi, theta ) / vec2( 2.0 * pi, pi ) + vec2( 0.5, 0.0 );
			vec3 L0 = vec3( 0.1 ) * Fex;

			// composition + solar disc
			float sundisk = smoothstep( sunAngularDiameterCos, sunAngularDiameterCos + 0.00002, cosTheta );
			L0 += ( vSunE * 19000.0 * Fex ) * sundisk;

			vec3 texColor = ( Lin + L0 ) * 0.04 + vec3( 0.0, 0.0003, 0.00075 );

			vec3 retColor = pow( texColor, vec3( 1.0 / ( 1.2 + ( 1.2 * vSunfade ) ) ) );

			gl_FragColor = vec4( retColor, 1.0 );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>

		}`};const zw=1e3;function Vw(s){const e=new wl;e.scale.setScalar(45e4),e.userData.noCollision=!0;const t=e.material.uniforms;return t.turbidity.value=10,t.rayleigh.value=2,t.mieCoefficient.value=.005,t.mieDirectionalG.value=.8,t.sunPosition.value.set(0,1,0),s.add(e),{sky:e}}const Sm=new S(0,1,0);function Im(s){return!Number.isFinite(s)||s<0?0:s>1?1:s}function Ff(s,e){if(!s||typeof s!="object")return 0;const t=Im(e);return s.timeOfDayPhase=t,t}function Ww(s,e=Sm){const n=Im(s)*Math.PI*2;return e.set(Math.cos(n),Math.sin(n),0),e}function qw(s,e){const{sky:t}=s||{};if(!t||!t.material||!t.material.uniforms||!t.material.uniforms.sunPosition)return;const n=(e==null?void 0:e.timeOfDayPhase)??0,i=Ww(n,Sm);return t.material.uniforms.sunPosition.value.copy(i).normalize(),i}function Xw(s,e){const t=Math.max(0,e),n=new Je,i=new Float32Array(t*3);for(let o=0;o<t;o++){const c=new S(Math.random()*2-1,Math.random()*2-1,Math.random()*2-1).normalize(),l=zw*(.8+Math.random()*.2),h=o*3;i[h]=c.x*l,i[h+1]=c.y*l,i[h+2]=c.z*l}n.setAttribute("position",new ot(i,3));const r=new no({size:1.2,color:16777215,transparent:!0,opacity:0,depthWrite:!1,blending:_c}),a=new ul(n,r);return a.matrixAutoUpdate=!1,a.updateMatrix(),s.add(a),a}function Yw(s,e){if(!s)return;const t=s.material;if(!t)return;const n=Math.sin(e*Math.PI*2),a=1-we.smoothstep(n,-.2,.1);t.opacity=we.lerp(t.opacity,a,.05)}const Kw=new ue("#ffb37f"),Jw=new ue("#ffffff"),jw=new ue("#ff9f76"),Zw=new ue("#0b1d51"),Mm=new ue("#bde0fe"),$w=new ue("#1f1f2e"),Tm=new ue("#9d8189"),eC=new ue,Bm=new S;function gh(s,e,t,n){return s.copy(e).lerp(t,n),s}function tC(s){const e=new ho(16777215,1);e.castShadow=!0,e.shadow.mapSize.set(1024,1024),e.shadow.bias=-5e-4;const t=e.shadow.camera;t.near=1,t.far=300,t.left=-120,t.right=120,t.top=120,t.bottom=-120,e.shadow.normalBias=.02,e.shadow.camera.updateProjectionMatrix(),s.add(e),s.add(e.target);const n=new Hu(Mm,Tm,.6);return s.add(n),{sunLight:e,hemiLight:n,nightFactor:0}}function nC(s,e){if(!s||!s.sunLight||!s.hemiLight)return;const{sunLight:t,hemiLight:n}=s,i=Bm.copy(e).normalize(),r=i.y,a=we.clamp(we.smoothstep(r,-.15,.1),0,1),o=1-a;t.position.copy(i).multiplyScalar(100),t.target.position.set(0,0,0),t.target.updateMatrixWorld();const c=we.lerp(.05,1.4,a);t.intensity=we.lerp(t.intensity,c,.1);const h=gh(eC,Kw,Jw,a).lerp(jw,o*.55);t.color.copy(h);const u=we.lerp(.12,.95,a);n.intensity=we.lerp(n.intensity,u,.1),gh(n.color,Zw,Mm,a),gh(n.groundColor,$w,Tm,a),s.nightFactor=o}function iC(s){const e=new ho(12574719,.2);e.castShadow=!1;const t=new Gn(5,16,16),n=new yn({color:15661055,transparent:!0,opacity:.3}),i=new Be(t,n),r=new Lt;return r.userData.noCollision=!0,r.add(e),r.add(i),s.add(r),s.add(e.target),{light:e,mesh:i,group:r}}function sC(s,e){if(!s||!e)return;const{light:t,mesh:n,group:i}=s,r=Bm.copy(e).multiplyScalar(-1).normalize();i.position.copy(r.multiplyScalar(400)),t.position.set(0,0,0),t.target.position.set(0,0,0),t.target.updateMatrixWorld(),n&&n.position.set(0,0,0);const a=we.clamp(-e.y,0,1);t.intensity=we.lerp(.05,.25,a),n&&n.material&&(n.material.opacity=we.lerp(.3,1,a),n.material.transparent=!0)}function rC(s,e,t){const n=new Ju,i=new ie,r=2236996,a=new Map;let o=null;function c(y){let x=y;for(;x;){if(x.userData&&x.userData.interactable)return x;x=x.parent}return null}function l(y){return!y||!y.material?[]:Array.isArray(y.material)?y.material:[y.material]}function h(y){var b;return y&&(((b=y.userData)==null?void 0:b.highlightTarget)||y)}function u(){if(!o)return;const y=h(o);for(const x of l(y)){if(!x||!a.has(x))continue;const b=a.get(x);x.emissive&&b.emissive&&x.emissive.copy(b.emissive),x.color&&b.color&&x.color.copy(b.color),a.delete(x)}o=null}function d(y){const x=h(y);for(const b of l(x))b&&(a.has(b)||a.set(b,{emissive:b.emissive?b.emissive.clone():null,color:b.color?b.color.clone():null}),b.emissive?b.emissive.setHex(r):b.color&&b.color.offsetHSL(0,0,.2));o=y}function f(y,x){const b=s.domElement.clientWidth,_=s.domElement.clientHeight;if(b===0||_===0)return null;const C=y/b*2-1,v=-(x/_)*2+1;i.set(C,v),n.setFromCamera(i,e);const I=n.intersectObjects(t.children,!0);return I.length>0?I[0]:null}function p(){i.set(0,0),n.setFromCamera(i,e);const y=n.intersectObjects(t.children,!0);return y.length>0?y[0]:null}function g(){const y=p(),x=y?c(y.object):null;return x?(x===o||(u(),d(x)),o):(u(),null)}function m(){return o}function A(){if(!o){console.log("Nothing to interact with.");return}const y=o.userData&&o.userData.onUse;if(typeof y=="function")y(o);else{const x=o.name||o.type||"object";console.log(`Nothing to interact with on ${x}.`)}}return{raycaster:n,mouse:i,pickObject:f,pickCenter:p,updateHover:g,clearHover:u,getCurrentHover:m,useObject:A}}function aC(){if(document.querySelector(".crosshair-overlay"))return;oC();const s=document.createElement("div");s.className="crosshair-overlay",document.body.appendChild(s)}const Uf="crosshair-overlay-style";function oC(){if(document.getElementById(Uf))return;const s=document.createElement("style");s.id=Uf,s.textContent=`
    .crosshair-overlay {
      position: fixed;
      top: 50%;
      left: 50%;
      width: 16px;
      height: 16px;
      transform: translate(-50%, -50%);
      pointer-events: none;
      z-index: 1000;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .crosshair-overlay::before {
      content: "";
      width: 4px;
      height: 4px;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.9);
      box-shadow: 0 0 6px rgba(255, 255, 255, 0.6);
    }
  `,document.head.appendChild(s)}const Nf=typeof globalThis<"u"&&typeof globalThis.SEA_LEVEL_Y<"u"?globalThis.SEA_LEVEL_Y:void 0,it=typeof Nf<"u"?Nf:0,ti=new S(-120,it,80),Ln=new S(-80,8,40),Rr=new S(-40,14,10),cC=110,lC=22,hC=18,eu=260,Of=2,uC=.35,dC=3.2,kf=new ie(-120,80),fC=it,pC=new S(-70,0,25),AC=new ie(140,110),mC=1297302345,Qf=new ie(260,100),Gf=new ie(0,-100),gC=4.5,ic=ti.x-gC,bc={west:-190,east:-117,north:-120,south:0},yh=new S(ti.x+Gf.x,it,ti.z+Gf.y),Rm={base:{generator:"lush-grass",baseColor:[116,172,110],shadowColor:[64,110,68],highlightColor:[190,232,148],shadowStrength:.45,highlightStrength:.65,contrast:1.02,repeat:[18,18],rotation:0,colorSpace:"srgb",seed:2024},details:[{generator:"lush-grass-detail",repeat:[36,36],rotation:.23,anisotropy:8,strength:.5,tint:[1.1,1.12,1.02],minHeight:-15,maxHeight:32,fade:8,mode:"mix",seed:404},{generator:"fresh-grass-lowlands",repeat:[48,48],rotation:.47,anisotropy:8,strength:.45,tint:[1.14,1.16,1.06],minHeight:-20,maxHeight:12,fade:6,mode:"mix",seed:405},{generator:"dry-grass-detail",repeat:[32,32],rotation:.11,anisotropy:8,strength:.32,tint:[1.08,1.02,.96],minHeight:8,maxHeight:42,fade:10,mode:"multiply",seed:406}]},{clamp:ss,lerp:Ca}=we;function sc(s,e,t){const n=Math.sin(s*127.1+e*311.7+t*74.7)*43758.5453;return n-Math.floor(n)}function yC(s,e,t){const n=Math.floor(s),i=Math.floor(e),r=s-n,a=e-i,o=sc(n,i,t),c=sc(n+1,i,t),l=sc(n,i+1,t),h=sc(n+1,i+1,t),u=Ca(o,c,r),d=Ca(l,h,r);return Ca(u,d,a)}function Hf(s,e,t={}){const{octaves:n=4,persistence:i=.55,lacunarity:r=2.1,seed:a=1}=t;let o=1,c=1,l=0,h=0;for(let u=0;u<n;u++)l+=yC(s*c,e*c,a+u*17.23)*o,h+=o,o*=i,c*=r;return h<=0?0:l/h}function bC(s,e){const[t,n,i]=s,r=.2126*t+.7152*n+.0722*i;return[ss(r+(t-r)*e,0,255),ss(r+(n-r)*e,0,255),ss(r+(i-r)*e,0,255)]}function xC(s,e){const[t,n,i]=s,r=a=>ss((a-128)*e+128,0,255);return[r(t),r(n),r(i)]}function _C(s,e,t,n){const{shadowMix:i,highlightMix:r,variation:a}=n,o=(c,l,h)=>{const u=Ca(c,l,i),d=Ca(u,h,r);return ss(d*(1+a),0,255)};return[o(s[0],e[0],t[0]),o(s[1],e[1],t[1]),o(s[2],e[2],t[2])]}function Cl(s={}){const{size:e=256,seed:t=1337,baseColor:n=[92,148,70],shadowColor:i=[36,74,34],highlightColor:r=[164,214,116],bladeFrequency:a=5.5,bladeTaper:o=1.45,highlightStrength:c=.55,shadowStrength:l=.65,noiseScale:h=3.5,patchiness:u=.2,saturation:d=1.08,contrast:f=1.06}=s,p=e,g=e,m=new Uint8Array(p*g*4);for(let y=0;y<g;y++)for(let x=0;x<p;x++){const b=x/p,_=y/g,C=Hf(b*h+t*.13,_*h+t*.19,{octaves:4,persistence:.55,seed:t}),v=Hf(b*(h*1.7)+t*.31,_*(h*1.1)+t*.47,{octaves:5,persistence:.5,seed:t*1.7}),I=Math.sin((b+_*.25)*Math.PI*a+v*Math.PI*2)*.5+.5,E=Math.pow(I,o),w=ss(E*l,0,1),T=ss(Math.pow(1-E,2)*c,0,1),R=ss((C-.5)*(u*2.4),-.35,.4);let U=_C(n,i,r,{shadowMix:w,highlightMix:T,variation:R});U=bC(U,d),U=xC(U,f);const O=(y*p+x)*4;m[O]=U[0],m[O+1]=U[1],m[O+2]=U[2],m[O+3]=255}const A=new Qn(m,p,g,Vt,ut);return A.needsUpdate=!0,A.wrapS=A.wrapT=Hn,A.flipY=!1,"colorSpace"in A&&St&&(A.colorSpace=St),A}function EC(s={}){return Cl({size:s.size??256,seed:(s.seed??1337)*3.1,baseColor:s.baseColor??[86,146,68],shadowColor:s.shadowColor??[30,64,32],highlightColor:s.highlightColor??[182,226,128],bladeFrequency:s.bladeFrequency??9.5,bladeTaper:s.bladeTaper??1.1,highlightStrength:s.highlightStrength??.85,shadowStrength:s.shadowStrength??.75,noiseScale:s.noiseScale??5.5,patchiness:s.patchiness??.35,saturation:s.saturation??1.12,contrast:s.contrast??1.15})}function vC(s={}){return Cl({size:s.size??256,seed:(s.seed??733)*2.7,baseColor:s.baseColor??[112,168,98],shadowColor:s.shadowColor??[58,106,64],highlightColor:s.highlightColor??[196,232,150],bladeFrequency:s.bladeFrequency??6.25,bladeTaper:s.bladeTaper??1.3,highlightStrength:s.highlightStrength??.68,shadowStrength:s.shadowStrength??.52,noiseScale:s.noiseScale??4.1,patchiness:s.patchiness??.22,saturation:s.saturation??1.08,contrast:s.contrast??1.04})}function wC(s={}){return Cl({size:s.size??256,seed:(s.seed??905)*3.5,baseColor:s.baseColor??[170,156,108],shadowColor:s.shadowColor??[102,96,68],highlightColor:s.highlightColor??[216,206,150],bladeFrequency:s.bladeFrequency??8.4,bladeTaper:s.bladeTaper??1.05,highlightStrength:s.highlightStrength??.58,shadowStrength:s.shadowStrength??.48,noiseScale:s.noiseScale??5.9,patchiness:s.patchiness??.32,saturation:s.saturation??.94,contrast:s.contrast??1.1})}const CC=new Gu,SC={"lush-grass":s=>Cl({size:s.size,seed:s.seed,baseColor:s.baseColor,shadowColor:s.shadowColor,highlightColor:s.highlightColor,bladeFrequency:s.bladeFrequency,bladeTaper:s.bladeTaper,highlightStrength:s.highlightStrength,shadowStrength:s.shadowStrength,noiseScale:s.noiseScale,patchiness:s.patchiness,saturation:s.saturation,contrast:s.contrast}),"lush-grass-detail":s=>EC({size:s.size,seed:s.seed,baseColor:s.baseColor,shadowColor:s.shadowColor,highlightColor:s.highlightColor,bladeFrequency:s.bladeFrequency,bladeTaper:s.bladeTaper,highlightStrength:s.highlightStrength,shadowStrength:s.shadowStrength,noiseScale:s.noiseScale,patchiness:s.patchiness,saturation:s.saturation,contrast:s.contrast}),"fresh-grass-lowlands":s=>vC({size:s.size,seed:s.seed,baseColor:s.baseColor,shadowColor:s.shadowColor,highlightColor:s.highlightColor,bladeFrequency:s.bladeFrequency,bladeTaper:s.bladeTaper,highlightStrength:s.highlightStrength,shadowStrength:s.shadowStrength,noiseScale:s.noiseScale,patchiness:s.patchiness,saturation:s.saturation,contrast:s.contrast}),"dry-grass-detail":s=>wC({size:s.size,seed:s.seed,baseColor:s.baseColor,shadowColor:s.shadowColor,highlightColor:s.highlightColor,bladeFrequency:s.bladeFrequency,bladeTaper:s.bladeTaper,highlightStrength:s.highlightStrength,shadowStrength:s.shadowStrength,noiseScale:s.noiseScale,patchiness:s.patchiness,saturation:s.saturation,contrast:s.contrast})};function Dm(s){const e=(s==null?void 0:s.generator)??(s==null?void 0:s.procedural);if(!e)return null;const t=SC[e];if(!t)return console.warn(`Unknown ground texture generator: ${e}`),null;try{return t(s)}catch(n){return console.warn(`Failed to build procedural texture: ${e}`,n),null}}function Jc(s,e={}){s.wrapS=s.wrapT=Hn;const[t,n]=Array.isArray(e.repeat)?[e.repeat[0]??1,e.repeat[1]??e.repeat[0]??1]:[e.repeat??1,e.repeat??1];if(s.repeat.set(t,n),e.offset){const[i,r]=Array.isArray(e.offset)?[e.offset[0]??0,e.offset[1]??0]:[e.offset??0,e.offset??0];s.offset.set(i,r)}typeof e.rotation=="number"&&e.rotation!==0&&(s.center.set(.5,.5),s.rotation=e.rotation),e.colorSpace==="srgb"?"colorSpace"in s&&St!==void 0&&(s.colorSpace=St):e.colorSpace==="linear"&&"colorSpace"in s&&Qt!==void 0&&(s.colorSpace=Qt),typeof e.anisotropy=="number"&&(s.anisotropy=e.anisotropy),s.needsUpdate=!0}function Lm(s,e,t){try{const n=CC.load(s,()=>{Jc(n,e)},void 0,i=>{console.warn(`Failed to load ground texture: ${s}`,i)});return Jc(n,e),n}catch(n){return console.warn(`Failed to load ground texture: ${s}`,n),null}}function IC(s){const e=s!=null&&s.url?Lm(s.url,s):Dm(s);if(!e)return null;Jc(e,s);const t=we.clamp(s.strength??.35,0,1),n=Number.isFinite(s.minHeight)?s.minHeight:-1e3,i=Number.isFinite(s.maxHeight)?s.maxHeight:1e3,r=Math.max(s.fade??8,0),a=new ue(1,1,1);Array.isArray(s.tint)?a.setRGB(s.tint[0]??1,s.tint[1]??s.tint[0]??1,s.tint[2]??s.tint[1]??s.tint[0]??1):typeof s.tint=="string"&&a.set(s.tint);const o=s.mode==="mix"?1:0;return{texture:e,params:new bt(n,i,r,t),tint:a,mode:o}}function MC(s,e=Rm){if(!s)return{detailLayers:[]};const t={detailLayers:[]},n=e==null?void 0:e.base;if(n!=null&&n.url||n!=null&&n.generator||n!=null&&n.procedural){const r=n.url?Lm(n.url,n):Dm(n);r&&(Jc(r,n),s.map=r,s.needsUpdate=!0)}const i=Array.isArray(e==null?void 0:e.details)?e.details:[];for(const r of i){const a=IC(r);a&&t.detailLayers.push(a)}return t}function TC(s,e){var a;if(!((a=e==null?void 0:e.detailLayers)!=null&&a.length))return;s.defines||(s.defines={}),s.defines.USE_UV===void 0&&(s.defines.USE_UV=""),s.vertexShader.includes("#include <uv_pars_vertex>")||(s.vertexShader=s.vertexShader.replace("void main() {",`#include <uv_pars_vertex>
void main() {`)),s.vertexShader.includes("#include <uv_vertex>")||(s.vertexShader=s.vertexShader.replace("#include <project_vertex>",`#include <uv_vertex>
#include <project_vertex>`));const t=[],n=[];e.detailLayers.forEach((o,c)=>{const l=`uGroundDetailMap${c}`,h=`uGroundDetailParams${c}`,u=`uGroundDetailTint${c}`,d=`uGroundDetailMode${c}`;s.uniforms[l]={value:o.texture},s.uniforms[h]={value:o.params},s.uniforms[u]={value:o.tint},s.uniforms[d]={value:o.mode},t.push([`uniform sampler2D ${l};`,`uniform vec4 ${h};`,`uniform vec3 ${u};`,`uniform float ${d};`].join(`
`)),n.push(`
      {
        vec4 detailSample = texture2D(${l}, vUv);
        float minH = ${h}.x;
        float maxH = ${h}.y;
        float fade = max(${h}.z, 0.0001);
        float strength = clamp(${h}.w, 0.0, 1.0);
        float mask = 1.0;
        if (maxH > minH) {
          mask = smoothstep(minH, minH + fade, groundHeight);
          mask *= 1.0 - smoothstep(maxH - fade, maxH, groundHeight);
        }
        float layerStrength = strength * mask;
        if (layerStrength > 0.0) {
          vec3 layerColor = detailSample.rgb * ${u};
          if (abs(${d} - 1.0) < 0.5) {
            diffuseColor.rgb = mix(diffuseColor.rgb, layerColor, layerStrength);
          } else {
            diffuseColor.rgb *= mix(vec3(1.0), layerColor, layerStrength);
          }
        }
      }
    `)});const r=["#include <common>",...s.fragmentShader.includes("#include <uv_pars_fragment>")?[]:["#include <uv_pars_fragment>"],...t].join(`
`);s.fragmentShader=s.fragmentShader.replace("#include <common>",r),s.fragmentShader=s.fragmentShader.replace("vec4 diffuseColor = vec4( diffuse, opacity );",`vec4 diffuseColor = vec4( diffuse, opacity );
float groundHeight = vGroundHeight;
${n.join(`
`)}`)}function BC(s,e){const t=Math.floor(s),n=Math.floor(e),i=s-t,r=e-n,a=new Array(4);for(let A=0;A<4;A++){const y=t+(A&1),x=n+(A>>1),b=Math.sin(y*374761393+x*668265263)*43758.5453,_=b-Math.floor(b);a[A]={x:Math.cos(_*Math.PI*2),z:Math.sin(_*Math.PI*2)}}const o=a[0].x*i+a[0].z*r,c=a[1].x*(i-1)+a[1].z*r,l=a[2].x*i+a[2].z*(r-1),h=a[3].x*(i-1)+a[3].z*(r-1),u=A=>A*A*A*(A*(A*6-15)+10),d=u(i),f=u(r),p=(A,y,x)=>A+(y-A)*x,g=p(o,c,d),m=p(l,h,d);return p(g,m,f)}function RC(s,e,t,n,i){let r=1,a=1,o=0,c=0;for(let l=0;l<t;l++)o+=BC(s*a,e*a)*r,c+=r,r*=n,a*=i;return o/c}const rc=new S,DC=18,zf=70;function LC(s){const n=new ni(500,500,256,256),i=n.attributes.position,r=i.count,a=new Float32Array(r),o=new Float32Array(r*3),c=new ot(o,3);n.setAttribute("color",c);const l=new ue,h=25,u=.01,d=new ie(Ln.x,Ln.z),f=Math.max(48,eu*.65),p=Math.max(f+32,eu*1.05),g=Ln.y;for(let v=0;v<r;v++){const I=i.getX(v),E=i.getY(v);let w=RC(I*u,E*u,5,.5,2.1)*h;const T=I-kf.x,R=E-kf.y,U=Math.hypot(T,R);if(U<zf){const N=1-we.smoothstep(U,DC,zf);N>0&&(w=we.lerp(w,fC,N))}{const N=I-d.x,k=E-d.y,te=Math.hypot(N,k);if(te<p){const Q=we.clamp((te-f)/Math.max(.001,p-f),0,1),$=Q*Q*(3-2*Q);w=we.lerp(g,w,$)}}i.setZ(v,w),a[v]=w;const O=we.clamp((w+h)/(h*2),0,1);O<.42?l.setRGB(.3,.55,.22):O<.72?l.setRGB(.43,.31,.18):l.setRGB(.62,.62,.62),c.setXYZ(v,l.r,l.g,l.b)}if(i.needsUpdate=!0,c.needsUpdate=!0,n.computeVertexNormals(),n.userData.baseHeights=a,n.userData.segmentCount=256,n.userData.size=500,!n.getAttribute("basePos")){const v=new ot(new Float32Array(i.array),3);n.setAttribute("basePos",v)}const m=new rt({color:10727051,roughness:.9,metalness:0,vertexColors:!0}),A=MC(m,Rm),y=A.detailLayers.length>0,x=n.getAttribute("basePos"),b={uTime:{value:0},uWindStrength:{value:.18},uWindFreq:{value:.15},uCityCenter:{value:new ie(Ln.x,Ln.z)},uCityInner:{value:f},uCityOuter:{value:p}};m.onBeforeCompile=v=>{v.uniforms.uTime=b.uTime,v.uniforms.uWindStrength=b.uWindStrength,v.uniforms.uWindFreq=b.uWindFreq,v.uniforms.uCityCenter=b.uCityCenter,v.uniforms.uCityInner=b.uCityInner,v.uniforms.uCityOuter=b.uCityOuter,v.vertexShader=`
      uniform float uTime;
      uniform float uWindStrength;
      uniform float uWindFreq;
      uniform vec2 uCityCenter;
      uniform float uCityInner;
      uniform float uCityOuter;
      ${y?"varying float vGroundHeight;":""}
      attribute vec3 basePos;
    `+v.vertexShader,v.vertexShader=v.vertexShader.replace("#include <begin_vertex>",`
        // Start from the stored base position. PlaneGeometry is XY with height in Z.
        vec3 transformed = basePos;
${y?`
        vGroundHeight = basePos.z;`:""}

        // Measure distance to the city center in the ground plane (object-space XY).
        float dx = basePos.x - uCityCenter.x;
        float dz = basePos.y - uCityCenter.y;
        float dCity = sqrt(dx * dx + dz * dz);

        float cityFactor = 1.0;
        if (dCity <= uCityInner) {
          cityFactor = 0.0;
        } else if (dCity < uCityOuter) {
          float t = (dCity - uCityInner) / max(0.0001, (uCityOuter - uCityInner));
          cityFactor = clamp(t, 0.0, 1.0);
        }

        float swayPhase = (basePos.x + basePos.y) * uWindFreq + uTime * 0.5;
        float sway = sin(swayPhase) * 0.3;
        transformed.z += sway * uWindStrength * cityFactor;
      `),y&&(v.fragmentShader.includes("varying float vGroundHeight")||(v.fragmentShader=`varying float vGroundHeight;
${v.fragmentShader}`),TC(v,A))};const _=new Be(n,m);_.rotation.x=-Math.PI/2,_.receiveShadow=!0,_.name="Terrain",s.add(_);const C=257;return _.userData.getHeightAt=(v,I)=>{rc.set(v,0,I),_.worldToLocal(rc);const E=500/2,w=rc.x+E,T=rc.z+E;if(w<0||w>500||T<0||T>500)return null;const R=w/500,U=T/500,O=R*256,N=U*256,k=Math.floor(O),te=Math.min(k+1,256),Q=Math.floor(N),$=Math.min(Q+1,256),ae=O-k,Ae=N-Q,Ce=Q*C+k,Ie=Q*C+te,je=$*C+k,$e=$*C+te,j=_.userData.swayUniforms,se=pe=>{var z,Y,de,ee,Pe,xe;if(!j)return 0;const le=((z=j.uWindStrength)==null?void 0:z.value)??0;if(le===0)return 0;const oe=x.getX(pe),re=x.getY(pe),_e=(Y=j.uCityCenter)==null?void 0:Y.value,me=((de=j.uCityInner)==null?void 0:de.value)??0,be=((ee=j.uCityOuter)==null?void 0:ee.value)??me;let qe=1;if(_e){const De=oe-_e.x,Fe=re-_e.y,ge=Math.hypot(De,Fe);if(ge<=me)qe=0;else if(ge<be){const Ee=Math.max(1e-4,be-me),Ne=(ge-me)/Ee;qe=we.clamp(Ne,0,1)}}if(qe===0)return 0;const Ke=((Pe=j.uWindFreq)==null?void 0:Pe.value)??0,D=((xe=j.uTime)==null?void 0:xe.value)??0,M=(oe+re)*Ke+D*.5;return Math.sin(M)*.3*le*qe},Me=a[Ce]+se(Ce),Qe=a[Ie]+se(Ie),Le=a[je]+se(je),st=a[$e]+se($e),xt=Me+(Qe-Me)*ae,P=Le+(st-Le)*ae;return xt+(P-xt)*Ae},_.userData.swayUniforms=b,_.userData.groundTextureState=A,_}function PC(s,e){if(!s)return;const t=s.userData.swayUniforms;t&&(t.uTime.value=e)}class FC extends Be{constructor(e,t={}){super(e),this.isWater=!0;const n=this,i=t.textureWidth!==void 0?t.textureWidth:512,r=t.textureHeight!==void 0?t.textureHeight:512,a=t.clipBias!==void 0?t.clipBias:0,o=t.alpha!==void 0?t.alpha:1,c=t.time!==void 0?t.time:0,l=t.waterNormals!==void 0?t.waterNormals:null,h=t.sunDirection!==void 0?t.sunDirection:new S(.70707,.70707,0),u=new ue(t.sunColor!==void 0?t.sunColor:16777215),d=new ue(t.waterColor!==void 0?t.waterColor:8355711),f=t.eye!==void 0?t.eye:new S(0,0,0),p=t.distortionScale!==void 0?t.distortionScale:20,g=t.side!==void 0?t.side:hi,m=t.fog!==void 0?t.fog:!1,A=new On,y=new S,x=new S,b=new S,_=new Ve,C=new S(0,0,-1),v=new bt,I=new S,E=new S,w=new bt,T=new Ve,R=new Zt,U=new ui(i,r),O={name:"MirrorShader",uniforms:Ga.merge([Te.fog,Te.lights,{normalSampler:{value:null},mirrorSampler:{value:null},alpha:{value:1},time:{value:0},size:{value:1},distortionScale:{value:20},textureMatrix:{value:new Ve},sunColor:{value:new ue(8355711)},sunDirection:{value:new S(.70707,.70707,0)},eye:{value:new S},waterColor:{value:new ue(5592405)}}]),vertexShader:`
				uniform mat4 textureMatrix;
				uniform float time;

				varying vec4 mirrorCoord;
				varying vec4 worldPosition;

				#include <common>
				#include <fog_pars_vertex>
				#include <shadowmap_pars_vertex>
				#include <logdepthbuf_pars_vertex>

				void main() {
					mirrorCoord = modelMatrix * vec4( position, 1.0 );
					worldPosition = mirrorCoord.xyzw;
					mirrorCoord = textureMatrix * mirrorCoord;
					vec4 mvPosition =  modelViewMatrix * vec4( position, 1.0 );
					gl_Position = projectionMatrix * mvPosition;

				#include <beginnormal_vertex>
				#include <defaultnormal_vertex>
				#include <logdepthbuf_vertex>
				#include <fog_vertex>
				#include <shadowmap_vertex>
			}`,fragmentShader:`
				uniform sampler2D mirrorSampler;
				uniform float alpha;
				uniform float time;
				uniform float size;
				uniform float distortionScale;
				uniform sampler2D normalSampler;
				uniform vec3 sunColor;
				uniform vec3 sunDirection;
				uniform vec3 eye;
				uniform vec3 waterColor;

				varying vec4 mirrorCoord;
				varying vec4 worldPosition;

				vec4 getNoise( vec2 uv ) {
					vec2 uv0 = ( uv / 103.0 ) + vec2(time / 17.0, time / 29.0);
					vec2 uv1 = uv / 107.0-vec2( time / -19.0, time / 31.0 );
					vec2 uv2 = uv / vec2( 8907.0, 9803.0 ) + vec2( time / 101.0, time / 97.0 );
					vec2 uv3 = uv / vec2( 1091.0, 1027.0 ) - vec2( time / 109.0, time / -113.0 );
					vec4 noise = texture2D( normalSampler, uv0 ) +
						texture2D( normalSampler, uv1 ) +
						texture2D( normalSampler, uv2 ) +
						texture2D( normalSampler, uv3 );
					return noise * 0.5 - 1.0;
				}

				void sunLight( const vec3 surfaceNormal, const vec3 eyeDirection, float shiny, float spec, float diffuse, inout vec3 diffuseColor, inout vec3 specularColor ) {
					vec3 reflection = normalize( reflect( -sunDirection, surfaceNormal ) );
					float direction = max( 0.0, dot( eyeDirection, reflection ) );
					specularColor += pow( direction, shiny ) * sunColor * spec;
					diffuseColor += max( dot( sunDirection, surfaceNormal ), 0.0 ) * sunColor * diffuse;
				}

				#include <common>
				#include <packing>
				#include <bsdfs>
				#include <fog_pars_fragment>
				#include <logdepthbuf_pars_fragment>
				#include <lights_pars_begin>
				#include <shadowmap_pars_fragment>
				#include <shadowmask_pars_fragment>

				void main() {

					#include <logdepthbuf_fragment>
					vec4 noise = getNoise( worldPosition.xz * size );
					vec3 surfaceNormal = normalize( noise.xzy * vec3( 1.5, 1.0, 1.5 ) );

					vec3 diffuseLight = vec3(0.0);
					vec3 specularLight = vec3(0.0);

					vec3 worldToEye = eye-worldPosition.xyz;
					vec3 eyeDirection = normalize( worldToEye );
					sunLight( surfaceNormal, eyeDirection, 100.0, 2.0, 0.5, diffuseLight, specularLight );

					float distance = length(worldToEye);

					vec2 distortion = surfaceNormal.xz * ( 0.001 + 1.0 / distance ) * distortionScale;
					vec3 reflectionSample = vec3( texture2D( mirrorSampler, mirrorCoord.xy / mirrorCoord.w + distortion ) );

					float theta = max( dot( eyeDirection, surfaceNormal ), 0.0 );
					float rf0 = 0.3;
					float reflectance = rf0 + ( 1.0 - rf0 ) * pow( ( 1.0 - theta ), 5.0 );
					vec3 scatter = max( 0.0, dot( surfaceNormal, eyeDirection ) ) * waterColor;
					vec3 albedo = mix( ( sunColor * diffuseLight * 0.3 + scatter ) * getShadowMask(), ( vec3( 0.1 ) + reflectionSample * 0.9 + reflectionSample * specularLight ), reflectance);
					vec3 outgoingLight = albedo;
					gl_FragColor = vec4( outgoingLight, alpha );

					#include <tonemapping_fragment>
					#include <colorspace_fragment>
					#include <fog_fragment>	
				}`},N=new jn({name:O.name,uniforms:Ga.clone(O.uniforms),vertexShader:O.vertexShader,fragmentShader:O.fragmentShader,lights:!0,side:g,fog:m});N.uniforms.mirrorSampler.value=U.texture,N.uniforms.textureMatrix.value=T,N.uniforms.alpha.value=o,N.uniforms.time.value=c,N.uniforms.normalSampler.value=l,N.uniforms.sunColor.value=u,N.uniforms.waterColor.value=d,N.uniforms.sunDirection.value=h,N.uniforms.distortionScale.value=p,N.uniforms.eye.value=f,n.material=N,n.onBeforeRender=function(k,te,Q){if(x.setFromMatrixPosition(n.matrixWorld),b.setFromMatrixPosition(Q.matrixWorld),_.extractRotation(n.matrixWorld),y.set(0,0,1),y.applyMatrix4(_),I.subVectors(x,b),I.dot(y)>0)return;I.reflect(y).negate(),I.add(x),_.extractRotation(Q.matrixWorld),C.set(0,0,-1),C.applyMatrix4(_),C.add(b),E.subVectors(x,C),E.reflect(y).negate(),E.add(x),R.position.copy(I),R.up.set(0,1,0),R.up.applyMatrix4(_),R.up.reflect(y),R.lookAt(E),R.far=Q.far,R.updateMatrixWorld(),R.projectionMatrix.copy(Q.projectionMatrix),T.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),T.multiply(R.projectionMatrix),T.multiply(R.matrixWorldInverse),A.setFromNormalAndCoplanarPoint(y,x),A.applyMatrix4(R.matrixWorldInverse),v.set(A.normal.x,A.normal.y,A.normal.z,A.constant);const $=R.projectionMatrix;w.x=(Math.sign(v.x)+$.elements[8])/$.elements[0],w.y=(Math.sign(v.y)+$.elements[9])/$.elements[5],w.z=-1,w.w=(1+$.elements[10])/$.elements[14],v.multiplyScalar(2/v.dot(w)),$.elements[2]=v.x,$.elements[6]=v.y,$.elements[10]=v.z+1-a,$.elements[14]=v.w,f.setFromMatrixPosition(Q.matrixWorld);const ae=k.getRenderTarget(),Ae=k.xr.enabled,Ce=k.shadowMap.autoUpdate;n.visible=!1,k.xr.enabled=!1,k.shadowMap.autoUpdate=!1,k.setRenderTarget(U),k.state.buffers.depth.setMask(!0),k.autoClear===!1&&k.clear(),k.render(te,R),n.visible=!0,k.xr.enabled=Ae,k.shadowMap.autoUpdate=Ce,k.setRenderTarget(ae);const Ie=Q.viewport;Ie!==void 0&&k.state.viewport(Ie)}}}function Vf(s,e,t){const n=Math.pow(2,t),i=(s*n+e*n*1.3)*.12;return Math.sin(i*1.7+t*1.1)*.6}function UC(s=256){const e=new Uint8Array(s*s*4);for(let n=0;n<s;n++)for(let i=0;i<s;i++){let r=0,a=0;for(let l=0;l<4;l++){const h=1/Math.pow(2,l);r+=Vf(i,n,l)*h,a+=Vf(n,i,l)*h}const o=Math.sqrt(Math.max(0,1-r*r-a*a)),c=(n*s+i)*4;e[c]=Math.floor((r*.5+.5)*255),e[c+1]=Math.floor((a*.5+.5)*255),e[c+2]=Math.floor((o*.5+.5)*255),e[c+3]=255}const t=new Qn(e,s,s,Vt);return t.wrapS=Hn,t.wrapT=Hn,t.anisotropy=4,t.needsUpdate=!0,t}const Pm=new ue(1724032),NC=new ue(597034),OC=new ue,kC=-117;let bh=null;function QC(s){return s&&Number.isFinite(s.devicePixelRatio)?s.devicePixelRatio:typeof window<"u"&&window.devicePixelRatio?window.devicePixelRatio:1}function GC(s){const e=(s==null?void 0:s.baseTextureSize)??512,t=we.clamp(QC(s),.75,3),n=Math.round(e*t);return we.clamp(n,256,2048)}async function HC(s,e={}){var C,v,I,E,w,T;bh||(bh=UC());const t=GC(e);s.traverse(R=>{var U,O;R&&(R.name==="AegeanOcean"||(U=R.userData)!=null&&U.isWater)&&((O=R.parent)==null||O.remove(R))});const n=Number.isFinite((C=e.position)==null?void 0:C.x)?e.position.x:yh.x,i=Number.isFinite((v=e.position)==null?void 0:v.z)?e.position.z:yh.z,r=Number.isFinite((I=e.size)==null?void 0:I.x)?e.size.x:Qf.x,a=Number.isFinite((E=e.size)==null?void 0:E.y)?e.size.y:Qf.y,o=(e==null?void 0:e.bounds)&&["west","east","north","south"].every(R=>Number.isFinite(e.bounds[R]));let c,l,h,u;if(o)({west:c,east:l,north:h,south:u}=e.bounds);else{const R=r*.5,U=a*.5,O=0,N=n,k=i,te=k-U,Q=k+O;c=N-R,l=N+R,h=te,u=Q}c>l&&([c,l]=[l,c]),h>u&&([h,u]=[u,h]);const d=Math.max(.1,l-c),f=Math.max(.1,u-h),p=new ni(d,f,1,1),g=new FC(p,{textureWidth:t,textureHeight:t,waterNormals:bh,sunDirection:new S(.707,.5,.5).normalize(),sunColor:15923455,waterColor:Pm.clone(),distortionScale:3.2,fog:!!s.fog}),m=(c+l)*.5,A=(h+u)*.5;g.rotation.x=-Math.PI/2,g.position.set(m,yh.y,A);const y=(l-c)*.5,x=Math.max(h,kC),b=Math.max(u,x),_=[new On(new S(1,0,0),-(m-y)),new On(new S(-1,0,0),m+y),new On(new S(0,0,-1),b),new On(new S(0,0,1),-x)];if(g.material&&(g.material.clippingPlanes=_,g.material.clipIntersection=!0,g.material.depthWrite=!0,g.material.transparent=!0,g.material.needsUpdate=!0,typeof window<"u"&&((T=(w=window.location)==null?void 0:w.search)!=null&&T.includes("waterdbg=1")))){const R=s.getObjectByName("WaterClipDebug");R&&s.remove(R),zC(s,c,l,x,b)}return g.receiveShadow=!0,g.name="AegeanOcean",g.userData.noCollision=!0,g.userData.isWater=!0,g.renderOrder=-1,s.add(g),{mesh:g,uniforms:g.material.uniforms}}function zC(s,e,t,n,i){const r=new Je().setFromPoints([new S(e,0,n),new S(t,0,n),new S(t,0,i),new S(e,0,i),new S(e,0,n)]),a=new _i(r,new dn({transparent:!0,opacity:.8}));return a.position.y=it+.02,a.name="WaterClipDebug",s.add(a),a}function VC(s,e=0,t,n=0){var a,o;if(!s)return;const i=s.uniforms??((o=(a=s.mesh)==null?void 0:a.material)==null?void 0:o.uniforms);if(!i)return;Number.isFinite(e)&&(i.time.value+=e),t&&i.sunDirection&&i.sunDirection.value.copy(t);const r=we.clamp(typeof n=="number"?n:0,0,1);i.distortionScale&&(i.distortionScale.value=we.lerp(3.2,1.2,r)),i.waterColor&&i.waterColor.value.copy(OC.copy(Pm).lerp(NC,r))}const Wf=new Ve,qf=new S,WC=new S(1,1,1),qC=new tn;function Ri(s){s.castShadow=!0,s.receiveShadow=!0}function xh(s){return new rt({color:s,roughness:.75,metalness:.05})}function _h(s,e){const{width:t,length:n,spacing:i,offsetX:r=0,offsetZ:a=0,deckHeight:o,postHeight:c,inset:l=.6}=e,h=t/2-l,u=n/2-l,d=o-c;for(let f=-u;f<=u+.001;f+=i)s.push({x:r-h,y:d,z:a+f}),s.push({x:r+h,y:d,z:a+f})}function Xf(s,e,{height:t,radiusTop:n,radiusBottom:i,material:r}){if(!e||e.length===0)return null;const a=new Gt(n,i,t,12);a.translate(0,t/2,0);const o=new Bn(a,r,e.length);o.name=s,o.castShadow=!0,o.receiveShadow=!0;for(let c=0;c<e.length;c++){const l=e[c];qf.set(l.x,l.y,l.z),Wf.compose(qf,qC,WC),o.setMatrixAt(c,Wf)}return o.instanceMatrix.needsUpdate=!0,o}function XC(s,e={}){const t=e.center?e.center.clone():ti.clone(),n=e.mainLength??70,i=e.mainWidth??9,r=e.deckHeight??1.4,a=e.approachLength??32,o=e.spurLength??24,c=e.postSpacing??6,l=xh(8084287),h=xh(4864551),u=new rt({color:14274995,roughness:.4,metalness:.1}),d=new Lt;d.name="Harbor",d.position.copy(t);const f=new Be(new Ut(i,.6,n),l);f.position.y=r,Ri(f),d.add(f);const p=[],g=r+3;_h(p,{width:i,length:n,spacing:c,deckHeight:r,postHeight:g}),_h(p,{width:i-4,length:o,spacing:c,deckHeight:r,postHeight:g,offsetX:-i/2+1.2,offsetZ:o/2+2}),_h(p,{width:i-4,length:o,spacing:c,deckHeight:r,postHeight:g,offsetX:-i/2+1.2,offsetZ:-(o/2+2)});const m=Xf("HarborPierPosts",p,{height:g,radiusTop:.45,radiusBottom:.55,material:h});m&&d.add(m);const A=new Be(new Ut(a,.5,i-2),l);A.position.set(i/2+a/2,r,0),Ri(A),d.add(A);const y=r+3,x=(i-2)/2-.6,b=[],_=i/2+a/2,C=r-y;for(let se=-a/2;se<=a/2+.001;se+=c)b.push({x:_+se,y:C,z:-x}),b.push({x:_+se,y:C,z:x});const v=Xf("HarborWalkwayPosts",b,{height:y,radiusTop:.4,radiusBottom:.5,material:h});v&&d.add(v);const I=new Be(new Ut(i-4,.45,o),l);I.position.set(-i/2+1.2,r,o/2+2),Ri(I),d.add(I);const E=I.clone();E.position.z=-(o/2+2),d.add(E);const w=new Ut(.2,1.1,n),T=new Be(w,u);T.position.set(-i/2+.6,r+.8,0),Ri(T),d.add(T);const R=T.clone();R.position.x=i/2-.6,d.add(R);const U=new Gt(.35,.35,.8,16),O=new rt({color:2961461,roughness:.6,metalness:.4}),N=[new S(-i/2+1.3,r+.4,o+3),new S(-i/2+1.3,r+.4,-o-3),new S(i/2-1.3,r+.4,n/2-6),new S(i/2-1.3,r+.4,-n/2+6)];for(const se of N){const Me=new Be(U,O);Me.position.copy(se),Ri(Me),d.add(Me)}const k=xh(9399109),te=new Be(new Ut(2.4,2.4,2.4),k);te.position.set(i/2-2,r+1.2,-n/4),Ri(te),d.add(te);const Q=new Be(new Ut(1.6,1.6,1.6),k);Q.position.set(i/2-3.4,r+.8,-n/4+3),Ri(Q),d.add(Q);const $=new Be(new Ut(1.8,1.8,1.8),k);$.position.set(i/2-2.4,r+.9,-n/4-2.4),Ri($),d.add($);const ae=new Lt;ae.name="HarborLamp",ae.position.set(i/2+a-4,0,0);const Ae=new Be(new Gt(.12,.16,4,16),u);Ae.position.y=2,Ae.castShadow=!0,Ae.receiveShadow=!1,ae.add(Ae);const Ce=new Be(new Ut(.2,.2,1.6),u);Ce.position.set(0,3.4,.6),Ri(Ce),ae.add(Ce);const Ie=new rt({color:16777215,emissive:new ue(16773832),emissiveIntensity:0}),je=new Be(new Gn(.28,16,16),Ie);je.position.set(0,3.2,1.2),je.castShadow=!1,ae.add(je);const $e=new Oi(16773832,0,18,2);$e.position.copy(je.position),$e.castShadow=!0,ae.add($e);const j={light:$e,material:Ie,baseIntensity:1.4,overrideState:null};return ae.userData.interactable=!0,ae.userData.highlightTarget=je,ae.userData.light=$e,ae.userData.onUse=()=>{const se=j.overrideState;se===null?j.overrideState=!0:se===!0?j.overrideState=!1:j.overrideState=null},d.userData.lamp=j,d.add(ae),d.userData.posts={pier:m,walkway:v},s.add(d),d}function YC(s,e=0){var r;if(!s)return;const t=(r=s.userData)==null?void 0:r.lamp;if(!t)return;const n=we.clamp(e,0,1);let i=we.lerp(0,t.baseIntensity,n);if(t.overrideState===!0?i=t.baseIntensity:t.overrideState===!1&&(i=0),t.light.intensity=i,t.material){const a=t.baseIntensity>0?i/t.baseIntensity:0;t.material.emissiveIntensity=a>0?1.6*a:0}}function KC(s,e){var p,g;const t=[ti.clone().add(new S(8,0,-10)),ti.clone().lerp(Ln,.4).add(new S(-10,2,6)),Ln.clone(),Ln.clone().lerp(Rr,.6).add(new S(6,2,-4)),Rr.clone()],n=new ro(t,!1,"catmullrom",.1),i=180,r=dC,a=new ni(r,1,1,i),o=a.attributes.position,c=new S,l=new S,h=(g=(p=e==null?void 0:e.userData)==null?void 0:p.getHeightAt)==null?void 0:g.bind(e==null?void 0:e.userData);for(let m=0;m<=i;m++){const A=m/i,y=n.getPoint(A),x=n.getPoint(Math.min(1,A+1/i));c.subVectors(x,y).normalize();const b=Math.atan2(c.x,c.z);for(let _=0;_<2;_++){const C=m*2+_,v=_===0?-.5:.5;l.set(Math.sin(b)*v*r,0,Math.cos(b)*v*r);const I=y.x+l.x,E=y.z+l.z;let w=h?h(I,E):y.y;Number.isFinite(w)||(w=y.y),w+=.08,o.setXYZ(C,I,w,E)}}o.needsUpdate=!0,a.computeVertexNormals();const u=new rt({color:9079434,roughness:1,metalness:0,side:ln}),d=new Be(a,u);d.renderOrder=1,d.receiveShadow=!0,d.name="MainHillRoad";const f=new Lt;return f.name="Roads",f.add(d),s.add(f),{group:f,curve:n,mesh:d}}function Yf(s,e,t){const n=new so(e,48),i=new rt({color:t,roughness:.95,metalness:0,side:ln}),r=new Be(n,i);return r.rotation.x=-Math.PI/2,r.position.copy(s),r.position.y+=.05,r.renderOrder=1,r.receiveShadow=!0,r.name="Plaza",r}function JC(s){const e=new Lt;return e.name="Plazas",e.add(Yf(Ln,lC,15131350)),e.add(Yf(Rr,hC,15591644)),s.add(e),e}function tu(s,e=!1){const t=s[0].index!==null,n=new Set(Object.keys(s[0].attributes)),i=new Set(Object.keys(s[0].morphAttributes)),r={},a={},o=s[0].morphTargetsRelative,c=new Je;let l=0;for(let h=0;h<s.length;++h){const u=s[h];let d=0;if(t!==(u.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const f in u.attributes){if(!n.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+'. All geometries must have compatible attributes; make sure "'+f+'" attribute exists among all geometries, or in none of them.'),null;r[f]===void 0&&(r[f]=[]),r[f].push(u.attributes[f]),d++}if(d!==n.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". Make sure all geometries have the same number of attributes."),null;if(o!==u.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const f in u.morphAttributes){if(!i.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+".  .morphAttributes must be consistent throughout all geometries."),null;a[f]===void 0&&(a[f]=[]),a[f].push(u.morphAttributes[f])}if(e){let f;if(t)f=u.index.count;else if(u.attributes.position!==void 0)f=u.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". The geometry must have either an index or a position attribute"),null;c.addGroup(l,f,h),l+=f}}if(t){let h=0;const u=[];for(let d=0;d<s.length;++d){const f=s[d].index;for(let p=0;p<f.count;++p)u.push(f.getX(p)+h);h+=s[d].attributes.position.count}c.setIndex(u)}for(const h in r){const u=Kf(r[h]);if(!u)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" attribute."),null;c.setAttribute(h,u)}for(const h in a){const u=a[h][0].length;if(u===0)break;c.morphAttributes=c.morphAttributes||{},c.morphAttributes[h]=[];for(let d=0;d<u;++d){const f=[];for(let g=0;g<a[h].length;++g)f.push(a[h][g][d]);const p=Kf(f);if(!p)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" morphAttribute."),null;c.morphAttributes[h].push(p)}}return c}function Kf(s){let e,t,n,i=-1,r=0;for(let l=0;l<s.length;++l){const h=s[l];if(e===void 0&&(e=h.array.constructor),e!==h.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(t===void 0&&(t=h.itemSize),t!==h.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(n===void 0&&(n=h.normalized),n!==h.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(i===-1&&(i=h.gpuType),i!==h.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;r+=h.count*t}const a=new e(r),o=new ot(a,t,n);let c=0;for(let l=0;l<s.length;++l){const h=s[l];if(h.isInterleavedBufferAttribute){const u=c/t;for(let d=0,f=h.count;d<f;d++)for(let p=0;p<t;p++){const g=h.getComponent(d,p);o.setComponent(d+u,p,g)}}else a.set(h.array,c);c+=h.count*t}return i!==void 0&&(o.gpuType=i),o}function Jf(s,e){if(e===oA)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),s;if(e===Wc||e===mu){let t=s.getIndex();if(t===null){const a=[],o=s.getAttribute("position");if(o!==void 0){for(let c=0;c<o.count;c++)a.push(c);s.setIndex(a),t=s.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),s}const n=t.count-2,i=[];if(e===Wc)for(let a=1;a<=n;a++)i.push(t.getX(0)),i.push(t.getX(a)),i.push(t.getX(a+1));else for(let a=0;a<n;a++)a%2===0?(i.push(t.getX(a)),i.push(t.getX(a+1)),i.push(t.getX(a+2))):(i.push(t.getX(a+2)),i.push(t.getX(a+1)),i.push(t.getX(a)));i.length/3!==n&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const r=s.clone();return r.setIndex(i),r.clearGroups(),r}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),s}const Eh=new S,jf=new S,xr=new S,ac=new S,oc=new S,jC=new S(0,1,0);function ZC(s,e){const t=s*6,n=e*(s+1)>65535?Uint32Array:Uint16Array;return new n(t)}function $C(s,e,t={}){const n=e??t.points;if(!n||n.length<2)throw new Error("createRoad requires at least two control points");const i=t.width??4,r=t.tension??.5,a=!!t.closed,o=i/2,c=new ro(n,a,"centripetal",r),l=t.segments??Math.max(16,n.length*8),h=(l+1)*2,u=new Float32Array(h*3),d=new Float32Array(h*2),f=ZC(l,2);let p=0,g=0;const m=t.yOffset??.2;for(let _=0;_<=l;_++){const C=_/l;c.getPointAt(C,Eh),c.getTangentAt(C,jf).normalize(),xr.crossVectors(jC,jf),xr.lengthSq()<1e-6?xr.set(1,0,0):xr.normalize(),ac.copy(Eh).addScaledVector(xr,o),oc.copy(Eh).addScaledVector(xr,-o),u[p++]=ac.x,u[p++]=ac.y+m,u[p++]=ac.z,u[p++]=oc.x,u[p++]=oc.y+m,u[p++]=oc.z;const v=C*(t.uvScale??1);d[g++]=0,d[g++]=v,d[g++]=1,d[g++]=v}let A=0;for(let _=0;_<l;_++){const C=_*2;f[A++]=C,f[A++]=C+1,f[A++]=C+2,f[A++]=C+1,f[A++]=C+3,f[A++]=C+2}const y=new Je;y.setAttribute("position",new ot(u,3)),y.setAttribute("uv",new ot(d,2)),y.setIndex(new ot(f,1)),y.computeVertexNormals();const x=new rt({color:t.color??15773006,roughness:.95,metalness:.05,side:ln}),b=new Be(y,x);return b.name=t.name??"CityRoad",b.receiveShadow=!0,b.castShadow=!1,b.userData.noCollision=t.noCollision??!0,b.renderOrder=1,s&&s.add(b),b}function nu(s,e,t,n,i=2,r=12433580){const a=new Gt(i,i,.12,24),o=new rt({color:r,roughness:.95,metalness:0});o.depthWrite=!0,o.transparent=!1;const c=new Be(a,o);return c.position.set(e,t+.06,n),c.receiveShadow=!0,c.renderOrder=2,c.name="FoundationPad",c.userData.noCollision=!0,s.add(c),c}function Bs(s,e,t,n,i={}){var E,w;const r=i.width??2.8,a=i.yOffset??.05,o=i.color??3092271,c=Array.isArray(i.collectGeometries)?i.collectGeometries:null,l=s.distanceTo(e),h=i.segments??Math.max(8,Math.ceil(l*1.5)),u=Bs._material||(Bs._material=new rt({color:o,roughness:1,metalness:0,side:ln}));u.color.setHex(o);const d=((w=(E=n==null?void 0:n.userData)==null?void 0:E.getHeightAt)==null?void 0:w.bind(n==null?void 0:n.userData))??null;if(!Number.isFinite(l)||l<.02)return null;const f=e.clone().sub(s);f.y=0;const p=Math.hypot(f.x,f.z),g=p>1e-6?new S(-f.z/p,0,f.x/p):new S(1,0,0),m=r*.5,A=(h+1)*2,y=new Float32Array(A*3),x=A>65535?Uint32Array:Uint16Array,b=new x(h*6);let _=0;for(let T=0;T<=h;T++){const R=T/h,U=we.lerp(s.x,e.x,R),O=we.lerp(s.z,e.z,R);let N=we.lerp(s.y,e.y,R);if(d){const $=d(U,O);Number.isFinite($)&&(N=$)}const k=new S(U,N+a,O),te=k.clone().addScaledVector(g,m),Q=k.clone().addScaledVector(g,-m);if(d){const $=d(te.x,te.z),ae=d(Q.x,Q.z);Number.isFinite($)&&(te.y=$+a),Number.isFinite(ae)&&(Q.y=ae+a)}y[_++]=te.x,y[_++]=te.y,y[_++]=te.z,y[_++]=Q.x,y[_++]=Q.y,y[_++]=Q.z}let C=0;for(let T=0;T<h;T++){const R=T*2;b[C++]=R,b[C++]=R+1,b[C++]=R+2,b[C++]=R+1,b[C++]=R+3,b[C++]=R+2}const v=new Je;if(v.setAttribute("position",new ot(y,3)),v.setIndex(new ot(b,1)),v.computeVertexNormals(),c)return c.push(v),null;const I=new Be(v,u);return I.name="CityRoadSegment",I.castShadow=!1,I.receiveShadow=!0,I.userData.noCollision=!0,I.renderOrder=1,t.add(I),I}const Ot=.05,on=new Ve,Un=new tn,Sn=new S,Zf=new S,cn=new S,$f=new S(0,1,0),_r=new ue,cc={h:0,s:0,l:0};function eS(s){return function(){let e=s+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}}function Mn(s,e,t,n){var r;const i=(r=s==null?void 0:s.userData)==null?void 0:r.getHeightAt;if(typeof i=="function"){const a=i(e,t);if(Number.isFinite(a))return a}return n}function tS({terrain:s,centerX:e,centerZ:t,width:n,depth:i,rotation:r,maxSlope:a}){const o=Math.cos(r),c=Math.sin(r),l=n/2,h=i/2,u=[{x:-l,z:-h},{x:l,z:-h},{x:-l,z:h},{x:l,z:h}],d=[];let f=1/0,p=-1/0;for(const m of u){const A=m.x*o-m.z*c,y=m.x*c+m.z*o,x=e+A,b=t+y,_=Mn(s,x,b,null);if(!Number.isFinite(_))return null;d.push(_),_<f&&(f=_),_>p&&(p=_)}return p-f>a?null:{height:d.reduce((m,A)=>m+A,0)/d.length,minHeight:f,maxHeight:p}}function nS(s,e,t={}){var He;const n=t.showFoundationPads===!0,i=t.origin?t.origin.clone():pC.clone(),r=eS(t.seed??mC),a=t.gridSize??AC.clone(),o={west:bc.west,east:ic+3,north:bc.north,south:bc.south};function c(W,fe,L){return W>=L.west&&W<=L.east&&fe>=L.north&&fe<=L.south}const l={minX:ic+3,maxX:ic+24},h=ti.clone().add(new S(10,0,0)),u=h.clone(),d=t.spacingX??18,f=t.spacingZ??18,p=t.jitter??1,g=t.maxSlope??.18,m=t.roadsVisible==null?!0:!!t.roadsVisible,A=Math.max(3,Math.floor(a.x/d)),y=Math.max(3,Math.floor(a.y/f)),x=(A-1)*d*.5,b=(y-1)*f*.5,_=[],C=[];let v=0;for(let W=0;W<A;W++)for(let fe=0;fe<y;fe++){v++;const L=i.x+(W*d-x)+we.lerp(-p,p,r()),K=i.z+(fe*f-b)+we.lerp(-p,p,r());if(c(L,K,o))continue;const ne=Mn(e,L,K,null);if(!Number.isFinite(ne)||ne<it)continue;if(Math.hypot(L-u.x,K-u.z)<=Math.min(d,f)*.6){const Ze=Math.max(ne+Ot,it+Ot);C.push({x:L,y:Ze,z:K});continue}const Z=L>l.minX&&L<l.maxX,q=Z?we.lerp(6.8,8.2,r()):we.lerp(4.4,7.2,r()),ve=Z?we.lerp(5.2,6.8,r()):we.lerp(4.2,7.8,r()),F=we.lerp(2.6,3.8,r()),J=F*we.lerp(.38,.55,r()),he=Math.max(1,t.rotationSteps??2);let Ue=Math.floor(r()*he)*(Math.PI*2/he);Z&&(Ue=0);const et=tS({terrain:e,centerX:L,centerZ:K,width:q,depth:ve,rotation:Ue,maxSlope:g});if(!et)continue;let Xe;if(Z)Xe=.02;else{const Ze=Math.hypot(L-i.x,K-i.z);Xe=we.clamp(.1+Ze*.0025,.1,.32)}if(v%5===0){const Ze=Math.max(et.height+Ot,it+Ot);C.push({x:L,y:Ze,z:K});continue}if(r()<Xe)continue;const ft=Math.max(et.height+Ot,it+Ot);_.push({x:L,y:ft,z:K,width:q,depth:ve,wallHeight:F,roofHeight:J,rotation:Ue,wallColor:new ue().setHSL(we.lerp(.08,.13,r()),.45,we.lerp(.62,.74,r())),roofColor:new ue().setHSL(we.lerp(.02,.04,r()),.55,we.lerp(.23,.32,r()))})}const I=new Lt;I.name="HarborCity";const E=[],w=i.x-x-d*.5,T=i.z-b-f*.5;for(let W=0;W<=y;W++){const fe=[],L=T+W*f;for(let K=0;K<=A;K++){const ne=w+K*d,ce=Mn(e,ne,L,null);if(!Number.isFinite(ce)||ce<it+Ot){fe.push(null);continue}fe.push(new S(ne,ce,L))}E.push(fe)}const R=[],U=[],O=[],N=[],k=new Gt(.06,.08,1,8);k.translate(0,.5,0);const te=new Gn(.18,12,12),Q=new rt({color:4013373,roughness:.85,metalness:.25}),$=new rt({color:16773840,emissive:new ue(16773824),emissiveIntensity:0,roughness:.45,metalness:.05}),ae=3.4,Ae=3,Ce=4,Ie=3.4,je=3355443,$e=10,j=$e*.5,se=()=>{const W=I.userData.streetlights;if(W)return W.material=$,Array.isArray(W.meshes)||(W.meshes=[]),Array.isArray(W.individuals)||(W.individuals=[]),W.dayIntensity==null&&(W.dayIntensity=0),W.nightIntensity==null&&(W.nightIntensity=1.6),W;const fe={material:$,dayIntensity:0,nightIntensity:1.6,meshes:[],individuals:[]};return I.userData.streetlights=fe,fe},Me=(W,fe={})=>{if(!W||W.length===0)return;const L=W.length,K=new Bn(k,Q,L),ne=new Bn(te,$,L);fe.polesName&&(K.name=fe.polesName),fe.lampsName&&(ne.name=fe.lampsName),K.instanceMatrix.setUsage($n),ne.instanceMatrix.setUsage($n),K.castShadow=!1,K.receiveShadow=!0,ne.castShadow=!1,ne.receiveShadow=!1,K.userData.noCollision=!0,ne.userData.noCollision=!0;for(let Z=0;Z<L;Z++){const q=W[Z];cn.set(q.x,q.y,q.z),Un.identity(),Sn.set(1,ae,1),on.compose(cn,Un,Sn),K.setMatrixAt(Z,on),cn.set(q.x,q.y+ae+.18,q.z),Sn.set(1,1,1),on.compose(cn,Un,Sn),ne.setMatrixAt(Z,on)}K.instanceMatrix.needsUpdate=!0,ne.instanceMatrix.needsUpdate=!0,K.visible=m,ne.visible=m,I.add(K),I.add(ne),se().meshes.push(ne)},Qe=Math.floor(E.length/2);for(let W=0;W<E.length;W++){const fe=E[W];if(!fe)continue;if(W===Qe){let ce=[];for(let Z=0;Z<fe.length;Z++){const q=fe[Z];q?ce.push(q.clone()):ce.length>0&&(ce.length>=2&&U.push(ce),ce=[])}ce.length>=2&&U.push(ce);continue}const L=W%Ae===0;let K=0,ne=j;for(let ce=0;ce<fe.length-1;ce++){const Z=fe[ce],q=fe[ce+1];if(!Z||!q){L&&(K=0,ne=j);continue}const ve={collectGeometries:R,width:L?Ie:3.2};if(L&&(ve.color=je),Bs(Z,q,I,e,ve),L){const F=Z.distanceTo(q);if(F>0){for(;K+F>=ne;){const J=ne-K,he=we.clamp(J/F,0,1),Ue=Z.clone().lerp(q,he),et=Mn(e,Ue.x,Ue.z,it);Number.isFinite(et)&&N.push({x:Ue.x,y:Math.max(et,it)+Ot,z:Ue.z}),ne+=$e}K+=F}}}}const Le=((He=E[0])==null?void 0:He.length)??0;for(let W=0;W<Le;W++){const fe=W%Ce===0;let L=0,K=j;for(let ne=0;ne<E.length-1;ne++){const ce=E[ne][W],Z=E[ne+1][W];if(!ce||!Z){fe&&(L=0,K=j);continue}const q={collectGeometries:R,width:fe?Ie:3.2};if(fe&&(q.color=je),Bs(ce,Z,I,e,q),fe){const ve=ce.distanceTo(Z);if(ve>0){for(;L+ve>=K;){const F=K-L,J=we.clamp(F/ve,0,1),he=ce.clone().lerp(Z,J),Ue=Mn(e,he.x,he.z,it);Number.isFinite(Ue)&&N.push({x:he.x,y:Math.max(Ue,it)+Ot,z:he.z}),K+=$e}L+=ve}}}}const st=ic+1.5,xt=T,P=T+f*y,pe=Mn(e,st,xt,it),le=Mn(e,st,P,it),oe=new S(st,Math.max(pe,it)+Ot,xt),re=new S(st,Math.max(le,it)+Ot,P),_e=R.length;Bs(oe,re,I,e,{collectGeometries:R,width:3.6,color:3815994});const me=R[R.length-1];R.length>_e&&me&&(me.name="QuayPromenade");const be=3.8,qe=3092271,Ke=9,D=Ke*.5;for(const W of U){if(W.length<2)continue;const fe=W.map(ne=>{const ce=Mn(e,ne.x,ne.z,it),Z=Number.isFinite(ce)?ce:it;return new S(ne.x,Math.max(Z,it)+Ot,ne.z)});let L=0,K=D;for(let ne=0;ne<fe.length-1;ne++){const ce=fe[ne],Z=fe[ne+1];Bs(ce,Z,I,e,{collectGeometries:R,width:be,color:qe});const q=ce.distanceTo(Z);if(!(q<=0)){for(;L+q>=K;){const ve=K-L,F=we.clamp(ve/q,0,1),J=ce.clone().lerp(Z,F),he=Mn(e,J.x,J.z,it);Number.isFinite(he)&&O.push({x:J.x,y:Math.max(he,it)+Ot,z:J.z}),K+=Ke}L+=q}}}if(R.length>0){const W=tu(R,!1)||new Je;for(const K of R)K.dispose();const fe=Bs._material||new rt({color:3092271,roughness:1,metalness:0,side:ln}),L=new Be(W,fe);L.name="CityRoads",L.renderOrder=1,L.userData.noCollision=!0,L.castShadow=!1,L.receiveShadow=!0,L.visible=m,I.add(L)}if(n&&C.length>0)for(const W of C)nu(I,W.x,W.y,W.z,2.2);if(O.length>0&&Me(O,{polesName:"MainAvenueStreetlightPoles",lampsName:"MainAvenueStreetlightLamps"}),N.length>0&&Me(N,{polesName:"SecondaryBoulevardPoles",lampsName:"SecondaryBoulevardLamps"}),n){const W=Mn(e,h.x,h.z,it),fe=Math.max((Number.isFinite(W)?W:it)+Ot,it+Ot);nu(I,h.x,fe,h.z,3.2)}const M=[];let z=null,Y=null;{const Z=new Ut(.08,1.7,.08);Z.translate(0,1.7/2,0);const q=new Ut(.75*2+.16,.08,.08);q.translate(0,1.7,.55);const ve=new Ut(.75*2+.16,.08,.08);ve.translate(0,1.7,-.55);const F=new Ut(.75*2+.12,.12,.55*1.4);F.translate(0,.9,0);const J=[],he=[[-.75,0,-.55],[.75,0,-.55],[-.75,0,.55],[.75,0,.55]];for(const[X,G,ye]of he){const Se=Z.clone();Se.translate(X,G,ye),J.push(Se)}J.push(q),J.push(ve),J.push(F);const Ue=tu(J,!0),et=new Ut(.75*2+.28,.14,.55*2+.32);et.translate(0,.07,0);const Xe=new rt({color:8018491,roughness:.72,metalness:.08}),Et=new hn({color:12043471,metalness:0,roughness:.85,clearcoat:.06,clearcoatRoughness:.9,envMapIntensity:.6,vertexColors:!0}),ft=new Bn(Ue,Xe,8),Ze=new Bn(et,Et,8);ft.name="HarborPierMarketFrames",Ze.name="HarborPierMarketCanopies",ft.instanceMatrix.setUsage($n),Ze.instanceMatrix.setUsage($n),ft.castShadow=!0,ft.receiveShadow=!1,Ze.castShadow=!1,Ze.receiveShadow=!0,ft.userData.noCollision=!0,Ze.userData.noCollision=!0;const pt=[new ue(13286819),new ue(11965305),new ue(7441542),new ue(10919568)],Rt=2.1,_t=1.8,It=h.z-3*Rt/2,Ct=.75+.14,At=.55+.16,Mt=.35,vi=2.3,zt=2.1,hs=1/2*_t,zi=h.x+hs+Ct,Vi=h.x-hs-Ct,B=At*2+.6;z={min:zi+Mt,max:zi+Mt+vi},Y={min:Vi-Mt-zt,max:Vi-Mt};const H=Array.from({length:2},()=>[]);let V=0;for(let X=0;X<2;X++){const G=H[X],ye=(X-1/2)*_t;for(let Se=0;Se<4;Se++){const Oe=(r()-.5)*.28,Re=(r()-.5)*.4,We=h.x+ye+Oe,ze=It+Se*Rt+Re,ke=We-Ct,nt=We+Ct;if(z&&nt>z.min&&ke<z.max||Y&&nt>Y.min&&ke<Y.max)continue;if(G.length>0){const Bt=G[G.length-1];if(Math.abs(ze-Bt.z)<B)continue}const yt=Mn(e,We,ze,it);if(!Number.isFinite(yt))continue;const Dt=Math.max(yt+Ot,it+Ot);cn.set(We,Dt,ze),Un.identity(),Sn.set(1,1,1),on.compose(cn,Un,Sn),ft.setMatrixAt(V,on),cn.set(We,Dt+1.7+.18,ze),on.compose(cn,Un,Sn),Ze.setMatrixAt(V,on);const vt=pt[V%pt.length];_r.copy(vt),_r.getHSL(cc);const Tt=we.lerp(-.05,.05,r()),Ye=we.lerp(-.06,.06,r()),Ft=we.clamp(cc.s*(1+Tt),0,1),mt=we.clamp(cc.l*(1+Ye),0,1);_r.setHSL(cc.h,Ft,mt),Ze.setColorAt(V,_r),M.push({xMin:ke,xMax:nt,zMin:ze-At,zMax:ze+At}),G.push({z:ze}),V++}}ft.count=V,Ze.count=V,ft.instanceMatrix.needsUpdate=!0,Ze.instanceMatrix.needsUpdate=!0,Ze.instanceColor&&(Ze.instanceColor.needsUpdate=!0),V>0&&(I.add(ft),I.add(Ze))}{const fe=new Ut(.8,.6,.6);fe.translate(0,.3,0);const L=new rt({color:9399109,roughness:.78,metalness:.04}),K=new Bn(fe,L,24);K.name="HarborPierMarketCrates",K.instanceMatrix.setUsage($n),K.castShadow=!0,K.receiveShadow=!0,K.userData.noCollision=!0;const ne=.4,ce=.3,Z=.4;let q=0;for(let ve=0;ve<24&&q<24;ve++){let F=!1;for(let J=0;J<3&&!F;J++){const he=we.lerp(.6,2.6,r()),Ue=r()*Math.PI*2,et=Math.cos(Ue)*he,Xe=Math.sin(Ue)*he;if(Math.abs(et)<.6&&Math.abs(Xe)<1.6)continue;const Et=h.x+et,ft=h.z+Xe,Ze=Mn(e,Et,ft,it);if(!Number.isFinite(Ze))continue;const pt=Et-ne,Rt=Et+ne,_t=ft-ce,It=ft+ce;if(z&&Rt>z.min&&pt<z.max||Y&&Rt>Y.min&&pt<Y.max)continue;let Ct=!1;for(const Mt of M)if(Rt+Z>Mt.xMin&&pt-Z<Mt.xMax&&It+Z>Mt.zMin&&_t-Z<Mt.zMax){Ct=!0;break}if(Ct)continue;const At=Math.max(Ze+Ot,it+Ot);cn.set(Et,At,ft),Un.setFromAxisAngle($f,r()*Math.PI*2),Sn.set(1,1,1),on.compose(cn,Un,Sn),K.setMatrixAt(q,on),q++,F=!0}}K.count=q,K.instanceMatrix.needsUpdate=!0,q>0&&I.add(K)}{const W=[];for(let Ze=0;Ze<4;Ze++){const pt=Math.PI/2*Ze+Math.PI/4,Rt=h.x+Math.cos(pt)*2.6,_t=h.z+Math.sin(pt)*2.6;W.push(new S(Rt,0,_t))}if(W.length>0){const Ze=new Bn(te,$,W.length),pt=new Bn(k,Q,W.length);Ze.name="HarborPlazaLamps",pt.name="HarborPlazaLampPoles",Ze.instanceMatrix.setUsage($n),pt.instanceMatrix.setUsage($n),Ze.castShadow=!1,Ze.receiveShadow=!1,pt.castShadow=!1,pt.receiveShadow=!0,Ze.userData.noCollision=!0,pt.userData.noCollision=!0;for(let _t=0;_t<W.length;_t++){const It=W[_t],Ct=Mn(e,It.x,It.z,it),At=Math.max((Number.isFinite(Ct)?Ct:it)+Ot,it+Ot);cn.set(It.x,At,It.z),Un.identity(),Sn.set(1,ae,1),on.compose(cn,Un,Sn),pt.setMatrixAt(_t,on),cn.set(It.x,At+ae+.18,It.z),Sn.set(1,1,1),on.compose(cn,Un,Sn),Ze.setMatrixAt(_t,on)}Ze.instanceMatrix.needsUpdate=!0,pt.instanceMatrix.needsUpdate=!0,Ze.visible=m,pt.visible=m,I.add(pt),I.add(Ze),se().meshes.push(Ze)}const L=16773832,K=Mn(e,h.x,h.z,it),ne=Math.max((Number.isFinite(K)?K:it)+Ot,it+Ot),ce=new Lt;ce.name="HarborPlazaLamp",ce.position.set(h.x,ne,h.z),ce.userData.noCollision=!0,ce.visible=m;const Z=new Be(new Gt(.3,.4,.4,12),Q);Z.position.y=.2,Z.castShadow=!0,Z.receiveShadow=!0,ce.add(Z);const q=new Be(new Gt(.08,.1,ae,10),Q);q.position.y=ae/2+.4,q.castShadow=!0,q.receiveShadow=!1,ce.add(q);const ve=new Be(new Ut(.16,.16,1.2),Q);ve.position.set(0,ae+.32,.5),ve.castShadow=!0,ve.receiveShadow=!1,ce.add(ve);const F=new rt({color:16777215,emissive:new ue(L),emissiveIntensity:0}),J=new Be(new Gn(.28,16,16),F);J.position.set(0,ae+.12,1),J.castShadow=!1,ce.add(J);const he=new hn({color:16777215,metalness:0,roughness:.2,clearcoat:.6,clearcoatRoughness:.3,envMapIntensity:1,transmission:0,emissive:new ue(L),emissiveIntensity:0}),Ue=new Be(new Gn(.14,16,16),he);Ue.castShadow=!1,J.add(Ue);const et=new Oi(L,0,18,2);et.position.copy(J.position),et.castShadow=!0,ce.add(et);const Xe=r()*Math.PI*2,Et={light:et,material:F,glassMaterial:he,baseIntensity:1.2,overrideState:null,flickerPhase:Xe};ce.userData.interactable=!0,ce.userData.highlightTarget=J,ce.userData.light=et,ce.userData.flickerPhase=Xe,ce.userData.onUse=()=>{const Ze=Et.overrideState;Ze===null?Et.overrideState=!0:Ze===!0?Et.overrideState=!1:Et.overrideState=null},I.add(ce),se().individuals.push(Et)}const de=[],ee=Math.max(a.x,a.y)*.6;for(let W=0;W<5;W++){const fe=W/4,L=i.x-ee*.5+ee*fe,K=i.z+Math.sin(fe*Math.PI*1.2-Math.PI*.3)*(a.y*.45),ne=Mn(e,L,K,it)+Ot;de.push(new S(L,ne,K))}if(de.length>=2){const W=$C(I,de,{width:3.2,segments:64,name:"CityWalkway",noCollision:!0,color:4931381});W&&(W.visible=m)}const Pe=_.length;if(Pe===0)return s.add(I),I;const xe=new Ut(1,1,1);xe.translate(0,.5,0);const De=new Gt(0,.5,1,4,1,!1);De.rotateY(Math.PI/4),De.translate(0,.5,0);const Fe=new hn({color:16777215,vertexColors:!0,roughness:.6,metalness:.08,emissive:new ue(16768929),emissiveIntensity:.08,clearcoat:.15,clearcoatRoughness:.6,sheen:.1,envMapIntensity:.7}),ge=new hn({color:16777215,vertexColors:!0,roughness:.85,metalness:.05,clearcoat:.05,clearcoatRoughness:.8,envMapIntensity:.5}),Ee=new Bn(xe,Fe,Pe),Ne=new Bn(De,ge,Pe);Ee.instanceMatrix.setUsage($n),Ne.instanceMatrix.setUsage($n),Ee.castShadow=!0,Ee.receiveShadow=!0,Ne.castShadow=!0,Ne.receiveShadow=!1;for(let W=0;W<_.length;W++){const fe=_[W];cn.set(fe.x,fe.y,fe.z),Un.setFromAxisAngle($f,fe.rotation),Sn.set(fe.width,fe.wallHeight,fe.depth),on.compose(cn,Un,Sn),Ee.setMatrixAt(W,on),Ee.setColorAt(W,_r.copy(fe.wallColor)),cn.y=fe.y+fe.wallHeight,Zf.set(fe.width*1.04,fe.roofHeight,fe.depth*1.04),on.compose(cn,Un,Zf),Ne.setMatrixAt(W,on),Ne.setColorAt(W,_r.copy(fe.roofColor))}return Ee.instanceMatrix&&(Ee.instanceMatrix.needsUpdate=!0),Ne.instanceMatrix&&(Ne.instanceMatrix.needsUpdate=!0),Ee.instanceColor&&(Ee.instanceColor.needsUpdate=!0),Ne.instanceColor&&(Ne.instanceColor.needsUpdate=!0),I.add(Ee),I.add(Ne),I.userData.walls=Ee,I.userData.roofs=Ne,I.userData.lighting={material:Fe,dayIntensity:.08,nightIntensity:1.35},s.add(I),I}function ep(s,e=0){var a,o;if(!s)return;const t=we.clamp(e,0,1),n=(typeof performance<"u"?performance.now():Date.now())*.001,i=(a=s.userData)==null?void 0:a.lighting;if(i!=null&&i.material){const c=we.lerp(i.dayIntensity,i.nightIntensity,t);i.material.emissiveIntensity=c}const r=(o=s.userData)==null?void 0:o.streetlights;if(r!=null&&r.material){const c=we.lerp(r.dayIntensity??0,r.nightIntensity??1,t);r.material.emissiveIntensity=c}if(Array.isArray(r==null?void 0:r.individuals))for(const c of r.individuals){if(!c)continue;const l=c.baseIntensity??0;let h=we.lerp(0,l,t);if(c.overrideState===!0?h=l:c.overrideState===!1&&(h=0),t>0&&h>0&&Number.isFinite(c.flickerPhase)){const d=1+t*(.05*Math.sin(n*7)+.03*Math.sin(n*13+c.flickerPhase));h=Math.max(h*d,0)}if(c.light&&(c.light.intensity=h),c.material||c.glassMaterial){const u=l>0?h/l:0,d=(r==null?void 0:r.nightIntensity)??1.6,f=u>0?d*u:0;c.material&&(c.material.emissiveIntensity=f),c.glassMaterial&&(c.glassMaterial.emissiveIntensity=h>0?h:0)}}}function iS(s,e,t,n={}){var U,O;const{seed:i=20251007,buildingCount:r=140,spacing:a=5.5,harborBand:o=[it+3,it+5.5],agoraBand:c=[it+3,it+8],acroBand:l=[it+7,it+14],avoidHarborRadius:h=cC+18}=n,u=n.showFoundationPads===!0,d=sS(i),f=[],p=(O=(U=e==null?void 0:e.userData)==null?void 0:U.getHeightAt)==null?void 0:O.bind(e==null?void 0:e.userData),g=(a||6)*.8,m=new Map,A=(N,k)=>`${Math.round(N/g)}_${Math.round(k/g)}`,y=new ie(Ln.x,Ln.z),x=[{band:o,tries:Math.floor(r*.35)},{band:c,tries:Math.floor(r*.45)},{band:l,tries:Math.floor(r*.2)}],b=new ie;let _=0;for(const{band:N,tries:k}of x){let te=0;for(;te++<k&&_<r;){const Q=Math.sqrt(d())*eu,$=d()*Math.PI*2,ae=y.x+Math.cos($)*Q,Ae=y.y+Math.sin($)*Q;if(b.set(ae,Ae).distanceTo(new ie(ti.x,ti.z))<h)continue;const Ie=p?p(ae,Ae):void 0;if(!Number.isFinite(Ie)||Ie<N[0]||Ie>N[1]||Ie<it+Of)continue;const je=A(ae,Ae);if(m.has(je))continue;const $e=p?p(ae+1.2,Ae):Ie,j=p?p(ae,Ae+1.2):Ie;!Number.isFinite($e)||!Number.isFinite(j)||Math.max(Math.abs($e-Ie),Math.abs(j-Ie))>uC||(m.set(je,!0),f.push(new S(ae,Ie,Ae)),_++)}}const{group:C,walls:v,roofs:I,dummy:E}=rS(s),w=new S,T=new S().subVectors(ti,Ln).normalize();let R=0;for(const N of f){let k=0;if(t){const Ce=aS(t,N,180),Ie=t.getPoint(Ce),je=t.getPoint(Math.min(1,Ce+.01));w.subVectors(je,Ie).normalize(),k=Math.atan2(w.x,w.z)}else k=Math.atan2(T.x,T.z);const te=p?p(N.x,N.z):N.y,Q=Number.isFinite(te)?te+Ot:N.y+Ot,$=Math.max(Q,it+Of+Ot),ae=.9+d()*.3,Ae=Math.max(2,1.8*ae);u&&nu(s,N.x,$,N.z,Ae),E.position.set(N.x,$+1,N.z),E.rotation.set(0,k,0),E.scale.setScalar(ae),E.updateMatrix(),v.setMatrixAt(R,E.matrix),E.position.set(N.x,$+2,N.z),E.rotation.set(0,k,0),E.updateMatrix(),I.setMatrixAt(R,E.matrix),R++}return v.count=I.count=R,v.instanceMatrix.needsUpdate=!0,I.instanceMatrix.needsUpdate=!0,C}function sS(s=1337){let e=s>>>0||1;return()=>(e=e*1664525+1013904223>>>0)/4294967295}function rS(s,e=120){var n,i;const t=oS(s,e);return t&&!t.dummy&&(t.dummy=t._dummy??new lt,t._dummy=t.dummy),(n=t==null?void 0:t.walls)!=null&&n.material&&(t.walls.material.depthWrite=!0,t.walls.material.transparent=!1),(i=t==null?void 0:t.roofs)!=null&&i.material&&(t.roofs.material.depthWrite=!0,t.roofs.material.transparent=!1),t!=null&&t.walls&&(t.walls.renderOrder=2),t!=null&&t.roofs&&(t.roofs.renderOrder=2),t}function aS(s,e,t){let n=0,i=1/0;for(let r=0;r<=t;r++){const a=r/t,o=s.getPoint(a),c=(o.x-e.x)*(o.x-e.x)+(o.z-e.z)*(o.z-e.z);c<i&&(i=c,n=a)}return n}const tp=240;let gn=null;function oS(s,e=tp){if(!s)throw new Error("Scene is required for hill city instancing");const t=Math.max(1,Math.min(1024,e|0||tp));if(gn&&gn.capacity>=t)return gn.group.parent!==s&&s.add(gn.group),gn.dummy||(gn.dummy=gn._dummy??new lt,gn._dummy=gn.dummy),np(gn),gn;gn&&gn.group.parent&&gn.group.parent.remove(gn.group);const n=cS(),i=lS(),r=hS(),a=uS(),o=new Bn(n,r,t),c=new Bn(i,a,t);o.instanceMatrix.setUsage($n),c.instanceMatrix.setUsage($n),o.castShadow=!0,o.receiveShadow=!0,c.castShadow=!0,c.receiveShadow=!1;const l=new Lt;l.name="HillCity",l.add(o),l.add(c);const h=new lt,u={group:l,walls:o,roofs:c,dummy:h,_dummy:h,capacity:t};return o.userData.capacity=t,c.userData.capacity=t,gn=u,np(u),s.add(l),u}function np(s){s.walls.count=0,s.roofs.count=0,s.group.visible=!1,s.walls.instanceMatrix.needsUpdate=!0,s.roofs.instanceMatrix.needsUpdate=!0,s.walls.instanceColor&&(s.walls.instanceColor.needsUpdate=!0),s.roofs.instanceColor&&(s.roofs.instanceColor.needsUpdate=!0)}let vh=null,wh=null;function cS(){if(!vh){const s=new Ut(1,1,1);s.translate(0,.5,0),vh=s}return vh}function lS(){if(!wh){const s=new Gt(0,.5,1,4,1,!1);s.rotateY(Math.PI/4),s.translate(0,.5,0),wh=s}return wh}function hS(){return new hn({color:16777215,vertexColors:!0,roughness:.6,metalness:.08,emissive:new ue(16768929),emissiveIntensity:.08,clearcoat:.15,clearcoatRoughness:.6,sheen:.1,envMapIntensity:.7})}function uS(){return new hn({color:16777215,vertexColors:!0,roughness:.85,metalness:.05,clearcoat:.05,clearcoatRoughness:.8,envMapIntensity:.5})}class $u extends fn{constructor(e){super(e),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(t){return new mS(t)}),this.register(function(t){return new gS(t)}),this.register(function(t){return new SS(t)}),this.register(function(t){return new IS(t)}),this.register(function(t){return new MS(t)}),this.register(function(t){return new bS(t)}),this.register(function(t){return new xS(t)}),this.register(function(t){return new _S(t)}),this.register(function(t){return new ES(t)}),this.register(function(t){return new AS(t)}),this.register(function(t){return new vS(t)}),this.register(function(t){return new yS(t)}),this.register(function(t){return new CS(t)}),this.register(function(t){return new wS(t)}),this.register(function(t){return new fS(t)}),this.register(function(t){return new TS(t)}),this.register(function(t){return new BS(t)})}load(e,t,n,i){const r=this;let a;if(this.resourcePath!=="")a=this.resourcePath;else if(this.path!==""){const l=ki.extractUrlBase(e);a=ki.resolveURL(l,this.path)}else a=ki.extractUrlBase(e);this.manager.itemStart(e);const o=function(l){i?i(l):console.error(l),r.manager.itemError(e),r.manager.itemEnd(e)},c=new xn(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(l){try{r.parse(l,a,function(h){t(h),r.manager.itemEnd(e)},o)}catch(h){o(h)}},n,o)}setDRACOLoader(e){return this.dracoLoader=e,this}setKTX2Loader(e){return this.ktx2Loader=e,this}setMeshoptDecoder(e){return this.meshoptDecoder=e,this}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,n,i){let r;const a={},o={},c=new TextDecoder;if(typeof e=="string")r=JSON.parse(e);else if(e instanceof ArrayBuffer)if(c.decode(new Uint8Array(e,0,4))===Fm){try{a[gt.KHR_BINARY_GLTF]=new RS(e)}catch(u){i&&i(u);return}r=JSON.parse(a[gt.KHR_BINARY_GLTF].content)}else r=JSON.parse(c.decode(e));else r=e;if(r.asset===void 0||r.asset.version[0]<2){i&&i(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));return}const l=new VS(r,{path:t||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});l.fileLoader.setRequestHeader(this.requestHeader);for(let h=0;h<this.pluginCallbacks.length;h++){const u=this.pluginCallbacks[h](l);u.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),o[u.name]=u,a[u.name]=!0}if(r.extensionsUsed)for(let h=0;h<r.extensionsUsed.length;++h){const u=r.extensionsUsed[h],d=r.extensionsRequired||[];switch(u){case gt.KHR_MATERIALS_UNLIT:a[u]=new pS;break;case gt.KHR_DRACO_MESH_COMPRESSION:a[u]=new DS(r,this.dracoLoader);break;case gt.KHR_TEXTURE_TRANSFORM:a[u]=new LS;break;case gt.KHR_MESH_QUANTIZATION:a[u]=new PS;break;default:d.indexOf(u)>=0&&o[u]===void 0&&console.warn('THREE.GLTFLoader: Unknown extension "'+u+'".')}}l.setExtensions(a),l.setPlugins(o),l.parse(n,i)}parseAsync(e,t){const n=this;return new Promise(function(i,r){n.parse(e,t,i,r)})}}function dS(){let s={};return{get:function(e){return s[e]},add:function(e,t){s[e]=t},remove:function(e){delete s[e]},removeAll:function(){s={}}}}const gt={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class fS{constructor(e){this.parser=e,this.name=gt.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const e=this.parser,t=this.parser.json.nodes||[];for(let n=0,i=t.length;n<i;n++){const r=t[n];r.extensions&&r.extensions[this.name]&&r.extensions[this.name].light!==void 0&&e._addNodeRef(this.cache,r.extensions[this.name].light)}}_loadLight(e){const t=this.parser,n="light:"+e;let i=t.cache.get(n);if(i)return i;const r=t.json,c=((r.extensions&&r.extensions[this.name]||{}).lights||[])[e];let l;const h=new ue(16777215);c.color!==void 0&&h.setRGB(c.color[0],c.color[1],c.color[2],Qt);const u=c.range!==void 0?c.range:0;switch(c.type){case"directional":l=new ho(h),l.target.position.set(0,0,-1),l.add(l.target);break;case"point":l=new Oi(h),l.distance=u;break;case"spot":l=new _l(h),l.distance=u,c.spot=c.spot||{},c.spot.innerConeAngle=c.spot.innerConeAngle!==void 0?c.spot.innerConeAngle:0,c.spot.outerConeAngle=c.spot.outerConeAngle!==void 0?c.spot.outerConeAngle:Math.PI/4,l.angle=c.spot.outerConeAngle,l.penumbra=1-c.spot.innerConeAngle/c.spot.outerConeAngle,l.target.position.set(0,0,-1),l.add(l.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+c.type)}return l.position.set(0,0,0),gi(l,c),c.intensity!==void 0&&(l.intensity=c.intensity),l.name=t.createUniqueName(c.name||"light_"+e),i=Promise.resolve(l),t.cache.add(n,i),i}getDependency(e,t){if(e==="light")return this._loadLight(t)}createNodeAttachment(e){const t=this,n=this.parser,r=n.json.nodes[e],o=(r.extensions&&r.extensions[this.name]||{}).light;return o===void 0?null:this._loadLight(o).then(function(c){return n._getNodeRef(t.cache,o,c)})}}class pS{constructor(){this.name=gt.KHR_MATERIALS_UNLIT}getMaterialType(){return yn}extendParams(e,t,n){const i=[];e.color=new ue(1,1,1),e.opacity=1;const r=t.pbrMetallicRoughness;if(r){if(Array.isArray(r.baseColorFactor)){const a=r.baseColorFactor;e.color.setRGB(a[0],a[1],a[2],Qt),e.opacity=a[3]}r.baseColorTexture!==void 0&&i.push(n.assignTexture(e,"map",r.baseColorTexture,St))}return Promise.all(i)}}class AS{constructor(e){this.parser=e,this.name=gt.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=i.extensions[this.name].emissiveStrength;return r!==void 0&&(t.emissiveIntensity=r),Promise.resolve()}}class mS{constructor(e){this.parser=e,this.name=gt.KHR_MATERIALS_CLEARCOAT}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:hn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],a=i.extensions[this.name];if(a.clearcoatFactor!==void 0&&(t.clearcoat=a.clearcoatFactor),a.clearcoatTexture!==void 0&&r.push(n.assignTexture(t,"clearcoatMap",a.clearcoatTexture)),a.clearcoatRoughnessFactor!==void 0&&(t.clearcoatRoughness=a.clearcoatRoughnessFactor),a.clearcoatRoughnessTexture!==void 0&&r.push(n.assignTexture(t,"clearcoatRoughnessMap",a.clearcoatRoughnessTexture)),a.clearcoatNormalTexture!==void 0&&(r.push(n.assignTexture(t,"clearcoatNormalMap",a.clearcoatNormalTexture)),a.clearcoatNormalTexture.scale!==void 0)){const o=a.clearcoatNormalTexture.scale;t.clearcoatNormalScale=new ie(o,o)}return Promise.all(r)}}class gS{constructor(e){this.parser=e,this.name=gt.KHR_MATERIALS_DISPERSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:hn}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=i.extensions[this.name];return t.dispersion=r.dispersion!==void 0?r.dispersion:0,Promise.resolve()}}class yS{constructor(e){this.parser=e,this.name=gt.KHR_MATERIALS_IRIDESCENCE}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:hn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],a=i.extensions[this.name];return a.iridescenceFactor!==void 0&&(t.iridescence=a.iridescenceFactor),a.iridescenceTexture!==void 0&&r.push(n.assignTexture(t,"iridescenceMap",a.iridescenceTexture)),a.iridescenceIor!==void 0&&(t.iridescenceIOR=a.iridescenceIor),t.iridescenceThicknessRange===void 0&&(t.iridescenceThicknessRange=[100,400]),a.iridescenceThicknessMinimum!==void 0&&(t.iridescenceThicknessRange[0]=a.iridescenceThicknessMinimum),a.iridescenceThicknessMaximum!==void 0&&(t.iridescenceThicknessRange[1]=a.iridescenceThicknessMaximum),a.iridescenceThicknessTexture!==void 0&&r.push(n.assignTexture(t,"iridescenceThicknessMap",a.iridescenceThicknessTexture)),Promise.all(r)}}class bS{constructor(e){this.parser=e,this.name=gt.KHR_MATERIALS_SHEEN}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:hn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[];t.sheenColor=new ue(0,0,0),t.sheenRoughness=0,t.sheen=1;const a=i.extensions[this.name];if(a.sheenColorFactor!==void 0){const o=a.sheenColorFactor;t.sheenColor.setRGB(o[0],o[1],o[2],Qt)}return a.sheenRoughnessFactor!==void 0&&(t.sheenRoughness=a.sheenRoughnessFactor),a.sheenColorTexture!==void 0&&r.push(n.assignTexture(t,"sheenColorMap",a.sheenColorTexture,St)),a.sheenRoughnessTexture!==void 0&&r.push(n.assignTexture(t,"sheenRoughnessMap",a.sheenRoughnessTexture)),Promise.all(r)}}class xS{constructor(e){this.parser=e,this.name=gt.KHR_MATERIALS_TRANSMISSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:hn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],a=i.extensions[this.name];return a.transmissionFactor!==void 0&&(t.transmission=a.transmissionFactor),a.transmissionTexture!==void 0&&r.push(n.assignTexture(t,"transmissionMap",a.transmissionTexture)),Promise.all(r)}}class _S{constructor(e){this.parser=e,this.name=gt.KHR_MATERIALS_VOLUME}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:hn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],a=i.extensions[this.name];t.thickness=a.thicknessFactor!==void 0?a.thicknessFactor:0,a.thicknessTexture!==void 0&&r.push(n.assignTexture(t,"thicknessMap",a.thicknessTexture)),t.attenuationDistance=a.attenuationDistance||1/0;const o=a.attenuationColor||[1,1,1];return t.attenuationColor=new ue().setRGB(o[0],o[1],o[2],Qt),Promise.all(r)}}class ES{constructor(e){this.parser=e,this.name=gt.KHR_MATERIALS_IOR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:hn}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=i.extensions[this.name];return t.ior=r.ior!==void 0?r.ior:1.5,Promise.resolve()}}class vS{constructor(e){this.parser=e,this.name=gt.KHR_MATERIALS_SPECULAR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:hn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],a=i.extensions[this.name];t.specularIntensity=a.specularFactor!==void 0?a.specularFactor:1,a.specularTexture!==void 0&&r.push(n.assignTexture(t,"specularIntensityMap",a.specularTexture));const o=a.specularColorFactor||[1,1,1];return t.specularColor=new ue().setRGB(o[0],o[1],o[2],Qt),a.specularColorTexture!==void 0&&r.push(n.assignTexture(t,"specularColorMap",a.specularColorTexture,St)),Promise.all(r)}}class wS{constructor(e){this.parser=e,this.name=gt.EXT_MATERIALS_BUMP}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:hn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],a=i.extensions[this.name];return t.bumpScale=a.bumpFactor!==void 0?a.bumpFactor:1,a.bumpTexture!==void 0&&r.push(n.assignTexture(t,"bumpMap",a.bumpTexture)),Promise.all(r)}}class CS{constructor(e){this.parser=e,this.name=gt.KHR_MATERIALS_ANISOTROPY}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:hn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],a=i.extensions[this.name];return a.anisotropyStrength!==void 0&&(t.anisotropy=a.anisotropyStrength),a.anisotropyRotation!==void 0&&(t.anisotropyRotation=a.anisotropyRotation),a.anisotropyTexture!==void 0&&r.push(n.assignTexture(t,"anisotropyMap",a.anisotropyTexture)),Promise.all(r)}}class SS{constructor(e){this.parser=e,this.name=gt.KHR_TEXTURE_BASISU}loadTexture(e){const t=this.parser,n=t.json,i=n.textures[e];if(!i.extensions||!i.extensions[this.name])return null;const r=i.extensions[this.name],a=t.options.ktx2Loader;if(!a){if(n.extensionsRequired&&n.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return t.loadTextureImage(e,r.source,a)}}class IS{constructor(e){this.parser=e,this.name=gt.EXT_TEXTURE_WEBP}loadTexture(e){const t=this.name,n=this.parser,i=n.json,r=i.textures[e];if(!r.extensions||!r.extensions[t])return null;const a=r.extensions[t],o=i.images[a.source];let c=n.textureLoader;if(o.uri){const l=n.options.manager.getHandler(o.uri);l!==null&&(c=l)}return n.loadTextureImage(e,a.source,c)}}class MS{constructor(e){this.parser=e,this.name=gt.EXT_TEXTURE_AVIF}loadTexture(e){const t=this.name,n=this.parser,i=n.json,r=i.textures[e];if(!r.extensions||!r.extensions[t])return null;const a=r.extensions[t],o=i.images[a.source];let c=n.textureLoader;if(o.uri){const l=n.options.manager.getHandler(o.uri);l!==null&&(c=l)}return n.loadTextureImage(e,a.source,c)}}class TS{constructor(e){this.name=gt.EXT_MESHOPT_COMPRESSION,this.parser=e}loadBufferView(e){const t=this.parser.json,n=t.bufferViews[e];if(n.extensions&&n.extensions[this.name]){const i=n.extensions[this.name],r=this.parser.getDependency("buffer",i.buffer),a=this.parser.options.meshoptDecoder;if(!a||!a.supported){if(t.extensionsRequired&&t.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return r.then(function(o){const c=i.byteOffset||0,l=i.byteLength||0,h=i.count,u=i.byteStride,d=new Uint8Array(o,c,l);return a.decodeGltfBufferAsync?a.decodeGltfBufferAsync(h,u,d,i.mode,i.filter).then(function(f){return f.buffer}):a.ready.then(function(){const f=new ArrayBuffer(h*u);return a.decodeGltfBuffer(new Uint8Array(f),h,u,d,i.mode,i.filter),f})})}else return null}}class BS{constructor(e){this.name=gt.EXT_MESH_GPU_INSTANCING,this.parser=e}createNodeMesh(e){const t=this.parser.json,n=t.nodes[e];if(!n.extensions||!n.extensions[this.name]||n.mesh===void 0)return null;const i=t.meshes[n.mesh];for(const l of i.primitives)if(l.mode!==ei.TRIANGLES&&l.mode!==ei.TRIANGLE_STRIP&&l.mode!==ei.TRIANGLE_FAN&&l.mode!==void 0)return null;const a=n.extensions[this.name].attributes,o=[],c={};for(const l in a)o.push(this.parser.getDependency("accessor",a[l]).then(h=>(c[l]=h,c[l])));return o.length<1?null:(o.push(this.parser.createNodeMesh(e)),Promise.all(o).then(l=>{const h=l.pop(),u=h.isGroup?h.children:[h],d=l[0].count,f=[];for(const p of u){const g=new Ve,m=new S,A=new tn,y=new S(1,1,1),x=new Bn(p.geometry,p.material,d);for(let b=0;b<d;b++)c.TRANSLATION&&m.fromBufferAttribute(c.TRANSLATION,b),c.ROTATION&&A.fromBufferAttribute(c.ROTATION,b),c.SCALE&&y.fromBufferAttribute(c.SCALE,b),x.setMatrixAt(b,g.compose(m,A,y));for(const b in c)if(b==="_COLOR_0"){const _=c[b];x.instanceColor=new Ws(_.array,_.itemSize,_.normalized)}else b!=="TRANSLATION"&&b!=="ROTATION"&&b!=="SCALE"&&p.geometry.setAttribute(b,c[b]);lt.prototype.copy.call(x,p),this.parser.assignFinalMaterial(x),f.push(x)}return h.isGroup?(h.clear(),h.add(...f),h):f[0]}))}}const Fm="glTF",pa=12,ip={JSON:1313821514,BIN:5130562};class RS{constructor(e){this.name=gt.KHR_BINARY_GLTF,this.content=null,this.body=null;const t=new DataView(e,0,pa),n=new TextDecoder;if(this.header={magic:n.decode(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==Fm)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const i=this.header.length-pa,r=new DataView(e,pa);let a=0;for(;a<i;){const o=r.getUint32(a,!0);a+=4;const c=r.getUint32(a,!0);if(a+=4,c===ip.JSON){const l=new Uint8Array(e,pa+a,o);this.content=n.decode(l)}else if(c===ip.BIN){const l=pa+a;this.body=e.slice(l,l+o)}a+=o}if(this.content===null)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class DS{constructor(e,t){if(!t)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=gt.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,this.dracoLoader.preload()}decodePrimitive(e,t){const n=this.json,i=this.dracoLoader,r=e.extensions[this.name].bufferView,a=e.extensions[this.name].attributes,o={},c={},l={};for(const h in a){const u=iu[h]||h.toLowerCase();o[u]=a[h]}for(const h in e.attributes){const u=iu[h]||h.toLowerCase();if(a[h]!==void 0){const d=n.accessors[e.attributes[h]],f=Dr[d.componentType];l[u]=f.name,c[u]=d.normalized===!0}}return t.getDependency("bufferView",r).then(function(h){return new Promise(function(u,d){i.decodeDracoFile(h,function(f){for(const p in f.attributes){const g=f.attributes[p],m=c[p];m!==void 0&&(g.normalized=m)}u(f)},o,l,Qt,d)})})}}class LS{constructor(){this.name=gt.KHR_TEXTURE_TRANSFORM}extendTexture(e,t){return(t.texCoord===void 0||t.texCoord===e.channel)&&t.offset===void 0&&t.rotation===void 0&&t.scale===void 0||(e=e.clone(),t.texCoord!==void 0&&(e.channel=t.texCoord),t.offset!==void 0&&e.offset.fromArray(t.offset),t.rotation!==void 0&&(e.rotation=t.rotation),t.scale!==void 0&&e.repeat.fromArray(t.scale),e.needsUpdate=!0),e}}class PS{constructor(){this.name=gt.KHR_MESH_QUANTIZATION}}class Um extends $r{constructor(e,t,n,i){super(e,t,n,i)}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i*3+i;for(let a=0;a!==i;a++)t[a]=n[r+a];return t}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=o*2,l=o*3,h=i-t,u=(n-t)/h,d=u*u,f=d*u,p=e*l,g=p-l,m=-2*f+3*d,A=f-d,y=1-m,x=A-d+u;for(let b=0;b!==o;b++){const _=a[g+b+o],C=a[g+b+c]*h,v=a[p+b+o],I=a[p+b]*h;r[b]=y*_+x*C+m*v+A*I}return r}}const FS=new tn;class US extends Um{interpolate_(e,t,n,i){const r=super.interpolate_(e,t,n,i);return FS.fromArray(r).normalize().toArray(r),r}}const ei={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},Dr={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},sp={9728:Jt,9729:Ht,9984:Xa,9985:Mr,9986:Ds,9987:kn},rp={33071:Yn,33648:Lr,10497:Hn},Ch={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},iu={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},Zi={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},NS={CUBICSPLINE:void 0,LINEAR:zr,STEP:Hr},Sh={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"};function OS(s){return s.DefaultMaterial===void 0&&(s.DefaultMaterial=new rt({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:hi})),s.DefaultMaterial}function Ss(s,e,t){for(const n in t.extensions)s[n]===void 0&&(e.userData.gltfExtensions=e.userData.gltfExtensions||{},e.userData.gltfExtensions[n]=t.extensions[n])}function gi(s,e){e.extras!==void 0&&(typeof e.extras=="object"?Object.assign(s.userData,e.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+e.extras))}function kS(s,e,t){let n=!1,i=!1,r=!1;for(let l=0,h=e.length;l<h;l++){const u=e[l];if(u.POSITION!==void 0&&(n=!0),u.NORMAL!==void 0&&(i=!0),u.COLOR_0!==void 0&&(r=!0),n&&i&&r)break}if(!n&&!i&&!r)return Promise.resolve(s);const a=[],o=[],c=[];for(let l=0,h=e.length;l<h;l++){const u=e[l];if(n){const d=u.POSITION!==void 0?t.getDependency("accessor",u.POSITION):s.attributes.position;a.push(d)}if(i){const d=u.NORMAL!==void 0?t.getDependency("accessor",u.NORMAL):s.attributes.normal;o.push(d)}if(r){const d=u.COLOR_0!==void 0?t.getDependency("accessor",u.COLOR_0):s.attributes.color;c.push(d)}}return Promise.all([Promise.all(a),Promise.all(o),Promise.all(c)]).then(function(l){const h=l[0],u=l[1],d=l[2];return n&&(s.morphAttributes.position=h),i&&(s.morphAttributes.normal=u),r&&(s.morphAttributes.color=d),s.morphTargetsRelative=!0,s})}function QS(s,e){if(s.updateMorphTargets(),e.weights!==void 0)for(let t=0,n=e.weights.length;t<n;t++)s.morphTargetInfluences[t]=e.weights[t];if(e.extras&&Array.isArray(e.extras.targetNames)){const t=e.extras.targetNames;if(s.morphTargetInfluences.length===t.length){s.morphTargetDictionary={};for(let n=0,i=t.length;n<i;n++)s.morphTargetDictionary[t[n]]=n}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function GS(s){let e;const t=s.extensions&&s.extensions[gt.KHR_DRACO_MESH_COMPRESSION];if(t?e="draco:"+t.bufferView+":"+t.indices+":"+Ih(t.attributes):e=s.indices+":"+Ih(s.attributes)+":"+s.mode,s.targets!==void 0)for(let n=0,i=s.targets.length;n<i;n++)e+=":"+Ih(s.targets[n]);return e}function Ih(s){let e="";const t=Object.keys(s).sort();for(let n=0,i=t.length;n<i;n++)e+=t[n]+":"+s[t[n]]+";";return e}function su(s){switch(s){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}function HS(s){return s.search(/\.jpe?g($|\?)/i)>0||s.search(/^data\:image\/jpeg/)===0?"image/jpeg":s.search(/\.webp($|\?)/i)>0||s.search(/^data\:image\/webp/)===0?"image/webp":s.search(/\.ktx2($|\?)/i)>0||s.search(/^data\:image\/ktx2/)===0?"image/ktx2":"image/png"}const zS=new Ve;class VS{constructor(e={},t={}){this.json=e,this.extensions={},this.plugins={},this.options=t,this.cache=new dS,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let n=!1,i=-1,r=!1,a=-1;if(typeof navigator<"u"){const o=navigator.userAgent;n=/^((?!chrome|android).)*safari/i.test(o)===!0;const c=o.match(/Version\/(\d+)/);i=n&&c?parseInt(c[1],10):-1,r=o.indexOf("Firefox")>-1,a=r?o.match(/Firefox\/([0-9]+)\./)[1]:-1}typeof createImageBitmap>"u"||n&&i<17||r&&a<98?this.textureLoader=new Gu(this.options.manager):this.textureLoader=new cm(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new xn(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),this.options.crossOrigin==="use-credentials"&&this.fileLoader.setWithCredentials(!0)}setExtensions(e){this.extensions=e}setPlugins(e){this.plugins=e}parse(e,t){const n=this,i=this.json,r=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(a){return a._markDefs&&a._markDefs()}),Promise.all(this._invokeAll(function(a){return a.beforeRoot&&a.beforeRoot()})).then(function(){return Promise.all([n.getDependencies("scene"),n.getDependencies("animation"),n.getDependencies("camera")])}).then(function(a){const o={scene:a[0][i.scene||0],scenes:a[0],animations:a[1],cameras:a[2],asset:i.asset,parser:n,userData:{}};return Ss(r,o,i),gi(o,i),Promise.all(n._invokeAll(function(c){return c.afterRoot&&c.afterRoot(o)})).then(function(){for(const c of o.scenes)c.updateMatrixWorld();e(o)})}).catch(t)}_markDefs(){const e=this.json.nodes||[],t=this.json.skins||[],n=this.json.meshes||[];for(let i=0,r=t.length;i<r;i++){const a=t[i].joints;for(let o=0,c=a.length;o<c;o++)e[a[o]].isBone=!0}for(let i=0,r=e.length;i<r;i++){const a=e[i];a.mesh!==void 0&&(this._addNodeRef(this.meshCache,a.mesh),a.skin!==void 0&&(n[a.mesh].isSkinnedMesh=!0)),a.camera!==void 0&&this._addNodeRef(this.cameraCache,a.camera)}}_addNodeRef(e,t){t!==void 0&&(e.refs[t]===void 0&&(e.refs[t]=e.uses[t]=0),e.refs[t]++)}_getNodeRef(e,t,n){if(e.refs[t]<=1)return n;const i=n.clone(),r=(a,o)=>{const c=this.associations.get(a);c!=null&&this.associations.set(o,c);for(const[l,h]of a.children.entries())r(h,o.children[l])};return r(n,i),i.name+="_instance_"+e.uses[t]++,i}_invokeOne(e){const t=Object.values(this.plugins);t.push(this);for(let n=0;n<t.length;n++){const i=e(t[n]);if(i)return i}return null}_invokeAll(e){const t=Object.values(this.plugins);t.unshift(this);const n=[];for(let i=0;i<t.length;i++){const r=e(t[i]);r&&n.push(r)}return n}getDependency(e,t){const n=e+":"+t;let i=this.cache.get(n);if(!i){switch(e){case"scene":i=this.loadScene(t);break;case"node":i=this._invokeOne(function(r){return r.loadNode&&r.loadNode(t)});break;case"mesh":i=this._invokeOne(function(r){return r.loadMesh&&r.loadMesh(t)});break;case"accessor":i=this.loadAccessor(t);break;case"bufferView":i=this._invokeOne(function(r){return r.loadBufferView&&r.loadBufferView(t)});break;case"buffer":i=this.loadBuffer(t);break;case"material":i=this._invokeOne(function(r){return r.loadMaterial&&r.loadMaterial(t)});break;case"texture":i=this._invokeOne(function(r){return r.loadTexture&&r.loadTexture(t)});break;case"skin":i=this.loadSkin(t);break;case"animation":i=this._invokeOne(function(r){return r.loadAnimation&&r.loadAnimation(t)});break;case"camera":i=this.loadCamera(t);break;default:if(i=this._invokeOne(function(r){return r!=this&&r.getDependency&&r.getDependency(e,t)}),!i)throw new Error("Unknown type: "+e);break}this.cache.add(n,i)}return i}getDependencies(e){let t=this.cache.get(e);if(!t){const n=this,i=this.json[e+(e==="mesh"?"es":"s")]||[];t=Promise.all(i.map(function(r,a){return n.getDependency(e,a)})),this.cache.add(e,t)}return t}loadBuffer(e){const t=this.json.buffers[e],n=this.fileLoader;if(t.type&&t.type!=="arraybuffer")throw new Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(t.uri===void 0&&e===0)return Promise.resolve(this.extensions[gt.KHR_BINARY_GLTF].body);const i=this.options;return new Promise(function(r,a){n.load(ki.resolveURL(t.uri,i.path),r,void 0,function(){a(new Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))})})}loadBufferView(e){const t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then(function(n){const i=t.byteLength||0,r=t.byteOffset||0;return n.slice(r,r+i)})}loadAccessor(e){const t=this,n=this.json,i=this.json.accessors[e];if(i.bufferView===void 0&&i.sparse===void 0){const a=Ch[i.type],o=Dr[i.componentType],c=i.normalized===!0,l=new o(i.count*a);return Promise.resolve(new ot(l,a,c))}const r=[];return i.bufferView!==void 0?r.push(this.getDependency("bufferView",i.bufferView)):r.push(null),i.sparse!==void 0&&(r.push(this.getDependency("bufferView",i.sparse.indices.bufferView)),r.push(this.getDependency("bufferView",i.sparse.values.bufferView))),Promise.all(r).then(function(a){const o=a[0],c=Ch[i.type],l=Dr[i.componentType],h=l.BYTES_PER_ELEMENT,u=h*c,d=i.byteOffset||0,f=i.bufferView!==void 0?n.bufferViews[i.bufferView].byteStride:void 0,p=i.normalized===!0;let g,m;if(f&&f!==u){const A=Math.floor(d/f),y="InterleavedBuffer:"+i.bufferView+":"+i.componentType+":"+A+":"+i.count;let x=t.cache.get(y);x||(g=new l(o,A*f,i.count*f/h),x=new eo(g,f/h),t.cache.add(y,x)),m=new as(x,c,d%f/h,p)}else o===null?g=new l(i.count*c):g=new l(o,d,i.count*c),m=new ot(g,c,p);if(i.sparse!==void 0){const A=Ch.SCALAR,y=Dr[i.sparse.indices.componentType],x=i.sparse.indices.byteOffset||0,b=i.sparse.values.byteOffset||0,_=new y(a[1],x,i.sparse.count*A),C=new l(a[2],b,i.sparse.count*c);o!==null&&(m=new ot(m.array.slice(),m.itemSize,m.normalized)),m.normalized=!1;for(let v=0,I=_.length;v<I;v++){const E=_[v];if(m.setX(E,C[v*c]),c>=2&&m.setY(E,C[v*c+1]),c>=3&&m.setZ(E,C[v*c+2]),c>=4&&m.setW(E,C[v*c+3]),c>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}m.normalized=p}return m})}loadTexture(e){const t=this.json,n=this.options,r=t.textures[e].source,a=t.images[r];let o=this.textureLoader;if(a.uri){const c=n.manager.getHandler(a.uri);c!==null&&(o=c)}return this.loadTextureImage(e,r,o)}loadTextureImage(e,t,n){const i=this,r=this.json,a=r.textures[e],o=r.images[t],c=(o.uri||o.bufferView)+":"+a.sampler;if(this.textureCache[c])return this.textureCache[c];const l=this.loadImageSource(t,n).then(function(h){h.flipY=!1,h.name=a.name||o.name||"",h.name===""&&typeof o.uri=="string"&&o.uri.startsWith("data:image/")===!1&&(h.name=o.uri);const d=(r.samplers||{})[a.sampler]||{};return h.magFilter=sp[d.magFilter]||Ht,h.minFilter=sp[d.minFilter]||kn,h.wrapS=rp[d.wrapS]||Hn,h.wrapT=rp[d.wrapT]||Hn,h.generateMipmaps=!h.isCompressedTexture&&h.minFilter!==Jt&&h.minFilter!==Ht,i.associations.set(h,{textures:e}),h}).catch(function(){return null});return this.textureCache[c]=l,l}loadImageSource(e,t){const n=this,i=this.json,r=this.options;if(this.sourceCache[e]!==void 0)return this.sourceCache[e].then(u=>u.clone());const a=i.images[e],o=self.URL||self.webkitURL;let c=a.uri||"",l=!1;if(a.bufferView!==void 0)c=n.getDependency("bufferView",a.bufferView).then(function(u){l=!0;const d=new Blob([u],{type:a.mimeType});return c=o.createObjectURL(d),c});else if(a.uri===void 0)throw new Error("THREE.GLTFLoader: Image "+e+" is missing URI and bufferView");const h=Promise.resolve(c).then(function(u){return new Promise(function(d,f){let p=d;t.isImageBitmapLoader===!0&&(p=function(g){const m=new Wt(g);m.needsUpdate=!0,d(m)}),t.load(ki.resolveURL(u,r.path),p,void 0,f)})}).then(function(u){return l===!0&&o.revokeObjectURL(c),gi(u,a),u.userData.mimeType=a.mimeType||HS(a.uri),u}).catch(function(u){throw console.error("THREE.GLTFLoader: Couldn't load texture",c),u});return this.sourceCache[e]=h,h}assignTexture(e,t,n,i){const r=this;return this.getDependency("texture",n.index).then(function(a){if(!a)return null;if(n.texCoord!==void 0&&n.texCoord>0&&(a=a.clone(),a.channel=n.texCoord),r.extensions[gt.KHR_TEXTURE_TRANSFORM]){const o=n.extensions!==void 0?n.extensions[gt.KHR_TEXTURE_TRANSFORM]:void 0;if(o){const c=r.associations.get(a);a=r.extensions[gt.KHR_TEXTURE_TRANSFORM].extendTexture(a,o),r.associations.set(a,c)}}return i!==void 0&&(a.colorSpace=i),e[t]=a,a})}assignFinalMaterial(e){const t=e.geometry;let n=e.material;const i=t.attributes.tangent===void 0,r=t.attributes.color!==void 0,a=t.attributes.normal===void 0;if(e.isPoints){const o="PointsMaterial:"+n.uuid;let c=this.cache.get(o);c||(c=new no,nn.prototype.copy.call(c,n),c.color.copy(n.color),c.map=n.map,c.sizeAttenuation=!1,this.cache.add(o,c)),n=c}else if(e.isLine){const o="LineBasicMaterial:"+n.uuid;let c=this.cache.get(o);c||(c=new dn,nn.prototype.copy.call(c,n),c.color.copy(n.color),c.map=n.map,this.cache.add(o,c)),n=c}if(i||r||a){let o="ClonedMaterial:"+n.uuid+":";i&&(o+="derivative-tangents:"),r&&(o+="vertex-colors:"),a&&(o+="flat-shading:");let c=this.cache.get(o);c||(c=n.clone(),r&&(c.vertexColors=!0),a&&(c.flatShading=!0),i&&(c.normalScale&&(c.normalScale.y*=-1),c.clearcoatNormalScale&&(c.clearcoatNormalScale.y*=-1)),this.cache.add(o,c),this.associations.set(c,this.associations.get(n))),n=c}e.material=n}getMaterialType(){return rt}loadMaterial(e){const t=this,n=this.json,i=this.extensions,r=n.materials[e];let a;const o={},c=r.extensions||{},l=[];if(c[gt.KHR_MATERIALS_UNLIT]){const u=i[gt.KHR_MATERIALS_UNLIT];a=u.getMaterialType(),l.push(u.extendParams(o,r,t))}else{const u=r.pbrMetallicRoughness||{};if(o.color=new ue(1,1,1),o.opacity=1,Array.isArray(u.baseColorFactor)){const d=u.baseColorFactor;o.color.setRGB(d[0],d[1],d[2],Qt),o.opacity=d[3]}u.baseColorTexture!==void 0&&l.push(t.assignTexture(o,"map",u.baseColorTexture,St)),o.metalness=u.metallicFactor!==void 0?u.metallicFactor:1,o.roughness=u.roughnessFactor!==void 0?u.roughnessFactor:1,u.metallicRoughnessTexture!==void 0&&(l.push(t.assignTexture(o,"metalnessMap",u.metallicRoughnessTexture)),l.push(t.assignTexture(o,"roughnessMap",u.metallicRoughnessTexture))),a=this._invokeOne(function(d){return d.getMaterialType&&d.getMaterialType(e)}),l.push(Promise.all(this._invokeAll(function(d){return d.extendMaterialParams&&d.extendMaterialParams(e,o)})))}r.doubleSided===!0&&(o.side=ln);const h=r.alphaMode||Sh.OPAQUE;if(h===Sh.BLEND?(o.transparent=!0,o.depthWrite=!1):(o.transparent=!1,h===Sh.MASK&&(o.alphaTest=r.alphaCutoff!==void 0?r.alphaCutoff:.5)),r.normalTexture!==void 0&&a!==yn&&(l.push(t.assignTexture(o,"normalMap",r.normalTexture)),o.normalScale=new ie(1,1),r.normalTexture.scale!==void 0)){const u=r.normalTexture.scale;o.normalScale.set(u,u)}if(r.occlusionTexture!==void 0&&a!==yn&&(l.push(t.assignTexture(o,"aoMap",r.occlusionTexture)),r.occlusionTexture.strength!==void 0&&(o.aoMapIntensity=r.occlusionTexture.strength)),r.emissiveFactor!==void 0&&a!==yn){const u=r.emissiveFactor;o.emissive=new ue().setRGB(u[0],u[1],u[2],Qt)}return r.emissiveTexture!==void 0&&a!==yn&&l.push(t.assignTexture(o,"emissiveMap",r.emissiveTexture,St)),Promise.all(l).then(function(){const u=new a(o);return r.name&&(u.name=r.name),gi(u,r),t.associations.set(u,{materials:e}),r.extensions&&Ss(i,u,r),u})}createUniqueName(e){const t=wt.sanitizeNodeName(e||"");return t in this.nodeNamesUsed?t+"_"+ ++this.nodeNamesUsed[t]:(this.nodeNamesUsed[t]=0,t)}loadGeometries(e){const t=this,n=this.extensions,i=this.primitiveCache;function r(o){return n[gt.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(o,t).then(function(c){return ap(c,o,t)})}const a=[];for(let o=0,c=e.length;o<c;o++){const l=e[o],h=GS(l),u=i[h];if(u)a.push(u.promise);else{let d;l.extensions&&l.extensions[gt.KHR_DRACO_MESH_COMPRESSION]?d=r(l):d=ap(new Je,l,t),i[h]={primitive:l,promise:d},a.push(d)}}return Promise.all(a)}loadMesh(e){const t=this,n=this.json,i=this.extensions,r=n.meshes[e],a=r.primitives,o=[];for(let c=0,l=a.length;c<l;c++){const h=a[c].material===void 0?OS(this.cache):this.getDependency("material",a[c].material);o.push(h)}return o.push(t.loadGeometries(a)),Promise.all(o).then(function(c){const l=c.slice(0,c.length-1),h=c[c.length-1],u=[];for(let f=0,p=h.length;f<p;f++){const g=h[f],m=a[f];let A;const y=l[f];if(m.mode===ei.TRIANGLES||m.mode===ei.TRIANGLE_STRIP||m.mode===ei.TRIANGLE_FAN||m.mode===void 0)A=r.isSkinnedMesh===!0?new Cu(g,y):new Be(g,y),A.isSkinnedMesh===!0&&A.normalizeSkinWeights(),m.mode===ei.TRIANGLE_STRIP?A.geometry=Jf(A.geometry,mu):m.mode===ei.TRIANGLE_FAN&&(A.geometry=Jf(A.geometry,Wc));else if(m.mode===ei.LINES)A=new di(g,y);else if(m.mode===ei.LINE_STRIP)A=new _i(g,y);else if(m.mode===ei.LINE_LOOP)A=new Su(g,y);else if(m.mode===ei.POINTS)A=new ul(g,y);else throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+m.mode);Object.keys(A.geometry.morphAttributes).length>0&&QS(A,r),A.name=t.createUniqueName(r.name||"mesh_"+e),gi(A,r),m.extensions&&Ss(i,A,m),t.assignFinalMaterial(A),u.push(A)}for(let f=0,p=u.length;f<p;f++)t.associations.set(u[f],{meshes:e,primitives:f});if(u.length===1)return r.extensions&&Ss(i,u[0],r),u[0];const d=new Lt;r.extensions&&Ss(i,d,r),t.associations.set(d,{meshes:e});for(let f=0,p=u.length;f<p;f++)d.add(u[f]);return d})}loadCamera(e){let t;const n=this.json.cameras[e],i=n[n.type];if(!i){console.warn("THREE.GLTFLoader: Missing camera parameters.");return}return n.type==="perspective"?t=new Zt(we.radToDeg(i.yfov),i.aspectRatio||1,i.znear||1,i.zfar||2e6):n.type==="orthographic"&&(t=new lo(-i.xmag,i.xmag,i.ymag,-i.ymag,i.znear,i.zfar)),n.name&&(t.name=this.createUniqueName(n.name)),gi(t,n),Promise.resolve(t)}loadSkin(e){const t=this.json.skins[e],n=[];for(let i=0,r=t.joints.length;i<r;i++)n.push(this._loadNodeShallow(t.joints[i]));return t.inverseBindMatrices!==void 0?n.push(this.getDependency("accessor",t.inverseBindMatrices)):n.push(null),Promise.all(n).then(function(i){const r=i.pop(),a=i,o=[],c=[];for(let l=0,h=a.length;l<h;l++){const u=a[l];if(u){o.push(u);const d=new Ve;r!==null&&d.fromArray(r.array,l*16),c.push(d)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',t.joints[l])}return new to(o,c)})}loadAnimation(e){const t=this.json,n=this,i=t.animations[e],r=i.name?i.name:"animation_"+e,a=[],o=[],c=[],l=[],h=[];for(let u=0,d=i.channels.length;u<d;u++){const f=i.channels[u],p=i.samplers[f.sampler],g=f.target,m=g.node,A=i.parameters!==void 0?i.parameters[p.input]:p.input,y=i.parameters!==void 0?i.parameters[p.output]:p.output;g.node!==void 0&&(a.push(this.getDependency("node",m)),o.push(this.getDependency("accessor",A)),c.push(this.getDependency("accessor",y)),l.push(p),h.push(g))}return Promise.all([Promise.all(a),Promise.all(o),Promise.all(c),Promise.all(l),Promise.all(h)]).then(function(u){const d=u[0],f=u[1],p=u[2],g=u[3],m=u[4],A=[];for(let x=0,b=d.length;x<b;x++){const _=d[x],C=f[x],v=p[x],I=g[x],E=m[x];if(_===void 0)continue;_.updateMatrix&&_.updateMatrix();const w=n._createAnimationTracks(_,C,v,I,E);if(w)for(let T=0;T<w.length;T++)A.push(w[T])}const y=new Yr(r,void 0,A);return gi(y,i),y})}createNodeMesh(e){const t=this.json,n=this,i=t.nodes[e];return i.mesh===void 0?null:n.getDependency("mesh",i.mesh).then(function(r){const a=n._getNodeRef(n.meshCache,i.mesh,r);return i.weights!==void 0&&a.traverse(function(o){if(o.isMesh)for(let c=0,l=i.weights.length;c<l;c++)o.morphTargetInfluences[c]=i.weights[c]}),a})}loadNode(e){const t=this.json,n=this,i=t.nodes[e],r=n._loadNodeShallow(e),a=[],o=i.children||[];for(let l=0,h=o.length;l<h;l++)a.push(n.getDependency("node",o[l]));const c=i.skin===void 0?Promise.resolve(null):n.getDependency("skin",i.skin);return Promise.all([r,Promise.all(a),c]).then(function(l){const h=l[0],u=l[1],d=l[2];d!==null&&h.traverse(function(f){f.isSkinnedMesh&&f.bind(d,zS)});for(let f=0,p=u.length;f<p;f++)h.add(u[f]);return h})}_loadNodeShallow(e){const t=this.json,n=this.extensions,i=this;if(this.nodeCache[e]!==void 0)return this.nodeCache[e];const r=t.nodes[e],a=r.name?i.createUniqueName(r.name):"",o=[],c=i._invokeOne(function(l){return l.createNodeMesh&&l.createNodeMesh(e)});return c&&o.push(c),r.camera!==void 0&&o.push(i.getDependency("camera",r.camera).then(function(l){return i._getNodeRef(i.cameraCache,r.camera,l)})),i._invokeAll(function(l){return l.createNodeAttachment&&l.createNodeAttachment(e)}).forEach(function(l){o.push(l)}),this.nodeCache[e]=Promise.all(o).then(function(l){let h;if(r.isBone===!0?h=new ll:l.length>1?h=new Lt:l.length===1?h=l[0]:h=new lt,h!==l[0])for(let u=0,d=l.length;u<d;u++)h.add(l[u]);if(r.name&&(h.userData.name=r.name,h.name=a),gi(h,r),r.extensions&&Ss(n,h,r),r.matrix!==void 0){const u=new Ve;u.fromArray(r.matrix),h.applyMatrix4(u)}else r.translation!==void 0&&h.position.fromArray(r.translation),r.rotation!==void 0&&h.quaternion.fromArray(r.rotation),r.scale!==void 0&&h.scale.fromArray(r.scale);if(!i.associations.has(h))i.associations.set(h,{});else if(r.mesh!==void 0&&i.meshCache.refs[r.mesh]>1){const u=i.associations.get(h);i.associations.set(h,{...u})}return i.associations.get(h).nodes=e,h}),this.nodeCache[e]}loadScene(e){const t=this.extensions,n=this.json.scenes[e],i=this,r=new Lt;n.name&&(r.name=i.createUniqueName(n.name)),gi(r,n),n.extensions&&Ss(t,r,n);const a=n.nodes||[],o=[];for(let c=0,l=a.length;c<l;c++)o.push(i.getDependency("node",a[c]));return Promise.all(o).then(function(c){for(let h=0,u=c.length;h<u;h++)r.add(c[h]);const l=h=>{const u=new Map;for(const[d,f]of i.associations)(d instanceof nn||d instanceof Wt)&&u.set(d,f);return h.traverse(d=>{const f=i.associations.get(d);f!=null&&u.set(d,f)}),u};return i.associations=l(r),r})}_createAnimationTracks(e,t,n,i,r){const a=[],o=e.name?e.name:e.uuid,c=[];Zi[r.path]===Zi.weights?e.traverse(function(d){d.morphTargetInfluences&&c.push(d.name?d.name:d.uuid)}):c.push(o);let l;switch(Zi[r.path]){case Zi.weights:l=Xs;break;case Zi.rotation:l=Ys;break;case Zi.translation:case Zi.scale:l=Ks;break;default:switch(n.itemSize){case 1:l=Xs;break;case 2:case 3:default:l=Ks;break}break}const h=i.interpolation!==void 0?NS[i.interpolation]:zr,u=this._getArrayFromAccessor(n);for(let d=0,f=c.length;d<f;d++){const p=new l(c[d]+"."+Zi[r.path],t.array,u,h);i.interpolation==="CUBICSPLINE"&&this._createCubicSplineTrackInterpolant(p),a.push(p)}return a}_getArrayFromAccessor(e){let t=e.array;if(e.normalized){const n=su(t.constructor),i=new Float32Array(t.length);for(let r=0,a=t.length;r<a;r++)i[r]=t[r]*n;t=i}return t}_createCubicSplineTrackInterpolant(e){e.createInterpolant=function(n){const i=this instanceof Ys?US:Um;return new i(this.times,this.values,this.getValueSize()/3,n)},e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function WS(s,e,t){const n=e.attributes,i=new $t;if(n.POSITION!==void 0){const o=t.json.accessors[n.POSITION],c=o.min,l=o.max;if(c!==void 0&&l!==void 0){if(i.set(new S(c[0],c[1],c[2]),new S(l[0],l[1],l[2])),o.normalized){const h=su(Dr[o.componentType]);i.min.multiplyScalar(h),i.max.multiplyScalar(h)}}else{console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");return}}else return;const r=e.targets;if(r!==void 0){const o=new S,c=new S;for(let l=0,h=r.length;l<h;l++){const u=r[l];if(u.POSITION!==void 0){const d=t.json.accessors[u.POSITION],f=d.min,p=d.max;if(f!==void 0&&p!==void 0){if(c.setX(Math.max(Math.abs(f[0]),Math.abs(p[0]))),c.setY(Math.max(Math.abs(f[1]),Math.abs(p[1]))),c.setZ(Math.max(Math.abs(f[2]),Math.abs(p[2]))),d.normalized){const g=su(Dr[d.componentType]);c.multiplyScalar(g)}o.max(c)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}i.expandByVector(o)}s.boundingBox=i;const a=new un;i.getCenter(a.center),a.radius=i.min.distanceTo(i.max)/2,s.boundingSphere=a}function ap(s,e,t){const n=e.attributes,i=[];function r(a,o){return t.getDependency("accessor",a).then(function(c){s.setAttribute(o,c)})}for(const a in n){const o=iu[a]||a.toLowerCase();o in s.attributes||i.push(r(n[a],o))}if(e.indices!==void 0&&!s.index){const a=t.getDependency("accessor",e.indices).then(function(o){s.setIndex(o)});i.push(a)}return dt.workingColorSpace!==Qt&&"COLOR_0"in n&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${dt.workingColorSpace}" not supported.`),gi(s,e),WS(s,e,t),Promise.all(i).then(function(){return e.targets!==void 0?kS(s,e.targets,t):s})}class qS{constructor(e=4){this.pool=e,this.queue=[],this.workers=[],this.workersResolve=[],this.workerStatus=0,this.workerCreator=null}_initWorker(e){if(!this.workers[e]){const t=this.workerCreator();t.addEventListener("message",this._onMessage.bind(this,e)),this.workers[e]=t}}_getIdleWorker(){for(let e=0;e<this.pool;e++)if(!(this.workerStatus&1<<e))return e;return-1}_onMessage(e,t){const n=this.workersResolve[e];if(n&&n(t),this.queue.length){const{resolve:i,msg:r,transfer:a}=this.queue.shift();this.workersResolve[e]=i,this.workers[e].postMessage(r,a)}else this.workerStatus^=1<<e}setWorkerCreator(e){this.workerCreator=e}setWorkerLimit(e){this.pool=e}postMessage(e,t){return new Promise(n=>{const i=this._getIdleWorker();i!==-1?(this._initWorker(i),this.workerStatus|=1<<i,this.workersResolve[i]=n,this.workers[i].postMessage(e,t)):this.queue.push({resolve:n,msg:e,transfer:t})})}dispose(){this.workers.forEach(e=>e.terminate()),this.workersResolve.length=0,this.workers.length=0,this.queue.length=0,this.workerStatus=0}}const XS=0,op=2,YS=1,cp=2,KS=0,JS=1,jS=10,ZS=0,Nm=9,Om=15,km=16,Qm=22,Gm=37,Hm=43,zm=76,Vm=83,Wm=97,qm=100,Xm=103,Ym=109,Km=122,Jm=123,jm=131,Zm=132,$m=133,eg=134,tg=137,ng=138,ig=139,sg=140,rg=141,ag=142,og=145,cg=146,lg=148,hg=152,ug=157,dg=158,fg=165,pg=166,Ag=1000054e3,mg=1000054001,gg=1000054004,yg=1000054005,ed=1000066e3,bg=1000066004;class Aa{constructor(e,t,n,i){this._dataView=void 0,this._littleEndian=void 0,this._offset=void 0,this._dataView=new DataView(e.buffer,e.byteOffset+t,n),this._littleEndian=i,this._offset=0}_nextUint8(){const e=this._dataView.getUint8(this._offset);return this._offset+=1,e}_nextUint16(){const e=this._dataView.getUint16(this._offset,this._littleEndian);return this._offset+=2,e}_nextUint32(){const e=this._dataView.getUint32(this._offset,this._littleEndian);return this._offset+=4,e}_nextUint64(){const e=this._dataView.getUint32(this._offset,this._littleEndian)+4294967296*this._dataView.getUint32(this._offset+4,this._littleEndian);return this._offset+=8,e}_nextInt32(){const e=this._dataView.getInt32(this._offset,this._littleEndian);return this._offset+=4,e}_nextUint8Array(e){const t=new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+this._offset,e);return this._offset+=e,t}_skip(e){return this._offset+=e,this}_scan(e,t=0){const n=this._offset;let i=0;for(;this._dataView.getUint8(this._offset)!==t&&i<e;)i++,this._offset++;return i<e&&this._offset++,new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+n,i)}}const In=[171,75,84,88,32,50,48,187,13,10,26,10];function lp(s){return new TextDecoder().decode(s)}function $S(s){const e=new Uint8Array(s.buffer,s.byteOffset,In.length);if(e[0]!==In[0]||e[1]!==In[1]||e[2]!==In[2]||e[3]!==In[3]||e[4]!==In[4]||e[5]!==In[5]||e[6]!==In[6]||e[7]!==In[7]||e[8]!==In[8]||e[9]!==In[9]||e[10]!==In[10]||e[11]!==In[11])throw new Error("Missing KTX 2.0 identifier.");const t={vkFormat:0,typeSize:1,pixelWidth:0,pixelHeight:0,pixelDepth:0,layerCount:0,faceCount:1,levelCount:0,supercompressionScheme:0,levels:[],dataFormatDescriptor:[{vendorId:0,descriptorType:0,versionNumber:2,colorModel:0,colorPrimaries:1,transferFunction:2,flags:0,texelBlockDimension:[0,0,0,0],bytesPlane:[0,0,0,0,0,0,0,0],samples:[]}],keyValue:{},globalData:null},n=17*Uint32Array.BYTES_PER_ELEMENT,i=new Aa(s,In.length,n,!0);t.vkFormat=i._nextUint32(),t.typeSize=i._nextUint32(),t.pixelWidth=i._nextUint32(),t.pixelHeight=i._nextUint32(),t.pixelDepth=i._nextUint32(),t.layerCount=i._nextUint32(),t.faceCount=i._nextUint32(),t.levelCount=i._nextUint32(),t.supercompressionScheme=i._nextUint32();const r=i._nextUint32(),a=i._nextUint32(),o=i._nextUint32(),c=i._nextUint32(),l=i._nextUint64(),h=i._nextUint64(),u=3*Math.max(t.levelCount,1)*8,d=new Aa(s,In.length+n,u,!0);for(let Ae=0,Ce=Math.max(t.levelCount,1);Ae<Ce;Ae++)t.levels.push({levelData:new Uint8Array(s.buffer,s.byteOffset+d._nextUint64(),d._nextUint64()),uncompressedByteLength:d._nextUint64()});const f=new Aa(s,r,a,!0);f._skip(4);const p=f._nextUint16(),g=f._nextUint16(),m=f._nextUint16(),A=f._nextUint16(),y={vendorId:p,descriptorType:g,versionNumber:m,colorModel:f._nextUint8(),colorPrimaries:f._nextUint8(),transferFunction:f._nextUint8(),flags:f._nextUint8(),texelBlockDimension:[f._nextUint8(),f._nextUint8(),f._nextUint8(),f._nextUint8()],bytesPlane:[f._nextUint8(),f._nextUint8(),f._nextUint8(),f._nextUint8(),f._nextUint8(),f._nextUint8(),f._nextUint8(),f._nextUint8()],samples:[]},x=(A/4-6)/4;for(let Ae=0;Ae<x;Ae++){const Ce={bitOffset:f._nextUint16(),bitLength:f._nextUint8(),channelType:f._nextUint8(),samplePosition:[f._nextUint8(),f._nextUint8(),f._nextUint8(),f._nextUint8()],sampleLower:Number.NEGATIVE_INFINITY,sampleUpper:Number.POSITIVE_INFINITY};64&Ce.channelType?(Ce.sampleLower=f._nextInt32(),Ce.sampleUpper=f._nextInt32()):(Ce.sampleLower=f._nextUint32(),Ce.sampleUpper=f._nextUint32()),y.samples[Ae]=Ce}t.dataFormatDescriptor.length=0,t.dataFormatDescriptor.push(y);const b=new Aa(s,o,c,!0);for(;b._offset<c;){const Ae=b._nextUint32(),Ce=b._scan(Ae),Ie=lp(Ce);if(t.keyValue[Ie]=b._nextUint8Array(Ae-Ce.byteLength-1),Ie.match(/^ktx/i)){const je=lp(t.keyValue[Ie]);t.keyValue[Ie]=je.substring(0,je.lastIndexOf("\0"))}b._skip(Ae%4?4-Ae%4:0)}if(h<=0)return t;const _=new Aa(s,l,h,!0),C=_._nextUint16(),v=_._nextUint16(),I=_._nextUint32(),E=_._nextUint32(),w=_._nextUint32(),T=_._nextUint32(),R=[];for(let Ae=0,Ce=Math.max(t.levelCount,1);Ae<Ce;Ae++)R.push({imageFlags:_._nextUint32(),rgbSliceByteOffset:_._nextUint32(),rgbSliceByteLength:_._nextUint32(),alphaSliceByteOffset:_._nextUint32(),alphaSliceByteLength:_._nextUint32()});const U=l+_._offset,O=U+I,N=O+E,k=N+w,te=new Uint8Array(s.buffer,s.byteOffset+U,I),Q=new Uint8Array(s.buffer,s.byteOffset+O,E),$=new Uint8Array(s.buffer,s.byteOffset+N,w),ae=new Uint8Array(s.buffer,s.byteOffset+k,T);return t.globalData={endpointCount:C,selectorCount:v,imageDescs:R,endpointsData:te,selectorsData:Q,tablesData:$,extendedData:ae},t}let Mh,Di,ru;const Th={env:{emscripten_notify_memory_growth:function(s){ru=new Uint8Array(Di.exports.memory.buffer)}}};class eI{init(){return Mh||(Mh=typeof fetch<"u"?fetch("data:application/wasm;base64,"+hp).then(e=>e.arrayBuffer()).then(e=>WebAssembly.instantiate(e,Th)).then(this._init):WebAssembly.instantiate(Buffer.from(hp,"base64"),Th).then(this._init),Mh)}_init(e){Di=e.instance,Th.env.emscripten_notify_memory_growth(0)}decode(e,t=0){if(!Di)throw new Error("ZSTDDecoder: Await .init() before decoding.");const n=e.byteLength,i=Di.exports.malloc(n);ru.set(e,i),t=t||Number(Di.exports.ZSTD_findDecompressedSize(i,n));const r=Di.exports.malloc(t),a=Di.exports.ZSTD_decompress(r,t,i,n),o=ru.slice(r,r+a);return Di.exports.free(i),Di.exports.free(r),o}}const hp="",tI="display-p3",nI="display-p3-linear";({...dt.spaces[St]});const Bh=new WeakMap;let Rh=0,Dh;class Xn extends fn{constructor(e){super(e),this.transcoderPath="",this.transcoderBinary=null,this.transcoderPending=null,this.workerPool=new qS,this.workerSourceURL="",this.workerConfig=null,typeof MSC_TRANSCODER<"u"&&console.warn('THREE.KTX2Loader: Please update to latest "basis_transcoder". "msc_basis_transcoder" is no longer supported in three.js r125+.')}setTranscoderPath(e){return this.transcoderPath=e,this}setWorkerLimit(e){return this.workerPool.setWorkerLimit(e),this}async detectSupportAsync(e){return this.workerConfig={astcSupported:await e.hasFeatureAsync("texture-compression-astc"),astcHDRSupported:!1,etc1Supported:await e.hasFeatureAsync("texture-compression-etc2"),etc2Supported:await e.hasFeatureAsync("texture-compression-etc2"),dxtSupported:await e.hasFeatureAsync("texture-compression-bc"),bptcSupported:await e.hasFeatureAsync("texture-compression-bc"),pvrtcSupported:await e.hasFeatureAsync("texture-compression-pvrtc")},this}detectSupport(e){return e.isWebGPURenderer===!0?this.workerConfig={astcSupported:e.hasFeature("texture-compression-astc"),astcHDRSupported:!1,etc1Supported:e.hasFeature("texture-compression-etc2"),etc2Supported:e.hasFeature("texture-compression-etc2"),dxtSupported:e.hasFeature("texture-compression-bc"),bptcSupported:e.hasFeature("texture-compression-bc"),pvrtcSupported:e.hasFeature("texture-compression-pvrtc")}:this.workerConfig={astcSupported:e.extensions.has("WEBGL_compressed_texture_astc"),astcHDRSupported:e.extensions.has("WEBGL_compressed_texture_astc")&&e.extensions.get("WEBGL_compressed_texture_astc").getSupportedProfiles().includes("hdr"),etc1Supported:e.extensions.has("WEBGL_compressed_texture_etc1"),etc2Supported:e.extensions.has("WEBGL_compressed_texture_etc"),dxtSupported:e.extensions.has("WEBGL_compressed_texture_s3tc"),bptcSupported:e.extensions.has("EXT_texture_compression_bptc"),pvrtcSupported:e.extensions.has("WEBGL_compressed_texture_pvrtc")||e.extensions.has("WEBKIT_WEBGL_compressed_texture_pvrtc")},this}init(){if(!this.transcoderPending){const e=new xn(this.manager);e.setPath(this.transcoderPath),e.setWithCredentials(this.withCredentials);const t=e.loadAsync("basis_transcoder.js"),n=new xn(this.manager);n.setPath(this.transcoderPath),n.setResponseType("arraybuffer"),n.setWithCredentials(this.withCredentials);const i=n.loadAsync("basis_transcoder.wasm");this.transcoderPending=Promise.all([t,i]).then(([r,a])=>{const o=Xn.BasisWorker.toString(),c=["/* constants */","let _EngineFormat = "+JSON.stringify(Xn.EngineFormat),"let _EngineType = "+JSON.stringify(Xn.EngineType),"let _TranscoderFormat = "+JSON.stringify(Xn.TranscoderFormat),"let _BasisFormat = "+JSON.stringify(Xn.BasisFormat),"/* basis_transcoder.js */",r,"/* worker */",o.substring(o.indexOf("{")+1,o.lastIndexOf("}"))].join(`
`);this.workerSourceURL=URL.createObjectURL(new Blob([c])),this.transcoderBinary=a,this.workerPool.setWorkerCreator(()=>{const l=new Worker(this.workerSourceURL),h=this.transcoderBinary.slice(0);return l.postMessage({type:"init",config:this.workerConfig,transcoderBinary:h},[h]),l})}),Rh>0&&console.warn("THREE.KTX2Loader: Multiple active KTX2 loaders may cause performance issues. Use a single KTX2Loader instance, or call .dispose() on old instances."),Rh++}return this.transcoderPending}load(e,t,n,i){if(this.workerConfig===null)throw new Error("THREE.KTX2Loader: Missing initialization with `.detectSupport( renderer )`.");const r=new xn(this.manager);r.setPath(this.path),r.setCrossOrigin(this.crossOrigin),r.setWithCredentials(this.withCredentials),r.setResponseType("arraybuffer"),r.load(e,a=>{this.parse(a,t,i)},n,i)}parse(e,t,n){if(this.workerConfig===null)throw new Error("THREE.KTX2Loader: Missing initialization with `.detectSupport( renderer )`.");if(Bh.has(e))return Bh.get(e).promise.then(t).catch(n);this._createTexture(e).then(i=>t?t(i):null).catch(n)}_createTextureFrom(e,t){const{type:n,error:i,data:{faces:r,width:a,height:o,format:c,type:l,dfdFlags:h}}=e;if(n==="error")return Promise.reject(i);let u;if(t.faceCount===6)u=new BA(r,c,l);else{const d=r[0].mipmaps;u=t.layerCount>1?new TA(d,a,o,t.layerCount,c,l):new Zr(d,a,o,c,l)}return u.minFilter=r[0].mipmaps.length===1?Ht:kn,u.magFilter=Ht,u.generateMipmaps=!1,u.needsUpdate=!0,u.colorSpace=xg(t),u.premultiplyAlpha=!!(h&YS),u}async _createTexture(e,t={}){const n=$S(new Uint8Array(e)),i=n.vkFormat===ed&&n.dataFormatDescriptor[0].colorModel===167;if(!(n.vkFormat===ZS||i&&!this.workerConfig.astcHDRSupported))return sI(n);const a=t,o=this.init().then(()=>this.workerPool.postMessage({type:"transcode",buffer:e,taskConfig:a},[e])).then(c=>this._createTextureFrom(c.data,n));return Bh.set(e,{promise:o}),o}dispose(){this.workerPool.dispose(),this.workerSourceURL&&URL.revokeObjectURL(this.workerSourceURL),Rh--}}Xn.BasisFormat={ETC1S:0,UASTC:1,UASTC_HDR:2};Xn.TranscoderFormat={ETC1:0,ETC2:1,BC1:2,BC3:3,BC4:4,BC5:5,BC7_M6_OPAQUE_ONLY:6,BC7_M5:7,PVRTC1_4_RGB:8,PVRTC1_4_RGBA:9,ASTC_4x4:10,ATC_RGB:11,ATC_RGBA_INTERPOLATED_ALPHA:12,RGBA32:13,RGB565:14,BGR565:15,RGBA4444:16,BC6H:22,RGB_HALF:24,RGBA_HALF:25};Xn.EngineFormat={RGBAFormat:Vt,RGBA_ASTC_4x4_Format:is,RGB_BPTC_UNSIGNED_Format:Ra,RGBA_BPTC_Format:Vs,RGBA_ETC2_EAC_Format:Gr,RGBA_PVRTC_4BPPV1_Format:zs,RGBA_S3TC_DXT5_Format:Tr,RGB_ETC1_Format:Ba,RGB_ETC2_Format:Qr,RGB_PVRTC_4BPPV1_Format:Ta,RGBA_S3TC_DXT1_Format:ns};Xn.EngineType={UnsignedByteType:ut,HalfFloatType:qn,FloatType:en};Xn.BasisWorker=function(){let s,e,t;const n=_EngineFormat,i=_EngineType,r=_TranscoderFormat,a=_BasisFormat;self.addEventListener("message",function(p){const g=p.data;switch(g.type){case"init":s=g.config,o(g.transcoderBinary);break;case"transcode":e.then(()=>{try{const{faces:m,buffers:A,width:y,height:x,hasAlpha:b,format:_,type:C,dfdFlags:v}=c(g.buffer);self.postMessage({type:"transcode",id:g.id,data:{faces:m,width:y,height:x,hasAlpha:b,format:_,type:C,dfdFlags:v}},A)}catch(m){console.error(m),self.postMessage({type:"error",id:g.id,error:m.message})}});break}});function o(p){e=new Promise(g=>{t={wasmBinary:p,onRuntimeInitialized:g},BASIS(t)}).then(()=>{t.initializeBasis(),t.KTX2File===void 0&&console.warn("THREE.KTX2Loader: Please update Basis Universal transcoder.")})}function c(p){const g=new t.KTX2File(new Uint8Array(p));function m(){g.close(),g.delete()}if(!g.isValid())throw m(),new Error("THREE.KTX2Loader:	Invalid or unsupported .ktx2 file");let A;if(g.isUASTC())A=a.UASTC;else if(g.isETC1S())A=a.ETC1S;else if(g.isHDR())A=a.UASTC_HDR;else throw new Error("THREE.KTX2Loader: Unknown Basis encoding");const y=g.getWidth(),x=g.getHeight(),b=g.getLayers()||1,_=g.getLevels(),C=g.getFaces(),v=g.getHasAlpha(),I=g.getDFDFlags(),{transcoderFormat:E,engineFormat:w,engineType:T}=u(A,y,x,v);if(!y||!x||!_)throw m(),new Error("THREE.KTX2Loader:	Invalid texture");if(!g.startTranscoding())throw m(),new Error("THREE.KTX2Loader: .startTranscoding failed");const R=[],U=[];for(let O=0;O<C;O++){const N=[];for(let k=0;k<_;k++){const te=[];let Q,$;for(let Ae=0;Ae<b;Ae++){const Ce=g.getImageLevelInfo(k,Ae,O);O===0&&k===0&&Ae===0&&(Ce.origWidth%4!==0||Ce.origHeight%4!==0)&&console.warn("THREE.KTX2Loader: ETC1S and UASTC textures should use multiple-of-four dimensions."),_>1?(Q=Ce.origWidth,$=Ce.origHeight):(Q=Ce.width,$=Ce.height);let Ie=new Uint8Array(g.getImageTranscodedSizeInBytes(k,Ae,0,E));const je=g.transcodeImage(Ie,k,Ae,O,E,0,-1,-1);if(T===i.HalfFloatType&&(Ie=new Uint16Array(Ie.buffer,Ie.byteOffset,Ie.byteLength/Uint16Array.BYTES_PER_ELEMENT)),!je)throw m(),new Error("THREE.KTX2Loader: .transcodeImage failed.");te.push(Ie)}const ae=f(te);N.push({data:ae,width:Q,height:$}),U.push(ae.buffer)}R.push({mipmaps:N,width:y,height:x,format:w,type:T})}return m(),{faces:R,buffers:U,width:y,height:x,hasAlpha:v,dfdFlags:I,format:w,type:T}}const l=[{if:"astcSupported",basisFormat:[a.UASTC],transcoderFormat:[r.ASTC_4x4,r.ASTC_4x4],engineFormat:[n.RGBA_ASTC_4x4_Format,n.RGBA_ASTC_4x4_Format],engineType:[i.UnsignedByteType],priorityETC1S:1/0,priorityUASTC:1,needsPowerOfTwo:!1},{if:"bptcSupported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.BC7_M5,r.BC7_M5],engineFormat:[n.RGBA_BPTC_Format,n.RGBA_BPTC_Format],engineType:[i.UnsignedByteType],priorityETC1S:3,priorityUASTC:2,needsPowerOfTwo:!1},{if:"dxtSupported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.BC1,r.BC3],engineFormat:[n.RGBA_S3TC_DXT1_Format,n.RGBA_S3TC_DXT5_Format],engineType:[i.UnsignedByteType],priorityETC1S:4,priorityUASTC:5,needsPowerOfTwo:!1},{if:"etc2Supported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.ETC1,r.ETC2],engineFormat:[n.RGB_ETC2_Format,n.RGBA_ETC2_EAC_Format],engineType:[i.UnsignedByteType],priorityETC1S:1,priorityUASTC:3,needsPowerOfTwo:!1},{if:"etc1Supported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.ETC1],engineFormat:[n.RGB_ETC1_Format],engineType:[i.UnsignedByteType],priorityETC1S:2,priorityUASTC:4,needsPowerOfTwo:!1},{if:"pvrtcSupported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.PVRTC1_4_RGB,r.PVRTC1_4_RGBA],engineFormat:[n.RGB_PVRTC_4BPPV1_Format,n.RGBA_PVRTC_4BPPV1_Format],engineType:[i.UnsignedByteType],priorityETC1S:5,priorityUASTC:6,needsPowerOfTwo:!0},{if:"bptcSupported",basisFormat:[a.UASTC_HDR],transcoderFormat:[r.BC6H],engineFormat:[n.RGB_BPTC_UNSIGNED_Format],engineType:[i.HalfFloatType],priorityHDR:1,needsPowerOfTwo:!1},{basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.RGBA32,r.RGBA32],engineFormat:[n.RGBAFormat,n.RGBAFormat],engineType:[i.UnsignedByteType,i.UnsignedByteType],priorityETC1S:100,priorityUASTC:100,needsPowerOfTwo:!1},{basisFormat:[a.UASTC_HDR],transcoderFormat:[r.RGBA_HALF],engineFormat:[n.RGBAFormat],engineType:[i.HalfFloatType],priorityHDR:100,needsPowerOfTwo:!1}],h={[a.ETC1S]:l.filter(p=>p.basisFormat.includes(a.ETC1S)).sort((p,g)=>p.priorityUASTC-g.priorityUASTC),[a.UASTC]:l.filter(p=>p.basisFormat.includes(a.UASTC)).sort((p,g)=>p.priorityUASTC-g.priorityUASTC),[a.UASTC_HDR]:l.filter(p=>p.basisFormat.includes(a.UASTC_HDR)).sort((p,g)=>p.priorityHDR-g.priorityHDR)};function u(p,g,m,A){const y=h[p];for(let x=0;x<y.length;x++){const b=y[x];if(b.if&&!s[b.if]||!b.basisFormat.includes(p)||A&&b.transcoderFormat.length<2||b.needsPowerOfTwo&&!(d(g)&&d(m)))continue;const _=b.transcoderFormat[A?1:0],C=b.engineFormat[A?1:0],v=b.engineType[0];return{transcoderFormat:_,engineFormat:C,engineType:v}}throw new Error("THREE.KTX2Loader: Failed to identify transcoding target.")}function d(p){return p<=2?!0:(p&p-1)===0&&p!==0}function f(p){if(p.length===1)return p[0];let g=0;for(let y=0;y<p.length;y++){const x=p[y];g+=x.byteLength}const m=new Uint8Array(g);let A=0;for(let y=0;y<p.length;y++){const x=p[y];m.set(x,A),A+=x.byteLength}return m}};const iI=new Set([Vt,Ur,es,Pi]),Lh={[Ym]:Vt,[Xm]:es,[qm]:Pi,[Wm]:Vt,[Vm]:es,[zm]:Pi,[Hm]:Vt,[Gm]:Vt,[Qm]:es,[km]:es,[Om]:Pi,[Nm]:Pi,[Jm]:Ur,[Km]:Ur,[hg]:Gr,[lg]:Qr,[ed]:is,[dg]:is,[ug]:is,[bg]:ks,[pg]:ks,[fg]:ks,[eg]:ns,[$m]:ns,[Zm]:Ns,[jm]:Ns,[ng]:Os,[tg]:Os,[sg]:La,[ig]:Da,[ag]:Fa,[rg]:Pa,[cg]:Vs,[og]:Vs,[yg]:zs,[mg]:zs,[gg]:kr,[Ag]:kr},Er={[Ym]:en,[Xm]:en,[qm]:en,[Wm]:qn,[Vm]:qn,[zm]:qn,[Hm]:ut,[Gm]:ut,[Qm]:ut,[km]:ut,[Om]:ut,[Nm]:ut,[Jm]:Ya,[Km]:Ka,[hg]:ut,[lg]:ut,[ed]:qn,[dg]:ut,[ug]:ut,[bg]:qn,[pg]:ut,[fg]:ut,[eg]:ut,[$m]:ut,[Zm]:ut,[jm]:ut,[ng]:ut,[tg]:ut,[sg]:ut,[ig]:ut,[ag]:ut,[rg]:ut,[cg]:ut,[og]:ut,[yg]:ut,[mg]:ut,[gg]:ut,[Ag]:ut};async function sI(s){const{vkFormat:e}=s;if(Lh[e]===void 0)throw new Error("THREE.KTX2Loader: Unsupported vkFormat: "+e);Er[e]===void 0&&console.warn('THREE.KTX2Loader: Missing ".type" for vkFormat: '+e);let t;s.supercompressionScheme===op&&(Dh||(Dh=new Promise(async a=>{const o=new eI;await o.init(),a(o)})),t=await Dh);const n=[];for(let a=0;a<s.levels.length;a++){const o=Math.max(1,s.pixelWidth>>a),c=Math.max(1,s.pixelHeight>>a),l=s.pixelDepth?Math.max(1,s.pixelDepth>>a):0,h=s.levels[a];let u;if(s.supercompressionScheme===XS)u=h.levelData;else if(s.supercompressionScheme===op)u=t.decode(h.levelData,h.uncompressedByteLength);else throw new Error("THREE.KTX2Loader: Unsupported supercompressionScheme.");let d;Er[e]===en?d=new Float32Array(u.buffer,u.byteOffset,u.byteLength/Float32Array.BYTES_PER_ELEMENT):Er[e]===qn?d=new Uint16Array(u.buffer,u.byteOffset,u.byteLength/Uint16Array.BYTES_PER_ELEMENT):Er[e]===Ya||Er[e]===Ka?d=new Uint32Array(u.buffer,u.byteOffset,u.byteLength/Uint32Array.BYTES_PER_ELEMENT):d=u,n.push({data:d,width:o,height:c,depth:l})}const i=s.levelCount===0||n.length>1;let r;if(iI.has(Lh[e]))r=s.pixelDepth===0?new Qn(n[0].data,s.pixelWidth,s.pixelHeight):new ja(n[0].data,s.pixelWidth,s.pixelHeight,s.pixelDepth),r.minFilter=i?Xa:Jt,r.magFilter=Jt,r.generateMipmaps=s.levelCount===0;else{if(s.pixelDepth>0)throw new Error("THREE.KTX2Loader: Unsupported pixelDepth.");r=new Zr(n,s.pixelWidth,s.pixelHeight),r.minFilter=i?kn:Ht,r.magFilter=Ht}return r.mipmaps=n,r.type=Er[e],r.format=Lh[e],r.colorSpace=xg(s),r.needsUpdate=!0,Promise.resolve(r)}function xg(s){const e=s.dataFormatDescriptor[0];return e.colorPrimaries===JS?e.transferFunction===cp?St:Qt:e.colorPrimaries===jS?e.transferFunction===cp?tI:nI:(e.colorPrimaries===KS||console.warn(`THREE.KTX2Loader: Unsupported color primaries, "${e.colorPrimaries}"`),ci)}var _g=function(){var s="b9H79Tebbbe8Fv9Gbb9Gvuuuuueu9Giuuub9Geueu9Giuuueuikqbeeedddillviebeoweuec:q:Odkr;leDo9TW9T9VV95dbH9F9F939H79T9F9J9H229F9Jt9VV7bb8A9TW79O9V9Wt9F9KW9J9V9KW9wWVtW949c919M9MWVbeY9TW79O9V9Wt9F9KW9J9V9KW69U9KW949c919M9MWVbdE9TW79O9V9Wt9F9KW9J9V9KW69U9KW949tWG91W9U9JWbiL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9p9JtblK9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9r919HtbvL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWVT949Wbol79IV9Rbrq;w8Wqdbk;esezu8Jjjjjbcj;eb9Rgv8Kjjjjbc9:hodnadcefal0mbcuhoaiRbbc:Ge9hmbavaialfgrad9Radz1jjjbhwcj;abad9Uc;WFbGgocjdaocjd6EhDaicefhocbhqdnindndndnaeaq9nmbaDaeaq9RaqaDfae6Egkcsfglcl4cifcd4hxalc9WGgmTmecbhPawcjdfhsaohzinaraz9Rax6mvarazaxfgo9RcK6mvczhlcbhHinalgic9WfgOawcj;cbffhldndndndndnazaOco4fRbbaHcoG4ciGPlbedibkal9cb83ibalcwf9cb83ibxikalaoRblaoRbbgOco4gAaAciSgAE86bbawcj;cbfaifglcGfaoclfaAfgARbbaOcl4ciGgCaCciSgCE86bbalcVfaAaCfgARbbaOcd4ciGgCaCciSgCE86bbalc7faAaCfgARbbaOciGgOaOciSgOE86bbalctfaAaOfgARbbaoRbegOco4gCaCciSgCE86bbalc91faAaCfgARbbaOcl4ciGgCaCciSgCE86bbalc4faAaCfgARbbaOcd4ciGgCaCciSgCE86bbalc93faAaCfgARbbaOciGgOaOciSgOE86bbalc94faAaOfgARbbaoRbdgOco4gCaCciSgCE86bbalc95faAaCfgARbbaOcl4ciGgCaCciSgCE86bbalc96faAaCfgARbbaOcd4ciGgCaCciSgCE86bbalc97faAaCfgARbbaOciGgOaOciSgOE86bbalc98faAaOfgORbbaoRbigoco4gAaAciSgAE86bbalc99faOaAfgORbbaocl4ciGgAaAciSgAE86bbalc9:faOaAfgORbbaocd4ciGgAaAciSgAE86bbalcufaOaAfglRbbaociGgoaociSgoE86bbalaofhoxdkalaoRbwaoRbbgOcl4gAaAcsSgAE86bbawcj;cbfaifglcGfaocwfaAfgARbbaOcsGgOaOcsSgOE86bbalcVfaAaOfgORbbaoRbegAcl4gCaCcsSgCE86bbalc7faOaCfgORbbaAcsGgAaAcsSgAE86bbalctfaOaAfgORbbaoRbdgAcl4gCaCcsSgCE86bbalc91faOaCfgORbbaAcsGgAaAcsSgAE86bbalc4faOaAfgORbbaoRbigAcl4gCaCcsSgCE86bbalc93faOaCfgORbbaAcsGgAaAcsSgAE86bbalc94faOaAfgORbbaoRblgAcl4gCaCcsSgCE86bbalc95faOaCfgORbbaAcsGgAaAcsSgAE86bbalc96faOaAfgORbbaoRbvgAcl4gCaCcsSgCE86bbalc97faOaCfgORbbaAcsGgAaAcsSgAE86bbalc98faOaAfgORbbaoRbogAcl4gCaCcsSgCE86bbalc99faOaCfgORbbaAcsGgAaAcsSgAE86bbalc9:faOaAfgORbbaoRbrgocl4gAaAcsSgAE86bbalcufaOaAfglRbbaocsGgoaocsSgoE86bbalaofhoxekalao8Pbb83bbalcwfaocwf8Pbb83bbaoczfhokdnaiam9pmbaHcdfhHaiczfhlarao9RcL0mekkaiam6mvaoTmvdnakTmbawaPfRbbhHawcj;cbfhlashiakhOinaialRbbgzce4cbazceG9R7aHfgH86bbaiadfhialcefhlaOcufgOmbkkascefhsaohzaPcefgPad9hmbxikkcbc99arao9Radcaadca0ESEhoxlkaoaxad2fhCdnakmbadhlinaoTmlarao9Rax6mlaoaxfhoalcufglmbkaChoxekcbhmawcjdfhAinarao9Rax6miawamfRbbhHawcj;cbfhlaAhiakhOinaialRbbgzce4cbazceG9R7aHfgH86bbaiadfhialcefhlaOcufgOmbkaAcefhAaoaxfhoamcefgmad9hmbkaChokabaqad2fawcjdfakad2z1jjjb8Aawawcjdfakcufad2fadz1jjjb8Aakaqfhqaombkc9:hoxekc9:hokavcj;ebf8Kjjjjbaok;cseHu8Jjjjjbc;ae9Rgv8Kjjjjbc9:hodnaeci9UgrcHfal0mbcuhoaiRbbgwc;WeGc;Ge9hmbawcsGgwce0mbavc;abfcFecjez:jjjjb8AavcUf9cu83ibavc8Wf9cu83ibavcyf9cu83ibavcaf9cu83ibavcKf9cu83ibavczf9cu83ibav9cu83iwav9cu83ibaialfc9WfhDaicefgqarfhidnaeTmbcmcsawceSEhkcbhxcbhmcbhPcbhwcbhlindnaiaD9nmbc9:hoxikdndnaqRbbgoc;Ve0mbavc;abfalaocu7gscl4fcsGcitfgzydlhrazydbhzdnaocsGgHak9pmbavawasfcsGcdtfydbaxaHEhoaHThsdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkaxasfhxcdhHavawcdtfaoBdbawasfhwcehsalhOxdkdndnaHcsSmbaHc987aHamffcefhoxekaicefhoai8SbbgHcFeGhsdndnaHcu9mmbaohixekaicvfhiascFbGhscrhHdninao8SbbgOcFbGaHtasVhsaOcu9kmeaocefhoaHcrfgHc8J9hmbxdkkaocefhikasce4cbasceG9R7amfhokdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkcdhHavawcdtfaoBdbcehsawcefhwalhOaohmxekdnaocpe0mbaxcefgHavawaDaocsGfRbbgocl49RcsGcdtfydbaocz6gzEhravawao9RcsGcdtfydbaHazfgAaocsGgHEhoaHThCdndnadcd9hmbabaPcetfgHax87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHaxBdbaHcwfaoBdbaHclfarBdbkcdhsavawcdtfaxBdbavawcefgwcsGcdtfarBdbcihHavc;abfalcitfgOaxBdlaOarBdbavawazfgwcsGcdtfaoBdbalcefcsGhOawaCfhwaxhzaAaCfhxxekaxcbaiRbbgOEgzaoc;:eSgHfhraOcsGhCaOcl4hAdndnaOcs0mbarcefhoxekarhoavawaA9RcsGcdtfydbhrkdndnaCmbaocefhxxekaohxavawaO9RcsGcdtfydbhokdndnaHTmbaicefhHxekaicdfhHai8SbegscFeGhzdnascu9kmbaicofhXazcFbGhzcrhidninaH8SbbgscFbGaitazVhzascu9kmeaHcefhHaicrfgic8J9hmbkaXhHxekaHcefhHkazce4cbazceG9R7amfgmhzkdndnaAcsSmbaHhsxekaHcefhsaH8SbbgicFeGhrdnaicu9kmbaHcvfhXarcFbGhrcrhidninas8SbbgHcFbGaitarVhraHcu9kmeascefhsaicrfgic8J9hmbkaXhsxekascefhskarce4cbarceG9R7amfgmhrkdndnaCcsSmbashixekascefhias8SbbgocFeGhHdnaocu9kmbascvfhXaHcFbGhHcrhodninai8SbbgscFbGaotaHVhHascu9kmeaicefhiaocrfgoc8J9hmbkaXhixekaicefhikaHce4cbaHceG9R7amfgmhokdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkcdhsavawcdtfazBdbavawcefgwcsGcdtfarBdbcihHavc;abfalcitfgXazBdlaXarBdbavawaOcz6aAcsSVfgwcsGcdtfaoBdbawaCTaCcsSVfhwalcefcsGhOkaqcefhqavc;abfaOcitfgOarBdlaOaoBdbavc;abfalasfcsGcitfgraoBdlarazBdbawcsGhwalaHfcsGhlaPcifgPae6mbkkcbc99aiaDSEhokavc;aef8Kjjjjbaok:flevu8Jjjjjbcz9Rhvc9:hodnaecvfal0mbcuhoaiRbbc;:eGc;qe9hmbav9cb83iwaicefhraialfc98fhwdnaeTmbdnadcdSmbcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcdtfaic8Etc8F91aicd47avcwfaiceGcdtVgoydbfglBdbaoalBdbaDcefgDae9hmbxdkkcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcetfaic8Etc8F91aicd47avcwfaiceGcdtVgoydbfgl87ebaoalBdbaDcefgDae9hmbkkcbc99arawSEhokaok:Lvoeue99dud99eud99dndnadcl9hmbaeTmeindndnabcdfgd8Sbb:Yab8Sbbgi:Ygl:l:tabcefgv8Sbbgo:Ygr:l:tgwJbb;:9cawawNJbbbbawawJbbbb9GgDEgq:mgkaqaicb9iEalMgwawNakaqaocb9iEarMgqaqNMM:r:vglNJbbbZJbbb:;aDEMgr:lJbbb9p9DTmbar:Ohixekcjjjj94hikadai86bbdndnaqalNJbbbZJbbb:;aqJbbbb9GEMgq:lJbbb9p9DTmbaq:Ohdxekcjjjj94hdkavad86bbdndnawalNJbbbZJbbb:;awJbbbb9GEMgw:lJbbb9p9DTmbaw:Ohdxekcjjjj94hdkabad86bbabclfhbaecufgembxdkkaeTmbindndnabclfgd8Ueb:Yab8Uebgi:Ygl:l:tabcdfgv8Uebgo:Ygr:l:tgwJb;:FSawawNJbbbbawawJbbbb9GgDEgq:mgkaqaicb9iEalMgwawNakaqaocb9iEarMgqaqNMM:r:vglNJbbbZJbbb:;aDEMgr:lJbbb9p9DTmbar:Ohixekcjjjj94hikadai87ebdndnaqalNJbbbZJbbb:;aqJbbbb9GEMgq:lJbbb9p9DTmbaq:Ohdxekcjjjj94hdkavad87ebdndnawalNJbbbZJbbb:;awJbbbb9GEMgw:lJbbb9p9DTmbaw:Ohdxekcjjjj94hdkabad87ebabcwfhbaecufgembkkk;oiliui99iue99dnaeTmbcbhiabhlindndnJ;Zl81Zalcof8UebgvciV:Y:vgoal8Ueb:YNgrJb;:FSNJbbbZJbbb:;arJbbbb9GEMgw:lJbbb9p9DTmbaw:OhDxekcjjjj94hDkalclf8Uebhqalcdf8UebhkabaiavcefciGfcetfaD87ebdndnaoak:YNgwJb;:FSNJbbbZJbbb:;awJbbbb9GEMgx:lJbbb9p9DTmbax:OhDxekcjjjj94hDkabaiavciGfgkcd7cetfaD87ebdndnaoaq:YNgoJb;:FSNJbbbZJbbb:;aoJbbbb9GEMgx:lJbbb9p9DTmbax:OhDxekcjjjj94hDkabaiavcufciGfcetfaD87ebdndnJbbjZararN:tawawN:taoaoN:tgrJbbbbarJbbbb9GE:rJb;:FSNJbbbZMgr:lJbbb9p9DTmbar:Ohvxekcjjjj94hvkabakcetfav87ebalcwfhlaiclfhiaecufgembkkk9mbdnadcd4ae2gdTmbinababydbgecwtcw91:Yaece91cjjj98Gcjjj;8if::NUdbabclfhbadcufgdmbkkk9teiucbcbydj1jjbgeabcifc98GfgbBdj1jjbdndnabZbcztgd9nmbcuhiabad9RcFFifcz4nbcuSmekaehikaik;LeeeudndnaeabVciGTmbabhixekdndnadcz9pmbabhixekabhiinaiaeydbBdbaiclfaeclfydbBdbaicwfaecwfydbBdbaicxfaecxfydbBdbaeczfheaiczfhiadc9Wfgdcs0mbkkadcl6mbinaiaeydbBdbaeclfheaiclfhiadc98fgdci0mbkkdnadTmbinaiaeRbb86bbaicefhiaecefheadcufgdmbkkabk;aeedudndnabciGTmbabhixekaecFeGc:b:c:ew2hldndnadcz9pmbabhixekabhiinaialBdbaicxfalBdbaicwfalBdbaiclfalBdbaiczfhiadc9Wfgdcs0mbkkadcl6mbinaialBdbaiclfhiadc98fgdci0mbkkdnadTmbinaiae86bbaicefhiadcufgdmbkkabkkkebcjwklzNbb",e="b9H79TebbbeKl9Gbb9Gvuuuuueu9Giuuub9Geueuikqbbebeedddilve9Weeeviebeoweuec:q:6dkr;leDo9TW9T9VV95dbH9F9F939H79T9F9J9H229F9Jt9VV7bb8A9TW79O9V9Wt9F9KW9J9V9KW9wWVtW949c919M9MWVbdY9TW79O9V9Wt9F9KW9J9V9KW69U9KW949c919M9MWVblE9TW79O9V9Wt9F9KW9J9V9KW69U9KW949tWG91W9U9JWbvL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9p9JtboK9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9r919HtbrL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWVT949Wbwl79IV9RbDq:p9sqlbzik9:evu8Jjjjjbcz9Rhbcbheincbhdcbhiinabcwfadfaicjuaead4ceGglE86bbaialfhiadcefgdcw9hmbkaec:q:yjjbfai86bbaecitc:q1jjbfab8Piw83ibaecefgecjd9hmbkk:N8JlHud97euo978Jjjjjbcj;kb9Rgv8Kjjjjbc9:hodnadcefal0mbcuhoaiRbbc:Ge9hmbavaialfgrad9Rad;8qbbcj;abad9UhlaicefhodnaeTmbadTmbalc;WFbGglcjdalcjd6EhwcbhDinawaeaD9RaDawfae6Egqcsfglc9WGgkci2hxakcethmalcl4cifcd4hPabaDad2fhsakc;ab6hzcbhHincbhOaohAdndninaraA9RaP6meavcj;cbfaOak2fhCaAaPfhocbhidnazmbarao9Rc;Gb6mbcbhlinaCalfhidndndndndnaAalco4fRbbgXciGPlbedibkaipxbbbbbbbbbbbbbbbbpklbxikaiaopbblaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklbaoclfaYpQbfaKc:q:yjjbfRbbfhoxdkaiaopbbwaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklbaocwfaYpQbfaKc:q:yjjbfRbbfhoxekaiaopbbbpklbaoczfhokdndndndndnaXcd4ciGPlbedibkaipxbbbbbbbbbbbbbbbbpklzxikaiaopbblaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklzaoclfaYpQbfaKc:q:yjjbfRbbfhoxdkaiaopbbwaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklzaocwfaYpQbfaKc:q:yjjbfRbbfhoxekaiaopbbbpklzaoczfhokdndndndndnaXcl4ciGPlbedibkaipxbbbbbbbbbbbbbbbbpklaxikaiaopbblaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklaaoclfaYpQbfaKc:q:yjjbfRbbfhoxdkaiaopbbwaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklaaocwfaYpQbfaKc:q:yjjbfRbbfhoxekaiaopbbbpklaaoczfhokdndndndndnaXco4Plbedibkaipxbbbbbbbbbbbbbbbbpkl8WxikaiaopbblaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibaXc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spkl8WaoclfaYpQbfaXc:q:yjjbfRbbfhoxdkaiaopbbwaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibaXc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spkl8WaocwfaYpQbfaXc:q:yjjbfRbbfhoxekaiaopbbbpkl8Waoczfhokalc;abfhialcjefak0meaihlarao9Rc;Fb0mbkkdnaiak9pmbaici4hlinarao9RcK6miaCaifhXdndndndndnaAaico4fRbbalcoG4ciGPlbedibkaXpxbbbbbbbbbbbbbbbbpkbbxikaXaopbblaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spkbbaoclfaYpQbfaKc:q:yjjbfRbbfhoxdkaXaopbbwaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spkbbaocwfaYpQbfaKc:q:yjjbfRbbfhoxekaXaopbbbpkbbaoczfhokalcdfhlaiczfgiak6mbkkaoTmeaohAaOcefgOclSmdxbkkc9:hoxlkdnakTmbavcjdfaHfhiavaHfpbdbhYcbhXinaiavcj;cbfaXfglpblbgLcep9TaLpxeeeeeeeeeeeeeeeegQp9op9Hp9rgLalakfpblbg8Acep9Ta8AaQp9op9Hp9rg8ApmbzeHdOiAlCvXoQrLgEalamfpblbg3cep9Ta3aQp9op9Hp9rg3alaxfpblbg5cep9Ta5aQp9op9Hp9rg5pmbzeHdOiAlCvXoQrLg8EpmbezHdiOAlvCXorQLgQaQpmbedibedibedibediaYp9UgYp9AdbbaiadfglaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaladfglaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaladfglaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaladfglaYaEa8EpmwDKYqk8AExm35Ps8E8FgQaQpmbedibedibedibedip9UgYp9AdbbaladfglaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaladfglaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaladfglaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaladfglaYaLa8ApmwKDYq8AkEx3m5P8Es8FgLa3a5pmwKDYq8AkEx3m5P8Es8Fg8ApmbezHdiOAlvCXorQLgQaQpmbedibedibedibedip9UgYp9AdbbaladfglaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaladfglaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaladfglaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaladfglaYaLa8ApmwDKYqk8AExm35Ps8E8FgQaQpmbedibedibedibedip9UgYp9AdbbaladfglaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaladfglaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaladfglaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaladfhiaXczfgXak6mbkkaHclfgHad6mbkasavcjdfaqad2;8qbbavavcjdfaqcufad2fad;8qbbaqaDfgDae6mbkkcbc99arao9Radcaadca0ESEhokavcj;kbf8Kjjjjbaokwbz:bjjjbk::seHu8Jjjjjbc;ae9Rgv8Kjjjjbc9:hodnaeci9UgrcHfal0mbcuhoaiRbbgwc;WeGc;Ge9hmbawcsGgwce0mbavc;abfcFecje;8kbavcUf9cu83ibavc8Wf9cu83ibavcyf9cu83ibavcaf9cu83ibavcKf9cu83ibavczf9cu83ibav9cu83iwav9cu83ibaialfc9WfhDaicefgqarfhidnaeTmbcmcsawceSEhkcbhxcbhmcbhPcbhwcbhlindnaiaD9nmbc9:hoxikdndnaqRbbgoc;Ve0mbavc;abfalaocu7gscl4fcsGcitfgzydlhrazydbhzdnaocsGgHak9pmbavawasfcsGcdtfydbaxaHEhoaHThsdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkaxasfhxcdhHavawcdtfaoBdbawasfhwcehsalhOxdkdndnaHcsSmbaHc987aHamffcefhoxekaicefhoai8SbbgHcFeGhsdndnaHcu9mmbaohixekaicvfhiascFbGhscrhHdninao8SbbgOcFbGaHtasVhsaOcu9kmeaocefhoaHcrfgHc8J9hmbxdkkaocefhikasce4cbasceG9R7amfhokdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkcdhHavawcdtfaoBdbcehsawcefhwalhOaohmxekdnaocpe0mbaxcefgHavawaDaocsGfRbbgocl49RcsGcdtfydbaocz6gzEhravawao9RcsGcdtfydbaHazfgAaocsGgHEhoaHThCdndnadcd9hmbabaPcetfgHax87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHaxBdbaHcwfaoBdbaHclfarBdbkcdhsavawcdtfaxBdbavawcefgwcsGcdtfarBdbcihHavc;abfalcitfgOaxBdlaOarBdbavawazfgwcsGcdtfaoBdbalcefcsGhOawaCfhwaxhzaAaCfhxxekaxcbaiRbbgOEgzaoc;:eSgHfhraOcsGhCaOcl4hAdndnaOcs0mbarcefhoxekarhoavawaA9RcsGcdtfydbhrkdndnaCmbaocefhxxekaohxavawaO9RcsGcdtfydbhokdndnaHTmbaicefhHxekaicdfhHai8SbegscFeGhzdnascu9kmbaicofhXazcFbGhzcrhidninaH8SbbgscFbGaitazVhzascu9kmeaHcefhHaicrfgic8J9hmbkaXhHxekaHcefhHkazce4cbazceG9R7amfgmhzkdndnaAcsSmbaHhsxekaHcefhsaH8SbbgicFeGhrdnaicu9kmbaHcvfhXarcFbGhrcrhidninas8SbbgHcFbGaitarVhraHcu9kmeascefhsaicrfgic8J9hmbkaXhsxekascefhskarce4cbarceG9R7amfgmhrkdndnaCcsSmbashixekascefhias8SbbgocFeGhHdnaocu9kmbascvfhXaHcFbGhHcrhodninai8SbbgscFbGaotaHVhHascu9kmeaicefhiaocrfgoc8J9hmbkaXhixekaicefhikaHce4cbaHceG9R7amfgmhokdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkcdhsavawcdtfazBdbavawcefgwcsGcdtfarBdbcihHavc;abfalcitfgXazBdlaXarBdbavawaOcz6aAcsSVfgwcsGcdtfaoBdbawaCTaCcsSVfhwalcefcsGhOkaqcefhqavc;abfaOcitfgOarBdlaOaoBdbavc;abfalasfcsGcitfgraoBdlarazBdbawcsGhwalaHfcsGhlaPcifgPae6mbkkcbc99aiaDSEhokavc;aef8Kjjjjbaok:flevu8Jjjjjbcz9Rhvc9:hodnaecvfal0mbcuhoaiRbbc;:eGc;qe9hmbav9cb83iwaicefhraialfc98fhwdnaeTmbdnadcdSmbcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcdtfaic8Etc8F91aicd47avcwfaiceGcdtVgoydbfglBdbaoalBdbaDcefgDae9hmbxdkkcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcetfaic8Etc8F91aicd47avcwfaiceGcdtVgoydbfgl87ebaoalBdbaDcefgDae9hmbkkcbc99arawSEhokaok:wPliuo97eue978Jjjjjbca9Rhiaec98Ghldndnadcl9hmbdnalTmbcbhvabhdinadadpbbbgocKp:RecKp:Sep;6egraocwp:RecKp:Sep;6earp;Geaoczp:RecKp:Sep;6egwp;Gep;Kep;LegDpxbbbbbbbbbbbbbbbbp:2egqarpxbbbjbbbjbbbjbbbjgkp9op9rp;Kegrpxbb;:9cbb;:9cbb;:9cbb;:9cararp;MeaDaDp;Meawaqawakp9op9rp;Kegrarp;Mep;Kep;Kep;Jep;Negwp;Mepxbbn0bbn0bbn0bbn0gqp;KepxFbbbFbbbFbbbFbbbp9oaopxbbbFbbbFbbbFbbbFp9op9qarawp;Meaqp;Kecwp:RepxbFbbbFbbbFbbbFbbp9op9qaDawp;Meaqp;Keczp:RepxbbFbbbFbbbFbbbFbp9op9qpkbbadczfhdavclfgval6mbkkalaeSmeaipxbbbbbbbbbbbbbbbbgqpklbaiabalcdtfgdaeciGglcdtgv;8qbbdnalTmbaiaipblbgocKp:RecKp:Sep;6egraocwp:RecKp:Sep;6earp;Geaoczp:RecKp:Sep;6egwp;Gep;Kep;LegDaqp:2egqarpxbbbjbbbjbbbjbbbjgkp9op9rp;Kegrpxbb;:9cbb;:9cbb;:9cbb;:9cararp;MeaDaDp;Meawaqawakp9op9rp;Kegrarp;Mep;Kep;Kep;Jep;Negwp;Mepxbbn0bbn0bbn0bbn0gqp;KepxFbbbFbbbFbbbFbbbp9oaopxbbbFbbbFbbbFbbbFp9op9qarawp;Meaqp;Kecwp:RepxbFbbbFbbbFbbbFbbp9op9qaDawp;Meaqp;Keczp:RepxbbFbbbFbbbFbbbFbp9op9qpklbkadaiav;8qbbskdnalTmbcbhvabhdinadczfgxaxpbbbgopxbbbbbbFFbbbbbbFFgkp9oadpbbbgDaopmbediwDqkzHOAKY8AEgwczp:Reczp:Sep;6egraDaopmlvorxmPsCXQL358E8FpxFubbFubbFubbFubbp9op;6eawczp:Sep;6egwp;Gearp;Gep;Kep;Legopxbbbbbbbbbbbbbbbbp:2egqarpxbbbjbbbjbbbjbbbjgmp9op9rp;Kegrpxb;:FSb;:FSb;:FSb;:FSararp;Meaoaop;Meawaqawamp9op9rp;Kegrarp;Mep;Kep;Kep;Jep;Negwp;Mepxbbn0bbn0bbn0bbn0gqp;KepxFFbbFFbbFFbbFFbbp9oaoawp;Meaqp;Keczp:Rep9qgoarawp;Meaqp;KepxFFbbFFbbFFbbFFbbp9ogrpmwDKYqk8AExm35Ps8E8Fp9qpkbbadaDakp9oaoarpmbezHdiOAlvCXorQLp9qpkbbadcafhdavclfgval6mbkkalaeSmbaiaeciGgvcitgdfcbcaad9R;8kbaiabalcitfglad;8qbbdnavTmbaiaipblzgopxbbbbbbFFbbbbbbFFgkp9oaipblbgDaopmbediwDqkzHOAKY8AEgwczp:Reczp:Sep;6egraDaopmlvorxmPsCXQL358E8FpxFubbFubbFubbFubbp9op;6eawczp:Sep;6egwp;Gearp;Gep;Kep;Legopxbbbbbbbbbbbbbbbbp:2egqarpxbbbjbbbjbbbjbbbjgmp9op9rp;Kegrpxb;:FSb;:FSb;:FSb;:FSararp;Meaoaop;Meawaqawamp9op9rp;Kegrarp;Mep;Kep;Kep;Jep;Negwp;Mepxbbn0bbn0bbn0bbn0gqp;KepxFFbbFFbbFFbbFFbbp9oaoawp;Meaqp;Keczp:Rep9qgoarawp;Meaqp;KepxFFbbFFbbFFbbFFbbp9ogrpmwDKYqk8AExm35Ps8E8Fp9qpklzaiaDakp9oaoarpmbezHdiOAlvCXorQLp9qpklbkalaiad;8qbbkk;4wllue97euv978Jjjjjbc8W9Rhidnaec98GglTmbcbhvabhoinaiaopbbbgraoczfgwpbbbgDpmlvorxmPsCXQL358E8Fgqczp:Segkclp:RepklbaopxbbjZbbjZbbjZbbjZpx;Zl81Z;Zl81Z;Zl81Z;Zl81Zakpxibbbibbbibbbibbbp9qp;6ep;NegkaraDpmbediwDqkzHOAKY8AEgrczp:Reczp:Sep;6ep;MegDaDp;Meakarczp:Sep;6ep;Megxaxp;Meakaqczp:Reczp:Sep;6ep;Megqaqp;Mep;Kep;Kep;Lepxbbbbbbbbbbbbbbbbp:4ep;Jepxb;:FSb;:FSb;:FSb;:FSgkp;Mepxbbn0bbn0bbn0bbn0grp;KepxFFbbFFbbFFbbFFbbgmp9oaxakp;Mearp;Keczp:Rep9qgxaDakp;Mearp;Keamp9oaqakp;Mearp;Keczp:Rep9qgkpmbezHdiOAlvCXorQLgrp5baipblbpEb:T:j83ibaocwfarp5eaipblbpEe:T:j83ibawaxakpmwDKYqk8AExm35Ps8E8Fgkp5baipblbpEd:T:j83ibaocKfakp5eaipblbpEi:T:j83ibaocafhoavclfgval6mbkkdnalaeSmbaiaeciGgvcitgofcbcaao9R;8kbaiabalcitfgwao;8qbbdnavTmbaiaipblbgraipblzgDpmlvorxmPsCXQL358E8Fgqczp:Segkclp:RepklaaipxbbjZbbjZbbjZbbjZpx;Zl81Z;Zl81Z;Zl81Z;Zl81Zakpxibbbibbbibbbibbbp9qp;6ep;NegkaraDpmbediwDqkzHOAKY8AEgrczp:Reczp:Sep;6ep;MegDaDp;Meakarczp:Sep;6ep;Megxaxp;Meakaqczp:Reczp:Sep;6ep;Megqaqp;Mep;Kep;Kep;Lepxbbbbbbbbbbbbbbbbp:4ep;Jepxb;:FSb;:FSb;:FSb;:FSgkp;Mepxbbn0bbn0bbn0bbn0grp;KepxFFbbFFbbFFbbFFbbgmp9oaxakp;Mearp;Keczp:Rep9qgxaDakp;Mearp;Keamp9oaqakp;Mearp;Keczp:Rep9qgkpmbezHdiOAlvCXorQLgrp5baipblapEb:T:j83ibaiarp5eaipblapEe:T:j83iwaiaxakpmwDKYqk8AExm35Ps8E8Fgkp5baipblapEd:T:j83izaiakp5eaipblapEi:T:j83iKkawaiao;8qbbkk:Pddiue978Jjjjjbc;ab9Rhidnadcd4ae2glc98GgvTmbcbheabhdinadadpbbbgocwp:Recwp:Sep;6eaocep:SepxbbjFbbjFbbjFbbjFp9opxbbjZbbjZbbjZbbjZp:Uep;Mepkbbadczfhdaeclfgeav6mbkkdnavalSmbaialciGgecdtgdVcbc;abad9R;8kbaiabavcdtfgvad;8qbbdnaeTmbaiaipblbgocwp:Recwp:Sep;6eaocep:SepxbbjFbbjFbbjFbbjFp9opxbbjZbbjZbbjZbbjZp:Uep;Mepklbkavaiad;8qbbkk9teiucbcbydj1jjbgeabcifc98GfgbBdj1jjbdndnabZbcztgd9nmbcuhiabad9RcFFifcz4nbcuSmekaehikaikkkebcjwklz:Dbb",t=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,3,2,0,0,5,3,1,0,1,12,1,0,10,22,2,12,0,65,0,65,0,65,0,252,10,0,0,11,7,0,65,0,253,15,26,11]),n=new Uint8Array([32,0,65,2,1,106,34,33,3,128,11,4,13,64,6,253,10,7,15,116,127,5,8,12,40,16,19,54,20,9,27,255,113,17,42,67,24,23,146,148,18,14,22,45,70,69,56,114,101,21,25,63,75,136,108,28,118,29,73,115]);if(typeof WebAssembly!="object")return{supported:!1};var i=WebAssembly.validate(t)?o(e):o(s),r,a=WebAssembly.instantiate(i,{}).then(function(A){r=A.instance,r.exports.__wasm_call_ctors()});function o(A){for(var y=new Uint8Array(A.length),x=0;x<A.length;++x){var b=A.charCodeAt(x);y[x]=b>96?b-97:b>64?b-39:b+4}for(var _=0,x=0;x<A.length;++x)y[_++]=y[x]<60?n[y[x]]:(y[x]-60)*64+y[++x];return y.buffer.slice(0,_)}function c(A,y,x,b,_,C,v){var I=A.exports.sbrk,E=b+3&-4,w=I(E*_),T=I(C.length),R=new Uint8Array(A.exports.memory.buffer);R.set(C,T);var U=y(w,b,_,T,C.length);if(U==0&&v&&v(w,E,_),x.set(R.subarray(w,w+b*_)),I(w-I(0)),U!=0)throw new Error("Malformed buffer data: "+U)}var l={NONE:"",OCTAHEDRAL:"meshopt_decodeFilterOct",QUATERNION:"meshopt_decodeFilterQuat",EXPONENTIAL:"meshopt_decodeFilterExp"},h={ATTRIBUTES:"meshopt_decodeVertexBuffer",TRIANGLES:"meshopt_decodeIndexBuffer",INDICES:"meshopt_decodeIndexSequence"},u=[],d=0;function f(A){var y={object:new Worker(A),pending:0,requests:{}};return y.object.onmessage=function(x){var b=x.data;y.pending-=b.count,y.requests[b.id][b.action](b.value),delete y.requests[b.id]},y}function p(A){for(var y="self.ready = WebAssembly.instantiate(new Uint8Array(["+new Uint8Array(i)+"]), {}).then(function(result) { result.instance.exports.__wasm_call_ctors(); return result.instance; });self.onmessage = "+m.name+";"+c.toString()+m.toString(),x=new Blob([y],{type:"text/javascript"}),b=URL.createObjectURL(x),_=u.length;_<A;++_)u[_]=f(b);for(var _=A;_<u.length;++_)u[_].object.postMessage({});u.length=A,URL.revokeObjectURL(b)}function g(A,y,x,b,_){for(var C=u[0],v=1;v<u.length;++v)u[v].pending<C.pending&&(C=u[v]);return new Promise(function(I,E){var w=new Uint8Array(x),T=++d;C.pending+=A,C.requests[T]={resolve:I,reject:E},C.object.postMessage({id:T,count:A,size:y,source:w,mode:b,filter:_},[w.buffer])})}function m(A){var y=A.data;if(!y.id)return self.close();self.ready.then(function(x){try{var b=new Uint8Array(y.count*y.size);c(x,x.exports[y.mode],b,y.count,y.size,y.source,x.exports[y.filter]),self.postMessage({id:y.id,count:y.count,action:"resolve",value:b},[b.buffer])}catch(_){self.postMessage({id:y.id,count:y.count,action:"reject",value:_})}})}return{ready:a,supported:!0,useWorkers:function(A){p(A)},decodeVertexBuffer:function(A,y,x,b,_){c(r,r.exports.meshopt_decodeVertexBuffer,A,y,x,b,r.exports[l[_]])},decodeIndexBuffer:function(A,y,x,b){c(r,r.exports.meshopt_decodeIndexBuffer,A,y,x,b)},decodeIndexSequence:function(A,y,x,b){c(r,r.exports.meshopt_decodeIndexSequence,A,y,x,b)},decodeGltfBuffer:function(A,y,x,b,_,C){c(r,r.exports[h[_]],A,y,x,b,r.exports[l[C]])},decodeGltfBufferAsync:function(A,y,x,b,_){return u.length>0?g(A,y,x,h[b],l[_]):a.then(function(){var C=new Uint8Array(A*y);return c(r,r.exports[h[b]],C,A,y,x,r.exports[l[_]]),C})}}}();const au="https://unpkg.com/three@0.180.0/examples/jsm/libs/basis/",rI="basis/",aI=/^[a-z]+:\/\//i,oI=/^\/\//;function Rs(s){return typeof s!="string"||s.length===0||s.endsWith("/")?s:`${s}/`}function cI(){if(typeof document>"u"||!document.baseURI)return"/";try{const s=new URL(document.baseURI);let{pathname:e}=s;if(!e)return"/";if(!e.endsWith("/")){const t=e.lastIndexOf("/");e=t>=0?e.slice(0,t+1):"/"}return e||"/"}catch(s){return console.warn("Unable to parse document.baseURI for BASE_URL fallback",s),"/"}}function lI(){const s=typeof import.meta<"u"?import.meta:null,e=s&&s.env?s.env:null,t=e&&typeof e.BASE_URL=="string"?e.BASE_URL:null;return t&&t.length>0?Rs(t):Rs(cI())}function hI(){var s;return typeof window<"u"&&((s=window.location)!=null&&s.protocol)?window.location.protocol:"https:"}function uI(s,e){if(typeof s!="string")return null;const t=s.trim();if(t.length===0)return null;if(oI.test(t)){const i=hI();return Rs(`${i}${t}`)}const n=`https://example.com${e}`;try{const i=new URL(t,n);return aI.test(t)||i.origin!=="https://example.com"?Rs(i.href):Rs(i.pathname)}catch{return Rs(t)}}function Eg(){const s=lI(),e=[],t=typeof import.meta<"u"?import.meta:null,n=t&&t.env?t.env:null;n&&typeof n.VITE_BASIS_TRANSCODER_PATH=="string"&&e.push(n.VITE_BASIS_TRANSCODER_PATH),typeof window<"u"&&typeof window.__BASIS_TRANSCODER_PATH__=="string"&&e.push(window.__BASIS_TRANSCODER_PATH__),e.push(rI),e.push(au);for(const i of e){const r=uI(i,s);if(r)return r}return au}function dI(s){const e=new Xn,t=Eg();if(e.setTranscoderPath(t),s)try{e.detectSupport(s)}catch(n){console.warn("KTX2Loader.detectSupport failed; continuing without GPU compression",n)}return e}const Ph=new WeakMap;class fI extends fn{constructor(e){super(e),this.decoderPath="",this.decoderConfig={},this.decoderBinary=null,this.decoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.defaultAttributeIDs={position:"POSITION",normal:"NORMAL",color:"COLOR",uv:"TEX_COORD"},this.defaultAttributeTypes={position:"Float32Array",normal:"Float32Array",color:"Float32Array",uv:"Float32Array"}}setDecoderPath(e){return this.decoderPath=e,this}setDecoderConfig(e){return this.decoderConfig=e,this}setWorkerLimit(e){return this.workerLimit=e,this}load(e,t,n,i){const r=new xn(this.manager);r.setPath(this.path),r.setResponseType("arraybuffer"),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,a=>{this.parse(a,t,i)},n,i)}parse(e,t,n=()=>{}){this.decodeDracoFile(e,t,null,null,St,n).catch(n)}decodeDracoFile(e,t,n,i,r=Qt,a=()=>{}){const o={attributeIDs:n||this.defaultAttributeIDs,attributeTypes:i||this.defaultAttributeTypes,useUniqueIDs:!!n,vertexColorSpace:r};return this.decodeGeometry(e,o).then(t).catch(a)}decodeGeometry(e,t){const n=JSON.stringify(t);if(Ph.has(e)){const c=Ph.get(e);if(c.key===n)return c.promise;if(e.byteLength===0)throw new Error("THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.")}let i;const r=this.workerNextTaskID++,a=e.byteLength,o=this._getWorker(r,a).then(c=>(i=c,new Promise((l,h)=>{i._callbacks[r]={resolve:l,reject:h},i.postMessage({type:"decode",id:r,taskConfig:t,buffer:e},[e])}))).then(c=>this._createGeometry(c.geometry));return o.catch(()=>!0).then(()=>{i&&r&&this._releaseTask(i,r)}),Ph.set(e,{key:n,promise:o}),o}_createGeometry(e){const t=new Je;e.index&&t.setIndex(new ot(e.index.array,1));for(let n=0;n<e.attributes.length;n++){const i=e.attributes[n],r=i.name,a=i.array,o=i.itemSize,c=new ot(a,o);r==="color"&&(this._assignVertexColorSpace(c,i.vertexColorSpace),c.normalized=!(a instanceof Float32Array)),t.setAttribute(r,c)}return t}_assignVertexColorSpace(e,t){if(t!==St)return;const n=new ue;for(let i=0,r=e.count;i<r;i++)n.fromBufferAttribute(e,i),dt.colorSpaceToWorking(n,St),e.setXYZ(i,n.r,n.g,n.b)}_loadLibrary(e,t){const n=new xn(this.manager);return n.setPath(this.decoderPath),n.setResponseType(t),n.setWithCredentials(this.withCredentials),new Promise((i,r)=>{n.load(e,i,void 0,r)})}preload(){return this._initDecoder(),this}_initDecoder(){if(this.decoderPending)return this.decoderPending;const e=typeof WebAssembly!="object"||this.decoderConfig.type==="js",t=[];return e?t.push(this._loadLibrary("draco_decoder.js","text")):(t.push(this._loadLibrary("draco_wasm_wrapper.js","text")),t.push(this._loadLibrary("draco_decoder.wasm","arraybuffer"))),this.decoderPending=Promise.all(t).then(n=>{const i=n[0];e||(this.decoderConfig.wasmBinary=n[1]);const r=pI.toString(),a=["/* draco decoder */",i,"","/* worker */",r.substring(r.indexOf("{")+1,r.lastIndexOf("}"))].join(`
`);this.workerSourceURL=URL.createObjectURL(new Blob([a]))}),this.decoderPending}_getWorker(e,t){return this._initDecoder().then(()=>{if(this.workerPool.length<this.workerLimit){const i=new Worker(this.workerSourceURL);i._callbacks={},i._taskCosts={},i._taskLoad=0,i.postMessage({type:"init",decoderConfig:this.decoderConfig}),i.onmessage=function(r){const a=r.data;switch(a.type){case"decode":i._callbacks[a.id].resolve(a);break;case"error":i._callbacks[a.id].reject(a);break;default:console.error('THREE.DRACOLoader: Unexpected message, "'+a.type+'"')}},this.workerPool.push(i)}else this.workerPool.sort(function(i,r){return i._taskLoad>r._taskLoad?-1:1});const n=this.workerPool[this.workerPool.length-1];return n._taskCosts[e]=t,n._taskLoad+=t,n})}_releaseTask(e,t){e._taskLoad-=e._taskCosts[t],delete e._callbacks[t],delete e._taskCosts[t]}debug(){console.log("Task load: ",this.workerPool.map(e=>e._taskLoad))}dispose(){for(let e=0;e<this.workerPool.length;++e)this.workerPool[e].terminate();return this.workerPool.length=0,this.workerSourceURL!==""&&URL.revokeObjectURL(this.workerSourceURL),this}}function pI(){let s,e;onmessage=function(a){const o=a.data;switch(o.type){case"init":s=o.decoderConfig,e=new Promise(function(h){s.onModuleLoaded=function(u){h({draco:u})},DracoDecoderModule(s)});break;case"decode":const c=o.buffer,l=o.taskConfig;e.then(h=>{const u=h.draco,d=new u.Decoder;try{const f=t(u,d,new Int8Array(c),l),p=f.attributes.map(g=>g.array.buffer);f.index&&p.push(f.index.array.buffer),self.postMessage({type:"decode",id:o.id,geometry:f},p)}catch(f){console.error(f),self.postMessage({type:"error",id:o.id,error:f.message})}finally{u.destroy(d)}});break}};function t(a,o,c,l){const h=l.attributeIDs,u=l.attributeTypes;let d,f;const p=o.GetEncodedGeometryType(c);if(p===a.TRIANGULAR_MESH)d=new a.Mesh,f=o.DecodeArrayToMesh(c,c.byteLength,d);else if(p===a.POINT_CLOUD)d=new a.PointCloud,f=o.DecodeArrayToPointCloud(c,c.byteLength,d);else throw new Error("THREE.DRACOLoader: Unexpected geometry type.");if(!f.ok()||d.ptr===0)throw new Error("THREE.DRACOLoader: Decoding failed: "+f.error_msg());const g={index:null,attributes:[]};for(const m in h){const A=self[u[m]];let y,x;if(l.useUniqueIDs)x=h[m],y=o.GetAttributeByUniqueId(d,x);else{if(x=o.GetAttributeId(d,a[h[m]]),x===-1)continue;y=o.GetAttribute(d,x)}const b=i(a,o,d,m,A,y);m==="color"&&(b.vertexColorSpace=l.vertexColorSpace),g.attributes.push(b)}return p===a.TRIANGULAR_MESH&&(g.index=n(a,o,d)),a.destroy(d),g}function n(a,o,c){const h=c.num_faces()*3,u=h*4,d=a._malloc(u);o.GetTrianglesUInt32Array(c,u,d);const f=new Uint32Array(a.HEAPF32.buffer,d,h).slice();return a._free(d),{array:f,itemSize:1}}function i(a,o,c,l,h,u){const d=u.num_components(),p=c.num_points()*d,g=p*h.BYTES_PER_ELEMENT,m=r(a,h),A=a._malloc(g);o.GetAttributeDataArrayForAllPoints(c,u,m,g,A);const y=new h(a.HEAPF32.buffer,A,p).slice();return a._free(A),{name:l,array:y,itemSize:d}}function r(a,o){switch(o){case Float32Array:return a.DT_FLOAT32;case Int8Array:return a.DT_INT8;case Int16Array:return a.DT_INT16;case Int32Array:return a.DT_INT32;case Uint8Array:return a.DT_UINT8;case Uint16Array:return a.DT_UINT16;case Uint32Array:return a.DT_UINT32}}}const up="https://www.gstatic.com/draco/versioned/decoders/1.5.7/",dp="draco/",AI=/^[a-zA-Z][a-zA-Z\d+.-]*:/,mI=/^\/\//;function vr(s){return typeof s!="string"||s.length===0||s.endsWith("/")?s:`${s}/`}function gI(s,e){var i;if(typeof s!="string")return null;const t=s.trim();if(!t)return null;if(AI.test(t)||mI.test(t))try{const r=typeof window<"u"&&((i=window.location)!=null&&i.origin)?window.location.origin:"https://example.com",a=new URL(t,r);return vr(a.href)}catch{return vr(t)}if(t.startsWith("./")||t.startsWith("../")||t.startsWith("/"))return vr(t);const n=vr(e||ta());return vr(`${n}${t}`)}function yI(){const s=ta(),e=[],t=typeof import.meta<"u"?import.meta:null,n=t==null?void 0:t.env;if(n&&typeof n.VITE_DRACO_DECODER_PATH=="string"&&e.push(n.VITE_DRACO_DECODER_PATH),typeof window<"u"){const i=window.__DRACO_DECODER_PATH__;typeof i=="string"&&e.push(i)}e.push(`${s}${dp}`),e.push(dp),e.push(up);for(const i of e){const r=gI(i,s);if(r)return r}return up}let ma=null,fp=null;function bI(){ma||(ma=new fI);const s=yI();if(s&&s!==fp){ma.setDecoderPath(s);try{ma.preload()}catch(e){console.warn("DRACOLoader.preload failed; continuing with lazy decoding",e)}fp=s}return ma}function xI(s){return!s||s.byteLength<16?!0:new Uint8Array(s.slice(0,16))[0]===60}function _I(s){const e=new $u;if(s)try{const t=dI(s);t&&e.setKTX2Loader(t)}catch(t){console.warn("[GLB Loader] Unable to configure KTX2 loader",t)}try{const t=bI();t&&e.setDRACOLoader(t)}catch(t){console.warn("[GLB Loader] Unable to configure DRACO loader",t)}return e.setMeshoptDecoder(_g),e}async function td({renderer:s,urls:e,targetHeight:t=null,onLoaded:n=null}){if(!Array.isArray(e)||e.length===0)throw new Error("loadGLBWithFallbacks requires at least one URL");const i=_I(s);let r=null;for(const a of e){if(typeof a!="string"||a.trim().length===0)continue;const o=a.trim();try{const c=await fetch(o,{cache:"no-cache"});if(!c.ok)throw new Error(`${c.status} ${c.statusText} at ${o}`);const l=await c.arrayBuffer();if(xI(l))throw new Error(`Downloaded HTML instead of GLB: ${o}`);const h=i.path&&i.path.length>0?i.path:ki.extractUrlBase(o),u=await i.parseAsync(l,h),d=u.scene||(Array.isArray(u.scenes)?u.scenes[0]:null);if(!d)throw new Error(`No scene in GLB: ${o}`);if(t&&t>0){d.updateMatrixWorld(!0);const f=new $t().setFromObject(d),p=new S;f.getSize(p);const g=p.y||1,m=g!==0?t/g:1;Number.isFinite(m)&&m>0&&d.scale.multiplyScalar(m)}if(typeof n=="function")try{n({url:o,gltf:u,root:d})}catch(f){console.warn("[GLB Fallback] onLoaded hook failed",f)}return{url:o,gltf:u,root:d}}catch(c){r=c instanceof Error?c:new Error(String(c)),console.warn(`[GLB Fallback] Failed ${o}:`,r.message||r)}}throw r||new Error("All GLB fallbacks failed.")}function EI(s){const{map:e,normalMap:t,roughnessMap:n,aoMap:i}=Bg();return new s.MeshPhysicalMaterial({map:e,normalMap:t,roughnessMap:n,aoMap:i,metalness:.05,roughness:.6,clearcoat:.3,clearcoatRoughness:.5,sheen:0,envMapIntensity:.9})}function vI(s){return new s.MeshPhysicalMaterial({color:9268835,metalness:.85,roughness:.35,envMapIntensity:1,clearcoat:.05,clearcoatRoughness:.6})}const wI=(()=>{var e,t;const s=((t=(e=import.meta)==null?void 0:e.env)==null?void 0:t.BASE_URL)??"/";return s.endsWith("/")?s:`${s}/`})(),lc=new $u;let wr=null,Fh=!1,hc=!1,pp=null,Ap=!1;function CI(s){if(!s||typeof s.getContext!="function")return;const e=Eg();wr||(wr=new Xn),e&&e!==pp&&(wr.setTranscoderPath(e),pp=e,!Ap&&e===au&&(console.info("KTX2 transcoder path not configured; falling back to the three.js CDN. Add public/basis/ or set VITE_BASIS_TRANSCODER_PATH to avoid extra requests."),Ap=!0));try{wr.detectSupport(s);const t=wr.workerConfig||{};Fh=Object.values(t).some(Boolean),Fh?(lc.setKTX2Loader(wr),hc=!1):(hc||(console.warn("KTX2 is not supported on this GPU/driver combo. Falling back to standard textures."),hc=!0),lc.setKTX2Loader(null)),lc.setMeshoptDecoder(_g)}catch(t){Fh=!1,hc=!0,console.warn("KTX2 not supported in this browser. Falling back to standard textures.",t),lc.setKTX2Loader(null)}}const Sa=new Set;function SI(s,e=null){var n;if(e)return e;let t=s||null;for(;t;){const i=(n=t==null?void 0:t.userData)==null?void 0:n.renderer;if(i)return i;t=t.parent||null}return null}function mp(s,e){const{position:t,rotation:n,scale:i}=e;if(t&&s.position.set(t.x??t[0]??0,t.y??t[1]??0,t.z??t[2]??0),n&&s.rotation.set(n.x??n[0]??0,n.y??n[1]??0,n.z??n[2]??0),i!==void 0)if(typeof i=="number")s.scale.set(i,i,i);else{const r=i.x??i[0]??1,a=i.y??i[1]??r,o=i.z??i[2]??r;s.scale.set(r,a,o)}}function gp(s,e,t=.05){var d;if(!s||!e)return null;const n=[],i=s.userData||{};n.push(i.getHeightAt,i.terrainHeightSampler,i.heightSampler,i.terrainSampler);const r=i.terrain;(d=r==null?void 0:r.userData)!=null&&d.getHeightAt&&n.push(r.userData.getHeightAt);let a=null;for(const f of n)if(typeof f=="function"){a=f;break}if(!a||!e.position)return null;const{x:o,z:c}=e.position;if(!Number.isFinite(o)||!Number.isFinite(c))return null;const l=a(o,c);if(!Number.isFinite(l))return null;const h=Number.isFinite(e.position.y)?e.position.y:0,u=Math.max(h,l+t);return Number.isFinite(u)?(e.position.y=u,u):null}function vg(s,e){var t;s&&(e&&e.remove(s),(t=s.traverse)==null||t.call(s,n=>{var i,r,a,o,c;if(n.isMesh)if((r=(i=n.geometry)==null?void 0:i.dispose)==null||r.call(i),Array.isArray(n.material))for(const l of n.material)(a=l==null?void 0:l.dispose)==null||a.call(l);else(c=(o=n.material)==null?void 0:o.dispose)==null||c.call(o)}))}function ou(s){var n,i,r,a;const{placeholder:e,scene:t}=s;e&&(t&&t.remove(e),(i=(n=e.geometry)==null?void 0:n.dispose)==null||i.call(n),(a=(r=e.material)==null?void 0:r.dispose)==null||a.call(r),s.placeholder=null)}const II={marble:EI,bronze:vI},MI=["skinning","morphTargets","morphNormals","transparent"];function yp(s,e){return!s||!e||MI.forEach(t=>{Object.prototype.hasOwnProperty.call(s,t)&&(e[t]=s[t])}),e}async function bp(s,e,t={}){var c,l,h,u,d,f;const n=`loadLandmark:${e}`;typeof(console==null?void 0:console.time)=="function"&&console.time(n);const i=new Ut(.8,.8,.8),r=new rt({color:4473924,emissive:new ue(6711039),transparent:!0,opacity:.6}),a=new Be(i,r);a.name="LandmarkPlaceholder",mp(a,{position:t.position}),gp(s,a,.05),s.add(a);const o={scene:s,url:e,placeholder:a,object:null};Sa.add(o);try{const p=typeof e=="string"?e.trim():"";if(!p)throw new Error("loadLandmark requires a non-empty URL");const g=/^(?:[a-zA-Z][a-zA-Z\d+.-]*:)?\/\//.test(p)||/^[a-zA-Z][a-zA-Z\d+.-]*:/.test(p),m=g?p:p.replace(/^\/+/,""),A=(g?[p]:[`${wI}${m}`,`/${m}`,p]).filter((v,I,E)=>v?E.indexOf(v)===I:!1),{materialPreset:y}=t,{root:x}=await td({renderer:SI(s,t==null?void 0:t.renderer),urls:A,targetHeight:(t==null?void 0:t.targetHeight)||null});let b=x;if((c=x.traverse)==null||c.call(x,v=>{v!=null&&v.isMesh&&(v.castShadow=!0,v.receiveShadow=!0,v.frustumCulled=!1)}),(l=x.children)!=null&&l.length){const v=x.children.filter(I=>{var E;return(E=I==null?void 0:I.name)==null?void 0:E.startsWith("LOD")}).map(I=>({object3D:I,level:parseInt(I.name.slice(3))||0}));if(v.length){const I=new wu,E=x.name||"Landmark";I.name=`${E}_LOD`,I.position.copy(x.position),I.rotation.copy(x.rotation),I.scale.copy(x.scale),v.sort((w,T)=>w.level-T.level).forEach(({object3D:w,level:T})=>{I.addLevel(w,T*50)}),I.userData={...x.userData||{}},b=I}}if(mp(b,t),ou(o),o.disposed)return vg(b),Sa.delete(o),null;const _=Number.isFinite((h=b==null?void 0:b.position)==null?void 0:h.y)?b.position.y:0,C=gp(s,b,.05);if(Number.isFinite(C)&&(b.position.y=Math.max(_,C)),s.add(b),o.object=b,b.userData=b.userData||{},b.userData.interactable=!0,b.userData.onUse=()=>{const v=b.name||"a landmark";console.log(`You interacted with ${v}`)},(u=b.traverse)==null||u.call(b,v=>{!(v!=null&&v.isMesh)||typeof v.name!="string"||!(v.name==="Door"||v.name.startsWith("INT_"))||(v.userData=v.userData||{},v.userData.interactable=!0,v.userData.onUse=()=>{v.userData.isOpen=!v.userData.isOpen;const E=v.name==="Door";v.rotation.y=v.userData.isOpen?Math.PI/2:0,console.log(E?v.userData.isOpen?"Door opened!":"Door closed!":`You interacted with ${v.name}`)})}),y){const v=II[y],I=typeof v=="function"?v(Ow):null;I&&((d=b.traverse)==null||d.call(b,E=>{var w;if(E!=null&&E.isMesh)if(Array.isArray(E.material)){const T=E.material.map(R=>{var O;const U=I.clone();return yp(R,U),(O=R==null?void 0:R.dispose)==null||O.call(R),U});E.material=T}else if(E.material){const T=E.material,R=I.clone();yp(T,R),(w=T.dispose)==null||w.call(T),E.material=R}else E.material=I.clone()}),(f=I.dispose)==null||f.call(I))}return b}catch(p){throw ou(o),Sa.delete(o),p}finally{typeof(console==null?void 0:console.timeEnd)=="function"&&console.timeEnd(n)}}function TI(){for(const s of Sa)s.disposed=!0,vg(s.object,s.scene),ou(s);Sa.clear()}function xp(s,e,t){const n=new ni(s,e);n.rotateX(-Math.PI/2);const i=new rt({color:t,roughness:.85,metalness:.05}),r=new Be(n,i);return r.receiveShadow=!0,r}function BI(s,e,t){const n=new ni(s,e);n.rotateX(-Math.PI/2);const i=new rt({color:t,roughness:1,metalness:0}),r=new Be(n,i);return r.receiveShadow=!0,r}function RI(s){const{footprint:e=new ie(10,14),height:t=6,color:n=15194049,accentColor:i=14205861,roofColor:r=12098431}=s??{},a=new Lt;a.name="CivicBuilding";const o=new Be(new Ut(e.x,t*.6,e.y),new rt({color:n,roughness:.7,metalness:.05}));o.castShadow=!0,o.receiveShadow=!0,o.position.y=t*.3,o.userData.noCollision=!1,a.add(o);const c=new rt({color:i,roughness:.6,metalness:.05}),l=new Gt(.35,.35,t*.6,16),h=e.x*.5-.8,u=e.y*.5-.8,d=4;for(let g=0;g<d;g++){const m=g/(d-1),A=new Be(l,c);A.position.set(we.lerp(-h,h,m),t*.3,u),A.castShadow=!0,A.userData.noCollision=!1,a.add(A);const y=A.clone();y.position.z=-u,a.add(y)}const f=new Be(new Hi(e.x*.6,t*.4,4),new rt({color:r,roughness:.55}));f.rotation.y=Math.PI*.25,f.position.y=t*.8,f.castShadow=!0,f.userData.noCollision=!1,a.add(f);const p=new Be(new Gt(e.x*.55,e.x*.55,t*.25,6),new rt({color:r,roughness:.6}));return p.rotation.x=Math.PI/2,p.position.y=t*.95,p.castShadow=!0,p.userData.noCollision=!1,a.add(p),a}function DI(){const s=new Lt;s.name="CityFountain";const e=new Be(new Gt(5,5.6,.8,40),new rt({color:13621468,roughness:.5}));e.receiveShadow=!0,e.castShadow=!0,e.position.y=.4,e.userData.noCollision=!1,s.add(e);const t=new Be(new Gt(4.2,4.2,.2,32),new rt({color:5227511,transparent:!0,opacity:.75,roughness:.1,metalness:.2}));t.position.y=.6,t.receiveShadow=!0,t.userData.noCollision=!0,s.add(t);const n=new Be(new Hi(1.1,5.2,4),new rt({color:14737632,roughness:.45}));return n.castShadow=!0,n.position.y=3.6,n.userData.noCollision=!1,s.add(n),s}function _p(){const s=new Lt;s.name="CityLampPost";const e=new Be(new Gt(.12,.12,3.4,12),new rt({color:3815994,roughness:.7}));e.position.y=1.7,e.userData.noCollision=!1,e.castShadow=!0,s.add(e);const t=new Be(new Hi(.45,.9,12),new rt({color:16498733,emissive:new ue(16088855),emissiveIntensity:.6}));t.position.y=3.5,t.userData.noCollision=!1,t.castShadow=!0,s.add(t);const n=new Oi(16774581,.8,16,2);return n.position.y=3.5,s.add(n),s}function LI(s,e={}){var I,E;const t=new Lt;t.name="CivicDistrict",s.add(t);const n=e.plazaLength??80,i=e.promenadeWidth??14,r=e.greensWidth??10,a=e.center??Ln,o=e.heightSampler??e.terrainSampler??((E=(I=e.terrain)==null?void 0:I.userData)==null?void 0:E.getHeightAt),c=e.surfaceOffset??.05,l=a instanceof S?a.clone():new S((a==null?void 0:a.x)??0,(a==null?void 0:a.y)??0,(a==null?void 0:a.z)??0);let h=Number.isFinite(l.y)?l.y:0;if(typeof o=="function"){const w=o(l.x,l.z);Number.isFinite(w)&&(h=w)}t.position.set(l.x,h,l.z);const u=(w=0,T=0,R=0)=>{if(typeof o=="function"){const U=l.x+w,O=l.z+T,N=o(U,O);if(Number.isFinite(N))return N-h+c}return R+c},d=xp(i,n,12829371);d.receiveShadow=!0,d.position.y=u(0,0,d.position.y??0),t.add(d);const f=BI(r,n,7047791);f.position.x=-(i+r)/2,f.position.y=u(f.position.x,0,f.position.y??0),t.add(f);const p=f.clone();p.position.x=(i+r)/2,p.position.y=u(p.position.x,0,0),t.add(p);const g=xp(i+r*2,18,12433580);g.position.z=n/2+9,g.position.y=u(0,g.position.z,g.position.y??0),t.add(g);const m=g.clone();m.position.z=-(n/2+9),m.position.y=u(0,m.position.z,0),t.add(m);const A=DI();A.position.set(0,u(0,0,A.position.y??0),0),t.add(A);const y=[{position:new S(-18,0,-24),rotation:Math.PI/2},{position:new S(-18,0,-8),rotation:Math.PI/2},{position:new S(-18,0,8),rotation:Math.PI/2},{position:new S(-18,0,24),rotation:Math.PI/2},{position:new S(18,0,-24),rotation:-Math.PI/2},{position:new S(18,0,-8),rotation:-Math.PI/2},{position:new S(18,0,8),rotation:-Math.PI/2},{position:new S(18,0,24),rotation:-Math.PI/2}],x=[{color:15260871,accent:14140325,roof:12098431},{color:14931402,accent:13810592,roof:11107408},{color:15130576,accent:14468259,roof:11899501}];for(let w=0;w<y.length;w++){const T=y[w],R=x[w%x.length],U=RI({footprint:new ie(10,14),height:6.5,color:R.color,accentColor:R.accent,roofColor:R.roof}),O=u(T.position.x,T.position.z,T.position.y??0);U.position.set(T.position.x,O,T.position.z),U.rotation.y=T.rotation,t.add(U)}const b=12,_=Math.floor(n/b);for(let w=0;w<=_;w++){const T=-n/2+w*b,R=_p(),U=-i/2+1.2;R.position.set(U,u(U,T,R.position.y??0),T),t.add(R);const O=_p(),N=i/2-1.2,k=T+b/2;O.position.set(N,u(N,k,O.position.y??0),k),t.add(O)}const C=[new S(-i*.35,u(-i*.35,-n/2-6,0),-n/2-6),new S(-i*.35,u(-i*.35,n/2+6,0),n/2+6),new S(i*.35,u(i*.35,n/2+6,0),n/2+6),new S(i*.35,u(i*.35,-n/2-6,0),-n/2-6)],v=new ro(C,!0,"catmullrom",.1);return{group:t,walkingLoop:v,plazaLength:n,promenadeWidth:i}}const Ep=new Set(["KeyW","KeyA","KeyS","KeyD","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","ShiftLeft","ShiftRight","Space","ControlLeft","ControlRight","KeyF"]);class PI{constructor(e=null){this.keys=new Set,this.canvas=e,this.flyToggleQueued=!1,this.keyDownHandler=t=>{this.keys.add(t.code),t.code==="KeyF"&&!t.repeat&&(this.flyToggleQueued=!0),Ep.has(t.code)&&t.preventDefault()},this.keyUpHandler=t=>{this.keys.delete(t.code),Ep.has(t.code)&&t.preventDefault()},this.blurHandler=()=>{this.resetKeys(),this.flyToggleQueued=!1},window.addEventListener("keydown",this.keyDownHandler),window.addEventListener("keyup",this.keyUpHandler),window.addEventListener("blur",this.blurHandler),window.addEventListener("focus",this.blurHandler)}dispose(){window.removeEventListener("keydown",this.keyDownHandler),window.removeEventListener("keyup",this.keyUpHandler),window.removeEventListener("blur",this.blurHandler),window.removeEventListener("focus",this.blurHandler)}consumeLookDelta(e=0){const t=(this.lookRight?1:0)-(this.lookLeft?1:0),n=(this.lookDown?1:0)-(this.lookUp?1:0),i=1.8;return{yaw:t*i*e,pitch:n*i*e}}isDown(e){return this.keys.has(e)}get forward(){return this.isDown("KeyW")}get back(){return this.isDown("KeyS")}get left(){return this.isDown("KeyA")}get right(){return this.isDown("KeyD")}get sprint(){return this.isDown("ShiftLeft")||this.isDown("ShiftRight")}get jump(){return this.isDown("Space")}get flyUp(){return this.isDown("Space")}get flyDown(){return this.isDown("ControlLeft")||this.isDown("ControlRight")}get lookLeft(){return this.isDown("ArrowLeft")}get lookRight(){return this.isDown("ArrowRight")}get lookUp(){return this.isDown("ArrowUp")}get lookDown(){return this.isDown("ArrowDown")}consumeFlyToggle(){return this.flyToggleQueued?(this.flyToggleQueued=!1,!0):!1}resetKeys(){this.keys.clear()}}const ga=1e-6,vp=new Ve,wp=new Ve;class FI{constructor(){const e=new yn({visible:!1,wireframe:!0,transparent:!0,opacity:.15,color:65433});this.mesh=new Be(new Je,e),this.mesh.name="EnvironmentCollider",this.mesh.frustumCulled=!1,this.mesh.matrixAutoUpdate=!1,this.mesh.userData.noCollision=!0,this.lastRoot=null,this.positionAttr=null,this.indexAttr=null,this.capsuleBox=new $t,this.triangleBox=new $t,this.triangle=new Dn,this.plane=new On,this.capsuleSegment=new mm,this.tmpVec0=new S,this.tmpVec1=new S,this.tmpVec2=new S,this.tmpVec3=new S,this.tmpVec4=new S,this.tmpVec5=new S,this.tmpVec6=new S,this.tmpVec7=new S,this.tmpVec8=new S,this.tmpVec9=new S,this.tmpNormal=new S,this.segPoint=new S,this.triPoint=new S}fromStaticScene(e,t={}){const n=e??this.lastRoot??(this.mesh?this.mesh.parent:null);if(!n||typeof n.traverse!="function")return;const i=[];n.updateWorldMatrix(!0,!0);const r=this.mesh.material;r.visible=!!t.debug,this.lastRoot=n;const a=h=>{var d;let u=h;for(;u;){if(((d=u.userData)==null?void 0:d.noCollision)===!0)return!1;u=u.parent}return!0},o=(h,u)=>{const d=h.clone();Object.keys(d.attributes).forEach(f=>{f!=="position"&&d.deleteAttribute(f)}),d.applyMatrix4(u),i.push(d)};n.traverse(h=>{if(!h.isMesh||h===this.mesh)return;const u=h;if(!a(u))return;const d=u.geometry;if(!(!d||!d.attributes.position)&&u.visible){if(u.isInstancedMesh){const f=u.count??0;if(f===0)return;for(let p=0;p<f;p++)u.getMatrixAt(p,vp),wp.multiplyMatrices(u.matrixWorld,vp),o(d,wp);return}o(d,u.matrixWorld)}});let c;i.length>0?c=tu(i,!1)??new Je:c=new Je,i.forEach(h=>h.dispose());const l=this.mesh.geometry;l&&l.dispose(),this.mesh.geometry=c,c.computeBoundingBox(),c.computeBoundingSphere(),this.positionAttr=c.getAttribute("position"),this.indexAttr=c.getIndex()}refresh(e={}){this.fromStaticScene(void 0,e)}capsuleIntersect(e){const t=this.mesh.geometry,n=this.positionAttr;if(!t||!n||n.count===0)return null;const i=t.boundingBox;if(!i||(this.capsuleSegment.set(e.start,e.end),this.capsuleBox.makeEmpty(),this.capsuleBox.expandByPoint(e.start),this.capsuleBox.expandByPoint(e.end),this.capsuleBox.min.addScalar(-e.radius),this.capsuleBox.max.addScalar(e.radius),!i.intersectsBox(this.capsuleBox)))return null;let r=0,a=null;const o=this.indexAttr,c=(l,h,u)=>{if(this.tmpVec0.fromBufferAttribute(n,l),this.tmpVec1.fromBufferAttribute(n,h),this.tmpVec2.fromBufferAttribute(n,u),this.triangleBox.makeEmpty(),this.triangleBox.expandByPoint(this.tmpVec0),this.triangleBox.expandByPoint(this.tmpVec1),this.triangleBox.expandByPoint(this.tmpVec2),this.triangleBox.min.addScalar(-e.radius),this.triangleBox.max.addScalar(e.radius),!this.triangleBox.intersectsBox(this.capsuleBox))return;this.triangle.set(this.tmpVec0,this.tmpVec1,this.tmpVec2);const d=this.closestPointsSegmentTriangle(this.capsuleSegment,this.triangle,this.segPoint,this.triPoint);if(d!==null&&d<e.radius-ga){const f=e.radius-d;f>r&&(r=f,this.tmpNormal.subVectors(this.segPoint,this.triPoint),this.tmpNormal.lengthSq()<ga?this.triangle.getNormal(this.tmpNormal):this.tmpNormal.normalize(),a=this.tmpVec3.copy(this.tmpNormal))}};if(o)for(let l=0;l<o.count;l+=3)c(o.getX(l),o.getX(l+1),o.getX(l+2));else for(let l=0;l<n.count;l+=3)c(l,l+1,l+2);return a?{normal:a.clone(),depth:r}:null}closestPointsSegmentTriangle(e,t,n,i){const r=t.a,a=t.b,o=t.c;if(this.tmpVec4.subVectors(a,r),this.tmpVec5.subVectors(o,r),this.tmpVec6.copy(this.tmpVec4).cross(this.tmpVec5).lengthSq()<ga)return null;this.plane.setFromCoplanarPoints(r,a,o);const l=this.plane.distanceToPoint(e.start),h=this.plane.distanceToPoint(e.end),u=this.tmpVec7.subVectors(e.end,e.start);if(Math.abs(l-h)>ga){const p=l/(l-h);if(p>=0&&p<=1&&(n.copy(u).multiplyScalar(p).add(e.start),t.containsPoint(n)))return i.copy(n),0}let d=1/0;t.closestPointToPoint(e.start,this.tmpVec8);let f=this.tmpVec8.distanceTo(e.start);return f<d&&(d=f,n.copy(e.start),i.copy(this.tmpVec8)),t.closestPointToPoint(e.end,this.tmpVec8),f=this.tmpVec8.distanceTo(e.end),f<d&&(d=f,n.copy(e.end),i.copy(this.tmpVec8)),d=this.testEdgeDistance(e,r,a,d,n,i),d=this.testEdgeDistance(e,a,o,d,n,i),d=this.testEdgeDistance(e,o,r,d,n,i),d}testEdgeDistance(e,t,n,i,r,a){const o=this.closestPointsSegmentSegment(e.start,e.end,t,n,this.tmpVec8,this.tmpVec9);return o<i&&(i=o,r.copy(this.tmpVec8),a.copy(this.tmpVec9)),i}closestPointsSegmentSegment(e,t,n,i,r,a){const o=this.tmpVec4.subVectors(t,e),c=this.tmpVec5.subVectors(i,n),l=this.tmpVec6.subVectors(e,n),h=o.dot(o),u=c.dot(c),d=c.dot(l),f=ga;let p=0,g=0;if(h<=f&&u<=f)return r.copy(e),a.copy(n),r.distanceTo(a);if(h<=f)p=0,g=we.clamp(d/u,0,1);else{const m=o.dot(l);if(u<=f)g=0,p=we.clamp(-m/h,0,1);else{const A=o.dot(c),y=h*u-A*A;y!==0?p=we.clamp((A*d-m*u)/y,0,1):p=0,g=(A*p+d)/u,g<0?(g=0,p=we.clamp(-m/h,0,1)):g>1&&(g=1,p=we.clamp((A-m)/h,0,1))}}return r.copy(o).multiplyScalar(p).add(e),a.copy(c).multiplyScalar(g).add(n),r.distanceTo(a)}}const uc="BuildingsRoot";function wg(s){if(s){if(Array.isArray(s)){for(const e of s)wg(e);return}typeof s.dispose=="function"&&s.dispose()}}function UI(s){var e;s&&((e=s.traverse)==null||e.call(s,t=>{var n,i;t.isMesh&&((i=(n=t.geometry)==null?void 0:n.dispose)==null||i.call(n),wg(t.material))}))}var xi,xc,Cg,Sg;class NI{constructor(e){id(this,xi);this.envCollider=e,this.loader=new $u,this.rootGroup=null}async loadBuilding(e,t){var c,l;const i=(await this.loader.loadAsync(e)).scene,r=t??{};r.scale!==void 0&&i.scale.setScalar(r.scale),r.rotateY!==void 0&&(i.rotation.y=r.rotateY),r.position&&i.position.copy(r.position);const a=Zs(this,xi,Sg).call(this,r);if(r.position){const{x:h,z:u}=i.position;let d=i.position.y;if(typeof a=="function"){const f=a(h,u);Number.isFinite(f)?d=Number.isFinite(r.position.y)?Math.max(r.position.y,f+.05):f+.05:Number.isFinite(r.position.y)?d=r.position.y:Number.isFinite(d)||(d=.05)}else Number.isFinite(r.position.y)?d=r.position.y:Number.isFinite(d)||(d=.05);i.position.set(h,d??.05,u)}const o=Zs(this,xi,Cg).call(this,r);if(o)o.add(i);else{const h=(l=(c=this.envCollider)==null?void 0:c.mesh)==null?void 0:l.parent;h?h.add(i):console.warn("EnvironmentCollider mesh has no parent; building was loaded without being attached to the scene graph.")}return r!=null&&r.collision?(i.traverse(h=>{h.isMesh&&(h.userData.noCollision=!1)}),this.envCollider.refresh()):i.traverse(h=>{h.isMesh&&(h.userData.noCollision=!0)}),i}clearBuildings(){var n,i;const e=Zs(this,xi,xc).call(this),t=this.rootGroup??(e==null?void 0:e.getObjectByName(uc));t&&(UI(t),(n=t.parent)==null||n.remove(t),this.rootGroup=null,typeof((i=this.envCollider)==null?void 0:i.refresh)=="function"&&this.envCollider.refresh())}}xi=new WeakSet,xc=function(){var e,t;return((t=(e=this.envCollider)==null?void 0:e.mesh)==null?void 0:t.parent)??null},Cg=function(e){if(e!=null&&e.parent)return this.rootGroup=e.parent,this.rootGroup.name||(this.rootGroup.name=uc),e.parent;if(this.rootGroup&&this.rootGroup.parent)return this.rootGroup;const t=Zs(this,xi,xc).call(this);if(!t)return null;let n=t.getObjectByName(uc);return n||(n=new Lt,n.name=uc,t.add(n)),this.rootGroup=n,n},Sg=function(e){var i,r,a;const t=[e==null?void 0:e.heightSampler,e==null?void 0:e.terrainSampler,(r=(i=e==null?void 0:e.terrain)==null?void 0:i.userData)==null?void 0:r.getHeightAt],n=Zs(this,xi,xc).call(this);if(n!=null&&n.userData){const{userData:o}=n;t.push(o.heightSampler,o.terrainSampler,o.terrainHeightSampler,o.getHeightAt);const c=o.terrain;(a=c==null?void 0:c.userData)!=null&&a.getHeightAt&&t.push(c.userData.getHeightAt)}for(const o of t)if(typeof o=="function")return o;return null};class OI{constructor(e=new S(0,0,0),t=new S(0,1,0),n=1){this.start=e,this.end=t,this.radius=n}clone(){return new this.constructor().copy(this)}set(e,t,n){return this.start.copy(e),this.end.copy(t),this.radius=n,this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this.radius=e.radius,this}getCenter(e){return e.copy(this.end).add(this.start).multiplyScalar(.5)}translate(e){return this.start.add(e),this.end.add(e),this}intersectsBox(e){return Uh(this.start.x,this.start.y,this.end.x,this.end.y,e.min.x,e.max.x,e.min.y,e.max.y,this.radius)&&Uh(this.start.x,this.start.z,this.end.x,this.end.z,e.min.x,e.max.x,e.min.z,e.max.z,this.radius)&&Uh(this.start.y,this.start.z,this.end.y,this.end.z,e.min.y,e.max.y,e.min.z,e.max.z,this.radius)}}function Uh(s,e,t,n,i,r,a,o,c){return(i-s<c||i-t<c)&&(s-r<c||t-r<c)&&(a-e<c||a-n<c)&&(e-o<c||n-o<c)}const dc=new S(0,1,0);class kI{constructor(e,t,n={}){this.object=new lt,this.object.userData.noCollision=!0,this.moveSpeed=4,this.sprintMult=1.8,this.gravity=12,this.jumpSpeed=5,this.slopeLimit=50,this.input=e,this.env=t,this.camera=n.camera,this.height=n.height??1.8,this.radius=n.radius??.35,this.cameraYaw=0,this.cameraPitch=we.degToRad(-15),this.cameraMinPitch=we.degToRad(-80),this.cameraMaxPitch=we.degToRad(60),this.cameraDistance=6,this.cameraTargetHeight=this.height*.6,this.cameraDamping=10,this.cameraTarget=new S,this.cameraDesired=new S,this.cameraEuler=new zn(0,0,0,"YXZ"),this.cameraOffset=new S;const i=this.height-this.radius;this.capsule=new OI(new S(0,this.radius,0),new S(0,i,0),this.radius),this.object.position.set(0,this.height*.5,0),this.syncCapsuleToObject(),this.velocity=new S,this.groundNormal=new S(0,1,0),this.grounded=!1,this.jumpLocked=!1,this.flying=!1,this.flySpeed=8,this.flyIdleDecay=.9,this.character=void 0,this.desired=new S,this.tmpVec=new S,this.tmpVec2=new S,this.tmpVec3=new S,this.tmpVec4=new S,this.tmpQuat=new tn,this.groundDamping=16,this.airDamping=6}get position(){return this.object.position}attachCharacter(e){this.character=e,this.object.add(e),e.position.set(0,0,0)}update(e){if(!Number.isFinite(e)||e<=0)return;(typeof this.input.consumeFlyToggle=="function"?this.input.consumeFlyToggle():!1)&&(this.flying=!this.flying,this.grounded=!1,this.velocity.y=0,this.flying||(this.jumpLocked=!0));const n=this.input.consumeLookDelta(e);this.camera&&(this.cameraYaw-=n.yaw,this.cameraPitch-=n.pitch,this.cameraPitch=we.clamp(this.cameraPitch,this.cameraMinPitch,this.cameraMaxPitch),Number.isFinite(this.cameraYaw)||(this.cameraYaw=0),this.cameraYaw=we.euclideanModulo(this.cameraYaw+Math.PI,Math.PI*2)-Math.PI);const i=this.input.sprint,a=(this.flying?this.flySpeed:this.moveSpeed)*(i?this.sprintMult:1);this.computeDesiredVelocity(a,this.flying);const o=this.flying||!this.grounded?this.airDamping:this.groundDamping;if(this.velocity.x=we.damp(this.velocity.x,this.desired.x,o,e),this.velocity.z=we.damp(this.velocity.z,this.desired.z,o,e),this.flying&&(this.velocity.y=we.damp(this.velocity.y,this.desired.y,this.airDamping,e)),this.desired.lengthSq()===0)if(this.flying){const h=Math.pow(this.flyIdleDecay,e);this.velocity.multiplyScalar(h)}else{const h=this.grounded?.85:.95,u=Math.pow(h,e);this.velocity.x*=u,this.velocity.z*=u}this.flying?this.input.flyUp||(this.jumpLocked=!1):(this.grounded&&this.input.jump&&!this.jumpLocked&&(this.velocity.y=this.jumpSpeed,this.grounded=!1,this.jumpLocked=!0),this.input.jump||(this.jumpLocked=!1),this.grounded||(this.velocity.y-=this.gravity*e));const c=this.tmpVec.copy(this.velocity).multiplyScalar(e);this.capsule.translate(c),this.resolveCollisions(e);const l=this.getCapsuleCenter(this.tmpVec);if(this.object.position.copy(l),this.updateCamera(e),this.character){const h=Math.hypot(this.velocity.x,this.velocity.z),u=.05,d=Math.atan2(this.velocity.x,this.velocity.z);h>u&&(this.character.rotation.y=d);const f=this.moveSpeed*1.5,p=this.moveSpeed*.8;this.flying?this.character.play("Jump",.1):this.grounded?h>f?this.character.play("Run",.1):h>p?this.character.play("Swagger",.1):h>.1?this.character.play("Walk",.15):this.character.play("Idle",.2):this.character.play("Jump",.1),this.character.update(e)}}computeDesiredVelocity(e,t=!1){this.desired.set(0,0,0);const n=(this.input.right?1:0)-(this.input.left?1:0),i=(this.input.forward?1:0)-(this.input.back?1:0),r=t?(this.input.flyUp?1:0)-(this.input.flyDown?1:0):0;if(n!==0||i!==0)if(this.tmpVec2.set(n,0,i).normalize(),this.camera){this.tmpQuat.setFromEuler(this.cameraEuler.set(this.cameraPitch,this.cameraYaw,0,"YXZ"));const a=this.tmpVec3.set(0,0,-1).applyQuaternion(this.tmpQuat);a.y=0,a.lengthSq()<1e-6?a.set(0,0,-1):a.normalize();const o=this.tmpVec.copy(a).cross(dc);o.lengthSq()<1e-6?o.set(1,0,0):o.normalize(),this.desired.copy(a).multiplyScalar(this.tmpVec2.z).addScaledVector(o,this.tmpVec2.x)}else this.desired.copy(this.tmpVec2);t&&r!==0&&(this.desired.y=r),this.desired.lengthSq()!==0&&this.desired.normalize().multiplyScalar(e)}updateCamera(e){if(this.camera){if(this.cameraTarget.copy(this.object.position),this.cameraTarget.y+=this.cameraTargetHeight,this.tmpQuat.setFromEuler(this.cameraEuler.set(this.cameraPitch,this.cameraYaw,0,"YXZ")),this.cameraOffset.set(0,0,this.cameraDistance).applyQuaternion(this.tmpQuat),this.cameraDesired.copy(this.cameraTarget).add(this.cameraOffset),!Number.isFinite(e)||e<=0)this.camera.position.copy(this.cameraDesired);else{const t=1-Math.exp(-this.cameraDamping*e);this.camera.position.lerp(this.cameraDesired,t)}this.camera.lookAt(this.cameraTarget)}}resolveCollisions(e){const t=this.env,n=!this.flying;this.grounded=!1;let i=null;if(t!=null&&t.capsuleIntersect)for(let r=0;r<3;r++){const a=t.capsuleIntersect(this.capsule);if(!a)break;this.tmpVec.copy(a.normal).multiplyScalar(a.depth),this.capsule.translate(this.tmpVec);const o=this.tmpVec2.copy(a.normal).normalize(),c=o.dot(this.velocity);c<0&&this.velocity.addScaledVector(o,-c);const l=we.clamp(o.dot(dc),-1,1),h=we.radToDeg(Math.acos(l));o.y>0&&(i===null&&(i=this.tmpVec4),i.copy(o),n&&h<=this.slopeLimit?(this.grounded=!0,this.groundNormal.copy(o)):n||this.groundNormal.copy(o))}else{const r=this.getCapsuleCenter(this.tmpVec3),a=this.height*.5;r.y<a&&(this.tmpVec.set(0,a-r.y,0),this.capsule.translate(this.tmpVec),this.velocity.y<0&&(this.velocity.y=0),n&&(this.grounded=!0),this.groundNormal.set(0,1,0))}if(n&&this.grounded){this.velocity.y<0&&(this.velocity.y=0);const r=we.clamp(this.groundNormal.dot(dc),-1,1);we.radToDeg(Math.acos(r))>this.slopeLimit&&(this.grounded=!1)}if(n&&!this.grounded&&i){const r=this.tmpVec.copy(i).projectOnPlane(dc);r.lengthSq()>1e-6&&(r.normalize(),this.velocity.addScaledVector(r,this.gravity*e)),this.groundNormal.copy(i)}if(n&&!this.grounded&&this.velocity.y>0&&i){const r=i,a=r.dot(this.velocity);a<0&&this.velocity.addScaledVector(r,-a)}!this.grounded&&!i&&this.groundNormal.set(0,1,0)}syncCapsuleToObject(){const e=this.object.position,t=this.height*.5;this.capsule.start.set(e.x,e.y-t+this.radius,e.z),this.capsule.end.set(e.x,e.y+t-this.radius,e.z)}getCapsuleCenter(e){return e.copy(this.capsule.start).add(this.capsule.end).multiplyScalar(.5)}}class Ig extends lt{constructor(){super(),this.model=void 0,this.mixer=void 0,this.actions=new Map,this.current=void 0}async load(e,t,{targetHeight:n=1.8}={}){const i=Array.isArray(e)?e:[e],{gltf:r,root:a}=await td({renderer:t,urls:i,targetHeight:n});this.initializeFromGLTF(a,r.animations)}initializeFromGLTF(e,t=[]){if(!e)throw new Error("Character.initializeFromGLTF requires a root object");this.model&&this.remove(this.model),this.model=e,this.model.traverse(a=>{a.isMesh&&(a.castShadow=!0,a.receiveShadow=!0,a.frustumCulled=!1)}),this.model.rotation.y=Math.PI,this.add(this.model),this.mixer=new Am(this.model);const n=Array.isArray(t)?t:[],i=new Map;for(const a of n)a!=null&&a.name&&i.set(a.name,a);const r=a=>{const o=a.toLowerCase();return o.includes("idle")?"Idle":o.includes("walk")&&!o.includes("swagger")?"Walk":o.includes("run")?"Run":o.includes("swagger")||o.includes("swag")?"Swagger":o.includes("jump")?"Jump":null};this.actions=new Map;for(const[a,o]of i){const c=r(a);if(!c)continue;const l=this.mixer.clipAction(o);l.clampWhenFinished=!0,l.enable=!0,this.actions.set(c,l)}!this.actions.get("Swagger")&&this.actions.get("Walk")&&this.actions.set("Swagger",this.actions.get("Walk")),!this.actions.get("Run")&&this.actions.get("Walk")&&this.actions.set("Run",this.actions.get("Walk")),!this.actions.get("Idle")&&this.actions.get("Walk")&&this.actions.set("Idle",this.actions.get("Walk")),this.play("Idle",0)}update(e){var t;(t=this.mixer)==null||t.update(e)}play(e,t=.2){const n=this.actions.get(e);!n||this.current===n||(n.reset().play(),this.current&&this.current.crossFadeTo(n,t,!1),this.current=n)}}function QI(s,e){const t=new Lt;t.name="CitizenNPC";const n=new rt({color:s,roughness:.6,metalness:.1}),i=new Be(new io(.4,1.1,8,16),n);i.position.y=1.1,i.castShadow=!0,i.receiveShadow=!0,i.userData.noCollision=!0,t.add(i);const r=new rt({color:e,roughness:.4}),a=new Be(new Gn(.32,16,16),r);a.position.y=2,a.castShadow=!0,a.userData.noCollision=!0,t.add(a);const o=new Be(new co(.45,.08,8,18,Math.PI*1.25),new rt({color:16117990,roughness:.5}));return o.rotation.set(Math.PI/2,Math.PI/3,0),o.position.y=1.3,o.castShadow=!0,o.userData.noCollision=!0,t.add(o),{group:t,body:i}}function Mg(s){const t=s.getLengths(100),n=t[t.length-1];return{divisions:100,lengths:t,totalLength:n}}function GI(s,e,t={}){var d,f;if(!e)return{citizens:[],updaters:[]};const n=t.count??6,i=t.minSpeed??.6,r=t.maxSpeed??1.2,a=t.terrain??null,o=t.palette??[{primary:5148407,secondary:16119285},{primary:15753874,secondary:16772275},{primary:8505220,secondary:15267305},{primary:16758605,secondary:16774112},{primary:9795021,secondary:15984117}],{totalLength:c}=Mg(e),l=(f=(d=a==null?void 0:a.userData)==null?void 0:d.getHeightAt)==null?void 0:f.bind(a==null?void 0:a.userData),h=[],u=[];for(let p=0;p<n;p++){const g=o[p%o.length],{group:m,body:A}=QI(g.primary,g.secondary);m.userData.noCollision=!0,s.add(m),h.push(m);const y=we.lerp(i,r,Math.random());let x=(p/n+Math.random()*.1)%1,b=Math.random()*Math.PI*2;const _=C=>{if(!Number.isFinite(C))return;const I=y*C/c;x=(x+I)%1;const E=e.getPointAt(x),w=e.getTangentAt(x);m.position.copy(E);const T=l?l(m.position.x,m.position.z):E.y;m.position.y=Number.isFinite(T)?T+.05:E.y+.05;const R=Math.atan2(w.x,w.z);m.rotation.set(0,R,0),b+=C*y*6,A.position.y=1.1+Math.sin(b)*.07,A.rotation.z=Math.sin(b)*.2};u.push(_)}return{citizens:h,updaters:u}}async function HI(s,e,t={}){var g,m,A,y,x;if(!s||!e)return{npcs:[],updaters:[]};const n=ta(),i=[];typeof n=="string"&&n.length>0&&i.push(`${n}models/npcs/manifest.json`),i.push("/models/npcs/manifest.json");let r=null;for(const b of i)try{const _=await fetch(b,{cache:"no-cache"});if(!_.ok)continue;r=await _.json();break}catch(_){console.warn("[NPC Manifest] Failed to load",b,_)}const a=Array.isArray(r==null?void 0:r.npcs)?r.npcs:[];if(!a.length)return{npcs:[],updaters:[]};const o=a.map(b=>typeof b=="string"?b.trim():"").filter(b=>b.length>0);if(!o.length)return{npcs:[],updaters:[]};const{totalLength:c}=Mg(e),l=t.terrain??null,h=(m=(g=l==null?void 0:l.userData)==null?void 0:g.getHeightAt)==null?void 0:m.bind(l==null?void 0:l.userData),u=t.minSpeed??.6,d=t.maxSpeed??1.2,f=[],p=[];for(let b=0;b<o.length;b+=1){const _=o[b],C=[];typeof n=="string"&&n.length>0&&C.push(`${n}models/npcs/${_}`),C.push(`/models/npcs/${_}`);const v=new Ig;v.name=`GLBNPC:${_}`,v.userData.noCollision=!0;try{await v.load(C,(A=s.userData)==null?void 0:A.renderer,{targetHeight:1.7})}catch(U){const O=(U==null?void 0:U.message)||String(U);O&&O.includes("Downloaded HTML instead of GLB")?console.warn("[NPC Loader] Skipping NPC due to HTML response",_):console.warn("[NPC Loader] Failed to load NPC",_,O);continue}s.add(v),f.push(v);const I=(y=v.actions)!=null&&y.get("Swagger")?"Swagger":(x=v.actions)!=null&&x.get("Walk")?"Walk":"Idle";try{v.play(I,.4)}catch(U){console.warn("[NPC Loader] Unable to play animation for",_,U)}const E=we.lerp(u,d,Math.random());let w=(b/o.length+Math.random()*.1)%1;const T=e.getPointAt(w);if(T){v.position.copy(T);const U=h?h(v.position.x,v.position.z):T.y;v.position.y=Number.isFinite(U)?U:T.y;const O=e.getTangentAt(w);if(O){const N=Math.atan2(O.x,O.z);Number.isFinite(N)&&v.rotation.set(0,N,0)}}const R=U=>{if(!Number.isFinite(U))return;const O=E,N=c>0?c:1,k=O*U/N;w=(w+k)%1;const te=e.getPointAt(w);if(!te){v.update(U);return}const Q=e.getTangentAt(w);v.position.copy(te);const $=h?h(v.position.x,v.position.z):te.y;if(v.position.y=Number.isFinite($)?$:te.y,Q){const ae=Math.atan2(Q.x,Q.z);Number.isFinite(ae)&&v.rotation.set(0,ae,0)}v.update(U)};p.push(R)}return{npcs:f,updaters:p}}function zI(s,e={}){const t=e.min??.2,n=e.max??2,i=e.step??.01,r=e.key??"F9",a=e.storageKey??"toneMappingExposure",o=document.createElement("div");o.id="tmx-wrap",Object.assign(o.style,{position:"fixed",top:"12px",right:"12px",padding:"10px 12px",background:"rgba(0,0,0,0.55)",backdropFilter:"blur(4px)",borderRadius:"10px",font:"12px/1.2 ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Arial",color:"#fff",zIndex:9999,userSelect:"none"});const c=document.createElement("div");c.textContent="Exposure",c.style.marginBottom="6px";const l=document.createElement("div");l.style.display="flex",l.style.alignItems="center";const h=document.createElement("input");h.type="range",h.min=String(t),h.max=String(n),h.step=String(i),h.style.width="140px";const u=document.createElement("span");u.style.marginLeft="8px",u.style.opacity="0.8";const d=Number(localStorage.getItem(a)),f=Number.isFinite(d)?d:s.toneMappingExposure??1,p=A=>Math.min(n,Math.max(t,A)),g=A=>{const y=p(Number(A));s.toneMappingExposure=y,h.value=String(y),u.textContent=y.toFixed(2)};g(f),h.addEventListener("input",A=>g(A.target.value)),h.addEventListener("change",()=>localStorage.setItem(a,h.value)),l.appendChild(h),l.appendChild(u),o.appendChild(c),o.appendChild(l),document.body.appendChild(o);const m=A=>{A.key===r&&(o.style.display=o.style.display!=="none"?"none":"block",A.preventDefault())};return window.addEventListener("keydown",m),{element:o,input:h,get value(){return Number(h.value)},set value(A){g(A)},dispose(){window.removeEventListener("keydown",m),o.remove()}}}const Cp="hotkey-overlay-style",kt="hotkey-overlay",yi="hotkey-overlay--hidden",Tg="hotkeyOverlayOpen";function VI(){try{return localStorage.getItem(Tg)==="1"}catch{return!1}}function WI(s){try{localStorage.setItem(Tg,s?"1":"0")}catch{}}const qI=[{keys:["W","A","S","D"],description:"Move"},{keys:["Shift"],description:"Sprint"},{keys:["Space"],description:"Jump / fly up"},{keys:["Ctrl"],description:"Fly down"},{keys:["F"],description:"Toggle flight mode"},{keys:["E"],description:"Interact with highlighted objects"},{keys:["Arrow Keys"],description:"Look around"},{keys:["F9"],description:"Toggle exposure slider"}];function XI(s={}){if(document.querySelector(`.${kt}`))return;YI();const e=Array.isArray(s.hotkeys)&&s.hotkeys.length>0?s.hotkeys:qI,t=typeof s.toggleKey=="string"&&s.toggleKey.trim().length>0?s.toggleKey:"KeyH",n=s.showButton!==!1,i=document.createElement("div");i.className=kt,i.setAttribute("role","dialog"),i.setAttribute("aria-live","polite");const r=document.createElement("button");r.type="button",r.className=`${kt}__toggle`,r.innerHTML=`
    <svg width="20" height="20" viewBox="0 0 24 24" aria-hidden="true">
      <path fill="currentColor"
        d="M3 6a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3h-6l-3.5 3.5a1 1 0 0 1-1.7-.7V17H6a3 3 0 0 1-3-3V6zm4 2a1 1 0 1 0 0 2h2a1 1 0 1 0 0-2H7zm5 0a1 1 0 1 0 0 2h2a1 1 0 1 0 0-2h-2zm5 0a1 1 0 1 0 0 2h2a1 1 0 1 0 0-2h-2z"/>
    </svg>
    <span class="${kt}__sr">Hotkeys (press ${Nh(t)})</span>
  `,r.setAttribute("title",`Hotkeys (${Nh(t)})`),r.setAttribute("aria-expanded","false"),r.setAttribute("aria-controls",`${kt}-panel`);const a=document.createElement("div");a.className=`${kt}__panel`,a.id=`${kt}-panel`,a.setAttribute("role","document"),a.setAttribute("aria-hidden","true");const o=document.createElement("h2");o.textContent="Controls",o.className=`${kt}__title`,a.appendChild(o);const c=document.createElement("dl");c.className=`${kt}__list`;for(const f of e){if(!f||!Array.isArray(f.keys)||f.keys.length===0)continue;const p=f.keys.map(y=>String(y).trim()).filter(Boolean),g=typeof f.description=="string"?f.description:"";if(p.length===0||!g)continue;const m=document.createElement("dt");m.className=`${kt}__keys`,m.textContent=p.join(" / ");const A=document.createElement("dd");A.className=`${kt}__description`,A.textContent=g,c.appendChild(m),c.appendChild(A)}a.appendChild(c);const l=document.createElement("p");l.className=`${kt}__hint`,l.textContent=`Press ${Nh(t)} to toggle`,a.appendChild(l);const h=VI();h?i.classList.remove(yi):i.classList.add(yi),n&&i.appendChild(r),i.appendChild(a),document.body.appendChild(i);const u=f=>{var g;f?i.classList.remove(yi):i.classList.add(yi);const p=!i.classList.contains(yi);(g=r==null?void 0:r.setAttribute)==null||g.call(r,"aria-expanded",String(p)),a.setAttribute("aria-hidden",String(!p)),WI(p)};u(h);const d=f=>{if(f===!0){u(i.classList.contains(yi));return}if(f===!1){u(!1);return}u(!i.classList.contains(yi))};n&&r.addEventListener("click",()=>{d(!0)}),window.addEventListener("keydown",f=>{f.code===t&&!f.repeat&&d(!0),f.code==="Escape"&&!i.classList.contains(yi)&&d(!1)})}function YI(){if(document.getElementById(Cp))return;const s=document.createElement("style");s.id=Cp,s.textContent=`
    .${kt} {
      position: fixed;
      right: 16px;
      top: 16px;
      z-index: 1200;
      display: flex;
      flex-direction: column;
      gap: 10px;
      color: #fff;
      font-family: 'Inter', system-ui, -apple-system, Segoe UI, Roboto, sans-serif;
    }

    .${kt}__sr {
      position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px;
      overflow: hidden; clip: rect(0,0,0,0); white-space: nowrap; border: 0;
    }

    .${kt}__toggle {
      background: rgba(0,0,0,0.5);
      border: 1px solid rgba(255,255,255,0.18);
      border-radius: 999px;
      color: inherit;
      width: 28px; height: 28px;
      display: grid; place-items: center;
      padding: 0;
      cursor: pointer;
      transition: background .2s ease, border-color .2s ease, opacity .2s ease, transform .12s ease;
      opacity: .85;
    }
    .${kt}__toggle:hover,
    .${kt}__toggle:focus-visible {
      background: rgba(0,0,0,0.72);
      border-color: rgba(255,255,255,0.36);
      outline: none;
      opacity: 1;
      transform: scale(1.04);
    }

    .${kt}__panel {
      background: rgba(10,12,18,0.9);
      border: 1px solid rgba(255,255,255,0.12);
      border-radius: 10px;
      padding: 14px;
      min-width: 220px;
      backdrop-filter: blur(6px);
      box-shadow: 0 12px 30px rgba(0,0,0,0.35);
      transition: opacity .18s ease, transform .18s ease;
    }

    .${kt}__title {
      margin: 0 0 12px;
      font-size: 16px;
      letter-spacing: 0.04em;
      text-transform: uppercase;
    }

    .${kt}__list {
      display: grid;
      grid-template-columns: max-content 1fr;
      gap: 6px 12px;
      margin: 0;
      padding: 0;
    }

    .${kt}__keys {
      margin: 0;
      font-weight: 600;
      letter-spacing: 0.05em;
    }

    .${kt}__description {
      margin: 0;
      opacity: 0.85;
    }

    .${kt}__hint {
      margin: 12px 0 0;
      font-size: 12px;
      letter-spacing: 0.04em;
      opacity: 0.65;
      text-transform: uppercase;
    }

    .${kt}.${yi} .${kt}__panel {
      opacity: 0;
      pointer-events: none;
      transform: translateY(-6px);
    }

    /* Hide the icon while the panel is open (less clutter) */
    .${kt}:not(.${yi}) .${kt}__toggle {
      opacity: 0;
      pointer-events: none;
    }
  `,document.head.appendChild(s)}function Nh(s){switch(s){case"KeyH":return"H";case"F9":case"F10":case"F11":case"F12":return s;case"ControlLeft":case"ControlRight":return"Ctrl";default:return s.startsWith("Key")&&s.length===4?s.slice(3):s}}function KI({getPosition:s,getDirection:e,onPin:t,onSetLightingPreset:n,lightingPresets:i}={}){if(!(typeof window<"u"&&window.SHOW_HUD===!0))return null;const a=document.createElement("div");Object.assign(a.style,{position:"fixed",top:"12px",right:"12px",zIndex:999999,color:"#fff",font:"12px/1.35 ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto",textShadow:"0 1px 2px rgba(0,0,0,0.45)",userSelect:"none",pointerEvents:"none"});const o=document.createElement("div");Object.assign(o.style,{width:"88px",height:"88px",borderRadius:"50%",border:"2px solid rgba(255,255,255,0.75)",position:"relative",marginBottom:"8px"});const c=document.createElement("div");Object.assign(c.style,{position:"absolute",left:"50%",top:"50%",width:"2px",height:"40px",background:"rgba(255,0,0,0.9)",transformOrigin:"50% 100%",borderRadius:"2px",transform:"translate(-1px, -40px) rotate(0deg)"}),o.appendChild(c),Object.entries({N:0,E:90,S:180,W:270}).forEach(([_,C])=>{const v=document.createElement("div");v.textContent=_,Object.assign(v.style,{position:"absolute",left:"50%",top:"50%",transform:`translate(-50%,-50%) rotate(${C}deg) translate(0,-38px) rotate(${-C}deg)`,fontWeight:700,letterSpacing:"0.5px"}),o.appendChild(v)});const h=document.createElement("div");h.style.pointerEvents="auto",h.style.background="rgba(0,0,0,0.55)",h.style.backdropFilter="blur(3px)",h.style.padding="8px 10px",h.style.borderRadius="8px",h.style.minWidth="220px",h.innerHTML=['<div><b>Pos</b> <span id="hud-pos">(x,y,z)</span></div>','<div><b>Bear</b> <span id="hud-bear">0° N</span></div>','<div style="opacity:.8">Press <b>P</b> to drop a pin</div>'].join("");const d=[{name:"dawn",label:"Dawn"},{name:"noon",label:"High Noon"},{name:"dusk",label:"Dusk"},{name:"night",label:"Night"}].filter(({name:_})=>i?i[_]!=null:!0);if(d.length&&!h.querySelector(".hud-lighting-presets")){const _=document.createElement("div");_.className="hud-lighting-presets",Object.assign(_.style,{marginTop:"8px",paddingTop:"6px",borderTop:"1px solid rgba(255,255,255,0.15)",pointerEvents:"auto"});const C=document.createElement("div");C.textContent="Lighting Presets",Object.assign(C.style,{fontWeight:600,letterSpacing:"0.08em",fontSize:"11px",opacity:"0.85",textTransform:"uppercase"}),_.appendChild(C);const v=document.createElement("div");Object.assign(v.style,{display:"flex",flexWrap:"wrap",gap:"6px",marginTop:"6px"});const I=[{name:"dawn",codes:["Digit1","Numpad1"],keys:["1"]},{name:"noon",codes:["Digit2","Numpad2"],keys:["2"]},{name:"dusk",codes:["Digit3","Numpad3"],keys:["3"]},{name:"night",codes:["Digit4","Numpad4"],keys:["4"]}],E=new Set(d.map(T=>T.name)),w=new Map;for(const T of d){const R=(i==null?void 0:i[T.name])||{},U=document.createElement("button");U.type="button";const O=R.label||T.label;U.textContent=O,Object.assign(U.style,{padding:"4px 8px",borderRadius:"4px",border:"1px solid rgba(255,255,255,0.35)",background:"rgba(0,0,0,0.35)",color:"inherit",font:"inherit",cursor:"pointer",pointerEvents:"auto",transition:"background 0.2s ease, border-color 0.2s ease"}),U.addEventListener("mouseenter",()=>{U.style.background="rgba(255,255,255,0.18)",U.style.borderColor="rgba(255,255,255,0.55)"}),U.addEventListener("mouseleave",()=>{U.style.background="rgba(0,0,0,0.35)",U.style.borderColor="rgba(255,255,255,0.35)"});const N=R.hotkey||"";N?U.title=`Set ${O} lighting (Hotkey ${N})`:U.title=`Set ${O} lighting`,U.addEventListener("click",k=>{k.preventDefault(),typeof n=="function"&&n(T.name)}),v.appendChild(U)}I.filter(T=>E.has(T.name)).forEach(T=>{for(const R of T.codes)w.set(R,T.name);for(const R of T.keys)w.set(R,T.name)}),_.appendChild(v),h.appendChild(_),h._presetKeyBindings=w}a.appendChild(o),a.appendChild(h),document.body.appendChild(a);const f=h.querySelector("#hud-pos"),p=h.querySelector("#hud-bear"),g=_=>{const v=(Math.atan2(_.x,_.z)*180/Math.PI+360)%360,I=["N","NE","E","SE","S","SW","W","NW","N"],E=Math.round(v/45);return{deg:Math.round(v),label:I[E]}};let m=0,A=!0;const y=()=>{if(A){try{const _=s==null?void 0:s(),C=e==null?void 0:e();if(_&&(f.textContent=`(${_.x.toFixed(1)}, ${_.y.toFixed(1)}, ${_.z.toFixed(1)})`),C){const v=g(C);p.textContent=`${v.deg}° ${v.label}`,c.style.transform=`translate(-1px, -40px) rotate(${v.deg}deg)`}}catch{}m=requestAnimationFrame(y)}};y();const x=()=>(h==null?void 0:h._presetKeyBindings)instanceof Map?h._presetKeyBindings:null,b=_=>{var I;if(((I=_.key)==null?void 0:I.toLowerCase())==="p"){const E=s==null?void 0:s();E&&(t==null||t(E),console.log(`[PIN] @ (${E.x.toFixed(2)}, ${E.y.toFixed(2)}, ${E.z.toFixed(2)})`))}const C=x();if(!C||typeof n!="function"||_.repeat)return;const v=C.get(_.code)||C.get(_.key);v&&(_.preventDefault(),n(v))};return window.addEventListener("keydown",b),{dispose(){A=!1,cancelAnimationFrame(m),window.removeEventListener("keydown",b),a.remove()}}}function JI(s,e,t=16724838){const n=new Lt;n.name="Pin";const i=new Be(new Gt(.05,.05,1.2,8),new rt({color:16777215,roughness:.8}));i.position.y=.6;const r=new Be(new ni(.5,.3),new rt({color:t,side:ln,roughness:.6}));return r.position.set(.3,1,0),r.rotation.y=Math.PI/2,n.add(i,r),n.position.copy(e),n.renderOrder=2,n.userData.noCollision=!0,s.add(n),n}function jI(s){var o;if(!s)return;const e=(o=s==null?void 0:s.userData)==null?void 0:o.getHeightAt;if(typeof e=="function"){const c=e(0,0);if(Number.isFinite(c))return}const t=new Ju;t.firstHitOnly=!0;const n=[s],i=200,r=-400;function a(c,l){t.set(new S(c,i,l),new S(0,-1,0));const h=t.intersectObjects(n,!0)[0];if(h)return h.point.y;t.set(new S(c,r,l),new S(0,1,0));const u=t.intersectObjects(n,!0)[0];return u?u.point.y:0}s.userData=s.userData||{},s.userData.getHeightAt=a}function ZI(s,e,t,n,i=6,r=120){var x,b;const a=(b=(x=e==null?void 0:e.userData)==null?void 0:x.getHeightAt)==null?void 0:b.bind(e==null?void 0:e.userData);if(!a)return console.warn("[occluder] terrain.getHeightAt missing"),null;const o=new S(t.x,0,t.y),c=new S(n.x,0,n.y),l=new ie(c.x-o.x,c.z-o.z);l.lengthSq()===0?l.set(1,0):l.normalize();const h=new ie(-l.y,l.x),u=i*.5,d=new Float32Array((r+1)*2*3),f=new ot(d,3),p=new Je;p.setAttribute("position",f);const g=[];for(let _=0;_<r;_++){const C=_*2;g.push(C,C+1,C+2,C+1,C+3,C+2)}p.setIndex(g);const m=.05;for(let _=0;_<=r;_++){const C=_/r,v=we.lerp(o.x,c.x,C),I=we.lerp(o.z,c.z,C),E=(a(v,I)??0)+m,w=v-h.x*u,T=I-h.y*u,R=v+h.x*u,U=I+h.y*u,O=_*2*3,N=(_*2+1)*3;d[O+0]=w,d[O+1]=E,d[O+2]=T,d[N+0]=R,d[N+1]=E,d[N+2]=U}f.needsUpdate=!0,p.computeVertexNormals();const A=new rt({color:0,transparent:!1,depthWrite:!0,depthTest:!0,colorWrite:!1}),y=new Be(p,A);return y.name="WaterDepthOccluderRibbon",y.renderOrder=-2,y.receiveShadow=!1,y.castShadow=!1,y.userData.noCollision=!0,s.add(y),y}const $I=.05;function eM(s,e,t,n=0,{clampToSea:i=!1,seaLevel:r=0,minAboveSea:a=0}={}){var l,h;const o=(h=(l=s==null?void 0:s.userData)==null?void 0:l.getHeightAt)==null?void 0:h.call(l,e,t);let c=Number.isFinite(o)?o:n;return i&&(c=Math.max(c,r+a)),c}function Oh(s,e,t,n,i=$I,r={}){var o;const a=eM(e,t,n,((o=s.position)==null?void 0:o.y)??0,r);return s.position.y=a+i,s.position.y}const tM={},Sp="WorldRoot";function Ip(s){return(s.headers.get("content-type")||"").includes("text/html")}async function nM(s){try{const e=await fetch(s,{method:"HEAD"});if(e.ok&&!Ip(e))return!0;if(e.status===405||e.status===501){const t=await fetch(s,{method:"GET"});return t.ok&&!Ip(t)}return!1}catch(e){return console.debug(`Asset probe failed for "${s}"`,e),!1}}async function Mp(s){for(const e of s)if(await nM(e))return e;return null}window.addEventListener("unhandledrejection",s=>{console.error("Unhandled promise rejection:",s.reason)});const ya=ta();function iM(s){s&&(s.shadowMap.enabled=!0,s.shadowMap.type=hu,s.shadowMap&&(s.shadowMap.autoUpdate=!0,s.shadowMap.needsUpdate=!0))}function fc(s,e,t=0){const n=Math.sin(s*127.1+e*311.7+t*74.7)*43758.5453;return n-Math.floor(n)}function sM(s,e,t=0){const n=Math.floor(s),i=Math.floor(e),r=s-n,a=e-i,o=fc(n,i,t),c=fc(n+1,i,t),l=fc(n,i+1,t),h=fc(n+1,i+1,t),u=r*r*(3-2*r),d=a*a*(3-2*a),f=we.lerp(o,c,u),p=we.lerp(l,h,u);return we.lerp(f,p,d)}function kh(s,e,{seed:t=0,octaves:n=5,persistence:i=.5,lacunarity:r=2}={}){let a=0,o=1,c=1;for(let l=0;l<n;l+=1)a+=o*sM(s*c,e*c,t+l*19.19),o*=i,c*=r;return a}let Cr=null;function pc(s,{colorSpace:e=St}={}){const t=new Uint8Array(4);t[0]=s>>16&255,t[1]=s>>8&255,t[2]=s&255,t[3]=255;const n=new Qn(t,1,1,Vt);return n.colorSpace=e,n.wrapS=n.wrapT=Hn,n.repeat.set(3,3),n.needsUpdate=!0,n}function Bg(){if(Cr)return Cr;if(typeof document>"u"||!document.createElement)return Cr={map:pc(15723754,{colorSpace:St}),normalMap:pc(8421631,{colorSpace:Qt}),roughnessMap:pc(11776947,{colorSpace:Qt}),aoMap:pc(14737632,{colorSpace:Qt})},Cr;const s=512,e=document.createElement("canvas");e.width=s,e.height=s;const t=e.getContext("2d"),n=t.createImageData(s,s),i=t.createImageData(s,s),r=t.createImageData(s,s),a=t.createImageData(s,s),o=new Float32Array(s*s),c=6;for(let d=0;d<s;d+=1)for(let f=0;f<s;f+=1){const p=(d*s+f)*4,g=f/s*c,m=d/s*c,A=kh(g*.85,m*.9,{seed:11,octaves:4}),y=kh(g*2.3,m*2.4,{seed:37,octaves:5,persistence:.55,lacunarity:2.15}),x=g*1.12+m*1.27+y*4.2,b=Math.sin(x+A*2.6),_=kh(g*5.2,m*5.4,{seed:73,octaves:3,persistence:.6,lacunarity:2.8}),C=.5+.5*b*.8+_*.2,v=Math.pow(Math.abs(Math.sin(x*.6+_*3.4)),1.4);o[d*s+f]=C;const I=.04+A*.03,E=we.clamp(.78+C*.18+A*.05,0,1);let w=E+I,T=E+I*.6,R=E+I*.2;w=we.clamp(w-v*.09,0,1),T=we.clamp(T-v*.07,0,1),R=we.clamp(R-v*.05,0,1),n.data[p+0]=Math.round(w*255),n.data[p+1]=Math.round(T*255),n.data[p+2]=Math.round(R*255),n.data[p+3]=255;const U=we.clamp(.42+v*.32+_*.12,.18,.88),O=Math.round(U*255);i.data[p+0]=O,i.data[p+1]=O,i.data[p+2]=O,i.data[p+3]=255;const N=we.clamp(.93-v*.35-_*.18,.45,1),k=Math.round(N*255);r.data[p+0]=k,r.data[p+1]=k,r.data[p+2]=k,r.data[p+3]=255}const l=(d,f)=>{const p=(d+s)%s,g=(f+s)%s;return o[g*s+p]},h=2.1;for(let d=0;d<s;d+=1)for(let f=0;f<s;f+=1){const p=(d*s+f)*4,g=l(f-1,d),m=l(f+1,d),A=l(f,d-1),y=l(f,d+1),x=(m-g)*h,b=(y-A)*h,_=1,C=Math.sqrt(x*x+b*b+_*_)||1,v=x/C,I=b/C,E=_/C;a.data[p+0]=Math.round((v*.5+.5)*255),a.data[p+1]=Math.round((I*.5+.5)*255),a.data[p+2]=Math.round((E*.5+.5)*255),a.data[p+3]=255}const u=(d,{colorSpace:f})=>{const p=document.createElement("canvas");p.width=s,p.height=s,p.getContext("2d").putImageData(d,0,0);const m=new RA(p);return m.wrapS=m.wrapT=Hn,m.repeat.set(3,3),m.anisotropy=4,m.colorSpace=f,m.needsUpdate=!0,m};return Cr={map:u(n,{colorSpace:St}),normalMap:u(a,{colorSpace:Qt}),roughnessMap:u(i,{colorSpace:Qt}),aoMap:u(r,{colorSpace:Qt})},Cr}const rM=new Set(["","1","true","on","yes","y"]),aM=new Set(["0","false","off","no","n"]);function cu(s,e=!0){if(s==null)return e;const t=String(s).trim().toLowerCase();return rM.has(t)?!0:aM.has(t)?!1:e}function oM({queryKey:s,windowFlagKey:e,defaultValue:t=!0,devDefault:n=!0}={}){if(typeof window>"u")return t;if(s){const i=new URLSearchParams(window.location.search);if(i.has(s))return cu(i.get(s),t)}if(e&&typeof window[e]<"u"){const i=window[e];return typeof i=="boolean"?i:cu(i,t)}return t}function cM(s={}){const e=s.minutesPerDay??20,n=(Number.isFinite(e)?Math.max(0,e):0)*60;return{secondsPerDay:n,phaseAt(i=0){return!Number.isFinite(i)||n<=0?0:(i%n+n)%n/n}}}async function lM(){var Z,q,ve;console.log("🔧 Athens mainApp start");const s=new wm({antialias:!0});s.outputColorSpace=St,s.toneMapping=uu,s.toneMappingExposure=1,s.useLegacyLights=!1,s.localClippingEnabled=!0,iM(s),s.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(s.domElement),!(typeof import.meta<"u"&&tM)&&zI(s,{min:.2,max:2,step:.01,key:"F9"}),CI(s),aC(),XI({toggleKey:"KeyH"});const t=document.createElement("div");t.textContent="Press E to interact",Object.assign(t.style,{position:"fixed",left:"50%",bottom:"20%",transform:"translateX(-50%)",padding:"8px 12px",borderRadius:"6px",background:"rgba(0, 0, 0, 0.6)",color:"#fff",fontFamily:"sans-serif",fontSize:"14px",letterSpacing:"0.05em",opacity:"0",transition:"opacity 0.2s ease",pointerEvents:"none"}),document.body.appendChild(t);const n=document.createElement("div");Object.assign(n.style,{position:"fixed",right:"16px",bottom:"16px",padding:"6px 10px",borderRadius:"6px",background:"rgba(0, 0, 0, 0.6)",color:"#fff",fontFamily:"sans-serif",fontSize:"14px",letterSpacing:"0.05em",pointerEvents:"none",textTransform:"uppercase"}),document.body.appendChild(n);function i(F=0){const J=Math.max(0,Math.min(1,F))*24*60,he=Math.floor(J/60)%24,Ue=Math.floor(J%60);return`${he.toString().padStart(2,"0")}:${Ue.toString().padStart(2,"0")}`}let r="";const a=new Eu;a.userData=a.userData||{},a.userData.renderer=s;const o=F=>{if(!F)return;const J=Array.isArray(F)?F:[F];for(const he of J)if(he){for(const Ue of Object.values(he))Ue&&Ue.isTexture&&typeof Ue.dispose=="function"&&Ue.dispose();typeof he.dispose=="function"&&he.dispose()}},c=F=>{F&&F.traverse(J=>{J.isMesh&&(J.geometry&&typeof J.geometry.dispose=="function"&&J.geometry.dispose(),o(J.material))})},l=F=>{if(!F)return;const J=[...F.children];for(const he of J)c(he),F.remove(he)},h=()=>{var he,Ue,et;const F=((he=a.userData)==null?void 0:he.worldRoot)??a.getObjectByName(Sp);F&&(l(F),(Ue=F.parent)==null||Ue.remove(F));const J=new Lt;return J.name=Sp,J.userData=J.userData||{},J.userData.renderer=((et=a.userData)==null?void 0:et.renderer)||null,a.add(J),a.userData.worldRoot=J,J};a.fog=new $a(10526880,50,400);const u=new Zt(75,window.innerWidth/window.innerHeight,.1,2e3);u.position.set(0,5,10);const d=Vw(a),f=tC(a),p=new Gw(a,u,{getNightFactor:()=>f.nightFactor},{harbor:ti,agora:Ln,acropolis:Rr});await p.initFromManifest("audio/manifest.json"),await p.ensureUserGestureResume(),oM({queryKey:"audio",windowFlagKey:"SHOW_AUDIO_MIXER"})&&Hw(p);const m=Xw(a,1e3),A=iC(a),y=LC(a);if(jI(y),a.userData.terrain=y,a.userData.getHeightAt=(Z=y==null?void 0:y.userData)==null?void 0:Z.getHeightAt,typeof((q=y==null?void 0:y.userData)==null?void 0:q.getHeightAt)=="function"&&(a.userData.terrainHeightSampler=y.userData.getHeightAt),(()=>{try{const F=new URLSearchParams(window.location.search);if(F.has("occluder")){const J=F.get("occluder");return J===null||J===""||J==="1"||J==="true"||J==="on"}}catch{}return!1})()){const F=new ie(-.4,-.3),J=new ie(-95.7,-3.1);ZI(a,y,F,J,6,140)}const b=await HC(a,{bounds:bc}),_=XC(a,{center:ti}),C=new FI;a.add(C.mesh);const v=h(),I=(()=>{if(typeof window>"u")return!0;try{const F=new URLSearchParams(window.location.search);return F.has("roads")?cu(F.get("roads"),!0):!0}catch(F){return console.warn("Failed to parse roads visibility from query string:",F),!0}})(),{group:E,curve:w}=KC(v,y);E&&(E.visible=I);try{const F=[`${ya}models/landmarks/aristotle_tomb.glb`,"/models/landmarks/aristotle_tomb.glb"],J=await Mp(F);J?await bp(v,J,{position:Rr,scale:3,materialPreset:"marble"}):console.warn("Aristotle's Tomb not found. Expected at:",F)}catch(F){console.error("Failed to load Aristotle's Tomb:",F)}JC(v);const T=nS(v,y,{roadsVisible:I}),R=iS(v,y,w,{seed:42,buildingCount:140});C.fromStaticScene(a);const U=LI(v,{plazaLength:90,promenadeWidth:16,greensWidth:9,center:Ln,terrain:y});C.refresh();const O=new PI(s.domElement),N=new kI(O,C,{camera:u});v.add(N.object);const k=new S(0,0,10);N.object.position.copy(k);const Q=N.height*.5+.1;Oh(N.object,y,k.x,k.z,Q,{clampToSea:!0,seaLevel:it,minAboveSea:.25}),N.syncCapsuleToObject();const $=new Lt;$.name="DemoDoor",$.position.set(-2,0,-12);const ae=new Ut(1.2,2.4,.12),Ae=new rt({color:5911312}),Ce=new Be(ae,Ae);Ce.position.set(.6,1.2,0),Ce.castShadow=!0,Ce.receiveShadow=!0,$.add(Ce),$.userData.interactable=!0,$.userData.highlightTarget=Ce,$.userData.open=!1,$.userData.onUse=F=>{const J=!F.userData.open;F.userData.open=J,Ce.rotation.y=J?-Math.PI/2:0,console.log(`Door ${J?"opened":"closed"}`)},v.add($);const Ie=new Lt;Ie.name="DemoLamp",Ie.position.set(2,0,-12);const je=new Gt(.1,.1,3,12),$e=new rt({color:3158064}),j=new Be(je,$e);j.position.y=1.5,j.castShadow=!1,Ie.add(j);const se=new rt({color:2236962,emissive:new ue(16774581),emissiveIntensity:1.5}),Me=new Be(new Gn(.25,16,16),se);Me.position.y=3,Me.castShadow=!1,Ie.add(Me);const Qe=new Oi(16774581,1.5,12,2);Qe.position.y=3,Qe.castShadow=!0,Ie.add(Qe),Ie.userData.interactable=!0,Ie.userData.highlightTarget=Me,Ie.userData.light=Qe,Ie.userData.onUse=F=>{const J=F.userData.light;if(!J)return;const he=J.intensity>.1;J.intensity=he?0:1.5,se.emissiveIntensity=he?0:1.5,console.log(`Lamp ${he?"turned off":"turned on"}`)},v.add(Ie);const Le=()=>{const F=new Lt;F.name="FallbackAvatar";const J=new rt({color:5148407,metalness:.2,roughness:.6}),he=new Be(new Gt(.35,.35,1.2,16),J);he.castShadow=!0,he.receiveShadow=!0,he.position.y=.6,F.add(he);const Ue=new Be(new Gn(.32,16,16),new rt({color:16054271,roughness:.4}));return Ue.castShadow=!0,Ue.position.y=1.32,F.add(Ue),F},st=()=>{N.character&&(c(N.character),N.object.remove(N.character),N.character=void 0);const F=N.object.children.find(J=>J.name==="FallbackAvatar");F&&(c(F),N.object.remove(F))},xt=new Ig,P=`${ya}models/character/hero.glb`,pe="/models/character/hero.glb",le=`${ya}models/character/${encodeURIComponent("Hooded Adventurer.glb")}`,oe=`/models/character/${encodeURIComponent("Hooded Adventurer.glb")}`,re=()=>{st();const F=Le();N.object.add(F),F.position.set(0,0,0)},_e=[P,pe,le,oe].filter((F,J,he)=>F&&he.indexOf(F)===J);try{const{url:F,gltf:J,root:he}=await td({renderer:s,urls:_e,targetHeight:1.8});st(),xt.initializeFromGLTF(he,J.animations),N.attachCharacter(xt),F!==P&&F!==pe&&console.info(`Hero GLB not found at ${P}; using fallback avatar from ${F}.`),console.log("[Hero] Loaded:",F)}catch(F){console.error("[Hero] All candidates failed, using fallback avatar:",(F==null?void 0:F.message)||F),console.info(`Add your own hero model at ${P}.`),re()}const me=new NI(C),be=(ve=y==null?void 0:y.userData)==null?void 0:ve.getHeightAt;a.userData=a.userData||{},a.userData.terrain||(a.userData.terrain=y),typeof be=="function"&&(a.userData.terrainHeightSampler=be,typeof a.userData.getHeightAt!="function"&&(a.userData.getHeightAt=be)),me.clearBuildings(),TI();const qe=new Lt;qe.name="BuildingsRoot",v.add(qe);const Ke=[];if(U.walkingLoop){const F=GI(v,U.walkingLoop,{count:8,minSpeed:.7,maxSpeed:1.4,terrain:y});Ke.push(...F.updaters)}HI(v,w,{terrain:y}).then(F=>{F&&Array.isArray(F.updaters)&&Ke.push(...F.updaters)}).catch(F=>{console.warn("[NPC Loader] Failed to spawn GLB NPCs",F)});const D=(F={})=>{var Ft,mt;const{baseRadius:J=2.6,columnHeight:he=4.8,capHeight:Ue=.9,textures:et={}}=F,Xe=new Lt;Xe.name="PlaceholderMonument";const Et=!!F.collision;Xe.userData.noCollision=!Et;const ft=(Bt,{collidable:_n=Et}={})=>{Bt.castShadow=!0,Bt.receiveShadow=!0,Bt.userData.noCollision=!_n},Ze=Bg(),pt={map:et.map??Ze.map,normalMap:et.normalMap??Ze.normalMap,roughnessMap:et.roughnessMap??Ze.roughnessMap,aoMap:et.aoMap??Ze.aoMap},Rt=F.baseMaterial??new rt({map:pt.map,normalMap:pt.normalMap,roughnessMap:pt.roughnessMap,aoMap:pt.aoMap,aoMapIntensity:1,metalness:0,roughness:.68,color:new ue(.95,.95,.95)}),_t=typeof Rt.roughness=="number"?Rt.roughness:.45,It=typeof Rt.metalness=="number"?Rt.metalness:.05,Ct=F.accentMaterial??(()=>{if(typeof Rt.clone=="function"){const Bt=Rt.clone();return Bt.color=new ue(F.accentColor??13350814),Bt.roughness=F.accentRoughness??Math.max(0,_t-.05),Bt}return new rt({color:F.accentColor??13350814,roughness:F.accentRoughness??Math.max(0,_t-.05),metalness:It,map:pt.map,normalMap:pt.normalMap,aoMap:pt.aoMap,roughnessMap:pt.roughnessMap})})(),At=[],Mt=[.28,.24,.2],vi=[1.35,1.22,1.1];let zt=0;Mt.forEach((Bt,_n)=>{var vn;const Yt=vi[_n]??1,wi=new Gt(J*Yt,J*(Yt+.08),Bt,48);At.push(wi);const Nt=new Be(wi,Rt);ft(Nt);const En=((vn=wi.parameters)==null?void 0:vn.height)??Bt;zt+=En/2,Nt.position.y=zt,zt+=En/2,Xe.add(Nt)});const hs=.5,zi=new Gt(J*1.02,J*1.08,hs,48);At.push(zi);const Vi=new Be(zi,Ct);ft(Vi);const B=((Ft=zi.parameters)==null?void 0:Ft.height)??hs;zt+=B/2,Vi.position.y=zt,zt+=B/2,Xe.add(Vi);const H=new Gt(J*.85,J*.9,he,64,1);At.push(H);const V=new Be(H,Rt);ft(V),V.position.y=zt+he/2,zt+=he,Xe.add(V);const X=new Gt(J*1,J*1.2,Ue*.55,48);At.push(X);const G=new Be(X,Ct);ft(G);const ye=((mt=X.parameters)==null?void 0:mt.height)??Ue*.55;G.position.y=zt+ye/2,zt+=ye,Xe.add(G);const Se=Ue*.75,Oe=new Hi(J*1.05,Se,48,1,!1);At.push(Oe);const Re=new Be(Oe,Rt);ft(Re),Re.position.y=zt+Se/2,zt+=Se,Xe.add(Re);const We=new Gn(J*.22,24,16);At.push(We);const ze=new Be(We,Ct);ft(ze,{collidable:!1}),ze.position.y=zt+J*.22,zt+=J*.22*2,Xe.add(ze),At.forEach(Bt=>{var Yt;const _n=(Yt=Bt.attributes)==null?void 0:Yt.uv;_n&&Bt.setAttribute("uv2",_n.clone())});const ke=new Be(new oo(J*1.1,J*1.75,64),new yn({color:0,transparent:!0,opacity:.12,side:ln,depthWrite:!1}));ke.rotation.x=-Math.PI/2,ke.position.y=.015,ke.renderOrder=1,ke.castShadow=!1,ke.receiveShadow=!1,ke.userData.noCollision=!0,Xe.add(ke);const nt=new _l(16773336,1.15,42,Math.PI/5,.35,1.2);nt.position.set(6,zt*.5+5,6),nt.castShadow=!0,nt.shadow.mapSize.set(1024,1024),nt.shadow.bias=-5e-4,nt.userData.noCollision=!0,Xe.add(nt);const yt=new lt;yt.position.set(0,zt*.5,0),yt.userData.noCollision=!0,Xe.add(yt),nt.target=yt;const Dt=new Oi(13162239,.36,20,1.6);Dt.position.set(-4,zt*.4+3.5,-3),Dt.castShadow=!1,Dt.userData.noCollision=!0,Xe.add(Dt);const vt=new Oi(16775132,.58,18,1.4);if(vt.position.set(0,zt*.6+2.4,0),vt.castShadow=!0,vt.shadow.mapSize.set(512,512),vt.shadow.bias=-6e-4,vt.userData.noCollision=!0,Xe.add(vt),F.position instanceof S)Xe.position.copy(F.position);else if(F.position&&typeof F.position=="object"){const{x:Bt=0,y:_n=0,z:Yt=0}=F.position;Xe.position.set(Bt,_n,Yt)}typeof F.rotateY=="number"&&(Xe.rotation.y=F.rotateY),F.scale instanceof S?Xe.scale.copy(F.scale):typeof F.scale=="number"&&Xe.scale.setScalar(F.scale);const Tt=Xe.position.x,Ye=Xe.position.z;return Oh(Xe,y,Tt,Ye,.05,{clampToSea:!0,seaLevel:it,minAboveSea:.02}),v.add(Xe),Et&&C.refresh(),Xe},M=`${ya}models/buildings/`,z=F=>{if(!F)return null;if(F.isVector3)return F.clone();if(Array.isArray(F))return new S(F[0]??0,F[1]??0,F[2]??0);if(typeof F=="object"){const{x:J=0,y:he=0,z:Ue=0}=F;return new S(J,he,Ue)}return new S(0,0,0)},Y=(F={},J={})=>{var Ue,et;const he={...F};if(F.position){const Xe=z(F.position);if(Xe){const Et=(Ue=y==null?void 0:y.userData)==null?void 0:Ue.getHeightAt,ft=J.surfaceOffset??.05;if(J.alignToTerrain!==!1&&typeof Et=="function"){const pt=Et(Xe.x,Xe.z);Number.isFinite(pt)?Xe.y=pt+ft:Number.isFinite(Xe.y)||(Xe.y=ft)}else Number.isFinite(Xe.y)||(Xe.y=ft)}he.position=Xe}return!he.parent&&qe&&(he.parent=qe),he.heightSampler||(he.heightSampler=F.heightSampler??F.terrainSampler??be??((et=y==null?void 0:y.userData)==null?void 0:et.getHeightAt)),he},de=(F,J,he=.05)=>{let Ue=he;if(typeof be=="function"){const et=be(F,J);Number.isFinite(et)&&(Ue=et+he)}return new S(F,Ue,J)},ee=[{url:`${M}poseidon_temple_at_sounion_greece.glb`,position:de(-34,-12),rotateY:-Math.PI*.12,scale:1,collision:!0,name:"SamplePoseidonTemple"},{url:`${M}Akropol.glb`,position:de(6,-42),rotateY:Math.PI*.08,scale:1,collision:!1,name:"SampleAkropol"}];(await Promise.allSettled(ee.map(F=>me.loadBuilding(F.url,{position:F.position,rotateY:F.rotateY,scale:F.scale,collision:F.collision,parent:qe,heightSampler:be}).then(J=>(J&&F.name&&(J.name=F.name),J))))).forEach((F,J)=>{F.status==="rejected"&&console.error(`Sample building failed to load: ${ee[J].url}`,F.reason)});const xe=(F=[])=>F.map(J=>J?/^https?:/i.test(J)||J.startsWith(ya)||J.startsWith("/")?J:`${M}${J}`:null).filter(Boolean),De=async F=>{const J=F.displayName??F.name??"Building",he=Y(F.options??{},F),Ue=Y({...F.options??{},...F.placeholderOptions??{}},F),et=xe(F.files??[]),Xe=xe(F.fallbackFiles??[]),Et=_t=>{if(!_t||F.snapToGround===!1||!(he!=null&&he.position))return;const{x:It,z:Ct}=he.position,At=F.surfaceOffset??.05,Mt={clampToSea:!0,seaLevel:it,minAboveSea:F.minAboveSea??.02,...F.snapOptions??{}};Oh(_t,y,It,Ct,At,Mt)},ft=()=>{const _t={};if(he.position&&(_t.position=he.position),he.scale!==void 0&&(_t.scale=he.scale),he.rotation){const{x:It,y:Ct,z:At}=he.rotation;[It,Ct,At].some(Mt=>Number.isFinite(Mt))&&(_t.rotation={x:It,y:Ct,z:At})}else{const It={};let Ct=!1;const At=[["rotateX","x"],["rotateY","y"],["rotateZ","z"]];for(const[Mt,vi]of At){const zt=he[Mt];Number.isFinite(zt)&&(It[vi]=zt,Ct=!0)}Ct&&(_t.rotation=It)}return _t},Ze=_t=>{var Ct;if(!_t)return;const It=!!(he!=null&&he.collision);(Ct=_t.traverse)==null||Ct.call(_t,At=>{At!=null&&At.isMesh&&(At.userData=At.userData||{},At.userData.noCollision=!It)}),It&&typeof(C==null?void 0:C.refresh)=="function"&&C.refresh()},pt=async(_t,It)=>{if(!_t.length)return null;const Ct=await Mp(_t);if(!Ct)return null;try{const At=ft(),Mt=await bp(v,Ct,At);if(!Mt)return null;if(F.name&&(!Mt.name||Mt.name==="")&&(Mt.name=F.name),Et(Mt),Ze(Mt),typeof F.onLoaded=="function")try{F.onLoaded(Mt,{url:Ct,label:It})}catch(vi){console.warn(`loadBuildingPlacement onLoaded hook failed for ${J}`,vi)}return Mt}catch(At){const Mt=It==="fallback"?"Fallback":"";return console.error(`${Mt?`${Mt} `:""}${J} failed to load from ${Ct}`,At),null}};let Rt=await pt(et,"primary");return!Rt&&Xe.length&&(F.missingPrimaryMessage&&console.info(F.missingPrimaryMessage),Rt=await pt(Xe,"fallback"),Rt?F.fallbackMessage&&console.info(F.fallbackMessage):F.fallbackFailureMessage&&console.error(F.fallbackFailureMessage)),Rt||(!Xe.length&&F.missingPrimaryMessage&&console.info(F.missingPrimaryMessage),F.allMissingMessage&&console.info(F.allMissingMessage),F.spawnPlaceholder!==!1&&D({...Ue,collision:F.placeholderCollision??Ue.collision??he.collision})),Rt},Fe=`${M}Akropol.glb`,ge=`${M}poseidon_temple_at_sounion_greece.glb`,Ee=[{name:"acropolis",displayName:"Acropolis",files:["Akropol.glb"],options:{position:Rr.clone(),rotateY:Math.PI*.22,scale:.45,collision:!0},surfaceOffset:.18,snapOptions:{minAboveSea:.5},missingPrimaryMessage:`Akropol asset missing at ${Fe}; add it under public/models/buildings/ to replace the placeholder.`},{name:"poseidon-temple",displayName:"Temple of Poseidon",files:["poseidon_temple_at_sounion_greece.glb"],options:{position:new S(-150,0,42),rotateY:-Math.PI*.35,scale:.38,collision:!0},surfaceOffset:.08,snapOptions:{minAboveSea:.05},missingPrimaryMessage:`Poseidon temple model missing at ${ge}; add it under public/models/buildings/ to replace the placeholder.`}];for(const F of Ee)await De(F);const Ne=rC(s,u,a),He=new Wu,W=cM(),fe={timeOfDayPhase:0};Ff(fe,0);function L(){requestAnimationFrame(L);const F=He.getDelta(),J=He.elapsedTime;if(W.secondsPerDay>0){const Et=F/W.secondsPerDay,ft=(fe.timeOfDayPhase??0)+Et,Ze=ft-Math.floor(ft);Ff(fe,Ze)}const he=fe.timeOfDayPhase??0,Ue=qw(d,fe);nC(f,Ue),YC(_,f.nightFactor),ep(T,f.nightFactor),ep(R,f.nightFactor),Yw(m,he),sC(A,Ue),PC(y,J),VC(b,F,Ue,f.nightFactor),p.update(N==null?void 0:N.position),N.update(F);for(const Et of Ke)Et(F);const et=Ne.updateHover();t.style.opacity=et?"1":"0";const Xe=i(he);Xe!==r&&(n.textContent=`Time: ${Xe}`,r=Xe),s.render(a,u)}L();const K=()=>{try{if(N&&N.position&&Number.isFinite(N.position.x))return N.position}catch{}return(u==null?void 0:u.position)??{x:0,y:0,z:0}},ne=()=>{try{const F=new S(0,0,-1);return F.applyQuaternion(u.quaternion),F.y=0,F.normalize(),F}catch{return{x:0,y:0,z:1}}},ce=F=>{var Ue,et;const J=JI(v,F),he=(et=(Ue=y==null?void 0:y.userData)==null?void 0:Ue.getHeightAt)==null?void 0:et.call(Ue,F.x,F.z);Number.isFinite(he)&&(J.position.y=he)};console.log("[HUD] mounting…"),KI({getPosition:K,getDirection:ne,onPin:ce}),s.domElement.addEventListener("pointerdown",F=>{F.button===0&&Ne.useObject()}),window.addEventListener("keydown",F=>{F.code==="KeyE"&&Ne.useObject()}),window.addEventListener("resize",()=>{u.aspect=window.innerWidth/window.innerHeight,u.updateProjectionMatrix(),s.setSize(window.innerWidth,window.innerHeight)})}(async()=>{try{await lM(),console.log("✅ mainApp loaded successfully")}catch(s){console.error("❌ Error in mainApp:",s)}})();
