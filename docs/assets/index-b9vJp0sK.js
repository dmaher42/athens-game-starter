(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Fl="180",hy={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},uy={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},ZA=0,Uu=1,$A=2,dy=3,fy=0,ld=1,hd=2,Li=3,wi=0,Mn=1,An=2,ts=0,cr=1,nl=2,Nu=3,ku=4,em=5,gs=100,tm=101,nm=102,im=103,sm=104,rm=200,am=201,om=202,cm=203,il=204,sl=205,lm=206,hm=207,um=208,dm=209,fm=210,pm=211,Am=212,mm=213,gm=214,rl=0,al=1,ol=2,Ar=3,cl=4,ll=5,hl=6,ul=7,_o=0,ym=1,bm=2,ki=0,xm=1,_m=2,Em=3,Ul=4,vm=5,wm=6,Sm=7,Ou="attached",Cm="detached",Nl=300,ss=301,Ss=302,to=303,no=304,va=306,On=1e3,ni=1001,oa=1002,Jt=1003,Eo=1004,py=1004,ir=1005,Ay=1005,Qt=1006,ia=1007,my=1007,Wn=1008,gy=1008,yt=1009,ud=1010,dd=1011,ca=1012,kl=1013,rs=1014,rn=1015,ei=1016,Ol=1017,Ql=1018,la=1020,vo=35902,wo=35899,fd=1021,ha=1022,zt=1023,ua=1026,da=1027,es=1028,So=1029,ys=1030,Gl=1031,yy=1032,zl=1033,lr=33776,_s=33777,hr=33778,sa=33779,io=35840,dl=35841,mr=35842,fa=35843,so=36196,pa=37492,Aa=37496,Es=37808,fl=37809,pl=37810,Al=37811,ur=37812,ml=37813,gl=37814,yl=37815,bl=37816,xl=37817,_l=37818,El=37819,vl=37820,wl=37821,gr=36492,Sl=36494,ro=36495,ao=36283,oo=36284,co=36285,lo=36286,Mm=2200,Im=2201,Tm=2202,ma=2300,ga=2301,Xc=2302,sr=2400,rr=2401,ho=2402,Hl=2500,pd=2501,Bm=0,Ad=1,Cl=2,Rm=3200,Dm=3201,by=3202,xy=3203,Ms=0,Pm=1,Ei="",Tt="srgb",Ot="srgb-linear",uo="linear",Lt="srgb",_y=0,Zs=7680,Ey=7681,vy=7682,wy=7683,Sy=34055,Cy=34056,My=5386,Iy=512,Ty=513,By=514,Ry=515,Dy=516,Py=517,Ly=518,Qu=519,Lm=512,Fm=513,Um=514,md=515,Nm=516,km=517,Om=518,Qm=519,fo=35044,li=35048,Fy=35040,Uy=35045,Ny=35049,ky=35041,Oy=35046,Qy=35050,Gy=35042,zy="100",Gu="300 es",ii=2e3,ya=2001,Hy={COMPUTE:"compute",RENDER:"render"},Vy={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},Wy={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};class Gi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const i=n[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,a=i.length;r<a;r++)i[r].call(this,e);e.target=null}}}const En=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let of=1234567;const dr=Math.PI/180,ba=180/Math.PI;function si(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(En[s&255]+En[s>>8&255]+En[s>>16&255]+En[s>>24&255]+"-"+En[e&255]+En[e>>8&255]+"-"+En[e>>16&15|64]+En[e>>24&255]+"-"+En[t&63|128]+En[t>>8&255]+"-"+En[t>>16&255]+En[t>>24&255]+En[n&255]+En[n>>8&255]+En[n>>16&255]+En[n>>24&255]).toLowerCase()}function rt(s,e,t){return Math.max(e,Math.min(t,s))}function gd(s,e){return(s%e+e)%e}function qy(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function Xy(s,e,t){return s!==e?(t-s)/(e-s):0}function ja(s,e,t){return(1-t)*s+t*e}function Yy(s,e,t,n){return ja(s,e,1-Math.exp(-t*n))}function Ky(s,e=1){return e-Math.abs(gd(s,e*2)-e)}function Jy(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function jy(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function Zy(s,e){return s+Math.floor(Math.random()*(e-s+1))}function $y(s,e){return s+Math.random()*(e-s)}function eb(s){return s*(.5-Math.random())}function tb(s){s!==void 0&&(of=s);let e=of+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function nb(s){return s*dr}function ib(s){return s*ba}function sb(s){return(s&s-1)===0&&s!==0}function rb(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function ab(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function ob(s,e,t,n,i){const r=Math.cos,a=Math.sin,o=r(t/2),c=a(t/2),l=r((e+n)/2),h=a((e+n)/2),u=r((e-n)/2),d=a((e-n)/2),f=r((n-e)/2),p=a((n-e)/2);switch(i){case"XYX":s.set(o*h,c*u,c*d,o*l);break;case"YZY":s.set(c*d,o*h,c*u,o*l);break;case"ZXZ":s.set(c*u,c*d,o*h,o*l);break;case"XZX":s.set(o*h,c*p,c*f,o*l);break;case"YXY":s.set(c*f,o*h,c*p,o*l);break;case"ZYZ":s.set(c*p,c*f,o*h,o*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Un(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function At(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const ue={DEG2RAD:dr,RAD2DEG:ba,generateUUID:si,clamp:rt,euclideanModulo:gd,mapLinear:qy,inverseLerp:Xy,lerp:ja,damp:Yy,pingpong:Ky,smoothstep:Jy,smootherstep:jy,randInt:Zy,randFloat:$y,randFloatSpread:eb,seededRandom:tb,degToRad:nb,radToDeg:ib,isPowerOfTwo:sb,ceilPowerOfTwo:rb,floorPowerOfTwo:ab,setQuaternionFromProperEuler:ob,normalize:At,denormalize:Un};class ${constructor(e=0,t=0){$.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=rt(this.x,e.x,t.x),this.y=rt(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=rt(this.x,e,t),this.y=rt(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(rt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(rt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class an{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,a,o){let c=n[i+0],l=n[i+1],h=n[i+2],u=n[i+3];const d=r[a+0],f=r[a+1],p=r[a+2],g=r[a+3];if(o===0){e[t+0]=c,e[t+1]=l,e[t+2]=h,e[t+3]=u;return}if(o===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=g;return}if(u!==g||c!==d||l!==f||h!==p){let m=1-o;const A=c*d+l*f+h*p+u*g,x=A>=0?1:-1,b=1-A*A;if(b>Number.EPSILON){const _=Math.sqrt(b),w=Math.atan2(_,A*x);m=Math.sin(m*w)/_,o=Math.sin(o*w)/_}const y=o*x;if(c=c*m+d*y,l=l*m+f*y,h=h*m+p*y,u=u*m+g*y,m===1-o){const _=1/Math.sqrt(c*c+l*l+h*h+u*u);c*=_,l*=_,h*=_,u*=_}}e[t]=c,e[t+1]=l,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,r,a){const o=n[i],c=n[i+1],l=n[i+2],h=n[i+3],u=r[a],d=r[a+1],f=r[a+2],p=r[a+3];return e[t]=o*p+h*u+c*f-l*d,e[t+1]=c*p+h*d+l*u-o*f,e[t+2]=l*p+h*f+o*d-c*u,e[t+3]=h*p-o*u-c*d-l*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,r=e._z,a=e._order,o=Math.cos,c=Math.sin,l=o(n/2),h=o(i/2),u=o(r/2),d=c(n/2),f=c(i/2),p=c(r/2);switch(a){case"XYZ":this._x=d*h*u+l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u+d*f*p;break;case"YZX":this._x=d*h*u+l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u-d*f*p;break;case"XZY":this._x=d*h*u-l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],o=t[5],c=t[9],l=t[2],h=t[6],u=t[10],d=n+o+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-c)*f,this._y=(r-l)*f,this._z=(a-i)*f}else if(n>o&&n>u){const f=2*Math.sqrt(1+n-o-u);this._w=(h-c)/f,this._x=.25*f,this._y=(i+a)/f,this._z=(r+l)/f}else if(o>u){const f=2*Math.sqrt(1+o-n-u);this._w=(r-l)/f,this._x=(i+a)/f,this._y=.25*f,this._z=(c+h)/f}else{const f=2*Math.sqrt(1+u-n-o);this._w=(a-i)/f,this._x=(r+l)/f,this._y=(c+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<1e-8?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(rt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,o=t._x,c=t._y,l=t._z,h=t._w;return this._x=n*h+a*o+i*l-r*c,this._y=i*h+a*c+r*o-n*l,this._z=r*h+a*l+n*c-i*o,this._w=a*h-n*o-i*c-r*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let o=a*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const c=1-o*o;if(c<=Number.EPSILON){const f=1-t;return this._w=f*a+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*r+t*this._z,this.normalize(),this}const l=Math.sqrt(c),h=Math.atan2(l,o),u=Math.sin((1-t)*h)/l,d=Math.sin(t*h)/l;return this._w=a*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class S{constructor(e=0,t=0,n=0){S.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(cf.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(cf.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,o=e.z,c=e.w,l=2*(a*i-o*n),h=2*(o*t-r*i),u=2*(r*n-a*t);return this.x=t+c*l+a*u-o*h,this.y=n+c*h+o*l-r*u,this.z=i+c*u+r*h-a*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=rt(this.x,e.x,t.x),this.y=rt(this.y,e.y,t.y),this.z=rt(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=rt(this.x,e,t),this.y=rt(this.y,e,t),this.z=rt(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(rt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,o=t.y,c=t.z;return this.x=i*c-r*o,this.y=r*a-n*c,this.z=n*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Ah.copy(this).projectOnVector(e),this.sub(Ah)}reflect(e){return this.sub(Ah.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(rt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ah=new S,cf=new an;class dt{constructor(e,t,n,i,r,a,o,c,l){dt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,a,o,c,l)}set(e,t,n,i,r,a,o,c,l){const h=this.elements;return h[0]=e,h[1]=i,h[2]=o,h[3]=t,h[4]=r,h[5]=c,h[6]=n,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[3],c=n[6],l=n[1],h=n[4],u=n[7],d=n[2],f=n[5],p=n[8],g=i[0],m=i[3],A=i[6],x=i[1],b=i[4],y=i[7],_=i[2],w=i[5],C=i[8];return r[0]=a*g+o*x+c*_,r[3]=a*m+o*b+c*w,r[6]=a*A+o*y+c*C,r[1]=l*g+h*x+u*_,r[4]=l*m+h*b+u*w,r[7]=l*A+h*y+u*C,r[2]=d*g+f*x+p*_,r[5]=d*m+f*b+p*w,r[8]=d*A+f*y+p*C,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],c=e[6],l=e[7],h=e[8];return t*a*h-t*o*l-n*r*h+n*o*c+i*r*l-i*a*c}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],c=e[6],l=e[7],h=e[8],u=h*a-o*l,d=o*c-h*r,f=l*r-a*c,p=t*u+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return e[0]=u*g,e[1]=(i*l-h*n)*g,e[2]=(o*n-i*a)*g,e[3]=d*g,e[4]=(h*t-i*c)*g,e[5]=(i*r-o*t)*g,e[6]=f*g,e[7]=(n*c-l*t)*g,e[8]=(a*t-n*r)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,o){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*a+l*o)+a+e,-i*l,i*c,-i*(-l*a+c*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(mh.makeScale(e,t)),this}rotate(e){return this.premultiply(mh.makeRotation(-e)),this}translate(e,t){return this.premultiply(mh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const mh=new dt;function Gm(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const cb={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function $r(s,e){return new cb[s](e)}function po(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function zm(){const s=po("canvas");return s.style.display="block",s}const lf={};function Ao(s){s in lf||(lf[s]=!0,console.warn(s))}function lb(s,e,t){return new Promise(function(n,i){function r(){switch(s.clientWaitSync(e,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(r,t);break;default:n()}}setTimeout(r,t)})}const hf=new dt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),uf=new dt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function hb(){const s={enabled:!0,workingColorSpace:Ot,spaces:{},convert:function(i,r,a){return this.enabled===!1||r===a||!r||!a||(this.spaces[r].transfer===Lt&&(i.r=ns(i.r),i.g=ns(i.g),i.b=ns(i.b)),this.spaces[r].primaries!==this.spaces[a].primaries&&(i.applyMatrix3(this.spaces[r].toXYZ),i.applyMatrix3(this.spaces[a].fromXYZ)),this.spaces[a].transfer===Lt&&(i.r=ra(i.r),i.g=ra(i.g),i.b=ra(i.b))),i},workingToColorSpace:function(i,r){return this.convert(i,this.workingColorSpace,r)},colorSpaceToWorking:function(i,r){return this.convert(i,r,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===Ei?uo:this.spaces[i].transfer},getToneMappingMode:function(i){return this.spaces[i].outputColorSpaceConfig.toneMappingMode||"standard"},getLuminanceCoefficients:function(i,r=this.workingColorSpace){return i.fromArray(this.spaces[r].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,r,a){return i.copy(this.spaces[r].toXYZ).multiply(this.spaces[a].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(i,r){return Ao("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),s.workingToColorSpace(i,r)},toWorkingColorSpace:function(i,r){return Ao("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),s.colorSpaceToWorking(i,r)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[Ot]:{primaries:e,whitePoint:n,transfer:uo,toXYZ:hf,fromXYZ:uf,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:Tt},outputColorSpaceConfig:{drawingBufferColorSpace:Tt}},[Tt]:{primaries:e,whitePoint:n,transfer:Lt,toXYZ:hf,fromXYZ:uf,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:Tt}}}),s}const xt=hb();function ns(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function ra(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let Sr;class Hm{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{Sr===void 0&&(Sr=po("canvas")),Sr.width=e.width,Sr.height=e.height;const i=Sr.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=Sr}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=po("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let a=0;a<r.length;a++)r[a]=ns(r[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(ns(t[n]/255)*255):t[n]=ns(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let ub=0;class bs{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:ub++}),this.uuid=si(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return typeof HTMLVideoElement<"u"&&t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight,0):t instanceof VideoFrame?e.set(t.displayHeight,t.displayWidth,0):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let a=0,o=i.length;a<o;a++)i[a].isDataTexture?r.push(gh(i[a].image)):r.push(gh(i[a]))}else r=gh(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function gh(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?Hm.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let db=0;const yh=new S;class Ht extends Gi{constructor(e=Ht.DEFAULT_IMAGE,t=Ht.DEFAULT_MAPPING,n=ni,i=ni,r=Qt,a=Wn,o=zt,c=yt,l=Ht.DEFAULT_ANISOTROPY,h=Ei){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:db++}),this.uuid=si(),this.name="",this.source=new bs(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=c,this.offset=new $(0,0),this.repeat=new $(1,1),this.center=new $(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new dt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(yh).x}get height(){return this.source.getSize(yh).y}get depth(){return this.source.getSize(yh).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Nl)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case On:e.x=e.x-Math.floor(e.x);break;case ni:e.x=e.x<0?0:1;break;case oa:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case On:e.y=e.y-Math.floor(e.y);break;case ni:e.y=e.y<0?0:1;break;case oa:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Ht.DEFAULT_IMAGE=null;Ht.DEFAULT_MAPPING=Nl;Ht.DEFAULT_ANISOTROPY=1;class wt{constructor(e=0,t=0,n=0,i=1){wt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const c=e.elements,l=c[0],h=c[4],u=c[8],d=c[1],f=c[5],p=c[9],g=c[2],m=c[6],A=c[10];if(Math.abs(h-d)<.01&&Math.abs(u-g)<.01&&Math.abs(p-m)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+g)<.1&&Math.abs(p+m)<.1&&Math.abs(l+f+A-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const b=(l+1)/2,y=(f+1)/2,_=(A+1)/2,w=(h+d)/4,C=(u+g)/4,T=(p+m)/4;return b>y&&b>_?b<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(b),i=w/n,r=C/n):y>_?y<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(y),n=w/i,r=T/i):_<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(_),n=C/r,i=T/r),this.set(n,i,r,t),this}let x=Math.sqrt((m-p)*(m-p)+(u-g)*(u-g)+(d-h)*(d-h));return Math.abs(x)<.001&&(x=1),this.x=(m-p)/x,this.y=(u-g)/x,this.z=(d-h)/x,this.w=Math.acos((l+f+A-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=rt(this.x,e.x,t.x),this.y=rt(this.y,e.y,t.y),this.z=rt(this.z,e.z,t.z),this.w=rt(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=rt(this.x,e,t),this.y=rt(this.y,e,t),this.z=rt(this.z,e,t),this.w=rt(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(rt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class yd extends Gi{constructor(e=1,t=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Qt,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=n.depth,this.scissor=new wt(0,0,e,t),this.scissorTest=!1,this.viewport=new wt(0,0,e,t);const i={width:e,height:t,depth:n.depth},r=new Ht(i);this.textures=[];const a=n.count;for(let o=0;o<a;o++)this.textures[o]=r.clone(),this.textures[o].isRenderTargetTexture=!0,this.textures[o].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(e={}){const t={minFilter:Qt,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const i=Object.assign({},e.textures[t].image);this.textures[t].source=new bs(i)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Si extends yd{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Vl extends Ht{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Jt,this.minFilter=Jt,this.wrapR=ni,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class fb extends Si{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Vl(null,e,t,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Co extends Ht{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Jt,this.minFilter=Jt,this.wrapR=ni,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class pb extends Si{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Co(null,e,t,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Yt{constructor(e=new S(1/0,1/0,1/0),t=new S(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(gi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(gi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=gi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const r=n.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let a=0,o=r.count;a<o;a++)e.isMesh===!0?e.getVertexPosition(a,gi):gi.fromBufferAttribute(r,a),gi.applyMatrix4(e.matrixWorld),this.expandByPoint(gi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Qo.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Qo.copy(n.boundingBox)),Qo.applyMatrix4(e.matrixWorld),this.union(Qo)}const i=e.children;for(let r=0,a=i.length;r<a;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,gi),gi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Ta),Go.subVectors(this.max,Ta),Cr.subVectors(e.a,Ta),Mr.subVectors(e.b,Ta),Ir.subVectors(e.c,Ta),ls.subVectors(Mr,Cr),hs.subVectors(Ir,Mr),Ds.subVectors(Cr,Ir);let t=[0,-ls.z,ls.y,0,-hs.z,hs.y,0,-Ds.z,Ds.y,ls.z,0,-ls.x,hs.z,0,-hs.x,Ds.z,0,-Ds.x,-ls.y,ls.x,0,-hs.y,hs.x,0,-Ds.y,Ds.x,0];return!bh(t,Cr,Mr,Ir,Go)||(t=[1,0,0,0,1,0,0,0,1],!bh(t,Cr,Mr,Ir,Go))?!1:(zo.crossVectors(ls,hs),t=[zo.x,zo.y,zo.z],bh(t,Cr,Mr,Ir,Go))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,gi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(gi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Wi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Wi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Wi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Wi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Wi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Wi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Wi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Wi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Wi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const Wi=[new S,new S,new S,new S,new S,new S,new S,new S],gi=new S,Qo=new Yt,Cr=new S,Mr=new S,Ir=new S,ls=new S,hs=new S,Ds=new S,Ta=new S,Go=new S,zo=new S,Ps=new S;function bh(s,e,t,n,i){for(let r=0,a=s.length-3;r<=a;r+=3){Ps.fromArray(s,r);const o=i.x*Math.abs(Ps.x)+i.y*Math.abs(Ps.y)+i.z*Math.abs(Ps.z),c=e.dot(Ps),l=t.dot(Ps),h=n.dot(Ps);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>o)return!1}return!0}const Ab=new Yt,Ba=new S,xh=new S;class on{constructor(e=new S,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Ab.setFromPoints(e).getCenter(n);let i=0;for(let r=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Ba.subVectors(e,this.center);const t=Ba.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Ba,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(xh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Ba.copy(e.center).add(xh)),this.expandByPoint(Ba.copy(e.center).sub(xh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const qi=new S,_h=new S,Ho=new S,us=new S,Eh=new S,Vo=new S,vh=new S;class wa{constructor(e=new S,t=new S(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,qi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=qi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(qi.copy(this.origin).addScaledVector(this.direction,t),qi.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){_h.copy(e).add(t).multiplyScalar(.5),Ho.copy(t).sub(e).normalize(),us.copy(this.origin).sub(_h);const r=e.distanceTo(t)*.5,a=-this.direction.dot(Ho),o=us.dot(this.direction),c=-us.dot(Ho),l=us.lengthSq(),h=Math.abs(1-a*a);let u,d,f,p;if(h>0)if(u=a*c-o,d=a*o-c,p=r*h,u>=0)if(d>=-p)if(d<=p){const g=1/h;u*=g,d*=g,f=u*(u+a*d+2*o)+d*(a*u+d+2*c)+l}else d=r,u=Math.max(0,-(a*d+o)),f=-u*u+d*(d+2*c)+l;else d=-r,u=Math.max(0,-(a*d+o)),f=-u*u+d*(d+2*c)+l;else d<=-p?(u=Math.max(0,-(-a*r+o)),d=u>0?-r:Math.min(Math.max(-r,-c),r),f=-u*u+d*(d+2*c)+l):d<=p?(u=0,d=Math.min(Math.max(-r,-c),r),f=d*(d+2*c)+l):(u=Math.max(0,-(a*r+o)),d=u>0?r:Math.min(Math.max(-r,-c),r),f=-u*u+d*(d+2*c)+l);else d=a>0?-r:r,u=Math.max(0,-(a*d+o)),f=-u*u+d*(d+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,u),i&&i.copy(_h).addScaledVector(Ho,d),f}intersectSphere(e,t){qi.subVectors(e.center,this.origin);const n=qi.dot(this.direction),i=qi.dot(qi)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),o=n-a,c=n+a;return c<0?null:o<0?this.at(c,t):this.at(o,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,o,c;const l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return l>=0?(n=(e.min.x-d.x)*l,i=(e.max.x-d.x)*l):(n=(e.max.x-d.x)*l,i=(e.min.x-d.x)*l),h>=0?(r=(e.min.y-d.y)*h,a=(e.max.y-d.y)*h):(r=(e.max.y-d.y)*h,a=(e.min.y-d.y)*h),n>a||r>i||((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),u>=0?(o=(e.min.z-d.z)*u,c=(e.max.z-d.z)*u):(o=(e.max.z-d.z)*u,c=(e.min.z-d.z)*u),n>c||o>i)||((o>n||n!==n)&&(n=o),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,qi)!==null}intersectTriangle(e,t,n,i,r){Eh.subVectors(t,e),Vo.subVectors(n,e),vh.crossVectors(Eh,Vo);let a=this.direction.dot(vh),o;if(a>0){if(i)return null;o=1}else if(a<0)o=-1,a=-a;else return null;us.subVectors(this.origin,e);const c=o*this.direction.dot(Vo.crossVectors(us,Vo));if(c<0)return null;const l=o*this.direction.dot(Eh.cross(us));if(l<0||c+l>a)return null;const h=-o*us.dot(vh);return h<0?null:this.at(h/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Ke{constructor(e,t,n,i,r,a,o,c,l,h,u,d,f,p,g,m){Ke.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,a,o,c,l,h,u,d,f,p,g,m)}set(e,t,n,i,r,a,o,c,l,h,u,d,f,p,g,m){const A=this.elements;return A[0]=e,A[4]=t,A[8]=n,A[12]=i,A[1]=r,A[5]=a,A[9]=o,A[13]=c,A[2]=l,A[6]=h,A[10]=u,A[14]=d,A[3]=f,A[7]=p,A[11]=g,A[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ke().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Tr.setFromMatrixColumn(e,0).length(),r=1/Tr.setFromMatrixColumn(e,1).length(),a=1/Tr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),o=Math.sin(n),c=Math.cos(i),l=Math.sin(i),h=Math.cos(r),u=Math.sin(r);if(e.order==="XYZ"){const d=a*h,f=a*u,p=o*h,g=o*u;t[0]=c*h,t[4]=-c*u,t[8]=l,t[1]=f+p*l,t[5]=d-g*l,t[9]=-o*c,t[2]=g-d*l,t[6]=p+f*l,t[10]=a*c}else if(e.order==="YXZ"){const d=c*h,f=c*u,p=l*h,g=l*u;t[0]=d+g*o,t[4]=p*o-f,t[8]=a*l,t[1]=a*u,t[5]=a*h,t[9]=-o,t[2]=f*o-p,t[6]=g+d*o,t[10]=a*c}else if(e.order==="ZXY"){const d=c*h,f=c*u,p=l*h,g=l*u;t[0]=d-g*o,t[4]=-a*u,t[8]=p+f*o,t[1]=f+p*o,t[5]=a*h,t[9]=g-d*o,t[2]=-a*l,t[6]=o,t[10]=a*c}else if(e.order==="ZYX"){const d=a*h,f=a*u,p=o*h,g=o*u;t[0]=c*h,t[4]=p*l-f,t[8]=d*l+g,t[1]=c*u,t[5]=g*l+d,t[9]=f*l-p,t[2]=-l,t[6]=o*c,t[10]=a*c}else if(e.order==="YZX"){const d=a*c,f=a*l,p=o*c,g=o*l;t[0]=c*h,t[4]=g-d*u,t[8]=p*u+f,t[1]=u,t[5]=a*h,t[9]=-o*h,t[2]=-l*h,t[6]=f*u+p,t[10]=d-g*u}else if(e.order==="XZY"){const d=a*c,f=a*l,p=o*c,g=o*l;t[0]=c*h,t[4]=-u,t[8]=l*h,t[1]=d*u+g,t[5]=a*h,t[9]=f*u-p,t[2]=p*u-f,t[6]=o*h,t[10]=g*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(mb,e,gb)}lookAt(e,t,n){const i=this.elements;return jn.subVectors(e,t),jn.lengthSq()===0&&(jn.z=1),jn.normalize(),ds.crossVectors(n,jn),ds.lengthSq()===0&&(Math.abs(n.z)===1?jn.x+=1e-4:jn.z+=1e-4,jn.normalize(),ds.crossVectors(n,jn)),ds.normalize(),Wo.crossVectors(jn,ds),i[0]=ds.x,i[4]=Wo.x,i[8]=jn.x,i[1]=ds.y,i[5]=Wo.y,i[9]=jn.y,i[2]=ds.z,i[6]=Wo.z,i[10]=jn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[4],c=n[8],l=n[12],h=n[1],u=n[5],d=n[9],f=n[13],p=n[2],g=n[6],m=n[10],A=n[14],x=n[3],b=n[7],y=n[11],_=n[15],w=i[0],C=i[4],T=i[8],v=i[12],E=i[1],B=i[5],D=i[9],F=i[13],N=i[2],G=i[6],k=i[10],J=i[14],U=i[3],ee=i[7],Ae=i[11],oe=i[15];return r[0]=a*w+o*E+c*N+l*U,r[4]=a*C+o*B+c*G+l*ee,r[8]=a*T+o*D+c*k+l*Ae,r[12]=a*v+o*F+c*J+l*oe,r[1]=h*w+u*E+d*N+f*U,r[5]=h*C+u*B+d*G+f*ee,r[9]=h*T+u*D+d*k+f*Ae,r[13]=h*v+u*F+d*J+f*oe,r[2]=p*w+g*E+m*N+A*U,r[6]=p*C+g*B+m*G+A*ee,r[10]=p*T+g*D+m*k+A*Ae,r[14]=p*v+g*F+m*J+A*oe,r[3]=x*w+b*E+y*N+_*U,r[7]=x*C+b*B+y*G+_*ee,r[11]=x*T+b*D+y*k+_*Ae,r[15]=x*v+b*F+y*J+_*oe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],o=e[5],c=e[9],l=e[13],h=e[2],u=e[6],d=e[10],f=e[14],p=e[3],g=e[7],m=e[11],A=e[15];return p*(+r*c*u-i*l*u-r*o*d+n*l*d+i*o*f-n*c*f)+g*(+t*c*f-t*l*d+r*a*d-i*a*f+i*l*h-r*c*h)+m*(+t*l*u-t*o*f-r*a*u+n*a*f+r*o*h-n*l*h)+A*(-i*o*h-t*c*u+t*o*d+i*a*u-n*a*d+n*c*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],c=e[6],l=e[7],h=e[8],u=e[9],d=e[10],f=e[11],p=e[12],g=e[13],m=e[14],A=e[15],x=u*m*l-g*d*l+g*c*f-o*m*f-u*c*A+o*d*A,b=p*d*l-h*m*l-p*c*f+a*m*f+h*c*A-a*d*A,y=h*g*l-p*u*l+p*o*f-a*g*f-h*o*A+a*u*A,_=p*u*c-h*g*c-p*o*d+a*g*d+h*o*m-a*u*m,w=t*x+n*b+i*y+r*_;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/w;return e[0]=x*C,e[1]=(g*d*r-u*m*r-g*i*f+n*m*f+u*i*A-n*d*A)*C,e[2]=(o*m*r-g*c*r+g*i*l-n*m*l-o*i*A+n*c*A)*C,e[3]=(u*c*r-o*d*r-u*i*l+n*d*l+o*i*f-n*c*f)*C,e[4]=b*C,e[5]=(h*m*r-p*d*r+p*i*f-t*m*f-h*i*A+t*d*A)*C,e[6]=(p*c*r-a*m*r-p*i*l+t*m*l+a*i*A-t*c*A)*C,e[7]=(a*d*r-h*c*r+h*i*l-t*d*l-a*i*f+t*c*f)*C,e[8]=y*C,e[9]=(p*u*r-h*g*r-p*n*f+t*g*f+h*n*A-t*u*A)*C,e[10]=(a*g*r-p*o*r+p*n*l-t*g*l-a*n*A+t*o*A)*C,e[11]=(h*o*r-a*u*r-h*n*l+t*u*l+a*n*f-t*o*f)*C,e[12]=_*C,e[13]=(h*g*i-p*u*i+p*n*d-t*g*d-h*n*m+t*u*m)*C,e[14]=(p*o*i-a*g*i-p*n*c+t*g*c+a*n*m-t*o*m)*C,e[15]=(a*u*i-h*o*i+h*n*c-t*u*c-a*n*d+t*o*d)*C,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,o=e.y,c=e.z,l=r*a,h=r*o;return this.set(l*a+n,l*o-i*c,l*c+i*o,0,l*o+i*c,h*o+n,h*c-i*a,0,l*c-i*o,h*c+i*a,r*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,o=t._z,c=t._w,l=r+r,h=a+a,u=o+o,d=r*l,f=r*h,p=r*u,g=a*h,m=a*u,A=o*u,x=c*l,b=c*h,y=c*u,_=n.x,w=n.y,C=n.z;return i[0]=(1-(g+A))*_,i[1]=(f+y)*_,i[2]=(p-b)*_,i[3]=0,i[4]=(f-y)*w,i[5]=(1-(d+A))*w,i[6]=(m+x)*w,i[7]=0,i[8]=(p+b)*C,i[9]=(m-x)*C,i[10]=(1-(d+g))*C,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=Tr.set(i[0],i[1],i[2]).length();const a=Tr.set(i[4],i[5],i[6]).length(),o=Tr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],yi.copy(this);const l=1/r,h=1/a,u=1/o;return yi.elements[0]*=l,yi.elements[1]*=l,yi.elements[2]*=l,yi.elements[4]*=h,yi.elements[5]*=h,yi.elements[6]*=h,yi.elements[8]*=u,yi.elements[9]*=u,yi.elements[10]*=u,t.setFromRotationMatrix(yi),n.x=r,n.y=a,n.z=o,this}makePerspective(e,t,n,i,r,a,o=ii,c=!1){const l=this.elements,h=2*r/(t-e),u=2*r/(n-i),d=(t+e)/(t-e),f=(n+i)/(n-i);let p,g;if(c)p=r/(a-r),g=a*r/(a-r);else if(o===ii)p=-(a+r)/(a-r),g=-2*a*r/(a-r);else if(o===ya)p=-a/(a-r),g=-a*r/(a-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=h,l[4]=0,l[8]=d,l[12]=0,l[1]=0,l[5]=u,l[9]=f,l[13]=0,l[2]=0,l[6]=0,l[10]=p,l[14]=g,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,r,a,o=ii,c=!1){const l=this.elements,h=2/(t-e),u=2/(n-i),d=-(t+e)/(t-e),f=-(n+i)/(n-i);let p,g;if(c)p=1/(a-r),g=a/(a-r);else if(o===ii)p=-2/(a-r),g=-(a+r)/(a-r);else if(o===ya)p=-1/(a-r),g=-r/(a-r);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=h,l[4]=0,l[8]=0,l[12]=d,l[1]=0,l[5]=u,l[9]=0,l[13]=f,l[2]=0,l[6]=0,l[10]=p,l[14]=g,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Tr=new S,yi=new Ke,mb=new S(0,0,0),gb=new S(1,1,1),ds=new S,Wo=new S,jn=new S,df=new Ke,ff=new an;class sn{constructor(e=0,t=0,n=0,i=sn.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],a=i[4],o=i[8],c=i[1],l=i[5],h=i[9],u=i[2],d=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(rt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-rt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(rt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-rt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(rt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(o,f));break;case"XZY":this._z=Math.asin(-rt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return df.makeRotationFromQuaternion(e),this.setFromRotationMatrix(df,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ff.setFromEuler(this),this.setFromQuaternion(ff,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}sn.DEFAULT_ORDER="XYZ";class Wl{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let yb=0;const pf=new S,Br=new an,Xi=new Ke,qo=new S,Ra=new S,bb=new S,xb=new an,Af=new S(1,0,0),mf=new S(0,1,0),gf=new S(0,0,1),yf={type:"added"},_b={type:"removed"},Rr={type:"childadded",child:null},wh={type:"childremoved",child:null};class mt extends Gi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:yb++}),this.uuid=si(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=mt.DEFAULT_UP.clone();const e=new S,t=new sn,n=new an,i=new S(1,1,1);function r(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ke},normalMatrix:{value:new dt}}),this.matrix=new Ke,this.matrixWorld=new Ke,this.matrixAutoUpdate=mt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=mt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Wl,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Br.setFromAxisAngle(e,t),this.quaternion.multiply(Br),this}rotateOnWorldAxis(e,t){return Br.setFromAxisAngle(e,t),this.quaternion.premultiply(Br),this}rotateX(e){return this.rotateOnAxis(Af,e)}rotateY(e){return this.rotateOnAxis(mf,e)}rotateZ(e){return this.rotateOnAxis(gf,e)}translateOnAxis(e,t){return pf.copy(e).applyQuaternion(this.quaternion),this.position.add(pf.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Af,e)}translateY(e){return this.translateOnAxis(mf,e)}translateZ(e){return this.translateOnAxis(gf,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Xi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?qo.copy(e):qo.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Ra.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Xi.lookAt(Ra,qo,this.up):Xi.lookAt(qo,Ra,this.up),this.quaternion.setFromRotationMatrix(Xi),i&&(Xi.extractRotation(i.matrixWorld),Br.setFromRotationMatrix(Xi),this.quaternion.premultiply(Br.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(yf),Rr.child=e,this.dispatchEvent(Rr),Rr.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(_b),wh.child=e,this.dispatchEvent(wh),wh.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Xi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Xi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Xi),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(yf),Rr.child=e,this.dispatchEvent(Rr),Rr.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let r=0,a=i.length;r<a;r++)i[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ra,e,bb),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ra,xb,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let r=0,a=i.length;r<a;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(o=>({...o,boundingBox:o.boundingBox?o.boundingBox.toJSON():void 0,boundingSphere:o.boundingSphere?o.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(o=>({...o})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(e),i.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(i.boundingBox=this.boundingBox.toJSON()));function r(o,c){return o[c.uuid]===void 0&&(o[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const c=o.shapes;if(Array.isArray(c))for(let l=0,h=c.length;l<h;l++){const u=c[l];r(e.shapes,u)}else r(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let c=0,l=this.material.length;c<l;c++)o.push(r(e.materials,this.material[c]));i.material=o}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const c=this.animations[o];i.animations.push(r(e.animations,c))}}if(t){const o=a(e.geometries),c=a(e.materials),l=a(e.textures),h=a(e.images),u=a(e.shapes),d=a(e.skeletons),f=a(e.animations),p=a(e.nodes);o.length>0&&(n.geometries=o),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function a(o){const c=[];for(const l in o){const h=o[l];delete h.metadata,c.push(h)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}mt.DEFAULT_UP=new S(0,1,0);mt.DEFAULT_MATRIX_AUTO_UPDATE=!0;mt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const bi=new S,Yi=new S,Sh=new S,Ki=new S,Dr=new S,Pr=new S,bf=new S,Ch=new S,Mh=new S,Ih=new S,Th=new wt,Bh=new wt,Rh=new wt;class Nn{constructor(e=new S,t=new S,n=new S){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),bi.subVectors(e,t),i.cross(bi);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){bi.subVectors(i,t),Yi.subVectors(n,t),Sh.subVectors(e,t);const a=bi.dot(bi),o=bi.dot(Yi),c=bi.dot(Sh),l=Yi.dot(Yi),h=Yi.dot(Sh),u=a*l-o*o;if(u===0)return r.set(0,0,0),null;const d=1/u,f=(l*c-o*h)*d,p=(a*h-o*c)*d;return r.set(1-f-p,p,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Ki)===null?!1:Ki.x>=0&&Ki.y>=0&&Ki.x+Ki.y<=1}static getInterpolation(e,t,n,i,r,a,o,c){return this.getBarycoord(e,t,n,i,Ki)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(r,Ki.x),c.addScaledVector(a,Ki.y),c.addScaledVector(o,Ki.z),c)}static getInterpolatedAttribute(e,t,n,i,r,a){return Th.setScalar(0),Bh.setScalar(0),Rh.setScalar(0),Th.fromBufferAttribute(e,t),Bh.fromBufferAttribute(e,n),Rh.fromBufferAttribute(e,i),a.setScalar(0),a.addScaledVector(Th,r.x),a.addScaledVector(Bh,r.y),a.addScaledVector(Rh,r.z),a}static isFrontFacing(e,t,n,i){return bi.subVectors(n,t),Yi.subVectors(e,t),bi.cross(Yi).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return bi.subVectors(this.c,this.b),Yi.subVectors(this.a,this.b),bi.cross(Yi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Nn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Nn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,r){return Nn.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return Nn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Nn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let a,o;Dr.subVectors(i,n),Pr.subVectors(r,n),Ch.subVectors(e,n);const c=Dr.dot(Ch),l=Pr.dot(Ch);if(c<=0&&l<=0)return t.copy(n);Mh.subVectors(e,i);const h=Dr.dot(Mh),u=Pr.dot(Mh);if(h>=0&&u<=h)return t.copy(i);const d=c*u-h*l;if(d<=0&&c>=0&&h<=0)return a=c/(c-h),t.copy(n).addScaledVector(Dr,a);Ih.subVectors(e,r);const f=Dr.dot(Ih),p=Pr.dot(Ih);if(p>=0&&f<=p)return t.copy(r);const g=f*l-c*p;if(g<=0&&l>=0&&p<=0)return o=l/(l-p),t.copy(n).addScaledVector(Pr,o);const m=h*p-f*u;if(m<=0&&u-h>=0&&f-p>=0)return bf.subVectors(r,i),o=(u-h)/(u-h+(f-p)),t.copy(i).addScaledVector(bf,o);const A=1/(m+g+d);return a=g*A,o=d*A,t.copy(n).addScaledVector(Dr,a).addScaledVector(Pr,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Vm={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},fs={h:0,s:0,l:0},Xo={h:0,s:0,l:0};function Dh(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class ae{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Tt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,xt.colorSpaceToWorking(this,t),this}setRGB(e,t,n,i=xt.workingColorSpace){return this.r=e,this.g=t,this.b=n,xt.colorSpaceToWorking(this,i),this}setHSL(e,t,n,i=xt.workingColorSpace){if(e=gd(e,1),t=rt(t,0,1),n=rt(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,a=2*n-r;this.r=Dh(a,r,e+1/3),this.g=Dh(a,r,e),this.b=Dh(a,r,e-1/3)}return xt.colorSpaceToWorking(this,i),this}setStyle(e,t=Tt){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const a=i[1],o=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],a=r.length;if(a===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Tt){const n=Vm[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ns(e.r),this.g=ns(e.g),this.b=ns(e.b),this}copyLinearToSRGB(e){return this.r=ra(e.r),this.g=ra(e.g),this.b=ra(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Tt){return xt.workingToColorSpace(vn.copy(this),e),Math.round(rt(vn.r*255,0,255))*65536+Math.round(rt(vn.g*255,0,255))*256+Math.round(rt(vn.b*255,0,255))}getHexString(e=Tt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=xt.workingColorSpace){xt.workingToColorSpace(vn.copy(this),t);const n=vn.r,i=vn.g,r=vn.b,a=Math.max(n,i,r),o=Math.min(n,i,r);let c,l;const h=(o+a)/2;if(o===a)c=0,l=0;else{const u=a-o;switch(l=h<=.5?u/(a+o):u/(2-a-o),a){case n:c=(i-r)/u+(i<r?6:0);break;case i:c=(r-n)/u+2;break;case r:c=(n-i)/u+4;break}c/=6}return e.h=c,e.s=l,e.l=h,e}getRGB(e,t=xt.workingColorSpace){return xt.workingToColorSpace(vn.copy(this),t),e.r=vn.r,e.g=vn.g,e.b=vn.b,e}getStyle(e=Tt){xt.workingToColorSpace(vn.copy(this),e);const t=vn.r,n=vn.g,i=vn.b;return e!==Tt?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(fs),this.setHSL(fs.h+e,fs.s+t,fs.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(fs),e.getHSL(Xo);const n=ja(fs.h,Xo.h,t),i=ja(fs.s,Xo.s,t),r=ja(fs.l,Xo.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const vn=new ae;ae.NAMES=Vm;let Eb=0;class cn extends Gi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Eb++}),this.uuid=si(),this.name="",this.type="Material",this.blending=cr,this.side=wi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=il,this.blendDst=sl,this.blendEquation=gs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new ae(0,0,0),this.blendAlpha=0,this.depthFunc=Ar,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Qu,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Zs,this.stencilZFail=Zs,this.stencilZPass=Zs,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.sheenColorMap&&this.sheenColorMap.isTexture&&(n.sheenColorMap=this.sheenColorMap.toJSON(e).uuid),this.sheenRoughnessMap&&this.sheenRoughnessMap.isTexture&&(n.sheenRoughnessMap=this.sheenRoughnessMap.toJSON(e).uuid),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==cr&&(n.blending=this.blending),this.side!==wi&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==il&&(n.blendSrc=this.blendSrc),this.blendDst!==sl&&(n.blendDst=this.blendDst),this.blendEquation!==gs&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Ar&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Qu&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Zs&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Zs&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Zs&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const a=[];for(const o in r){const c=r[o];delete c.metadata,a.push(c)}return a}if(t){const r=i(e.textures),a=i(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Cn extends cn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new sn,this.combine=_o,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const $i=vb();function vb(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let c=0;c<256;++c){const l=c-127;l<-27?(n[c]=0,n[c|256]=32768,i[c]=24,i[c|256]=24):l<-14?(n[c]=1024>>-l-14,n[c|256]=1024>>-l-14|32768,i[c]=-l-1,i[c|256]=-l-1):l<=15?(n[c]=l+15<<10,n[c|256]=l+15<<10|32768,i[c]=13,i[c|256]=13):l<128?(n[c]=31744,n[c|256]=64512,i[c]=24,i[c|256]=24):(n[c]=31744,n[c|256]=64512,i[c]=13,i[c|256]=13)}const r=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let c=1;c<1024;++c){let l=c<<13,h=0;for(;(l&8388608)===0;)l<<=1,h-=8388608;l&=-8388609,h+=947912704,r[c]=l|h}for(let c=1024;c<2048;++c)r[c]=939524096+(c-1024<<13);for(let c=1;c<31;++c)a[c]=c<<23;a[31]=1199570944,a[32]=2147483648;for(let c=33;c<63;++c)a[c]=2147483648+(c-32<<23);a[63]=3347054592;for(let c=1;c<64;++c)c!==32&&(o[c]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:a,offsetTable:o}}function Hn(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=rt(s,-65504,65504),$i.floatView[0]=s;const e=$i.uint32View[0],t=e>>23&511;return $i.baseTable[t]+((e&8388607)>>$i.shiftTable[t])}function qa(s){const e=s>>10;return $i.uint32View[0]=$i.mantissaTable[$i.offsetTable[e]+(s&1023)]+$i.exponentTable[e],$i.floatView[0]}class wb{static toHalfFloat(e){return Hn(e)}static fromHalfFloat(e){return qa(e)}}const jt=new S,Yo=new $;let Sb=0;class ht{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:Sb++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=fo,this.updateRanges=[],this.gpuType=rn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Yo.fromBufferAttribute(this,t),Yo.applyMatrix3(e),this.setXY(t,Yo.x,Yo.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.applyMatrix3(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.applyMatrix4(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.applyNormalMatrix(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.transformDirection(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Un(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=At(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Un(t,this.array)),t}setX(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Un(t,this.array)),t}setY(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Un(t,this.array)),t}setZ(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Un(t,this.array)),t}setW(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=At(t,this.array),n=At(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=At(t,this.array),n=At(n,this.array),i=At(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=At(t,this.array),n=At(n,this.array),i=At(i,this.array),r=At(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==fo&&(e.usage=this.usage),e}}class Cb extends ht{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Mb extends ht{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class Ib extends ht{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Tb extends ht{constructor(e,t,n){super(new Int16Array(e),t,n)}}class bd extends ht{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Bb extends ht{constructor(e,t,n){super(new Int32Array(e),t,n)}}class xd extends ht{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Rb extends ht{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=qa(this.array[e*this.itemSize]);return this.normalized&&(t=Un(t,this.array)),t}setX(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize]=Hn(t),this}getY(e){let t=qa(this.array[e*this.itemSize+1]);return this.normalized&&(t=Un(t,this.array)),t}setY(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize+1]=Hn(t),this}getZ(e){let t=qa(this.array[e*this.itemSize+2]);return this.normalized&&(t=Un(t,this.array)),t}setZ(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize+2]=Hn(t),this}getW(e){let t=qa(this.array[e*this.itemSize+3]);return this.normalized&&(t=Un(t,this.array)),t}setW(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize+3]=Hn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=At(t,this.array),n=At(n,this.array)),this.array[e+0]=Hn(t),this.array[e+1]=Hn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=At(t,this.array),n=At(n,this.array),i=At(i,this.array)),this.array[e+0]=Hn(t),this.array[e+1]=Hn(n),this.array[e+2]=Hn(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=At(t,this.array),n=At(n,this.array),i=At(i,this.array),r=At(r,this.array)),this.array[e+0]=Hn(t),this.array[e+1]=Hn(n),this.array[e+2]=Hn(i),this.array[e+3]=Hn(r),this}}class Xe extends ht{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Db=0;const ci=new Ke,Ph=new mt,Lr=new S,Zn=new Yt,Da=new Yt,dn=new S;class $e extends Gi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Db++}),this.uuid=si(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Gm(e)?xd:bd)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new dt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return ci.makeRotationFromQuaternion(e),this.applyMatrix4(ci),this}rotateX(e){return ci.makeRotationX(e),this.applyMatrix4(ci),this}rotateY(e){return ci.makeRotationY(e),this.applyMatrix4(ci),this}rotateZ(e){return ci.makeRotationZ(e),this.applyMatrix4(ci),this}translate(e,t,n){return ci.makeTranslation(e,t,n),this.applyMatrix4(ci),this}scale(e,t,n){return ci.makeScale(e,t,n),this.applyMatrix4(ci),this}lookAt(e){return Ph.lookAt(e),Ph.updateMatrix(),this.applyMatrix4(Ph.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Lr).negate(),this.translate(Lr.x,Lr.y,Lr.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,r=e.length;i<r;i++){const a=e[i];n.push(a.x,a.y,a.z||0)}this.setAttribute("position",new Xe(n,3))}else{const n=Math.min(e.length,t.count);for(let i=0;i<n;i++){const r=e[i];t.setXYZ(i,r.x,r.y,r.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Yt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new S(-1/0,-1/0,-1/0),new S(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Zn.setFromBufferAttribute(r),this.morphTargetsRelative?(dn.addVectors(this.boundingBox.min,Zn.min),this.boundingBox.expandByPoint(dn),dn.addVectors(this.boundingBox.max,Zn.max),this.boundingBox.expandByPoint(dn)):(this.boundingBox.expandByPoint(Zn.min),this.boundingBox.expandByPoint(Zn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new on);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new S,1/0);return}if(e){const n=this.boundingSphere.center;if(Zn.setFromBufferAttribute(e),t)for(let r=0,a=t.length;r<a;r++){const o=t[r];Da.setFromBufferAttribute(o),this.morphTargetsRelative?(dn.addVectors(Zn.min,Da.min),Zn.expandByPoint(dn),dn.addVectors(Zn.max,Da.max),Zn.expandByPoint(dn)):(Zn.expandByPoint(Da.min),Zn.expandByPoint(Da.max))}Zn.getCenter(n);let i=0;for(let r=0,a=e.count;r<a;r++)dn.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(dn));if(t)for(let r=0,a=t.length;r<a;r++){const o=t[r],c=this.morphTargetsRelative;for(let l=0,h=o.count;l<h;l++)dn.fromBufferAttribute(o,l),c&&(Lr.fromBufferAttribute(e,l),dn.add(Lr)),i=Math.max(i,n.distanceToSquared(dn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ht(new Float32Array(4*n.count),4));const a=this.getAttribute("tangent"),o=[],c=[];for(let T=0;T<n.count;T++)o[T]=new S,c[T]=new S;const l=new S,h=new S,u=new S,d=new $,f=new $,p=new $,g=new S,m=new S;function A(T,v,E){l.fromBufferAttribute(n,T),h.fromBufferAttribute(n,v),u.fromBufferAttribute(n,E),d.fromBufferAttribute(r,T),f.fromBufferAttribute(r,v),p.fromBufferAttribute(r,E),h.sub(l),u.sub(l),f.sub(d),p.sub(d);const B=1/(f.x*p.y-p.x*f.y);isFinite(B)&&(g.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(B),m.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(B),o[T].add(g),o[v].add(g),o[E].add(g),c[T].add(m),c[v].add(m),c[E].add(m))}let x=this.groups;x.length===0&&(x=[{start:0,count:e.count}]);for(let T=0,v=x.length;T<v;++T){const E=x[T],B=E.start,D=E.count;for(let F=B,N=B+D;F<N;F+=3)A(e.getX(F+0),e.getX(F+1),e.getX(F+2))}const b=new S,y=new S,_=new S,w=new S;function C(T){_.fromBufferAttribute(i,T),w.copy(_);const v=o[T];b.copy(v),b.sub(_.multiplyScalar(_.dot(v))).normalize(),y.crossVectors(w,v);const B=y.dot(c[T])<0?-1:1;a.setXYZW(T,b.x,b.y,b.z,B)}for(let T=0,v=x.length;T<v;++T){const E=x[T],B=E.start,D=E.count;for(let F=B,N=B+D;F<N;F+=3)C(e.getX(F+0)),C(e.getX(F+1)),C(e.getX(F+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new ht(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new S,r=new S,a=new S,o=new S,c=new S,l=new S,h=new S,u=new S;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),g=e.getX(d+1),m=e.getX(d+2);i.fromBufferAttribute(t,p),r.fromBufferAttribute(t,g),a.fromBufferAttribute(t,m),h.subVectors(a,r),u.subVectors(i,r),h.cross(u),o.fromBufferAttribute(n,p),c.fromBufferAttribute(n,g),l.fromBufferAttribute(n,m),o.add(h),c.add(h),l.add(h),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(g,c.x,c.y,c.z),n.setXYZ(m,l.x,l.y,l.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),a.fromBufferAttribute(t,d+2),h.subVectors(a,r),u.subVectors(i,r),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)dn.fromBufferAttribute(e,t),dn.normalize(),e.setXYZ(t,dn.x,dn.y,dn.z)}toNonIndexed(){function e(o,c){const l=o.array,h=o.itemSize,u=o.normalized,d=new l.constructor(c.length*h);let f=0,p=0;for(let g=0,m=c.length;g<m;g++){o.isInterleavedBufferAttribute?f=c[g]*o.data.stride+o.offset:f=c[g]*h;for(let A=0;A<h;A++)d[p++]=l[f++]}return new ht(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new $e,n=this.index.array,i=this.attributes;for(const o in i){const c=i[o],l=e(c,n);t.setAttribute(o,l)}const r=this.morphAttributes;for(const o in r){const c=[],l=r[o];for(let h=0,u=l.length;h<u;h++){const d=l[h],f=e(d,n);c.push(f)}t.morphAttributes[o]=c}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,c=a.length;o<c;o++){const l=a[o];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const l=n[c];e.data.attributes[c]=l.toJSON(e.data)}const i={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],h=[];for(let u=0,d=l.length;u<d;u++){const f=l[u];h.push(f.toJSON(e.data))}h.length>0&&(i[c]=h,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere=o.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const i=e.attributes;for(const l in i){const h=i[l];this.setAttribute(l,h.clone(t))}const r=e.morphAttributes;for(const l in r){const h=[],u=r[l];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(t));this.morphAttributes[l]=h}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let l=0,h=a.length;l<h;l++){const u=a[l];this.addGroup(u.start,u.count,u.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const xf=new Ke,Ls=new wa,Ko=new on,_f=new S,Jo=new S,jo=new S,Zo=new S,Lh=new S,$o=new S,Ef=new S,ec=new S;class Be extends mt{constructor(e=new $e,t=new Cn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const o=this.morphTargetInfluences;if(r&&o){$o.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const h=o[c],u=r[c];h!==0&&(Lh.fromBufferAttribute(u,e),a?$o.addScaledVector(Lh,h):$o.addScaledVector(Lh.sub(t),h))}t.add($o)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Ko.copy(n.boundingSphere),Ko.applyMatrix4(r),Ls.copy(e.ray).recast(e.near),!(Ko.containsPoint(Ls.origin)===!1&&(Ls.intersectSphere(Ko,_f)===null||Ls.origin.distanceToSquared(_f)>(e.far-e.near)**2))&&(xf.copy(r).invert(),Ls.copy(e.ray).applyMatrix4(xf),!(n.boundingBox!==null&&Ls.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Ls)))}_computeIntersections(e,t,n){let i;const r=this.geometry,a=this.material,o=r.index,c=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,d=r.groups,f=r.drawRange;if(o!==null)if(Array.isArray(a))for(let p=0,g=d.length;p<g;p++){const m=d[p],A=a[m.materialIndex],x=Math.max(m.start,f.start),b=Math.min(o.count,Math.min(m.start+m.count,f.start+f.count));for(let y=x,_=b;y<_;y+=3){const w=o.getX(y),C=o.getX(y+1),T=o.getX(y+2);i=tc(this,A,e,n,l,h,u,w,C,T),i&&(i.faceIndex=Math.floor(y/3),i.face.materialIndex=m.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),g=Math.min(o.count,f.start+f.count);for(let m=p,A=g;m<A;m+=3){const x=o.getX(m),b=o.getX(m+1),y=o.getX(m+2);i=tc(this,a,e,n,l,h,u,x,b,y),i&&(i.faceIndex=Math.floor(m/3),t.push(i))}}else if(c!==void 0)if(Array.isArray(a))for(let p=0,g=d.length;p<g;p++){const m=d[p],A=a[m.materialIndex],x=Math.max(m.start,f.start),b=Math.min(c.count,Math.min(m.start+m.count,f.start+f.count));for(let y=x,_=b;y<_;y+=3){const w=y,C=y+1,T=y+2;i=tc(this,A,e,n,l,h,u,w,C,T),i&&(i.faceIndex=Math.floor(y/3),i.face.materialIndex=m.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),g=Math.min(c.count,f.start+f.count);for(let m=p,A=g;m<A;m+=3){const x=m,b=m+1,y=m+2;i=tc(this,a,e,n,l,h,u,x,b,y),i&&(i.faceIndex=Math.floor(m/3),t.push(i))}}}}function Pb(s,e,t,n,i,r,a,o){let c;if(e.side===Mn?c=n.intersectTriangle(a,r,i,!0,o):c=n.intersectTriangle(i,r,a,e.side===wi,o),c===null)return null;ec.copy(o),ec.applyMatrix4(s.matrixWorld);const l=t.ray.origin.distanceTo(ec);return l<t.near||l>t.far?null:{distance:l,point:ec.clone(),object:s}}function tc(s,e,t,n,i,r,a,o,c,l){s.getVertexPosition(o,Jo),s.getVertexPosition(c,jo),s.getVertexPosition(l,Zo);const h=Pb(s,e,t,n,Jo,jo,Zo,Ef);if(h){const u=new S;Nn.getBarycoord(Ef,Jo,jo,Zo,u),i&&(h.uv=Nn.getInterpolatedAttribute(i,o,c,l,u,new $)),r&&(h.uv1=Nn.getInterpolatedAttribute(r,o,c,l,u,new $)),a&&(h.normal=Nn.getInterpolatedAttribute(a,o,c,l,u,new S),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const d={a:o,b:c,c:l,normal:new S,materialIndex:0};Nn.getNormal(Jo,jo,Zo,d.normal),h.face=d,h.barycoord=u}return h}class Ft extends $e{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const o=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const c=[],l=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,n,t,e,a,r,0),p("z","y","x",1,-1,n,t,-e,a,r,1),p("x","z","y",1,1,e,n,t,i,a,2),p("x","z","y",1,-1,e,n,-t,i,a,3),p("x","y","z",1,-1,e,t,n,i,r,4),p("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(c),this.setAttribute("position",new Xe(l,3)),this.setAttribute("normal",new Xe(h,3)),this.setAttribute("uv",new Xe(u,2));function p(g,m,A,x,b,y,_,w,C,T,v){const E=y/C,B=_/T,D=y/2,F=_/2,N=w/2,G=C+1,k=T+1;let J=0,U=0;const ee=new S;for(let Ae=0;Ae<k;Ae++){const oe=Ae*B-F;for(let Me=0;Me<G;Me++){const Ne=Me*E-D;ee[g]=Ne*x,ee[m]=oe*b,ee[A]=N,l.push(ee.x,ee.y,ee.z),ee[g]=0,ee[m]=0,ee[A]=w>0?1:-1,h.push(ee.x,ee.y,ee.z),u.push(Me/C),u.push(1-Ae/T),J+=1}}for(let Ae=0;Ae<T;Ae++)for(let oe=0;oe<C;oe++){const Me=d+oe+G*Ae,Ne=d+oe+G*(Ae+1),st=d+(oe+1)+G*(Ae+1),Oe=d+(oe+1)+G*Ae;c.push(Me,Ne,Oe),c.push(Ne,st,Oe),U+=6}o.addGroup(f,U,v),f+=U,d+=J}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ft(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function xa(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Pn(s){const e={};for(let t=0;t<s.length;t++){const n=xa(s[t]);for(const i in n)e[i]=n[i]}return e}function Lb(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function Wm(s){const e=s.getRenderTarget();return e===null?s.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:xt.workingColorSpace}const mo={clone:xa,merge:Pn};var Fb=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Ub=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Yn extends cn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Fb,this.fragmentShader=Ub,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=xa(e.uniforms),this.uniformsGroups=Lb(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class ql extends mt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ke,this.projectionMatrix=new Ke,this.projectionMatrixInverse=new Ke,this.coordinateSystem=ii,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const ps=new S,vf=new $,wf=new $;class $t extends ql{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=ba*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(dr*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return ba*2*Math.atan(Math.tan(dr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){ps.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(ps.x,ps.y).multiplyScalar(-e/ps.z),ps.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(ps.x,ps.y).multiplyScalar(-e/ps.z)}getViewSize(e,t){return this.getViewBounds(e,vf,wf),t.subVectors(wf,vf)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(dr*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const c=a.fullWidth,l=a.fullHeight;r+=a.offsetX*i/c,t-=a.offsetY*n/l,i*=a.width/c,n*=a.height/l}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Fr=-90,Ur=1;class qm extends mt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new $t(Fr,Ur,e,t);i.layers=this.layers,this.add(i);const r=new $t(Fr,Ur,e,t);r.layers=this.layers,this.add(r);const a=new $t(Fr,Ur,e,t);a.layers=this.layers,this.add(a);const o=new $t(Fr,Ur,e,t);o.layers=this.layers,this.add(o);const c=new $t(Fr,Ur,e,t);c.layers=this.layers,this.add(c);const l=new $t(Fr,Ur,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,a,o,c]=t;for(const l of t)this.remove(l);if(e===ii)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===ya)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const l of t)this.add(l),l.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,a,o,c,l,h]=this.children,u=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const g=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,r),e.setRenderTarget(n,1,i),e.render(t,a),e.setRenderTarget(n,2,i),e.render(t,o),e.setRenderTarget(n,3,i),e.render(t,c),e.setRenderTarget(n,4,i),e.render(t,l),n.texture.generateMipmaps=g,e.setRenderTarget(n,5,i),e.render(t,h),e.setRenderTarget(u,d,f),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Mo extends Ht{constructor(e=[],t=ss,n,i,r,a,o,c,l,h){super(e,t,n,i,r,a,o,c,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Xm extends Si{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Mo(i),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Ft(5,5,5),r=new Yn({name:"CubemapFromEquirect",uniforms:xa(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Mn,blending:ts});r.uniforms.tEquirect.value=t;const a=new Be(i,r),o=t.minFilter;return t.minFilter===Wn&&(t.minFilter=Qt),new qm(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t=!0,n=!0,i=!0){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(r)}}class bt extends mt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Nb={type:"move"};class Yc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new bt,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new bt,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new S,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new S),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new bt,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new S,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new S),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const o=this._targetRay,c=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){a=!0;for(const g of e.hand.values()){const m=t.getJointPose(g,n),A=this._getHandJoint(l,g);m!==null&&(A.matrix.fromArray(m.transform.matrix),A.matrix.decompose(A.position,A.rotation,A.scale),A.matrixWorldNeedsUpdate=!0,A.jointRadius=m.radius),A.visible=m!==null}const h=l.joints["index-finger-tip"],u=l.joints["thumb-tip"],d=h.position.distanceTo(u.position),f=.02,p=.005;l.inputState.pinching&&d>f+p?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&d<=f-p&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));o!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Nb)))}return o!==null&&(o.visible=i!==null),c!==null&&(c.visible=r!==null),l!==null&&(l.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new bt;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Xl{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new ae(e),this.density=t}clone(){return new Xl(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Io{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new ae(e),this.near=t,this.far=n}clone(){return new Io(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class _d extends mt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new sn,this.environmentIntensity=1,this.environmentRotation=new sn,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class To{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=fo,this.updateRanges=[],this.version=0,this.uuid=si()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=si()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=si()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Tn=new S;class Cs{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Tn.fromBufferAttribute(this,t),Tn.applyMatrix4(e),this.setXYZ(t,Tn.x,Tn.y,Tn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Tn.fromBufferAttribute(this,t),Tn.applyNormalMatrix(e),this.setXYZ(t,Tn.x,Tn.y,Tn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Tn.fromBufferAttribute(this,t),Tn.transformDirection(e),this.setXYZ(t,Tn.x,Tn.y,Tn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Un(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=At(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=At(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=At(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=At(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=At(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Un(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Un(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Un(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Un(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=At(t,this.array),n=At(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=At(t,this.array),n=At(n,this.array),i=At(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=At(t,this.array),n=At(n,this.array),i=At(i,this.array),r=At(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new ht(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Cs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Ed extends cn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new ae(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Nr;const Pa=new S,kr=new S,Or=new S,Qr=new $,La=new $,Ym=new Ke,nc=new S,Fa=new S,ic=new S,Sf=new $,Fh=new $,Cf=new $;class Km extends mt{constructor(e=new Ed){if(super(),this.isSprite=!0,this.type="Sprite",Nr===void 0){Nr=new $e;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new To(t,5);Nr.setIndex([0,1,2,0,2,3]),Nr.setAttribute("position",new Cs(n,3,0,!1)),Nr.setAttribute("uv",new Cs(n,2,3,!1))}this.geometry=Nr,this.material=e,this.center=new $(.5,.5),this.count=1}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),kr.setFromMatrixScale(this.matrixWorld),Ym.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Or.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&kr.multiplyScalar(-Or.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;sc(nc.set(-.5,-.5,0),Or,a,kr,i,r),sc(Fa.set(.5,-.5,0),Or,a,kr,i,r),sc(ic.set(.5,.5,0),Or,a,kr,i,r),Sf.set(0,0),Fh.set(1,0),Cf.set(1,1);let o=e.ray.intersectTriangle(nc,Fa,ic,!1,Pa);if(o===null&&(sc(Fa.set(-.5,.5,0),Or,a,kr,i,r),Fh.set(0,1),o=e.ray.intersectTriangle(nc,ic,Fa,!1,Pa),o===null))return;const c=e.ray.origin.distanceTo(Pa);c<e.near||c>e.far||t.push({distance:c,point:Pa.clone(),uv:Nn.getInterpolation(Pa,nc,Fa,ic,Sf,Fh,Cf,new $),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function sc(s,e,t,n,i,r){Qr.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(La.x=r*Qr.x-i*Qr.y,La.y=i*Qr.x+r*Qr.y):La.copy(Qr),s.copy(e),s.x+=La.x,s.y+=La.y,s.applyMatrix4(Ym)}const rc=new S,Mf=new S;class vd extends mt{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let n=0;n<t.length;n++)if(t[n].distance===e){const i=t.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),e<r)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){rc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(rc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){rc.setFromMatrixPosition(e.matrixWorld),Mf.setFromMatrixPosition(this.matrixWorld);const n=rc.distanceTo(Mf)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let a=t[i].distance;if(t[i].object.visible&&(a-=a*t[i].hysteresis),n>=a)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const If=new S,Tf=new wt,Bf=new wt,kb=new S,Rf=new Ke,ac=new S,Uh=new on,Df=new Ke,Nh=new wa;class wd extends Be{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Ou,this.bindMatrix=new Ke,this.bindMatrixInverse=new Ke,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Yt),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,ac),this.boundingBox.expandByPoint(ac)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new on),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,ac),this.boundingSphere.expandByPoint(ac)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Uh.copy(this.boundingSphere),Uh.applyMatrix4(i),e.ray.intersectsSphere(Uh)!==!1&&(Df.copy(i).invert(),Nh.copy(e.ray).applyMatrix4(Df),!(this.boundingBox!==null&&Nh.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Nh)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new wt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Ou?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Cm?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Tf.fromBufferAttribute(i.attributes.skinIndex,e),Bf.fromBufferAttribute(i.attributes.skinWeight,e),If.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const a=Bf.getComponent(r);if(a!==0){const o=Tf.getComponent(r);Rf.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),t.addScaledVector(kb.copy(If).applyMatrix4(Rf),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Yl extends mt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class qn extends Ht{constructor(e=null,t=1,n=1,i,r,a,o,c,l=Jt,h=Jt,u,d){super(null,a,o,c,l,h,i,r,u,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Pf=new Ke,Ob=new Ke;class Bo{constructor(e=[],t=[]){this.uuid=si(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Ke)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Ke;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,a=e.length;r<a;r++){const o=e[r]?e[r].matrixWorld:Ob;Pf.multiplyMatrices(o,t[r]),Pf.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Bo(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new qn(t,e,e,zt,rn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let a=t[r];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new Yl),this.bones.push(a),this.boneInverses.push(new Ke().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const a=t[i];e.bones.push(a.uuid);const o=n[i];e.boneInverses.push(o.toArray())}return e}}class Oi extends ht{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Gr=new Ke,Lf=new Ke,oc=[],Ff=new Yt,Qb=new Ke,Ua=new Be,Na=new on;class Ln extends Be{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Oi(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,Qb)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Yt),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Gr),Ff.copy(e.boundingBox).applyMatrix4(Gr),this.boundingBox.union(Ff)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new on),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Gr),Na.copy(e.boundingSphere).applyMatrix4(Gr),this.boundingSphere.union(Na)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,r=n.length+1,a=e*r+1;for(let o=0;o<n.length;o++)n[o]=i[a+o]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Ua.geometry=this.geometry,Ua.material=this.material,Ua.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Na.copy(this.boundingSphere),Na.applyMatrix4(n),e.ray.intersectsSphere(Na)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,Gr),Lf.multiplyMatrices(n,Gr),Ua.matrixWorld=Lf,Ua.raycast(e,oc);for(let a=0,o=oc.length;a<o;a++){const c=oc[a];c.instanceId=r,c.object=this,t.push(c)}oc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Oi(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new qn(new Float32Array(i*this.count),i,this.count,es,rn));const r=this.morphTexture.source.data.data;let a=0;for(let l=0;l<n.length;l++)a+=n[l];const o=this.geometry.morphTargetsRelative?1:1-a,c=i*e;r[c]=o,r.set(n,c+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const kh=new S,Gb=new S,zb=new dt;class Vn{constructor(e=new S(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=kh.subVectors(n,t).cross(Gb.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(kh),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||zb.getNormalMatrix(e),i=this.coplanarPoint(kh).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Fs=new on,Hb=new $(.5,.5),cc=new S;class Sa{constructor(e=new Vn,t=new Vn,n=new Vn,i=new Vn,r=new Vn,a=new Vn){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=ii,n=!1){const i=this.planes,r=e.elements,a=r[0],o=r[1],c=r[2],l=r[3],h=r[4],u=r[5],d=r[6],f=r[7],p=r[8],g=r[9],m=r[10],A=r[11],x=r[12],b=r[13],y=r[14],_=r[15];if(i[0].setComponents(l-a,f-h,A-p,_-x).normalize(),i[1].setComponents(l+a,f+h,A+p,_+x).normalize(),i[2].setComponents(l+o,f+u,A+g,_+b).normalize(),i[3].setComponents(l-o,f-u,A-g,_-b).normalize(),n)i[4].setComponents(c,d,m,y).normalize(),i[5].setComponents(l-c,f-d,A-m,_-y).normalize();else if(i[4].setComponents(l-c,f-d,A-m,_-y).normalize(),t===ii)i[5].setComponents(l+c,f+d,A+m,_+y).normalize();else if(t===ya)i[5].setComponents(c,d,m,y).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Fs.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Fs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Fs)}intersectsSprite(e){Fs.center.set(0,0,0);const t=Hb.distanceTo(e.center);return Fs.radius=.7071067811865476+t,Fs.applyMatrix4(e.matrixWorld),this.intersectsSphere(Fs)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(cc.x=i.normal.x>0?e.max.x:e.min.x,cc.y=i.normal.y>0?e.max.y:e.min.y,cc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(cc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const Di=new Ke,Pi=new Sa;class Kl{constructor(){this.coordinateSystem=ii}intersectsObject(e,t){if(!t.isArrayCamera||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Di.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Pi.setFromProjectionMatrix(Di,i.coordinateSystem,i.reversedDepth),Pi.intersectsObject(e))return!0}return!1}intersectsSprite(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Di.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Pi.setFromProjectionMatrix(Di,i.coordinateSystem,i.reversedDepth),Pi.intersectsSprite(e))return!0}return!1}intersectsSphere(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Di.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Pi.setFromProjectionMatrix(Di,i.coordinateSystem,i.reversedDepth),Pi.intersectsSphere(e))return!0}return!1}intersectsBox(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Di.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Pi.setFromProjectionMatrix(Di,i.coordinateSystem,i.reversedDepth),Pi.intersectsBox(e))return!0}return!1}containsPoint(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Di.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Pi.setFromProjectionMatrix(Di,i.coordinateSystem,i.reversedDepth),Pi.containsPoint(e))return!0}return!1}clone(){return new Kl}}function Oh(s,e){return s-e}function Vb(s,e){return s.z-e.z}function Wb(s,e){return e.z-s.z}class qb{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n,i){const r=this.pool,a=this.list;this.index>=r.length&&r.push({start:-1,count:-1,z:-1,index:-1});const o=r[this.index];a.push(o),this.index++,o.start=e,o.count=t,o.z=n,o.index=i}reset(){this.list.length=0,this.index=0}}const Gn=new Ke,Xb=new ae(1,1,1),Uf=new Sa,Yb=new Kl,lc=new Yt,Us=new on,ka=new S,Nf=new S,Kb=new S,Qh=new qb,wn=new Be,hc=[];function Jb(s,e,t=0){const n=e.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==e.array.constructor){const i=s.count;for(let r=0;r<i;r++)for(let a=0;a<n;a++)e.setComponent(r+t,a,s.getComponent(r,a))}else e.array.set(s.array,t*n);e.needsUpdate=!0}function Ns(s,e){if(s.constructor!==e.constructor){const t=Math.min(s.length,e.length);for(let n=0;n<t;n++)e[n]=s[n]}else{const t=Math.min(s.length,e.length);e.set(new s.constructor(s.buffer,0,t))}}class Jm extends Be{constructor(e,t,n=t*2,i){super(new $e,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new qn(t,e,e,zt,rn);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new qn(t,e,e,So,rs);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new qn(t,e,e,zt,rn);n.colorSpace=xt.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const r in e.attributes){const a=e.getAttribute(r),{array:o,itemSize:c,normalized:l}=a,h=new o.constructor(n*c),u=new ht(h,c,l);t.setAttribute(r,u)}if(e.getIndex()!==null){const r=n>65535?new Uint32Array(i):new Uint16Array(i);t.setIndex(new ht(r,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),r=t.getAttribute(n);if(i.itemSize!==r.itemSize||i.normalized!==r.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Yt);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const r=t[n].geometryIndex;this.getMatrixAt(n,Gn),this.getBoundingBoxAt(r,lc).applyMatrix4(Gn),e.union(lc)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new on);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const r=t[n].geometryIndex;this.getMatrixAt(n,Gn),this.getBoundingSphereAt(r,Us).applyMatrix4(Gn),e.union(Us)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:e};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Oh),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const r=this._matricesTexture;Gn.identity().toArray(r.image.data,i*16),r.needsUpdate=!0;const a=this._colorsTexture;return a&&(Xb.toArray(a.image.data,i*4),a.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(e,t=-1,n=-1){this._initializeGeometry(e),this._validateGeometry(e);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},r=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const a=e.getIndex();if(a!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?a.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let c;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Oh),c=this._availableGeometryIds.shift(),r[c]=i):(c=this._geometryCount,this._geometryCount++,r.push(i)),this.setGeometryAt(c,e),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,c}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,r=n.getIndex(),a=t.getIndex(),o=this._geometryInfo[e];if(i&&a.count>o.reservedIndexCount||t.attributes.position.count>o.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const c=o.vertexStart,l=o.reservedVertexCount;o.vertexCount=t.getAttribute("position").count;for(const h in n.attributes){const u=t.getAttribute(h),d=n.getAttribute(h);Jb(u,d,c);const f=u.itemSize;for(let p=u.count,g=l;p<g;p++){const m=c+p;for(let A=0;A<f;A++)d.setComponent(m,A,0)}d.needsUpdate=!0,d.addUpdateRange(c*f,l*f)}if(i){const h=o.indexStart,u=o.reservedIndexCount;o.indexCount=t.getIndex().count;for(let d=0;d<a.count;d++)r.setX(h+d,c+a.getX(d));for(let d=a.count,f=u;d<f;d++)r.setX(h+d,c);r.needsUpdate=!0,r.addUpdateRange(h,o.reservedIndexCount)}return o.start=i?o.indexStart:o.vertexStart,o.count=i?o.indexCount:o.vertexCount,o.boundingBox=null,t.boundingBox!==null&&(o.boundingBox=t.boundingBox.clone()),o.boundingSphere=null,t.boundingSphere!==null&&(o.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const n=this._instanceInfo;for(let i=0,r=n.length;i<r;i++)n[i].active&&n[i].geometryIndex===e&&this.deleteInstance(i);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const n=this._geometryInfo,i=n.map((a,o)=>o).sort((a,o)=>n[a].vertexStart-n[o].vertexStart),r=this.geometry;for(let a=0,o=n.length;a<o;a++){const c=i[a],l=n[c];if(l.active!==!1){if(r.index!==null){if(l.indexStart!==t){const{indexStart:h,vertexStart:u,reservedIndexCount:d}=l,f=r.index,p=f.array,g=e-u;for(let m=h;m<h+d;m++)p[m]=p[m]+g;f.array.copyWithin(t,h,h+d),f.addUpdateRange(t,d),l.indexStart=t}t+=l.reservedIndexCount}if(l.vertexStart!==e){const{vertexStart:h,reservedVertexCount:u}=l,d=r.attributes;for(const f in d){const p=d[f],{array:g,itemSize:m}=p;g.copyWithin(e*m,h*m,(h+u)*m),p.addUpdateRange(e*m,u*m)}l.vertexStart=e}e+=l.reservedVertexCount,l.start=r.index?l.indexStart:l.vertexStart,this._nextIndexStart=r.index?l.indexStart+l.reservedIndexCount:0,this._nextVertexStart=l.vertexStart+l.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingBox===null){const r=new Yt,a=n.index,o=n.attributes.position;for(let c=i.start,l=i.start+i.count;c<l;c++){let h=c;a&&(h=a.getX(h)),r.expandByPoint(ka.fromBufferAttribute(o,h))}i.boundingBox=r}return t.copy(i.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingSphere===null){const r=new on;this.getBoundingBoxAt(e,lc),lc.getCenter(r.center);const a=n.index,o=n.attributes.position;let c=0;for(let l=i.start,h=i.start+i.count;l<h;l++){let u=l;a&&(u=a.getX(u)),ka.fromBufferAttribute(o,u),c=Math.max(c,r.center.distanceToSquared(ka))}r.radius=Math.sqrt(c),i.boundingSphere=r}return t.copy(i.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const n=this._matricesTexture,i=this._matricesTexture.image.data;return t.toArray(i,e*16),n.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const n=this._geometryInfo[e];return t.vertexStart=n.vertexStart,t.vertexCount=n.vertexCount,t.reservedVertexCount=n.reservedVertexCount,t.indexStart=n.indexStart,t.indexCount=n.indexCount,t.reservedIndexCount=n.reservedIndexCount,t.start=n.start,t.count=n.count,t}setInstanceCount(e){const t=this._availableInstanceIds,n=this._instanceInfo;for(t.sort(Oh);t[t.length-1]===n.length-1;)n.pop(),t.pop();if(e<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const i=new Int32Array(e),r=new Int32Array(e);Ns(this._multiDrawCounts,i),Ns(this._multiDrawStarts,r),this._multiDrawCounts=i,this._multiDrawStarts=r,this._maxInstanceCount=e;const a=this._indirectTexture,o=this._matricesTexture,c=this._colorsTexture;a.dispose(),this._initIndirectTexture(),Ns(a.image.data,this._indirectTexture.image.data),o.dispose(),this._initMatricesTexture(),Ns(o.image.data,this._matricesTexture.image.data),c&&(c.dispose(),this._initColorsTexture(),Ns(c.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const n=[...this._geometryInfo].filter(o=>o.active);if(Math.max(...n.map(o=>o.vertexStart+o.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(c=>c.indexStart+c.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const r=this.geometry;r.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new $e,this._initializeGeometry(r));const a=this.geometry;r.index&&Ns(r.index.array,a.index.array);for(const o in r.attributes)Ns(r.attributes[o].array,a.attributes[o].array)}raycast(e,t){const n=this._instanceInfo,i=this._geometryInfo,r=this.matrixWorld,a=this.geometry;wn.material=this.material,wn.geometry.index=a.index,wn.geometry.attributes=a.attributes,wn.geometry.boundingBox===null&&(wn.geometry.boundingBox=new Yt),wn.geometry.boundingSphere===null&&(wn.geometry.boundingSphere=new on);for(let o=0,c=n.length;o<c;o++){if(!n[o].visible||!n[o].active)continue;const l=n[o].geometryIndex,h=i[l];wn.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(o,wn.matrixWorld).premultiply(r),this.getBoundingBoxAt(l,wn.geometry.boundingBox),this.getBoundingSphereAt(l,wn.geometry.boundingSphere),wn.raycast(e,hc);for(let u=0,d=hc.length;u<d;u++){const f=hc[u];f.object=this,f.batchId=o,t.push(f)}hc.length=0}wn.material=null,wn.geometry.index=null,wn.geometry.attributes={},wn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._availableInstanceIds=e._availableInstanceIds.slice(),this._availableGeometryIds=e._availableGeometryIds.slice(),this._nextIndexStart=e._nextIndexStart,this._nextVertexStart=e._nextVertexStart,this._geometryCount=e._geometryCount,this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._indirectTexture=e._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(e,t,n,i,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const a=i.getIndex(),o=a===null?1:a.array.BYTES_PER_ELEMENT,c=this._instanceInfo,l=this._multiDrawStarts,h=this._multiDrawCounts,u=this._geometryInfo,d=this.perObjectFrustumCulled,f=this._indirectTexture,p=f.image.data,g=n.isArrayCamera?Yb:Uf;d&&!n.isArrayCamera&&(Gn.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Uf.setFromProjectionMatrix(Gn,n.coordinateSystem,n.reversedDepth));let m=0;if(this.sortObjects){Gn.copy(this.matrixWorld).invert(),ka.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Gn),Nf.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(Gn);for(let b=0,y=c.length;b<y;b++)if(c[b].visible&&c[b].active){const _=c[b].geometryIndex;this.getMatrixAt(b,Gn),this.getBoundingSphereAt(_,Us).applyMatrix4(Gn);let w=!1;if(d&&(w=!g.intersectsSphere(Us,n)),!w){const C=u[_],T=Kb.subVectors(Us.center,ka).dot(Nf);Qh.push(C.start,C.count,T,b)}}const A=Qh.list,x=this.customSort;x===null?A.sort(r.transparent?Wb:Vb):x.call(this,A,n);for(let b=0,y=A.length;b<y;b++){const _=A[b];l[m]=_.start*o,h[m]=_.count,p[m]=_.index,m++}Qh.reset()}else for(let A=0,x=c.length;A<x;A++)if(c[A].visible&&c[A].active){const b=c[A].geometryIndex;let y=!1;if(d&&(this.getMatrixAt(A,Gn),this.getBoundingSphereAt(b,Us).applyMatrix4(Gn),y=!g.intersectsSphere(Us,n)),!y){const _=u[b];l[m]=_.start*o,h[m]=_.count,p[m]=A,m++}}f.needsUpdate=!0,this._multiDrawCount=m,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,r,a){this.onBeforeRender(e,null,i,r,a)}}class bn extends cn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ae(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Ml=new S,Il=new S,kf=new Ke,Oa=new wa,uc=new on,Gh=new S,Of=new S;class Qi extends mt{constructor(e=new $e,t=new bn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)Ml.fromBufferAttribute(t,i-1),Il.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Ml.distanceTo(Il);e.setAttribute("lineDistance",new Xe(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),uc.copy(n.boundingSphere),uc.applyMatrix4(i),uc.radius+=r,e.ray.intersectsSphere(uc)===!1)return;kf.copy(i).invert(),Oa.copy(e.ray).applyMatrix4(kf);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,l=this.isLineSegments?2:1,h=n.index,d=n.attributes.position;if(h!==null){const f=Math.max(0,a.start),p=Math.min(h.count,a.start+a.count);for(let g=f,m=p-1;g<m;g+=l){const A=h.getX(g),x=h.getX(g+1),b=dc(this,e,Oa,c,A,x,g);b&&t.push(b)}if(this.isLineLoop){const g=h.getX(p-1),m=h.getX(f),A=dc(this,e,Oa,c,g,m,p-1);A&&t.push(A)}}else{const f=Math.max(0,a.start),p=Math.min(d.count,a.start+a.count);for(let g=f,m=p-1;g<m;g+=l){const A=dc(this,e,Oa,c,g,g+1,g);A&&t.push(A)}if(this.isLineLoop){const g=dc(this,e,Oa,c,p-1,f,p-1);g&&t.push(g)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}function dc(s,e,t,n,i,r,a){const o=s.geometry.attributes.position;if(Ml.fromBufferAttribute(o,i),Il.fromBufferAttribute(o,r),t.distanceSqToSegment(Ml,Il,Gh,Of)>n)return;Gh.applyMatrix4(s.matrixWorld);const l=e.ray.origin.distanceTo(Gh);if(!(l<e.near||l>e.far))return{distance:l,point:Of.clone().applyMatrix4(s.matrixWorld),index:a,face:null,faceIndex:null,barycoord:null,object:s}}const Qf=new S,Gf=new S;class Ci extends Qi{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)Qf.fromBufferAttribute(t,i),Gf.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Qf.distanceTo(Gf);e.setAttribute("lineDistance",new Xe(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Sd extends Qi{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Ro extends cn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new ae(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const zf=new Ke,zu=new wa,fc=new on,pc=new S;class Jl extends mt{constructor(e=new $e,t=new Ro){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),fc.copy(n.boundingSphere),fc.applyMatrix4(i),fc.radius+=r,e.ray.intersectsSphere(fc)===!1)return;zf.copy(i).invert(),zu.copy(e.ray).applyMatrix4(zf);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,l=n.index,u=n.attributes.position;if(l!==null){const d=Math.max(0,a.start),f=Math.min(l.count,a.start+a.count);for(let p=d,g=f;p<g;p++){const m=l.getX(p);pc.fromBufferAttribute(u,m),Hf(pc,m,c,i,e,t,this)}}else{const d=Math.max(0,a.start),f=Math.min(u.count,a.start+a.count);for(let p=d,g=f;p<g;p++)pc.fromBufferAttribute(u,p),Hf(pc,p,c,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}function Hf(s,e,t,n,i,r,a){const o=zu.distanceSqToPoint(s);if(o<t){const c=new S;zu.closestPointToPoint(s,c),c.applyMatrix4(n);const l=i.ray.origin.distanceTo(c);if(l<i.near||l>i.far)return;r.push({distance:l,distanceToRay:Math.sqrt(o),point:c,index:e,face:null,faceIndex:null,barycoord:null,object:a})}}class jm extends Ht{constructor(e,t,n,i,r=Qt,a=Qt,o,c,l){super(e,t,n,i,r,a,o,c,l),this.isVideoTexture=!0,this.generateMipmaps=!1,this._requestVideoFrameCallbackId=0;const h=this;function u(){h.needsUpdate=!0,h._requestVideoFrameCallbackId=e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&(this._requestVideoFrameCallbackId=e.requestVideoFrameCallback(u))}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}dispose(){this._requestVideoFrameCallbackId!==0&&this.source.data.cancelVideoFrameCallback(this._requestVideoFrameCallbackId),super.dispose()}}class jb extends jm{constructor(e,t,n,i,r,a,o,c){super({},e,t,n,i,r,a,o,c),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class Zb extends Ht{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Jt,this.minFilter=Jt,this.generateMipmaps=!1,this.needsUpdate=!0}}class Ca extends Ht{constructor(e,t,n,i,r,a,o,c,l,h,u,d){super(null,a,o,c,l,h,i,r,u,d),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class Zm extends Ca{constructor(e,t,n,i,r,a){super(e,t,n,r,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=ni,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class $m extends Ca{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,ss),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class eg extends Ht{constructor(e,t,n,i,r,a,o,c,l){super(e,t,n,i,r,a,o,c,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Cd extends Ht{constructor(e,t,n=rs,i,r,a,o=Jt,c=Jt,l,h=ua,u=1){if(h!==ua&&h!==da)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const d={width:e,height:t,depth:u};super(d,i,r,a,o,c,h,n,l),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new bs(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Md extends Ht{constructor(e=null){super(),this.sourceTexture=e,this.isExternalTexture=!0}copy(e){return super.copy(e),this.sourceTexture=e.sourceTexture,this}}class Do extends $e{constructor(e=1,t=1,n=4,i=8,r=1){super(),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i,heightSegments:r},t=Math.max(0,t),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),r=Math.max(1,Math.floor(r));const a=[],o=[],c=[],l=[],h=t/2,u=Math.PI/2*e,d=t,f=2*u+d,p=n*2+r,g=i+1,m=new S,A=new S;for(let x=0;x<=p;x++){let b=0,y=0,_=0,w=0;if(x<=n){const v=x/n,E=v*Math.PI/2;y=-h-e*Math.cos(E),_=e*Math.sin(E),w=-e*Math.cos(E),b=v*u}else if(x<=n+r){const v=(x-n)/r;y=-h+v*t,_=e,w=0,b=u+v*d}else{const v=(x-n-r)/n,E=v*Math.PI/2;y=h+e*Math.sin(E),_=e*Math.cos(E),w=e*Math.sin(E),b=u+d+v*u}const C=Math.max(0,Math.min(1,b/f));let T=0;x===0?T=.5/i:x===p&&(T=-.5/i);for(let v=0;v<=i;v++){const E=v/i,B=E*Math.PI*2,D=Math.sin(B),F=Math.cos(B);A.x=-_*F,A.y=y,A.z=_*D,o.push(A.x,A.y,A.z),m.set(-_*F,w,_*D),m.normalize(),c.push(m.x,m.y,m.z),l.push(E+T,C)}if(x>0){const v=(x-1)*g;for(let E=0;E<i;E++){const B=v+E,D=v+E+1,F=x*g+E,N=x*g+E+1;a.push(B,D,F),a.push(D,N,F)}}}this.setIndex(a),this.setAttribute("position",new Xe(o,3)),this.setAttribute("normal",new Xe(c,3)),this.setAttribute("uv",new Xe(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Do(e.radius,e.height,e.capSegments,e.radialSegments,e.heightSegments)}}class jl extends $e{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],a=[],o=[],c=[],l=new S,h=new $;a.push(0,0,0),o.push(0,0,1),c.push(.5,.5);for(let u=0,d=3;u<=t;u++,d+=3){const f=n+u/t*i;l.x=e*Math.cos(f),l.y=e*Math.sin(f),a.push(l.x,l.y,l.z),o.push(0,0,1),h.x=(a[d]/e+1)/2,h.y=(a[d+1]/e+1)/2,c.push(h.x,h.y)}for(let u=1;u<=t;u++)r.push(u,u+1,0);this.setIndex(r),this.setAttribute("position",new Xe(a,3)),this.setAttribute("normal",new Xe(o,3)),this.setAttribute("uv",new Xe(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new jl(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Dt extends $e{constructor(e=1,t=1,n=1,i=32,r=1,a=!1,o=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:c};const l=this;i=Math.floor(i),r=Math.floor(r);const h=[],u=[],d=[],f=[];let p=0;const g=[],m=n/2;let A=0;x(),a===!1&&(e>0&&b(!0),t>0&&b(!1)),this.setIndex(h),this.setAttribute("position",new Xe(u,3)),this.setAttribute("normal",new Xe(d,3)),this.setAttribute("uv",new Xe(f,2));function x(){const y=new S,_=new S;let w=0;const C=(t-e)/n;for(let T=0;T<=r;T++){const v=[],E=T/r,B=E*(t-e)+e;for(let D=0;D<=i;D++){const F=D/i,N=F*c+o,G=Math.sin(N),k=Math.cos(N);_.x=B*G,_.y=-E*n+m,_.z=B*k,u.push(_.x,_.y,_.z),y.set(G,C,k).normalize(),d.push(y.x,y.y,y.z),f.push(F,1-E),v.push(p++)}g.push(v)}for(let T=0;T<i;T++)for(let v=0;v<r;v++){const E=g[v][T],B=g[v+1][T],D=g[v+1][T+1],F=g[v][T+1];(e>0||v!==0)&&(h.push(E,B,F),w+=3),(t>0||v!==r-1)&&(h.push(B,D,F),w+=3)}l.addGroup(A,w,0),A+=w}function b(y){const _=p,w=new $,C=new S;let T=0;const v=y===!0?e:t,E=y===!0?1:-1;for(let D=1;D<=i;D++)u.push(0,m*E,0),d.push(0,E,0),f.push(.5,.5),p++;const B=p;for(let D=0;D<=i;D++){const N=D/i*c+o,G=Math.cos(N),k=Math.sin(N);C.x=v*k,C.y=m*E,C.z=v*G,u.push(C.x,C.y,C.z),d.push(0,E,0),w.x=G*.5+.5,w.y=k*.5*E+.5,f.push(w.x,w.y),p++}for(let D=0;D<i;D++){const F=_+D,N=B+D;y===!0?h.push(N,N+1,F):h.push(N+1,N,F),T+=3}l.addGroup(A,T,y===!0?1:2),A+=T}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Dt(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class zi extends Dt{constructor(e=1,t=1,n=32,i=1,r=!1,a=0,o=Math.PI*2){super(0,e,t,n,i,r,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:o}}static fromJSON(e){return new zi(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Is extends $e{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],a=[];o(i),l(n),h(),this.setAttribute("position",new Xe(r,3)),this.setAttribute("normal",new Xe(r.slice(),3)),this.setAttribute("uv",new Xe(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function o(x){const b=new S,y=new S,_=new S;for(let w=0;w<t.length;w+=3)f(t[w+0],b),f(t[w+1],y),f(t[w+2],_),c(b,y,_,x)}function c(x,b,y,_){const w=_+1,C=[];for(let T=0;T<=w;T++){C[T]=[];const v=x.clone().lerp(y,T/w),E=b.clone().lerp(y,T/w),B=w-T;for(let D=0;D<=B;D++)D===0&&T===w?C[T][D]=v:C[T][D]=v.clone().lerp(E,D/B)}for(let T=0;T<w;T++)for(let v=0;v<2*(w-T)-1;v++){const E=Math.floor(v/2);v%2===0?(d(C[T][E+1]),d(C[T+1][E]),d(C[T][E])):(d(C[T][E+1]),d(C[T+1][E+1]),d(C[T+1][E]))}}function l(x){const b=new S;for(let y=0;y<r.length;y+=3)b.x=r[y+0],b.y=r[y+1],b.z=r[y+2],b.normalize().multiplyScalar(x),r[y+0]=b.x,r[y+1]=b.y,r[y+2]=b.z}function h(){const x=new S;for(let b=0;b<r.length;b+=3){x.x=r[b+0],x.y=r[b+1],x.z=r[b+2];const y=m(x)/2/Math.PI+.5,_=A(x)/Math.PI+.5;a.push(y,1-_)}p(),u()}function u(){for(let x=0;x<a.length;x+=6){const b=a[x+0],y=a[x+2],_=a[x+4],w=Math.max(b,y,_),C=Math.min(b,y,_);w>.9&&C<.1&&(b<.2&&(a[x+0]+=1),y<.2&&(a[x+2]+=1),_<.2&&(a[x+4]+=1))}}function d(x){r.push(x.x,x.y,x.z)}function f(x,b){const y=x*3;b.x=e[y+0],b.y=e[y+1],b.z=e[y+2]}function p(){const x=new S,b=new S,y=new S,_=new S,w=new $,C=new $,T=new $;for(let v=0,E=0;v<r.length;v+=9,E+=6){x.set(r[v+0],r[v+1],r[v+2]),b.set(r[v+3],r[v+4],r[v+5]),y.set(r[v+6],r[v+7],r[v+8]),w.set(a[E+0],a[E+1]),C.set(a[E+2],a[E+3]),T.set(a[E+4],a[E+5]),_.copy(x).add(b).add(y).divideScalar(3);const B=m(_);g(w,E+0,x,B),g(C,E+2,b,B),g(T,E+4,y,B)}}function g(x,b,y,_){_<0&&x.x===1&&(a[b]=x.x-1),y.x===0&&y.z===0&&(a[b]=_/2/Math.PI+.5)}function m(x){return Math.atan2(x.z,-x.x)}function A(x){return Math.atan2(-x.y,Math.sqrt(x.x*x.x+x.z*x.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Is(e.vertices,e.indices,e.radius,e.details)}}class Zl extends Is{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Zl(e.radius,e.detail)}}const Ac=new S,mc=new S,zh=new S,gc=new Nn;class tg extends $e{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(dr*t),a=e.getIndex(),o=e.getAttribute("position"),c=a?a.count:o.count,l=[0,0,0],h=["a","b","c"],u=new Array(3),d={},f=[];for(let p=0;p<c;p+=3){a?(l[0]=a.getX(p),l[1]=a.getX(p+1),l[2]=a.getX(p+2)):(l[0]=p,l[1]=p+1,l[2]=p+2);const{a:g,b:m,c:A}=gc;if(g.fromBufferAttribute(o,l[0]),m.fromBufferAttribute(o,l[1]),A.fromBufferAttribute(o,l[2]),gc.getNormal(zh),u[0]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,u[1]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,u[2]=`${Math.round(A.x*i)},${Math.round(A.y*i)},${Math.round(A.z*i)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let x=0;x<3;x++){const b=(x+1)%3,y=u[x],_=u[b],w=gc[h[x]],C=gc[h[b]],T=`${y}_${_}`,v=`${_}_${y}`;v in d&&d[v]?(zh.dot(d[v].normal)<=r&&(f.push(w.x,w.y,w.z),f.push(C.x,C.y,C.z)),d[v]=null):T in d||(d[T]={index0:l[x],index1:l[b],normal:zh.clone()})}}for(const p in d)if(d[p]){const{index0:g,index1:m}=d[p];Ac.fromBufferAttribute(o,g),mc.fromBufferAttribute(o,m),f.push(Ac.x,Ac.y,Ac.z),f.push(mc.x,mc.y,mc.z)}this.setAttribute("position",new Xe(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Mi{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const n=this.getLengths();let i=0;const r=n.length;let a;t?a=t:a=e*n[r-1];let o=0,c=r-1,l;for(;o<=c;)if(i=Math.floor(o+(c-o)/2),l=n[i]-a,l<0)o=i+1;else if(l>0)c=i-1;else{c=i;break}if(i=c,n[i]===a)return i/(r-1);const h=n[i],d=n[i+1]-h,f=(a-h)/d;return(i+f)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),o=this.getPoint(r),c=t||(a.isVector2?new $:new S);return c.copy(o).sub(a).normalize(),c}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t=!1){const n=new S,i=[],r=[],a=[],o=new S,c=new Ke;for(let f=0;f<=e;f++){const p=f/e;i[f]=this.getTangentAt(p,new S)}r[0]=new S,a[0]=new S;let l=Number.MAX_VALUE;const h=Math.abs(i[0].x),u=Math.abs(i[0].y),d=Math.abs(i[0].z);h<=l&&(l=h,n.set(1,0,0)),u<=l&&(l=u,n.set(0,1,0)),d<=l&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),a[0].crossVectors(i[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),a[f]=a[f-1].clone(),o.crossVectors(i[f-1],i[f]),o.length()>Number.EPSILON){o.normalize();const p=Math.acos(rt(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(c.makeRotationAxis(o,p))}a[f].crossVectors(i[f],r[f])}if(t===!0){let f=Math.acos(rt(r[0].dot(r[e]),-1,1));f/=e,i[0].dot(o.crossVectors(r[0],r[e]))>0&&(f=-f);for(let p=1;p<=e;p++)r[p].applyMatrix4(c.makeRotationAxis(i[p],f*p)),a[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class $l extends Mi{constructor(e=0,t=0,n=1,i=1,r=0,a=Math.PI*2,o=!1,c=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=o,this.aRotation=c}getPoint(e,t=new $){const n=t,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(a?r=0:r=i),this.aClockwise===!0&&!a&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+e*r;let c=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=c-this.aX,f=l-this.aY;c=d*h-f*u+this.aX,l=d*u+f*h+this.aY}return n.set(c,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class ng extends $l{constructor(e,t,n,i,r,a){super(e,t,n,n,i,r,a),this.isArcCurve=!0,this.type="ArcCurve"}}function Id(){let s=0,e=0,t=0,n=0;function i(r,a,o,c){s=r,e=o,t=-3*r+3*a-2*o-c,n=2*r-2*a+o+c}return{initCatmullRom:function(r,a,o,c,l){i(a,o,l*(o-r),l*(c-a))},initNonuniformCatmullRom:function(r,a,o,c,l,h,u){let d=(a-r)/l-(o-r)/(l+h)+(o-a)/h,f=(o-a)/h-(c-a)/(h+u)+(c-o)/u;d*=h,f*=h,i(a,o,d,f)},calc:function(r){const a=r*r,o=a*r;return s+e*r+t*a+n*o}}}const yc=new S,Hh=new Id,Vh=new Id,Wh=new Id;class Po extends Mi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new S){const n=t,i=this.points,r=i.length,a=(r-(this.closed?0:1))*e;let o=Math.floor(a),c=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:c===0&&o===r-1&&(o=r-2,c=1);let l,h;this.closed||o>0?l=i[(o-1)%r]:(yc.subVectors(i[0],i[1]).add(i[0]),l=yc);const u=i[o%r],d=i[(o+1)%r];if(this.closed||o+2<r?h=i[(o+2)%r]:(yc.subVectors(i[r-1],i[r-2]).add(i[r-1]),h=yc),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(l.distanceToSquared(u),f),g=Math.pow(u.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(h),f);g<1e-4&&(g=1),p<1e-4&&(p=g),m<1e-4&&(m=g),Hh.initNonuniformCatmullRom(l.x,u.x,d.x,h.x,p,g,m),Vh.initNonuniformCatmullRom(l.y,u.y,d.y,h.y,p,g,m),Wh.initNonuniformCatmullRom(l.z,u.z,d.z,h.z,p,g,m)}else this.curveType==="catmullrom"&&(Hh.initCatmullRom(l.x,u.x,d.x,h.x,this.tension),Vh.initCatmullRom(l.y,u.y,d.y,h.y,this.tension),Wh.initCatmullRom(l.z,u.z,d.z,h.z,this.tension));return n.set(Hh.calc(c),Vh.calc(c),Wh.calc(c)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new S().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Vf(s,e,t,n,i){const r=(n-e)*.5,a=(i-t)*.5,o=s*s,c=s*o;return(2*t-2*n+r+a)*c+(-3*t+3*n-2*r-a)*o+r*s+t}function $b(s,e){const t=1-s;return t*t*e}function ex(s,e){return 2*(1-s)*s*e}function tx(s,e){return s*s*e}function Za(s,e,t,n){return $b(s,e)+ex(s,t)+tx(s,n)}function nx(s,e){const t=1-s;return t*t*t*e}function ix(s,e){const t=1-s;return 3*t*t*s*e}function sx(s,e){return 3*(1-s)*s*s*e}function rx(s,e){return s*s*s*e}function $a(s,e,t,n,i){return nx(s,e)+ix(s,t)+sx(s,n)+rx(s,i)}class Td extends Mi{constructor(e=new $,t=new $,n=new $,i=new $){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new $){const n=t,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set($a(e,i.x,r.x,a.x,o.x),$a(e,i.y,r.y,a.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ig extends Mi{constructor(e=new S,t=new S,n=new S,i=new S){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new S){const n=t,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set($a(e,i.x,r.x,a.x,o.x),$a(e,i.y,r.y,a.y,o.y),$a(e,i.z,r.z,a.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Bd extends Mi{constructor(e=new $,t=new $){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new $){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new $){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class sg extends Mi{constructor(e=new S,t=new S){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new S){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new S){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Rd extends Mi{constructor(e=new $,t=new $,n=new $){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new $){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(Za(e,i.x,r.x,a.x),Za(e,i.y,r.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Dd extends Mi{constructor(e=new S,t=new S,n=new S){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new S){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(Za(e,i.x,r.x,a.x),Za(e,i.y,r.y,a.y),Za(e,i.z,r.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Pd extends Mi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new $){const n=t,i=this.points,r=(i.length-1)*e,a=Math.floor(r),o=r-a,c=i[a===0?a:a-1],l=i[a],h=i[a>i.length-2?i.length-1:a+1],u=i[a>i.length-3?i.length-1:a+2];return n.set(Vf(o,c.x,l.x,h.x,u.x),Vf(o,c.y,l.y,h.y,u.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new $().fromArray(i))}return this}}var Tl=Object.freeze({__proto__:null,ArcCurve:ng,CatmullRomCurve3:Po,CubicBezierCurve:Td,CubicBezierCurve3:ig,EllipseCurve:$l,LineCurve:Bd,LineCurve3:sg,QuadraticBezierCurve:Rd,QuadraticBezierCurve3:Dd,SplineCurve:Pd});class rg extends Mi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Tl[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const a=i[r]-n,o=this.curves[r],c=o.getLength(),l=c===0?0:1-a/c;return o.getPointAt(l,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],o=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,c=a.getPoints(o);for(let l=0;l<c.length;l++){const h=c[l];n&&n.equals(h)||(t.push(h),n=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Tl[i.type]().fromJSON(i))}return this}}class Bl extends rg{constructor(e){super(),this.type="Path",this.currentPoint=new $,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Bd(this.currentPoint.clone(),new $(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new Rd(this.currentPoint.clone(),new $(e,t),new $(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,a){const o=new Td(this.currentPoint.clone(),new $(e,t),new $(n,i),new $(r,a));return this.curves.push(o),this.currentPoint.set(r,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Pd(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,a){const o=this.currentPoint.x,c=this.currentPoint.y;return this.absarc(e+o,t+c,n,i,r,a),this}absarc(e,t,n,i,r,a){return this.absellipse(e,t,n,n,i,r,a),this}ellipse(e,t,n,i,r,a,o,c){const l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,n,i,r,a,o,c),this}absellipse(e,t,n,i,r,a,o,c){const l=new $l(e,t,n,i,r,a,o,c);if(this.curves.length>0){const u=l.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(l);const h=l.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class fr extends Bl{constructor(e){super(e),this.uuid=si(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Bl().fromJSON(i))}return this}}function ax(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=ag(s,0,i,t,!0);const a=[];if(!r||r.next===r.prev)return a;let o,c,l;if(n&&(r=ux(s,e,r,t)),s.length>80*t){o=1/0,c=1/0;let h=-1/0,u=-1/0;for(let d=t;d<i;d+=t){const f=s[d],p=s[d+1];f<o&&(o=f),p<c&&(c=p),f>h&&(h=f),p>u&&(u=p)}l=Math.max(h-o,u-c),l=l!==0?32767/l:0}return go(r,a,t,o,c,l,0),a}function ag(s,e,t,n,i){let r;if(i===Ex(s,e,t,n)>0)for(let a=e;a<t;a+=n)r=Wf(a/n|0,s[a],s[a+1],r);else for(let a=t-n;a>=e;a-=n)r=Wf(a/n|0,s[a],s[a+1],r);return r&&_a(r,r.next)&&(bo(r),r=r.next),r}function yr(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(_a(t,t.next)||Wt(t.prev,t,t.next)===0)){if(bo(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function go(s,e,t,n,i,r,a){if(!s)return;!a&&r&&mx(s,n,i,r);let o=s;for(;s.prev!==s.next;){const c=s.prev,l=s.next;if(r?cx(s,n,i,r):ox(s)){e.push(c.i,s.i,l.i),bo(s),s=l.next,o=l.next;continue}if(s=l,s===o){a?a===1?(s=lx(yr(s),e),go(s,e,t,n,i,r,2)):a===2&&hx(s,e,t,n,i,r):go(yr(s),e,t,n,i,r,1);break}}}function ox(s){const e=s.prev,t=s,n=s.next;if(Wt(e,t,n)>=0)return!1;const i=e.x,r=t.x,a=n.x,o=e.y,c=t.y,l=n.y,h=Math.min(i,r,a),u=Math.min(o,c,l),d=Math.max(i,r,a),f=Math.max(o,c,l);let p=n.next;for(;p!==e;){if(p.x>=h&&p.x<=d&&p.y>=u&&p.y<=f&&Xa(i,o,r,c,a,l,p.x,p.y)&&Wt(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function cx(s,e,t,n){const i=s.prev,r=s,a=s.next;if(Wt(i,r,a)>=0)return!1;const o=i.x,c=r.x,l=a.x,h=i.y,u=r.y,d=a.y,f=Math.min(o,c,l),p=Math.min(h,u,d),g=Math.max(o,c,l),m=Math.max(h,u,d),A=Hu(f,p,e,t,n),x=Hu(g,m,e,t,n);let b=s.prevZ,y=s.nextZ;for(;b&&b.z>=A&&y&&y.z<=x;){if(b.x>=f&&b.x<=g&&b.y>=p&&b.y<=m&&b!==i&&b!==a&&Xa(o,h,c,u,l,d,b.x,b.y)&&Wt(b.prev,b,b.next)>=0||(b=b.prevZ,y.x>=f&&y.x<=g&&y.y>=p&&y.y<=m&&y!==i&&y!==a&&Xa(o,h,c,u,l,d,y.x,y.y)&&Wt(y.prev,y,y.next)>=0))return!1;y=y.nextZ}for(;b&&b.z>=A;){if(b.x>=f&&b.x<=g&&b.y>=p&&b.y<=m&&b!==i&&b!==a&&Xa(o,h,c,u,l,d,b.x,b.y)&&Wt(b.prev,b,b.next)>=0)return!1;b=b.prevZ}for(;y&&y.z<=x;){if(y.x>=f&&y.x<=g&&y.y>=p&&y.y<=m&&y!==i&&y!==a&&Xa(o,h,c,u,l,d,y.x,y.y)&&Wt(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}function lx(s,e){let t=s;do{const n=t.prev,i=t.next.next;!_a(n,i)&&cg(n,t,t.next,i)&&yo(n,i)&&yo(i,n)&&(e.push(n.i,t.i,i.i),bo(t),bo(t.next),t=s=i),t=t.next}while(t!==s);return yr(t)}function hx(s,e,t,n,i,r){let a=s;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&bx(a,o)){let c=lg(a,o);a=yr(a,a.next),c=yr(c,c.next),go(a,e,t,n,i,r,0),go(c,e,t,n,i,r,0);return}o=o.next}a=a.next}while(a!==s)}function ux(s,e,t,n){const i=[];for(let r=0,a=e.length;r<a;r++){const o=e[r]*n,c=r<a-1?e[r+1]*n:s.length,l=ag(s,o,c,n,!1);l===l.next&&(l.steiner=!0),i.push(yx(l))}i.sort(dx);for(let r=0;r<i.length;r++)t=fx(i[r],t);return t}function dx(s,e){let t=s.x-e.x;if(t===0&&(t=s.y-e.y,t===0)){const n=(s.next.y-s.y)/(s.next.x-s.x),i=(e.next.y-e.y)/(e.next.x-e.x);t=n-i}return t}function fx(s,e){const t=px(s,e);if(!t)return e;const n=lg(t,s);return yr(n,n.next),yr(t,t.next)}function px(s,e){let t=e;const n=s.x,i=s.y;let r=-1/0,a;if(_a(s,t))return t;do{if(_a(s,t.next))return t.next;if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const u=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(u<=n&&u>r&&(r=u,a=t.x<t.next.x?t:t.next,u===n))return a}t=t.next}while(t!==e);if(!a)return null;const o=a,c=a.x,l=a.y;let h=1/0;t=a;do{if(n>=t.x&&t.x>=c&&n!==t.x&&og(i<l?n:r,i,c,l,i<l?r:n,i,t.x,t.y)){const u=Math.abs(i-t.y)/(n-t.x);yo(t,s)&&(u<h||u===h&&(t.x>a.x||t.x===a.x&&Ax(a,t)))&&(a=t,h=u)}t=t.next}while(t!==o);return a}function Ax(s,e){return Wt(s.prev,s,e.prev)<0&&Wt(e.next,s,s.next)<0}function mx(s,e,t,n){let i=s;do i.z===0&&(i.z=Hu(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,gx(i)}function gx(s){let e,t=1;do{let n=s,i;s=null;let r=null;for(e=0;n;){e++;let a=n,o=0;for(let l=0;l<t&&(o++,a=a.nextZ,!!a);l++);let c=t;for(;o>0||c>0&&a;)o!==0&&(c===0||!a||n.z<=a.z)?(i=n,n=n.nextZ,o--):(i=a,a=a.nextZ,c--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;n=a}r.nextZ=null,t*=2}while(e>1);return s}function Hu(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function yx(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function og(s,e,t,n,i,r,a,o){return(i-a)*(e-o)>=(s-a)*(r-o)&&(s-a)*(n-o)>=(t-a)*(e-o)&&(t-a)*(r-o)>=(i-a)*(n-o)}function Xa(s,e,t,n,i,r,a,o){return!(s===a&&e===o)&&og(s,e,t,n,i,r,a,o)}function bx(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!xx(s,e)&&(yo(s,e)&&yo(e,s)&&_x(s,e)&&(Wt(s.prev,s,e.prev)||Wt(s,e.prev,e))||_a(s,e)&&Wt(s.prev,s,s.next)>0&&Wt(e.prev,e,e.next)>0)}function Wt(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function _a(s,e){return s.x===e.x&&s.y===e.y}function cg(s,e,t,n){const i=xc(Wt(s,e,t)),r=xc(Wt(s,e,n)),a=xc(Wt(t,n,s)),o=xc(Wt(t,n,e));return!!(i!==r&&a!==o||i===0&&bc(s,t,e)||r===0&&bc(s,n,e)||a===0&&bc(t,s,n)||o===0&&bc(t,e,n))}function bc(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function xc(s){return s>0?1:s<0?-1:0}function xx(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&cg(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function yo(s,e){return Wt(s.prev,s,s.next)<0?Wt(s,e,s.next)>=0&&Wt(s,s.prev,e)>=0:Wt(s,e,s.prev)<0||Wt(s,s.next,e)<0}function _x(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function lg(s,e){const t=Vu(s.i,s.x,s.y),n=Vu(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function Wf(s,e,t,n){const i=Vu(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function bo(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Vu(s,e,t){return{i:s,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function Ex(s,e,t,n){let i=0;for(let r=e,a=t-n;r<t;r+=n)i+=(s[a]-s[r])*(s[r+1]+s[a+1]),a=r;return i}class vx{static triangulate(e,t,n=2){return ax(e,t,n)}}class vi{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return vi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];qf(e),Xf(n,e);let a=e.length;t.forEach(qf);for(let c=0;c<t.length;c++)i.push(a),a+=t[c].length,Xf(n,t[c]);const o=vx.triangulate(n,i);for(let c=0;c<o.length;c+=3)r.push(o.slice(c,c+3));return r}}function qf(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function Xf(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class eh extends $e{constructor(e=new fr([new $(.5,.5),new $(-.5,.5),new $(-.5,-.5),new $(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let o=0,c=e.length;o<c;o++){const l=e[o];a(l)}this.setAttribute("position",new Xe(i,3)),this.setAttribute("uv",new Xe(r,2)),this.computeVertexNormals();function a(o){const c=[],l=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,u=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,g=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const A=t.extrudePath,x=t.UVGenerator!==void 0?t.UVGenerator:wx;let b,y=!1,_,w,C,T;A&&(b=A.getSpacedPoints(h),y=!0,d=!1,_=A.computeFrenetFrames(h,!1),w=new S,C=new S,T=new S),d||(m=0,f=0,p=0,g=0);const v=o.extractPoints(l);let E=v.shape;const B=v.holes;if(!vi.isClockWise(E)){E=E.reverse();for(let de=0,ne=B.length;de<ne;de++){const ie=B[de];vi.isClockWise(ie)&&(B[de]=ie.reverse())}}function F(de){const ie=10000000000000001e-36;let te=de[0];for(let _e=1;_e<=de.length;_e++){const le=_e%de.length,ve=de[le],nt=ve.x-te.x,Ze=ve.y-te.y,R=nt*nt+Ze*Ze,I=Math.max(Math.abs(ve.x),Math.abs(ve.y),Math.abs(te.x),Math.abs(te.y)),W=ie*I*I;if(R<=W){de.splice(le,1),_e--;continue}te=ve}}F(E),B.forEach(F);const N=B.length,G=E;for(let de=0;de<N;de++){const ne=B[de];E=E.concat(ne)}function k(de,ne,ie){return ne||console.error("THREE.ExtrudeGeometry: vec does not exist"),de.clone().addScaledVector(ne,ie)}const J=E.length;function U(de,ne,ie){let te,_e,le;const ve=de.x-ne.x,nt=de.y-ne.y,Ze=ie.x-de.x,R=ie.y-de.y,I=ve*ve+nt*nt,W=ve*R-nt*Ze;if(Math.abs(W)>Number.EPSILON){const Y=Math.sqrt(I),he=Math.sqrt(Ze*Ze+R*R),Z=ne.x-nt/Y,Ge=ne.y+ve/Y,we=ie.x-R/he,qe=ie.y+Ze/he,Ve=((we-Z)*R-(qe-Ge)*Ze)/(ve*R-nt*Ze);te=Z+ve*Ve-de.x,_e=Ge+nt*Ve-de.y;const ye=te*te+_e*_e;if(ye<=2)return new $(te,_e);le=Math.sqrt(ye/2)}else{let Y=!1;ve>Number.EPSILON?Ze>Number.EPSILON&&(Y=!0):ve<-Number.EPSILON?Ze<-Number.EPSILON&&(Y=!0):Math.sign(nt)===Math.sign(R)&&(Y=!0),Y?(te=-nt,_e=ve,le=Math.sqrt(I)):(te=ve,_e=nt,le=Math.sqrt(I/2))}return new $(te/le,_e/le)}const ee=[];for(let de=0,ne=G.length,ie=ne-1,te=de+1;de<ne;de++,ie++,te++)ie===ne&&(ie=0),te===ne&&(te=0),ee[de]=U(G[de],G[ie],G[te]);const Ae=[];let oe,Me=ee.concat();for(let de=0,ne=N;de<ne;de++){const ie=B[de];oe=[];for(let te=0,_e=ie.length,le=_e-1,ve=te+1;te<_e;te++,le++,ve++)le===_e&&(le=0),ve===_e&&(ve=0),oe[te]=U(ie[te],ie[le],ie[ve]);Ae.push(oe),Me=Me.concat(oe)}let Ne;if(m===0)Ne=vi.triangulateShape(G,B);else{const de=[],ne=[];for(let ie=0;ie<m;ie++){const te=ie/m,_e=f*Math.cos(te*Math.PI/2),le=p*Math.sin(te*Math.PI/2)+g;for(let ve=0,nt=G.length;ve<nt;ve++){const Ze=k(G[ve],ee[ve],le);Ue(Ze.x,Ze.y,-_e),te===0&&de.push(Ze)}for(let ve=0,nt=N;ve<nt;ve++){const Ze=B[ve];oe=Ae[ve];const R=[];for(let I=0,W=Ze.length;I<W;I++){const Y=k(Ze[I],oe[I],le);Ue(Y.x,Y.y,-_e),te===0&&R.push(Y)}te===0&&ne.push(R)}}Ne=vi.triangulateShape(de,ne)}const st=Ne.length,Oe=p+g;for(let de=0;de<J;de++){const ne=d?k(E[de],Me[de],Oe):E[de];y?(C.copy(_.normals[0]).multiplyScalar(ne.x),w.copy(_.binormals[0]).multiplyScalar(ne.y),T.copy(b[0]).add(C).add(w),Ue(T.x,T.y,T.z)):Ue(ne.x,ne.y,0)}for(let de=1;de<=h;de++)for(let ne=0;ne<J;ne++){const ie=d?k(E[ne],Me[ne],Oe):E[ne];y?(C.copy(_.normals[de]).multiplyScalar(ie.x),w.copy(_.binormals[de]).multiplyScalar(ie.y),T.copy(b[de]).add(C).add(w),Ue(T.x,T.y,T.z)):Ue(ie.x,ie.y,u/h*de)}for(let de=m-1;de>=0;de--){const ne=de/m,ie=f*Math.cos(ne*Math.PI/2),te=p*Math.sin(ne*Math.PI/2)+g;for(let _e=0,le=G.length;_e<le;_e++){const ve=k(G[_e],ee[_e],te);Ue(ve.x,ve.y,u+ie)}for(let _e=0,le=B.length;_e<le;_e++){const ve=B[_e];oe=Ae[_e];for(let nt=0,Ze=ve.length;nt<Ze;nt++){const R=k(ve[nt],oe[nt],te);y?Ue(R.x,R.y+b[h-1].y,b[h-1].x+ie):Ue(R.x,R.y,u+ie)}}}K(),X();function K(){const de=i.length/3;if(d){let ne=0,ie=J*ne;for(let te=0;te<st;te++){const _e=Ne[te];Qe(_e[2]+ie,_e[1]+ie,_e[0]+ie)}ne=h+m*2,ie=J*ne;for(let te=0;te<st;te++){const _e=Ne[te];Qe(_e[0]+ie,_e[1]+ie,_e[2]+ie)}}else{for(let ne=0;ne<st;ne++){const ie=Ne[ne];Qe(ie[2],ie[1],ie[0])}for(let ne=0;ne<st;ne++){const ie=Ne[ne];Qe(ie[0]+J*h,ie[1]+J*h,ie[2]+J*h)}}n.addGroup(de,i.length/3-de,0)}function X(){const de=i.length/3;let ne=0;Re(G,ne),ne+=G.length;for(let ie=0,te=B.length;ie<te;ie++){const _e=B[ie];Re(_e,ne),ne+=_e.length}n.addGroup(de,i.length/3-de,1)}function Re(de,ne){let ie=de.length;for(;--ie>=0;){const te=ie;let _e=ie-1;_e<0&&(_e=de.length-1);for(let le=0,ve=h+m*2;le<ve;le++){const nt=J*le,Ze=J*(le+1),R=ne+te+nt,I=ne+_e+nt,W=ne+_e+Ze,Y=ne+te+Ze;at(R,I,W,Y)}}}function Ue(de,ne,ie){c.push(de),c.push(ne),c.push(ie)}function Qe(de,ne,ie){_t(de),_t(ne),_t(ie);const te=i.length/3,_e=x.generateTopUV(n,i,te-3,te-2,te-1);P(_e[0]),P(_e[1]),P(_e[2])}function at(de,ne,ie,te){_t(de),_t(ne),_t(te),_t(ne),_t(ie),_t(te);const _e=i.length/3,le=x.generateSideWallUV(n,i,_e-6,_e-3,_e-2,_e-1);P(le[0]),P(le[1]),P(le[3]),P(le[1]),P(le[2]),P(le[3])}function _t(de){i.push(c[de*3+0]),i.push(c[de*3+1]),i.push(c[de*3+2])}function P(de){r.push(de.x),r.push(de.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Sx(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,a=e.shapes.length;r<a;r++){const o=t[e.shapes[r]];n.push(o)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Tl[i.type]().fromJSON(i)),new eh(n,e.options)}}const wx={generateTopUV:function(s,e,t,n,i){const r=e[t*3],a=e[t*3+1],o=e[n*3],c=e[n*3+1],l=e[i*3],h=e[i*3+1];return[new $(r,a),new $(o,c),new $(l,h)]},generateSideWallUV:function(s,e,t,n,i,r){const a=e[t*3],o=e[t*3+1],c=e[t*3+2],l=e[n*3],h=e[n*3+1],u=e[n*3+2],d=e[i*3],f=e[i*3+1],p=e[i*3+2],g=e[r*3],m=e[r*3+1],A=e[r*3+2];return Math.abs(o-h)<Math.abs(a-l)?[new $(a,1-c),new $(l,1-u),new $(d,1-p),new $(g,1-A)]:[new $(o,1-c),new $(h,1-u),new $(f,1-p),new $(m,1-A)]}};function Sx(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class th extends Is{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new th(e.radius,e.detail)}}class nh extends $e{constructor(e=[new $(0,-.5),new $(.5,0),new $(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=rt(i,0,Math.PI*2);const r=[],a=[],o=[],c=[],l=[],h=1/t,u=new S,d=new $,f=new S,p=new S,g=new S;let m=0,A=0;for(let x=0;x<=e.length-1;x++)switch(x){case 0:m=e[x+1].x-e[x].x,A=e[x+1].y-e[x].y,f.x=A*1,f.y=-m,f.z=A*0,g.copy(f),f.normalize(),c.push(f.x,f.y,f.z);break;case e.length-1:c.push(g.x,g.y,g.z);break;default:m=e[x+1].x-e[x].x,A=e[x+1].y-e[x].y,f.x=A*1,f.y=-m,f.z=A*0,p.copy(f),f.x+=g.x,f.y+=g.y,f.z+=g.z,f.normalize(),c.push(f.x,f.y,f.z),g.copy(p)}for(let x=0;x<=t;x++){const b=n+x*h*i,y=Math.sin(b),_=Math.cos(b);for(let w=0;w<=e.length-1;w++){u.x=e[w].x*y,u.y=e[w].y,u.z=e[w].x*_,a.push(u.x,u.y,u.z),d.x=x/t,d.y=w/(e.length-1),o.push(d.x,d.y);const C=c[3*w+0]*y,T=c[3*w+1],v=c[3*w+0]*_;l.push(C,T,v)}}for(let x=0;x<t;x++)for(let b=0;b<e.length-1;b++){const y=b+x*e.length,_=y,w=y+e.length,C=y+e.length+1,T=y+1;r.push(_,w,T),r.push(C,T,w)}this.setIndex(r),this.setAttribute("position",new Xe(a,3)),this.setAttribute("uv",new Xe(o,2)),this.setAttribute("normal",new Xe(l,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new nh(e.points,e.segments,e.phiStart,e.phiLength)}}class Lo extends Is{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Lo(e.radius,e.detail)}}class pi extends $e{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,o=Math.floor(n),c=Math.floor(i),l=o+1,h=c+1,u=e/o,d=t/c,f=[],p=[],g=[],m=[];for(let A=0;A<h;A++){const x=A*d-a;for(let b=0;b<l;b++){const y=b*u-r;p.push(y,-x,0),g.push(0,0,1),m.push(b/o),m.push(1-A/c)}}for(let A=0;A<c;A++)for(let x=0;x<o;x++){const b=x+l*A,y=x+l*(A+1),_=x+1+l*(A+1),w=x+1+l*A;f.push(b,y,w),f.push(y,_,w)}this.setIndex(f),this.setAttribute("position",new Xe(p,3)),this.setAttribute("normal",new Xe(g,3)),this.setAttribute("uv",new Xe(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new pi(e.width,e.height,e.widthSegments,e.heightSegments)}}class Fo extends $e{constructor(e=.5,t=1,n=32,i=1,r=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const o=[],c=[],l=[],h=[];let u=e;const d=(t-e)/i,f=new S,p=new $;for(let g=0;g<=i;g++){for(let m=0;m<=n;m++){const A=r+m/n*a;f.x=u*Math.cos(A),f.y=u*Math.sin(A),c.push(f.x,f.y,f.z),l.push(0,0,1),p.x=(f.x/t+1)/2,p.y=(f.y/t+1)/2,h.push(p.x,p.y)}u+=d}for(let g=0;g<i;g++){const m=g*(n+1);for(let A=0;A<n;A++){const x=A+m,b=x,y=x+n+1,_=x+n+2,w=x+1;o.push(b,y,w),o.push(y,_,w)}}this.setIndex(o),this.setAttribute("position",new Xe(c,3)),this.setAttribute("normal",new Xe(l,3)),this.setAttribute("uv",new Xe(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Fo(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class ih extends $e{constructor(e=new fr([new $(0,.5),new $(-.5,-.5),new $(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],a=[];let o=0,c=0;if(Array.isArray(e)===!1)l(e);else for(let h=0;h<e.length;h++)l(e[h]),this.addGroup(o,c,h),o+=c,c=0;this.setIndex(n),this.setAttribute("position",new Xe(i,3)),this.setAttribute("normal",new Xe(r,3)),this.setAttribute("uv",new Xe(a,2));function l(h){const u=i.length/3,d=h.extractPoints(t);let f=d.shape;const p=d.holes;vi.isClockWise(f)===!1&&(f=f.reverse());for(let m=0,A=p.length;m<A;m++){const x=p[m];vi.isClockWise(x)===!0&&(p[m]=x.reverse())}const g=vi.triangulateShape(f,p);for(let m=0,A=p.length;m<A;m++){const x=p[m];f=f.concat(x)}for(let m=0,A=f.length;m<A;m++){const x=f[m];i.push(x.x,x.y,0),r.push(0,0,1),a.push(x.x,x.y)}for(let m=0,A=g.length;m<A;m++){const x=g[m],b=x[0]+u,y=x[1]+u,_=x[2]+u;n.push(b,y,_),c+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return Cx(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const a=t[e.shapes[i]];n.push(a)}return new ih(n,e.curveSegments)}}function Cx(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class Xn extends $e{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(a+o,Math.PI);let l=0;const h=[],u=new S,d=new S,f=[],p=[],g=[],m=[];for(let A=0;A<=n;A++){const x=[],b=A/n;let y=0;A===0&&a===0?y=.5/t:A===n&&c===Math.PI&&(y=-.5/t);for(let _=0;_<=t;_++){const w=_/t;u.x=-e*Math.cos(i+w*r)*Math.sin(a+b*o),u.y=e*Math.cos(a+b*o),u.z=e*Math.sin(i+w*r)*Math.sin(a+b*o),p.push(u.x,u.y,u.z),d.copy(u).normalize(),g.push(d.x,d.y,d.z),m.push(w+y,1-b),x.push(l++)}h.push(x)}for(let A=0;A<n;A++)for(let x=0;x<t;x++){const b=h[A][x+1],y=h[A][x],_=h[A+1][x],w=h[A+1][x+1];(A!==0||a>0)&&f.push(b,y,w),(A!==n-1||c<Math.PI)&&f.push(y,_,w)}this.setIndex(f),this.setAttribute("position",new Xe(p,3)),this.setAttribute("normal",new Xe(g,3)),this.setAttribute("uv",new Xe(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xn(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class sh extends Is{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new sh(e.radius,e.detail)}}class Uo extends $e{constructor(e=1,t=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],c=[],l=[],h=new S,u=new S,d=new S;for(let f=0;f<=n;f++)for(let p=0;p<=i;p++){const g=p/i*r,m=f/n*Math.PI*2;u.x=(e+t*Math.cos(m))*Math.cos(g),u.y=(e+t*Math.cos(m))*Math.sin(g),u.z=t*Math.sin(m),o.push(u.x,u.y,u.z),h.x=e*Math.cos(g),h.y=e*Math.sin(g),d.subVectors(u,h).normalize(),c.push(d.x,d.y,d.z),l.push(p/i),l.push(f/n)}for(let f=1;f<=n;f++)for(let p=1;p<=i;p++){const g=(i+1)*f+p-1,m=(i+1)*(f-1)+p-1,A=(i+1)*(f-1)+p,x=(i+1)*f+p;a.push(g,m,x),a.push(m,A,x)}this.setIndex(a),this.setAttribute("position",new Xe(o,3)),this.setAttribute("normal",new Xe(c,3)),this.setAttribute("uv",new Xe(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Uo(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class rh extends $e{constructor(e=1,t=.4,n=64,i=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:a},n=Math.floor(n),i=Math.floor(i);const o=[],c=[],l=[],h=[],u=new S,d=new S,f=new S,p=new S,g=new S,m=new S,A=new S;for(let b=0;b<=n;++b){const y=b/n*r*Math.PI*2;x(y,r,a,e,f),x(y+.01,r,a,e,p),m.subVectors(p,f),A.addVectors(p,f),g.crossVectors(m,A),A.crossVectors(g,m),g.normalize(),A.normalize();for(let _=0;_<=i;++_){const w=_/i*Math.PI*2,C=-t*Math.cos(w),T=t*Math.sin(w);u.x=f.x+(C*A.x+T*g.x),u.y=f.y+(C*A.y+T*g.y),u.z=f.z+(C*A.z+T*g.z),c.push(u.x,u.y,u.z),d.subVectors(u,f).normalize(),l.push(d.x,d.y,d.z),h.push(b/n),h.push(_/i)}}for(let b=1;b<=n;b++)for(let y=1;y<=i;y++){const _=(i+1)*(b-1)+(y-1),w=(i+1)*b+(y-1),C=(i+1)*b+y,T=(i+1)*(b-1)+y;o.push(_,w,T),o.push(w,C,T)}this.setIndex(o),this.setAttribute("position",new Xe(c,3)),this.setAttribute("normal",new Xe(l,3)),this.setAttribute("uv",new Xe(h,2));function x(b,y,_,w,C){const T=Math.cos(b),v=Math.sin(b),E=_/y*b,B=Math.cos(E);C.x=w*(2+B)*.5*T,C.y=w*(2+B)*v*.5,C.z=w*Math.sin(E)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rh(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class ah extends $e{constructor(e=new Dd(new S(-1,-1,0),new S(-1,1,0),new S(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new S,c=new S,l=new $;let h=new S;const u=[],d=[],f=[],p=[];g(),this.setIndex(p),this.setAttribute("position",new Xe(u,3)),this.setAttribute("normal",new Xe(d,3)),this.setAttribute("uv",new Xe(f,2));function g(){for(let b=0;b<t;b++)m(b);m(r===!1?t:0),x(),A()}function m(b){h=e.getPointAt(b/t,h);const y=a.normals[b],_=a.binormals[b];for(let w=0;w<=i;w++){const C=w/i*Math.PI*2,T=Math.sin(C),v=-Math.cos(C);c.x=v*y.x+T*_.x,c.y=v*y.y+T*_.y,c.z=v*y.z+T*_.z,c.normalize(),d.push(c.x,c.y,c.z),o.x=h.x+n*c.x,o.y=h.y+n*c.y,o.z=h.z+n*c.z,u.push(o.x,o.y,o.z)}}function A(){for(let b=1;b<=t;b++)for(let y=1;y<=i;y++){const _=(i+1)*(b-1)+(y-1),w=(i+1)*b+(y-1),C=(i+1)*b+y,T=(i+1)*(b-1)+y;p.push(_,w,T),p.push(w,C,T)}}function x(){for(let b=0;b<=t;b++)for(let y=0;y<=i;y++)l.x=b/t,l.y=y/i,f.push(l.x,l.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new ah(new Tl[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class hg extends $e{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new S,r=new S;if(e.index!==null){const a=e.attributes.position,o=e.index;let c=e.groups;c.length===0&&(c=[{start:0,count:o.count,materialIndex:0}]);for(let l=0,h=c.length;l<h;++l){const u=c[l],d=u.start,f=u.count;for(let p=d,g=d+f;p<g;p+=3)for(let m=0;m<3;m++){const A=o.getX(p+m),x=o.getX(p+(m+1)%3);i.fromBufferAttribute(a,A),r.fromBufferAttribute(a,x),Yf(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const a=e.attributes.position;for(let o=0,c=a.count/3;o<c;o++)for(let l=0;l<3;l++){const h=3*o+l,u=3*o+(l+1)%3;i.fromBufferAttribute(a,h),r.fromBufferAttribute(a,u),Yf(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new Xe(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Yf(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var Kf=Object.freeze({__proto__:null,BoxGeometry:Ft,CapsuleGeometry:Do,CircleGeometry:jl,ConeGeometry:zi,CylinderGeometry:Dt,DodecahedronGeometry:Zl,EdgesGeometry:tg,ExtrudeGeometry:eh,IcosahedronGeometry:th,LatheGeometry:nh,OctahedronGeometry:Lo,PlaneGeometry:pi,PolyhedronGeometry:Is,RingGeometry:Fo,ShapeGeometry:ih,SphereGeometry:Xn,TetrahedronGeometry:sh,TorusGeometry:Uo,TorusKnotGeometry:rh,TubeGeometry:ah,WireframeGeometry:hg});class ug extends cn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new ae(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class dg extends Yn{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class tt extends cn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new ae(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ms,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new sn,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class mn extends tt{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new $(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return rt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new ae(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new ae(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ae(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class fg extends cn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new ae(16777215),this.specular=new ae(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ms,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new sn,this.combine=_o,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class pg extends cn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ae(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ms,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Ag extends cn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ms,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class mg extends cn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ms,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new sn,this.combine=_o,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Ld extends cn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Rm,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Fd extends cn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class gg extends cn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ae(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ms,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class yg extends bn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function ar(s,e){return!s||s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function bg(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function xg(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Wu(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,a=0;a!==n;++r){const o=t[r]*e;for(let c=0;c!==e;++c)i[a++]=s[o+c]}return i}function Ud(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let a=r[n];if(a!==void 0)if(Array.isArray(a))do a=r[n],a!==void 0&&(e.push(r.time),t.push(...a)),r=s[i++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[n],a!==void 0&&(e.push(r.time),a.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do a=r[n],a!==void 0&&(e.push(r.time),t.push(a)),r=s[i++];while(r!==void 0)}function Mx(s,e,t,n,i=30){const r=s.clone();r.name=e;const a=[];for(let c=0;c<r.tracks.length;++c){const l=r.tracks[c],h=l.getValueSize(),u=[],d=[];for(let f=0;f<l.times.length;++f){const p=l.times[f]*i;if(!(p<t||p>=n)){u.push(l.times[f]);for(let g=0;g<h;++g)d.push(l.values[f*h+g])}}u.length!==0&&(l.times=ar(u,l.times.constructor),l.values=ar(d,l.values.constructor),a.push(l))}r.tracks=a;let o=1/0;for(let c=0;c<r.tracks.length;++c)o>r.tracks[c].times[0]&&(o=r.tracks[c].times[0]);for(let c=0;c<r.tracks.length;++c)r.tracks[c].shift(-1*o);return r.resetDuration(),r}function Ix(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let a=0;a<i;++a){const o=t.tracks[a],c=o.ValueTypeName;if(c==="bool"||c==="string")continue;const l=s.tracks.find(function(A){return A.name===o.name&&A.ValueTypeName===c});if(l===void 0)continue;let h=0;const u=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let d=0;const f=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=o.times.length-1;let g;if(r<=o.times[0]){const A=h,x=u-h;g=o.values.slice(A,x)}else if(r>=o.times[p]){const A=p*u+h,x=A+u-h;g=o.values.slice(A,x)}else{const A=o.createInterpolant(),x=h,b=u-h;A.evaluate(r),g=A.resultBuffer.slice(x,b)}c==="quaternion"&&new an().fromArray(g).normalize().conjugate().toArray(g);const m=l.times.length;for(let A=0;A<m;++A){const x=A*f+d;if(c==="quaternion")an.multiplyQuaternionsFlat(l.values,x,g,0,l.values,x);else{const b=f-d*2;for(let y=0;y<b;++y)l.values[x+y]-=g[y]}}}return s.blendMode=pd,s}class Tx{static convertArray(e,t){return ar(e,t)}static isTypedArray(e){return bg(e)}static getKeyframeOrder(e){return xg(e)}static sortedArray(e,t,n){return Wu(e,t,n)}static flattenJSON(e,t,n,i){Ud(e,t,n,i)}static subclip(e,t,n,i,r=30){return Mx(e,t,n,i,r)}static makeClipAdditive(e,t=0,n=e,i=30){return Ix(e,t,n,i)}}class Ma{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let o=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===o)break;if(r=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=r)){const o=t[1];e<o&&(n=2,r=o);for(let c=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===c)break;if(i=r,r=t[--n-1],e>=r)break t}a=n,n=0;break n}break e}for(;n<a;){const o=n+a>>>1;e<t[o]?a=o:n=o+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let a=0;a!==i;++a)t[a]=n[r+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class _g extends Ma{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:sr,endingEnd:sr}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,a=e+1,o=i[r],c=i[a];if(o===void 0)switch(this.getSettings_().endingStart){case rr:r=e,o=2*t-n;break;case ho:r=i.length-2,o=t+i[r]-i[r+1];break;default:r=e,o=n}if(c===void 0)switch(this.getSettings_().endingEnd){case rr:a=e,c=2*n-t;break;case ho:a=1,c=n+i[1]-i[0];break;default:a=e-1,c=t}const l=(n-t)*.5,h=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(c-n),this._offsetPrev=r*h,this._offsetNext=a*h}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=e*o,l=c-o,h=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(n-t)/(i-t),g=p*p,m=g*p,A=-d*m+2*d*g-d*p,x=(1+d)*m+(-1.5-2*d)*g+(-.5+d)*p+1,b=(-1-f)*m+(1.5+f)*g+.5*p,y=f*m-f*g;for(let _=0;_!==o;++_)r[_]=A*a[h+_]+x*a[l+_]+b*a[c+_]+y*a[u+_];return r}}class Nd extends Ma{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=e*o,l=c-o,h=(n-t)/(i-t),u=1-h;for(let d=0;d!==o;++d)r[d]=a[l+d]*u+a[c+d]*h;return r}}class Eg extends Ma{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Ai{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ar(t,this.TimeBufferType),this.values=ar(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ar(e.times,Array),values:ar(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Eg(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Nd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new _g(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case ma:t=this.InterpolantFactoryMethodDiscrete;break;case ga:t=this.InterpolantFactoryMethodLinear;break;case Xc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ma;case this.InterpolantFactoryMethodLinear:return ga;case this.InterpolantFactoryMethodSmooth:return Xc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;a!==-1&&n[a]>t;)--a;if(++a,r!==0||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const o=this.getValueSize();this.times=n.slice(r,a),this.values=this.values.slice(r*o,a*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==r;o++){const c=n[o];if(typeof c=="number"&&isNaN(c)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,c),e=!1;break}if(a!==null&&a>c){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,c,a),e=!1;break}a=c}if(i!==void 0&&bg(i))for(let o=0,c=i.length;o!==c;++o){const l=i[o];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,l),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Xc,r=e.length-1;let a=1;for(let o=1;o<r;++o){let c=!1;const l=e[o],h=e[o+1];if(l!==h&&(o!==1||l!==e[0]))if(i)c=!0;else{const u=o*n,d=u-n,f=u+n;for(let p=0;p!==n;++p){const g=t[u+p];if(g!==t[d+p]||g!==t[f+p]){c=!0;break}}}if(c){if(o!==a){e[a]=e[o];const u=o*n,d=a*n;for(let f=0;f!==n;++f)t[d+f]=t[u+f]}++a}}if(r>0){e[a]=e[r];for(let o=r*n,c=a*n,l=0;l!==n;++l)t[c+l]=t[o+l];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Ai.prototype.ValueTypeName="";Ai.prototype.TimeBufferType=Float32Array;Ai.prototype.ValueBufferType=Float32Array;Ai.prototype.DefaultInterpolation=ga;class Er extends Ai{constructor(e,t,n){super(e,t,n)}}Er.prototype.ValueTypeName="bool";Er.prototype.ValueBufferType=Array;Er.prototype.DefaultInterpolation=ma;Er.prototype.InterpolantFactoryMethodLinear=void 0;Er.prototype.InterpolantFactoryMethodSmooth=void 0;class kd extends Ai{constructor(e,t,n,i){super(e,t,n,i)}}kd.prototype.ValueTypeName="color";class br extends Ai{constructor(e,t,n,i){super(e,t,n,i)}}br.prototype.ValueTypeName="number";class vg extends Ma{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=(n-t)/(i-t);let l=e*o;for(let h=l+o;l!==h;l+=4)an.slerpFlat(r,0,a,l-o,a,l,c);return r}}class xr extends Ai{constructor(e,t,n,i){super(e,t,n,i)}InterpolantFactoryMethodLinear(e){return new vg(this.times,this.values,this.getValueSize(),e)}}xr.prototype.ValueTypeName="quaternion";xr.prototype.InterpolantFactoryMethodSmooth=void 0;class vr extends Ai{constructor(e,t,n){super(e,t,n)}}vr.prototype.ValueTypeName="string";vr.prototype.ValueBufferType=Array;vr.prototype.DefaultInterpolation=ma;vr.prototype.InterpolantFactoryMethodLinear=void 0;vr.prototype.InterpolantFactoryMethodSmooth=void 0;class _r extends Ai{constructor(e,t,n,i){super(e,t,n,i)}}_r.prototype.ValueTypeName="vector";class Ea{constructor(e="",t=-1,n=[],i=Hl){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=si(),this.userData={},this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,o=n.length;a!==o;++a)t.push(Rx(n[a]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r.userData=JSON.parse(e.userData||"{}"),r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode,userData:JSON.stringify(e.userData)};for(let r=0,a=n.length;r!==a;++r)t.push(Ai.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,a=[];for(let o=0;o<r;o++){let c=[],l=[];c.push((o+r-1)%r,o,(o+1)%r),l.push(0,1,0);const h=xg(c);c=Wu(c,1,h),l=Wu(l,1,h),!i&&c[0]===0&&(c.push(r),l.push(l[0])),a.push(new br(".morphTargetInfluences["+t[o].name+"]",c,l).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,c=e.length;o<c;o++){const l=e[o],h=l.name.match(r);if(h&&h.length>1){const u=h[1];let d=i[u];d||(i[u]=d=[]),d.push(l)}}const a=[];for(const o in i)a.push(this.CreateFromMorphTargetSequence(o,i[o],t,n));return a}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(u,d,f,p,g){if(f.length!==0){const m=[],A=[];Ud(f,m,A,p),m.length!==0&&g.push(new u(d,m,A))}},i=[],r=e.name||"default",a=e.fps||30,o=e.blendMode;let c=e.length||-1;const l=e.hierarchy||[];for(let u=0;u<l.length;u++){const d=l[u].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let g=0;g<d[p].morphTargets.length;g++)f[d[p].morphTargets[g]]=-1;for(const g in f){const m=[],A=[];for(let x=0;x!==d[p].morphTargets.length;++x){const b=d[p];m.push(b.time),A.push(b.morphTarget===g?1:0)}i.push(new br(".morphTargetInfluence["+g+"]",m,A))}c=f.length*a}else{const f=".bones["+t[u].name+"]";n(_r,f+".position",d,"pos",i),n(xr,f+".quaternion",d,"rot",i),n(_r,f+".scale",d,"scl",i)}}return i.length===0?null:new this(r,c,i,o)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let n=0;n<this.tracks.length;n++)e.push(this.tracks[n].clone());const t=new this.constructor(this.name,this.duration,e,this.blendMode);return t.userData=JSON.parse(JSON.stringify(this.userData)),t}toJSON(){return this.constructor.toJSON(this)}}function Bx(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return br;case"vector":case"vector2":case"vector3":case"vector4":return _r;case"color":return kd;case"quaternion":return xr;case"bool":case"boolean":return Er;case"string":return vr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function Rx(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Bx(s.type);if(s.times===void 0){const t=[],n=[];Ud(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const Ni={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Od{constructor(e,t,n){const i=this;let r=!1,a=0,o=0,c;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.abortController=new AbortController,this.itemStart=function(h){o++,r===!1&&i.onStart!==void 0&&i.onStart(h,a,o),r=!0},this.itemEnd=function(h){a++,i.onProgress!==void 0&&i.onProgress(h,a,o),a===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(h){i.onError!==void 0&&i.onError(h)},this.resolveURL=function(h){return c?c(h):h},this.setURLModifier=function(h){return c=h,this},this.addHandler=function(h,u){return l.push(h,u),this},this.removeHandler=function(h){const u=l.indexOf(h);return u!==-1&&l.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=l.length;u<d;u+=2){const f=l[u],p=l[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return p}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const wg=new Od;class xn{constructor(e){this.manager=e!==void 0?e:wg,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}abort(){return this}}xn.DEFAULT_MATERIAL_NAME="__DEFAULT";const Ji={};class Dx extends Error{constructor(e,t){super(e),this.response=t}}class In extends xn{constructor(e){super(e),this.mimeType="",this.responseType="",this._abortController=new AbortController}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Ni.get(`file:${e}`);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Ji[e]!==void 0){Ji[e].push({onLoad:t,onProgress:n,onError:i});return}Ji[e]=[],Ji[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal}),o=this.mimeType,c=this.responseType;fetch(a).then(l=>{if(l.status===200||l.status===0){if(l.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||l.body===void 0||l.body.getReader===void 0)return l;const h=Ji[e],u=l.body.getReader(),d=l.headers.get("X-File-Size")||l.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let g=0;const m=new ReadableStream({start(A){x();function x(){u.read().then(({done:b,value:y})=>{if(b)A.close();else{g+=y.byteLength;const _=new ProgressEvent("progress",{lengthComputable:p,loaded:g,total:f});for(let w=0,C=h.length;w<C;w++){const T=h[w];T.onProgress&&T.onProgress(_)}A.enqueue(y),x()}},b=>{A.error(b)})}}});return new Response(m)}else throw new Dx(`fetch for "${l.url}" responded with ${l.status}: ${l.statusText}`,l)}).then(l=>{switch(c){case"arraybuffer":return l.arrayBuffer();case"blob":return l.blob();case"document":return l.text().then(h=>new DOMParser().parseFromString(h,o));case"json":return l.json();default:if(o==="")return l.text();{const u=/charset="?([^;"\s]*)"?/i.exec(o),d=u&&u[1]?u[1].toLowerCase():void 0,f=new TextDecoder(d);return l.arrayBuffer().then(p=>f.decode(p))}}}).then(l=>{Ni.add(`file:${e}`,l);const h=Ji[e];delete Ji[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onLoad&&f.onLoad(l)}}).catch(l=>{const h=Ji[e];if(h===void 0)throw this.manager.itemError(e),l;delete Ji[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onError&&f.onError(l)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}class Px extends xn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new In(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Ea.parse(e[n]);t.push(i)}return t}}class Lx extends xn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=[],o=new Ca,c=new In(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(r.withCredentials);let l=0;function h(u){c.load(e[u],function(d){const f=r.parse(d,!0);a[u]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},l+=1,l===6&&(f.mipmapCount===1&&(o.minFilter=Qt),o.image=a,o.format=f.format,o.needsUpdate=!0,t&&t(o))},n,i)}if(Array.isArray(e))for(let u=0,d=e.length;u<d;++u)h(u);else c.load(e,function(u){const d=r.parse(u,!0);if(d.isCubemap){const f=d.mipmaps.length/d.mipmapCount;for(let p=0;p<f;p++){a[p]={mipmaps:[]};for(let g=0;g<d.mipmapCount;g++)a[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+g]),a[p].format=d.format,a[p].width=d.width,a[p].height=d.height}o.image=a}else o.image.width=d.width,o.image.height=d.height,o.mipmaps=d.mipmaps;d.mipmapCount===1&&(o.minFilter=Qt),o.format=d.format,o.needsUpdate=!0,t&&t(o)},n,i);return o}}const zr=new WeakMap;class xo extends xn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=Ni.get(`image:${e}`);if(a!==void 0){if(a.complete===!0)r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0);else{let u=zr.get(a);u===void 0&&(u=[],zr.set(a,u)),u.push({onLoad:t,onError:i})}return a}const o=po("img");function c(){h(),t&&t(this);const u=zr.get(this)||[];for(let d=0;d<u.length;d++){const f=u[d];f.onLoad&&f.onLoad(this)}zr.delete(this),r.manager.itemEnd(e)}function l(u){h(),i&&i(u),Ni.remove(`image:${e}`);const d=zr.get(this)||[];for(let f=0;f<d.length;f++){const p=d[f];p.onError&&p.onError(u)}zr.delete(this),r.manager.itemError(e),r.manager.itemEnd(e)}function h(){o.removeEventListener("load",c,!1),o.removeEventListener("error",l,!1)}return o.addEventListener("load",c,!1),o.addEventListener("error",l,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),Ni.add(`image:${e}`,o),r.manager.itemStart(e),o.src=e,o}}class Fx extends xn{constructor(e){super(e)}load(e,t,n,i){const r=new Mo;r.colorSpace=Tt;const a=new xo(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function c(l){a.load(e[l],function(h){r.images[l]=h,o++,o===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let l=0;l<e.length;++l)c(l);return r}}class Ux extends xn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new qn,o=new In(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(e,function(c){let l;try{l=r.parse(c)}catch(h){if(i!==void 0)i(h);else{console.error(h);return}}l.image!==void 0?a.image=l.image:l.data!==void 0&&(a.image.width=l.width,a.image.height=l.height,a.image.data=l.data),a.wrapS=l.wrapS!==void 0?l.wrapS:ni,a.wrapT=l.wrapT!==void 0?l.wrapT:ni,a.magFilter=l.magFilter!==void 0?l.magFilter:Qt,a.minFilter=l.minFilter!==void 0?l.minFilter:Qt,a.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.colorSpace!==void 0&&(a.colorSpace=l.colorSpace),l.flipY!==void 0&&(a.flipY=l.flipY),l.format!==void 0&&(a.format=l.format),l.type!==void 0&&(a.type=l.type),l.mipmaps!==void 0&&(a.mipmaps=l.mipmaps,a.minFilter=Wn),l.mipmapCount===1&&(a.minFilter=Qt),l.generateMipmaps!==void 0&&(a.generateMipmaps=l.generateMipmaps),a.needsUpdate=!0,t&&t(a,l)},n,i),a}}class No extends xn{constructor(e){super(e)}load(e,t,n,i){const r=new Ht,a=new xo(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){r.image=o,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class Ts extends mt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new ae(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class Qd extends Ts{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(mt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new ae(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const qh=new Ke,Jf=new S,jf=new S;class Gd{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new $(512,512),this.mapType=yt,this.map=null,this.mapPass=null,this.matrix=new Ke,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Sa,this._frameExtents=new $(1,1),this._viewportCount=1,this._viewports=[new wt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Jf.setFromMatrixPosition(e.matrixWorld),t.position.copy(Jf),jf.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(jf),t.updateMatrixWorld(),qh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(qh,t.coordinateSystem,t.reversedDepth),t.reversedDepth?n.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(qh)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Nx extends Gd{constructor(){super(new $t(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){const t=this.camera,n=ba*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class oh extends Ts{constructor(e,t,n=0,i=Math.PI/3,r=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(mt.DEFAULT_UP),this.updateMatrix(),this.target=new mt,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new Nx}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Zf=new Ke,Qa=new S,Xh=new S;class kx extends Gd{constructor(){super(new $t(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new $(4,2),this._viewportCount=6,this._viewports=[new wt(2,1,1,1),new wt(0,1,1,1),new wt(3,1,1,1),new wt(1,1,1,1),new wt(3,0,1,1),new wt(1,0,1,1)],this._cubeDirections=[new S(1,0,0),new S(-1,0,0),new S(0,0,1),new S(0,0,-1),new S(0,1,0),new S(0,-1,0)],this._cubeUps=[new S(0,1,0),new S(0,1,0),new S(0,1,0),new S(0,1,0),new S(0,0,1),new S(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Qa.setFromMatrixPosition(e.matrixWorld),n.position.copy(Qa),Xh.copy(n.position),Xh.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Xh),n.updateMatrixWorld(),i.makeTranslation(-Qa.x,-Qa.y,-Qa.z),Zf.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Zf,n.coordinateSystem,n.reversedDepth)}}class is extends Ts{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new kx}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class ko extends ql{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,o=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,a=r+l*this.view.width,o-=h*this.view.offsetY,c=o-h*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,c,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class Ox extends Gd{constructor(){super(new ko(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Oo extends Ts{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(mt.DEFAULT_UP),this.updateMatrix(),this.target=new mt,this.shadow=new Ox}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Sg extends Ts{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Cg extends Ts{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Mg{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new S)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*r)),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],1.092548*(n*r)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*r),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],2*.429043*n*r),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class Ig extends Ts{constructor(e=new Mg,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class ch extends xn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,a=new In(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new ae().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(i.dispersion=e.dispersion),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const a=e.uniforms[r];switch(i.uniforms[r]={},a.type){case"t":i.uniforms[r].value=n(a.value);break;case"c":i.uniforms[r].value=new ae().setHex(a.value);break;case"v2":i.uniforms[r].value=new $().fromArray(a.value);break;case"v3":i.uniforms[r].value=new S().fromArray(a.value);break;case"v4":i.uniforms[r].value=new wt().fromArray(a.value);break;case"m3":i.uniforms[r].value=new dt().fromArray(a.value);break;case"m4":i.uniforms[r].value=new Ke().fromArray(a.value);break;default:i.uniforms[r].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new $().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new $().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return ch.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:ug,SpriteMaterial:Ed,RawShaderMaterial:dg,ShaderMaterial:Yn,PointsMaterial:Ro,MeshPhysicalMaterial:mn,MeshStandardMaterial:tt,MeshPhongMaterial:fg,MeshToonMaterial:pg,MeshNormalMaterial:Ag,MeshLambertMaterial:mg,MeshDepthMaterial:Ld,MeshDistanceMaterial:Fd,MeshBasicMaterial:Cn,MeshMatcapMaterial:gg,LineDashedMaterial:yg,LineBasicMaterial:bn,Material:cn};return new t[e]}}class vs{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class zd extends $e{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Tg extends xn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new In(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(f,p){if(t[p]!==void 0)return t[p];const m=f.interleavedBuffers[p],A=r(f,m.buffer),x=$r(m.type,A),b=new To(x,m.stride);return b.uuid=m.uuid,t[p]=b,b}function r(f,p){if(n[p]!==void 0)return n[p];const m=f.arrayBuffers[p],A=new Uint32Array(m).buffer;return n[p]=A,A}const a=e.isInstancedBufferGeometry?new zd:new $e,o=e.data.index;if(o!==void 0){const f=$r(o.type,o.array);a.setIndex(new ht(f,1))}const c=e.data.attributes;for(const f in c){const p=c[f];let g;if(p.isInterleavedBufferAttribute){const m=i(e.data,p.data);g=new Cs(m,p.itemSize,p.offset,p.normalized)}else{const m=$r(p.type,p.array),A=p.isInstancedBufferAttribute?Oi:ht;g=new A(m,p.itemSize,p.normalized)}p.name!==void 0&&(g.name=p.name),p.usage!==void 0&&g.setUsage(p.usage),a.setAttribute(f,g)}const l=e.data.morphAttributes;if(l)for(const f in l){const p=l[f],g=[];for(let m=0,A=p.length;m<A;m++){const x=p[m];let b;if(x.isInterleavedBufferAttribute){const y=i(e.data,x.data);b=new Cs(y,x.itemSize,x.offset,x.normalized)}else{const y=$r(x.type,x.array);b=new ht(y,x.itemSize,x.normalized)}x.name!==void 0&&(b.name=x.name),g.push(b)}a.morphAttributes[f]=g}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const u=e.data.groups||e.data.drawcalls||e.data.offsets;if(u!==void 0)for(let f=0,p=u.length;f!==p;++f){const g=u[f];a.addGroup(g.start,g.count,g.materialIndex)}const d=e.data.boundingSphere;return d!==void 0&&(a.boundingSphere=new on().fromJSON(d)),e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class Qx extends xn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=this.path===""?vs.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const o=new In(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(c){let l=null;try{l=JSON.parse(c)}catch(u){i!==void 0&&i(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}const h=l.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(l,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?vs.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new In(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const a=await r.loadAsync(e,t),o=JSON.parse(a),c=o.metadata;if(c===void 0||c.type===void 0||c.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(o)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(l)}),o=this.parseTextures(e.textures,a),c=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,r,c,o,n),h=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,h),this.bindLightTargets(l),t!==void 0){let u=!1;for(const d in a)if(a[d].data instanceof HTMLImageElement){u=!0;break}u===!1&&t(l)}return l}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,r),o=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,i,o,a,t),l=this.parseSkeletons(e.skeletons,c);return this.bindSkeletons(c,l),this.bindLightTargets(c),c}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new fr().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,a=e.length;r<a;r++){const o=new Bo().fromJSON(e[r],i);n[o.uuid]=o}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Tg;for(let r=0,a=e.length;r<a;r++){let o;const c=e[r];switch(c.type){case"BufferGeometry":case"InstancedBufferGeometry":o=i.parse(c);break;default:c.type in Kf?o=Kf[c.type].fromJSON(c,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${c.type}"`)}o.uuid=c.uuid,c.name!==void 0&&(o.name=c.name),c.userData!==void 0&&(o.userData=c.userData),n[c.uuid]=o}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new ch;r.setTextures(t);for(let a=0,o=e.length;a<o;a++){const c=e[a];n[c.uuid]===void 0&&(n[c.uuid]=r.parse(c)),i[c.uuid]=n[c.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=Ea.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function a(c){return n.manager.itemStart(c),r.load(c,function(){n.manager.itemEnd(c)},void 0,function(){n.manager.itemError(c),n.manager.itemEnd(c)})}function o(c){if(typeof c=="string"){const l=c,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l)?l:n.resourcePath+l;return a(h)}else return c.data?{data:$r(c.type,c.data),width:c.width,height:c.height}:null}if(e!==void 0&&e.length>0){const c=new Od(t);r=new xo(c),r.setCrossOrigin(this.crossOrigin);for(let l=0,h=e.length;l<h;l++){const u=e[l],d=u.url;if(Array.isArray(d)){const f=[];for(let p=0,g=d.length;p<g;p++){const m=d[p],A=o(m);A!==null&&(A instanceof HTMLImageElement?f.push(A):f.push(new qn(A.data,A.width,A.height)))}i[u.uuid]=new bs(f)}else{const f=o(u.url);i[u.uuid]=new bs(f)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(a){if(typeof a=="string"){const o=a,c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(o)?o:t.resourcePath+o;return await i.loadAsync(c)}else return a.data?{data:$r(a.type,a.data),width:a.width,height:a.height}:null}if(e!==void 0&&e.length>0){i=new xo(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,o=e.length;a<o;a++){const c=e[a],l=c.url;if(Array.isArray(l)){const h=[];for(let u=0,d=l.length;u<d;u++){const f=l[u],p=await r(f);p!==null&&(p instanceof HTMLImageElement?h.push(p):h.push(new qn(p.data,p.width,p.height)))}n[c.uuid]=new bs(h)}else{const h=await r(c.url);n[c.uuid]=new bs(h)}}}return n}parseTextures(e,t){function n(r,a){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),a[r])}const i={};if(e!==void 0)for(let r=0,a=e.length;r<a;r++){const o=e[r];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);const c=t[o.image],l=c.data;let h;Array.isArray(l)?(h=new Mo,l.length===6&&(h.needsUpdate=!0)):(l&&l.data?h=new qn:h=new Ht,l&&(h.needsUpdate=!0)),h.source=c,h.uuid=o.uuid,o.name!==void 0&&(h.name=o.name),o.mapping!==void 0&&(h.mapping=n(o.mapping,Gx)),o.channel!==void 0&&(h.channel=o.channel),o.offset!==void 0&&h.offset.fromArray(o.offset),o.repeat!==void 0&&h.repeat.fromArray(o.repeat),o.center!==void 0&&h.center.fromArray(o.center),o.rotation!==void 0&&(h.rotation=o.rotation),o.wrap!==void 0&&(h.wrapS=n(o.wrap[0],$f),h.wrapT=n(o.wrap[1],$f)),o.format!==void 0&&(h.format=o.format),o.internalFormat!==void 0&&(h.internalFormat=o.internalFormat),o.type!==void 0&&(h.type=o.type),o.colorSpace!==void 0&&(h.colorSpace=o.colorSpace),o.minFilter!==void 0&&(h.minFilter=n(o.minFilter,ep)),o.magFilter!==void 0&&(h.magFilter=n(o.magFilter,ep)),o.anisotropy!==void 0&&(h.anisotropy=o.anisotropy),o.flipY!==void 0&&(h.flipY=o.flipY),o.generateMipmaps!==void 0&&(h.generateMipmaps=o.generateMipmaps),o.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(h.unpackAlignment=o.unpackAlignment),o.compareFunction!==void 0&&(h.compareFunction=o.compareFunction),o.userData!==void 0&&(h.userData=o.userData),i[o.uuid]=h}return i}parseObject(e,t,n,i,r){let a;function o(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function c(d){if(d!==void 0){if(Array.isArray(d)){const f=[];for(let p=0,g=d.length;p<g;p++){const m=d[p];n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),f.push(n[m])}return f}return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),n[d]}}function l(d){return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),i[d]}let h,u;switch(e.type){case"Scene":a=new _d,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new ae(e.background):a.background=l(e.background)),e.environment!==void 0&&(a.environment=l(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new Io(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new Xl(e.fog.color,e.fog.density)),e.fog.name!==""&&(a.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(a.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&a.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(a.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&a.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":a=new $t(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new ko(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new Sg(e.color,e.intensity);break;case"DirectionalLight":a=new Oo(e.color,e.intensity),a.target=e.target||"";break;case"PointLight":a=new is(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new Cg(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new oh(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),a.target=e.target||"";break;case"HemisphereLight":a=new Qd(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new Ig().fromJSON(e);break;case"SkinnedMesh":h=o(e.geometry),u=c(e.material),a=new wd(h,u),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":h=o(e.geometry),u=c(e.material),a=new Be(h,u);break;case"InstancedMesh":h=o(e.geometry),u=c(e.material);const d=e.count,f=e.instanceMatrix,p=e.instanceColor;a=new Ln(h,u,d),a.instanceMatrix=new Oi(new Float32Array(f.array),16),p!==void 0&&(a.instanceColor=new Oi(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":h=o(e.geometry),u=c(e.material),a=new Jm(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,u),a.geometry=h,a.perObjectFrustumCulled=e.perObjectFrustumCulled,a.sortObjects=e.sortObjects,a._drawRanges=e.drawRanges,a._reservedRanges=e.reservedRanges,a._geometryInfo=e.geometryInfo.map(g=>{let m=null,A=null;return g.boundingBox!==void 0&&(m=new Yt().fromJSON(g.boundingBox)),g.boundingSphere!==void 0&&(A=new on().fromJSON(g.boundingSphere)),{...g,boundingBox:m,boundingSphere:A}}),a._instanceInfo=e.instanceInfo,a._availableInstanceIds=e._availableInstanceIds,a._availableGeometryIds=e._availableGeometryIds,a._nextIndexStart=e.nextIndexStart,a._nextVertexStart=e.nextVertexStart,a._geometryCount=e.geometryCount,a._maxInstanceCount=e.maxInstanceCount,a._maxVertexCount=e.maxVertexCount,a._maxIndexCount=e.maxIndexCount,a._geometryInitialized=e.geometryInitialized,a._matricesTexture=l(e.matricesTexture.uuid),a._indirectTexture=l(e.indirectTexture.uuid),e.colorsTexture!==void 0&&(a._colorsTexture=l(e.colorsTexture.uuid)),e.boundingSphere!==void 0&&(a.boundingSphere=new on().fromJSON(e.boundingSphere)),e.boundingBox!==void 0&&(a.boundingBox=new Yt().fromJSON(e.boundingBox));break;case"LOD":a=new vd;break;case"Line":a=new Qi(o(e.geometry),c(e.material));break;case"LineLoop":a=new Sd(o(e.geometry),c(e.material));break;case"LineSegments":a=new Ci(o(e.geometry),c(e.material));break;case"PointCloud":case"Points":a=new Jl(o(e.geometry),c(e.material));break;case"Sprite":a=new Km(c(e.material));break;case"Group":a=new bt;break;case"Bone":a=new Yl;break;default:a=new mt}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.up!==void 0&&a.up.fromArray(e.up),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(a.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let f=0;f<d.length;f++)a.add(this.parseObject(d[f],t,n,i,r))}if(e.animations!==void 0){const d=e.animations;for(let f=0;f<d.length;f++){const p=d[f];a.animations.push(r[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const d=e.levels;for(let f=0;f<d.length;f++){const p=d[f],g=a.getObjectByProperty("uuid",p.object);g!==void 0&&a.addLevel(g,p.distance,p.hysteresis)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,i=e.getObjectByProperty("uuid",n);i!==void 0?t.target=i:t.target=new mt}})}}const Gx={UVMapping:Nl,CubeReflectionMapping:ss,CubeRefractionMapping:Ss,EquirectangularReflectionMapping:to,EquirectangularRefractionMapping:no,CubeUVReflectionMapping:va},$f={RepeatWrapping:On,ClampToEdgeWrapping:ni,MirroredRepeatWrapping:oa},ep={NearestFilter:Jt,NearestMipmapNearestFilter:Eo,NearestMipmapLinearFilter:ir,LinearFilter:Qt,LinearMipmapNearestFilter:ia,LinearMipmapLinearFilter:Wn},Yh=new WeakMap;class Bg extends xn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"},this._abortController=new AbortController}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=Ni.get(`image-bitmap:${e}`);if(a!==void 0){if(r.manager.itemStart(e),a.then){a.then(l=>{if(Yh.has(a)===!0)i&&i(Yh.get(a)),r.manager.itemError(e),r.manager.itemEnd(e);else return t&&t(l),r.manager.itemEnd(e),l});return}return setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a}const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,o.signal=typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal;const c=fetch(e,o).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(l){return Ni.add(`image-bitmap:${e}`,l),t&&t(l),r.manager.itemEnd(e),l}).catch(function(l){i&&i(l),Yh.set(c,l),Ni.remove(`image-bitmap:${e}`),r.manager.itemError(e),r.manager.itemEnd(e)});Ni.add(`image-bitmap:${e}`,c),r.manager.itemStart(e)}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}let _c;class Hd{static getContext(){return _c===void 0&&(_c=new(window.AudioContext||window.webkitAudioContext)),_c}static setContext(e){_c=e}}class Rg extends xn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new In(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){try{const l=c.slice(0);Hd.getContext().decodeAudioData(l,function(u){t(u)}).catch(o)}catch(l){o(l)}},n,i);function o(c){i?i(c):console.error(c),r.manager.itemError(e)}}}const tp=new Ke,np=new Ke,ks=new Ke;class zx{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new $t,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new $t,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,ks.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,a=t.near*Math.tan(dr*t.fov*.5)/t.zoom;let o,c;np.elements[12]=-i,tp.elements[12]=i,o=-a*t.aspect+r,c=a*t.aspect+r,ks.elements[0]=2*t.near/(c-o),ks.elements[8]=(c+o)/(c-o),this.cameraL.projectionMatrix.copy(ks),o=-a*t.aspect-r,c=a*t.aspect-r,ks.elements[0]=2*t.near/(c-o),ks.elements[8]=(c+o)/(c-o),this.cameraR.projectionMatrix.copy(ks)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(np),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(tp)}}class Dg extends $t{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class Vd{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=performance.now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}const Os=new S,Kh=new an,Hx=new S,Qs=new S,Gs=new S;class Pg extends mt{constructor(){super(),this.type="AudioListener",this.context=Hd.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Vd}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Os,Kh,Hx),Qs.set(0,0,-1).applyQuaternion(Kh),Gs.set(0,1,0).applyQuaternion(Kh),t.positionX){const n=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Os.x,n),t.positionY.linearRampToValueAtTime(Os.y,n),t.positionZ.linearRampToValueAtTime(Os.z,n),t.forwardX.linearRampToValueAtTime(Qs.x,n),t.forwardY.linearRampToValueAtTime(Qs.y,n),t.forwardZ.linearRampToValueAtTime(Qs.z,n),t.upX.linearRampToValueAtTime(Gs.x,n),t.upY.linearRampToValueAtTime(Gs.y,n),t.upZ.linearRampToValueAtTime(Gs.z,n)}else t.setPosition(Os.x,Os.y,Os.z),t.setOrientation(Qs.x,Qs.y,Qs.z,Gs.x,Gs.y,Gs.z)}}class Wd extends mt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const zs=new S,ip=new an,Vx=new S,Hs=new S;class Lg extends Wd{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(zs,ip,Vx),Hs.set(0,0,1).applyQuaternion(ip);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(zs.x,n),t.positionY.linearRampToValueAtTime(zs.y,n),t.positionZ.linearRampToValueAtTime(zs.z,n),t.orientationX.linearRampToValueAtTime(Hs.x,n),t.orientationY.linearRampToValueAtTime(Hs.y,n),t.orientationZ.linearRampToValueAtTime(Hs.z,n)}else t.setPosition(zs.x,zs.y,zs.z),t.setOrientation(Hs.x,Hs.y,Hs.z)}}class Wx{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Fg{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,a;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==i;++o)n[r+o]=n[o];a=t}else{a+=t;const o=t/a;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const c=t*this._origIndex;this._mixBufferRegion(n,i,c,1-r,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let c=t,l=t+t;c!==l;++c)if(n[c]!==n[c+t]){o.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,a=i;r!==a;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let a=0;a!==r;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){an.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const a=this._workIndex*r;an.multiplyQuaternionsFlat(e,a,e,t,e,n),an.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,r){const a=1-i;for(let o=0;o!==r;++o){const c=t+o;e[c]=e[c]*a+e[n+o]*i}}_lerpAdditive(e,t,n,i,r){for(let a=0;a!==r;++a){const o=t+a;e[o]=e[o]+e[n+a]*i}}}const qd="\\[\\]\\.:\\/",qx=new RegExp("["+qd+"]","g"),Xd="[^"+qd+"]",Xx="[^"+qd.replace("\\.","")+"]",Yx=/((?:WC+[\/:])*)/.source.replace("WC",Xd),Kx=/(WCOD+)?/.source.replace("WCOD",Xx),Jx=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Xd),jx=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Xd),Zx=new RegExp("^"+Yx+Kx+Jx+jx+"$"),$x=["material","materials","bones","map"];class e_{constructor(e,t,n){const i=n||It.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class It{constructor(e,t,n){this.path=t,this.parsedPath=n||It.parseTrackName(t),this.node=It.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new It.Composite(e,t,n):new It(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(qx,"")}static parseTrackName(e){const t=Zx.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);$x.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let a=0;a<r.length;a++){const o=r[a];if(o.name===t||o.uuid===t)return o;const c=n(o.children);if(c)return c}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=It.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let l=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===l){l=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(l!==void 0){if(e[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[l]}}const a=e[i];if(a===void 0){const l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?o=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}c=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else a.fromArray!==void 0&&a.toArray!==void 0?(c=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(c=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}It.Composite=e_;It.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};It.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};It.prototype.GetterByBindingType=[It.prototype._getValue_direct,It.prototype._getValue_array,It.prototype._getValue_arrayElement,It.prototype._getValue_toArray];It.prototype.SetterByBindingTypeAndVersioning=[[It.prototype._setValue_direct,It.prototype._setValue_direct_setNeedsUpdate,It.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[It.prototype._setValue_array,It.prototype._setValue_array_setNeedsUpdate,It.prototype._setValue_array_setMatrixWorldNeedsUpdate],[It.prototype._setValue_arrayElement,It.prototype._setValue_arrayElement_setNeedsUpdate,It.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[It.prototype._setValue_fromArray,It.prototype._setValue_fromArray_setNeedsUpdate,It.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class t_{constructor(){this.isAnimationObjectGroup=!0,this.uuid=si(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,a=r.length;let o,c=e.length,l=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const d=arguments[h],f=d.uuid;let p=t[f];if(p===void 0){p=c++,t[f]=p,e.push(d);for(let g=0,m=a;g!==m;++g)r[g].push(new It(d,n[g],i[g]))}else if(p<l){o=e[p];const g=--l,m=e[g];t[m.uuid]=p,e[p]=m,t[f]=g,e[g]=d;for(let A=0,x=a;A!==x;++A){const b=r[A],y=b[g];let _=b[p];b[p]=y,_===void 0&&(_=new It(d,n[A],i[A])),b[g]=_}}else e[p]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let a=0,o=arguments.length;a!==o;++a){const c=arguments[a],l=c.uuid,h=t[l];if(h!==void 0&&h>=r){const u=r++,d=e[u];t[d.uuid]=h,e[h]=d,t[l]=u,e[u]=c;for(let f=0,p=i;f!==p;++f){const g=n[f],m=g[u],A=g[h];g[h]=m,g[u]=A}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,a=e.length;for(let o=0,c=arguments.length;o!==c;++o){const l=arguments[o],h=l.uuid,u=t[h];if(u!==void 0)if(delete t[h],u<r){const d=--r,f=e[d],p=--a,g=e[p];t[f.uuid]=u,e[u]=f,t[g.uuid]=d,e[d]=g,e.pop();for(let m=0,A=i;m!==A;++m){const x=n[m],b=x[d],y=x[p];x[u]=b,x[d]=y,x.pop()}}else{const d=--a,f=e[d];d>0&&(t[f.uuid]=u),e[u]=f,e.pop();for(let p=0,g=i;p!==g;++p){const m=n[p];m[u]=m[d],m.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const a=this._paths,o=this._parsedPaths,c=this._objects,l=c.length,h=this.nCachedObjects_,u=new Array(l);i=r.length,n[e]=i,a.push(e),o.push(t),r.push(u);for(let d=h,f=c.length;d!==f;++d){const p=c[d];u[d]=new It(p,e,t)}return u}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,a=this._bindings,o=a.length-1,c=a[o],l=e[o];t[l]=n,a[n]=c,a.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}}class Ug{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,a=r.length,o=new Array(a),c={endingStart:sr,endingEnd:sr};for(let l=0;l!==a;++l){const h=r[l].createInterpolant(null);o[l]=h,h.settings=c}this._interpolantSettings=c,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Im,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n=!1){if(e.fadeOut(t),this.fadeIn(t),n===!0){const i=this._clip.duration,r=e._clip.duration,a=r/i,o=i/r;e.warp(1,a,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,n=!1){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);const c=o.parameterPositions,l=o.sampleValues;return c[0]=r,c[1]=r+n,l[0]=e/a,l[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const c=(e-r)*n;c<0||n===0?t=0:(this._startTime=null,t=n*c)}t*=this._updateTimeScale(e);const a=this._updateTime(t),o=this._updateWeight(e);if(o>0){const c=this._interpolants,l=this._propertyBindings;switch(this.blendMode){case pd:for(let h=0,u=c.length;h!==u;++h)c[h].evaluate(a),l[h].accumulateAdditive(o);break;case Hl:default:for(let h=0,u=c.length;h!==u;++h)c[h].evaluate(a),l[h].accumulate(i,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const a=n===Tm;if(e===0)return r===-1?i:a&&(r&1)===1?t-i:i;if(n===Mm){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const o=Math.floor(i/t);i-=t*o,r+=Math.abs(o);const c=this.repetitions-r;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(c===1){const l=e<0;this._setEndings(l,!l,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=i;if(a&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=rr,i.endingEnd=rr):(e?i.endingStart=this.zeroSlopeAtStart?rr:sr:i.endingStart=ho,t?i.endingEnd=this.zeroSlopeAtEnd?rr:sr:i.endingEnd=ho)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,c=a.sampleValues;return o[0]=r,c[0]=t,o[1]=r+e,c[1]=n,this}}const n_=new Float32Array(1);class Ng extends Gi{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,a=e._propertyBindings,o=e._interpolants,c=n.uuid,l=this._bindingsByRootAndName;let h=l[c];h===void 0&&(h={},l[c]=h);for(let u=0;u!==r;++u){const d=i[u],f=d.name;let p=h[f];if(p!==void 0)++p.referenceCount,a[u]=p;else{if(p=a[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,c,f));continue}const g=t&&t._propertyBindings[u].binding.parsedPath;p=new Fg(It.create(n,f,g),d.ValueTypeName,d.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,c,f),a[u]=p}o[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let a=r[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{const o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,a=this._actionsByClip,o=a[r],c=o.knownActions,l=c[c.length-1],h=e._byClipCacheIndex;l._byClipCacheIndex=h,c[h]=l,c.pop(),e._byClipCacheIndex=null;const u=o.actionByRoot,d=(e._localRoot||this._root).uuid;delete u[d],c.length===0&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,o=a[i],c=t[t.length-1],l=e._cacheIndex;c._cacheIndex=l,t[l]=c,t.pop(),delete o[r],Object.keys(o).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Nd(new Float32Array(2),new Float32Array(2),1,n_),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let a=typeof e=="string"?Ea.findByName(i,e):e;const o=a!==null?a.uuid:e,c=this._actionsByClip[o];let l=null;if(n===void 0&&(a!==null?n=a.blendMode:n=Hl),c!==void 0){const u=c.actionByRoot[r];if(u!==void 0&&u.blendMode===n)return u;l=c.knownActions[0],a===null&&(a=l._clip)}if(a===null)return null;const h=new Ug(this,a,t,n);return this._bindAction(h,l),this._addInactiveAction(h,o,r),h}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?Ea.findByName(n,e):e,a=r?r.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let l=0;l!==n;++l)t[l]._update(i,e,r,a);const o=this._bindings,c=this._nActiveBindings;for(let l=0;l!==c;++l)o[l].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const a=r.knownActions;for(let o=0,c=a.length;o!==c;++o){const l=a[o];this._deactivateAction(l);const h=l._cacheIndex,u=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(l)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const o=n[a].actionByRoot,c=o[t];c!==void 0&&(this._deactivateAction(c),this._removeInactiveAction(c))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const a in r){const o=r[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class i_ extends yd{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new Co(null,e,t,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Yd{constructor(e){this.value=e}clone(){return new Yd(this.value.clone===void 0?this.value:this.value.clone())}}let s_=0;class r_ extends Gi{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:s_++}),this.name="",this.usage=fo,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const r=Array.isArray(t[n])?t[n]:[t[n]];for(let a=0;a<r.length;a++)this.uniforms.push(r[a].clone())}return this}clone(){return new this.constructor().copy(this)}}class a_ extends To{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class o_{constructor(e,t,n,i,r,a=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.normalized=a,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const sp=new Ke;class lh{constructor(e,t,n=0,i=1/0){this.ray=new wa(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Wl,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return sp.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(sp),this}intersectObject(e,t=!0,n=[]){return qu(e,this,n,t),n.sort(rp),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)qu(e[i],this,n,t);return n.sort(rp),n}}function rp(s,e){return s.distance-e.distance}function qu(s,e,t,n){let i=!0;if(s.layers.test(e.layers)&&s.raycast(e,t)===!1&&(i=!1),i===!0&&n===!0){const r=s.children;for(let a=0,o=r.length;a<o;a++)qu(r[a],e,t,!0)}}class c_{constructor(){this._previousTime=0,this._currentTime=0,this._startTime=performance.now(),this._delta=0,this._elapsed=0,this._timescale=1,this._document=null,this._pageVisibilityHandler=null}connect(e){this._document=e,e.hidden!==void 0&&(this._pageVisibilityHandler=l_.bind(this),e.addEventListener("visibilitychange",this._pageVisibilityHandler,!1))}disconnect(){this._pageVisibilityHandler!==null&&(this._document.removeEventListener("visibilitychange",this._pageVisibilityHandler),this._pageVisibilityHandler=null),this._document=null}getDelta(){return this._delta/1e3}getElapsed(){return this._elapsed/1e3}getTimescale(){return this._timescale}setTimescale(e){return this._timescale=e,this}reset(){return this._currentTime=performance.now()-this._startTime,this}dispose(){this.disconnect()}update(e){return this._pageVisibilityHandler!==null&&this._document.hidden===!0?this._delta=0:(this._previousTime=this._currentTime,this._currentTime=(e!==void 0?e:performance.now())-this._startTime,this._delta=(this._currentTime-this._previousTime)*this._timescale,this._elapsed+=this._delta),this}}function l_(){this._document.hidden===!1&&this.reset()}class h_{constructor(e=1,t=0,n=0){this.radius=e,this.phi=t,this.theta=n}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=rt(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(rt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class u_{constructor(e=1,t=0,n=0){this.radius=e,this.theta=t,this.y=n}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}class Kd{constructor(e,t,n,i){Kd.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){const r=this.elements;return r[0]=e,r[2]=t,r[1]=n,r[3]=i,this}}const ap=new $;class d_{constructor(e=new $(1/0,1/0),t=new $(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=ap.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,ap).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const op=new S,Ec=new S,Hr=new S,Vr=new S,Jh=new S,f_=new S,p_=new S;class kg{constructor(e=new S,t=new S){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){op.subVectors(e,this.start),Ec.subVectors(this.end,this.start);const n=Ec.dot(Ec);let r=Ec.dot(op)/n;return t&&(r=rt(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}distanceSqToLine3(e,t=f_,n=p_){const i=10000000000000001e-32;let r,a;const o=this.start,c=e.start,l=this.end,h=e.end;Hr.subVectors(l,o),Vr.subVectors(h,c),Jh.subVectors(o,c);const u=Hr.dot(Hr),d=Vr.dot(Vr),f=Vr.dot(Jh);if(u<=i&&d<=i)return t.copy(o),n.copy(c),t.sub(n),t.dot(t);if(u<=i)r=0,a=f/d,a=rt(a,0,1);else{const p=Hr.dot(Jh);if(d<=i)a=0,r=rt(-p/u,0,1);else{const g=Hr.dot(Vr),m=u*d-g*g;m!==0?r=rt((g*f-p*d)/m,0,1):r=0,a=(g*r+f)/d,a<0?(a=0,r=rt(-p/u,0,1)):a>1&&(a=1,r=rt((g-p)/u,0,1))}}return t.copy(o).add(Hr.multiplyScalar(r)),n.copy(c).add(Vr.multiplyScalar(a)),t.sub(n),t.dot(t)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const cp=new S;class A_ extends mt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new $e,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,o=1,c=32;a<c;a++,o++){const l=a/c*Math.PI*2,h=o/c*Math.PI*2;i.push(Math.cos(l),Math.sin(l),1,Math.cos(h),Math.sin(h),1)}n.setAttribute("position",new Xe(i,3));const r=new bn({fog:!1,toneMapped:!1});this.cone=new Ci(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),cp.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(cp),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const As=new S,vc=new Ke,jh=new Ke;class m_ extends Ci{constructor(e){const t=Og(e),n=new $e,i=[],r=[];for(let l=0;l<t.length;l++){const h=t[l];h.parent&&h.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(0,0,0),r.push(0,0,0))}n.setAttribute("position",new Xe(i,3)),n.setAttribute("color",new Xe(r,3));const a=new bn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,a),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;const o=new ae(255),c=new ae(65280);this.setColors(o,c)}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");jh.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<t.length;r++){const o=t[r];o.parent&&o.parent.isBone&&(vc.multiplyMatrices(jh,o.matrixWorld),As.setFromMatrixPosition(vc),i.setXYZ(a,As.x,As.y,As.z),vc.multiplyMatrices(jh,o.parent.matrixWorld),As.setFromMatrixPosition(vc),i.setXYZ(a+1,As.x,As.y,As.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}setColors(e,t){const i=this.geometry.getAttribute("color");for(let r=0;r<i.count;r+=2)i.setXYZ(r,e.r,e.g,e.b),i.setXYZ(r+1,t.r,t.g,t.b);return i.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}function Og(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push(...Og(s.children[t]));return e}class g_ extends Be{constructor(e,t,n){const i=new Xn(t,4,2),r=new Cn({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const y_=new S,lp=new ae,hp=new ae;class b_ extends mt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Lo(t);i.rotateY(Math.PI*.5),this.material=new Cn({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),a=new Float32Array(r.count*3);i.setAttribute("color",new ht(a,3)),this.add(new Be(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");lp.copy(this.light.color),hp.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?lp:hp;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(y_.setFromMatrixPosition(this.light.matrixWorld).negate())}}class x_ extends Ci{constructor(e=10,t=10,n=4473924,i=8947848){n=new ae(n),i=new ae(i);const r=t/2,a=e/t,o=e/2,c=[],l=[];for(let d=0,f=0,p=-o;d<=t;d++,p+=a){c.push(-o,0,p,o,0,p),c.push(p,0,-o,p,0,o);const g=d===r?n:i;g.toArray(l,f),f+=3,g.toArray(l,f),f+=3,g.toArray(l,f),f+=3,g.toArray(l,f),f+=3}const h=new $e;h.setAttribute("position",new Xe(c,3)),h.setAttribute("color",new Xe(l,3));const u=new bn({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class __ extends Ci{constructor(e=10,t=16,n=8,i=64,r=4473924,a=8947848){r=new ae(r),a=new ae(a);const o=[],c=[];if(t>1)for(let u=0;u<t;u++){const d=u/t*(Math.PI*2),f=Math.sin(d)*e,p=Math.cos(d)*e;o.push(0,0,0),o.push(f,0,p);const g=u&1?r:a;c.push(g.r,g.g,g.b),c.push(g.r,g.g,g.b)}for(let u=0;u<n;u++){const d=u&1?r:a,f=e-e/n*u;for(let p=0;p<i;p++){let g=p/i*(Math.PI*2),m=Math.sin(g)*f,A=Math.cos(g)*f;o.push(m,0,A),c.push(d.r,d.g,d.b),g=(p+1)/i*(Math.PI*2),m=Math.sin(g)*f,A=Math.cos(g)*f,o.push(m,0,A),c.push(d.r,d.g,d.b)}}const l=new $e;l.setAttribute("position",new Xe(o,3)),l.setAttribute("color",new Xe(c,3));const h=new bn({vertexColors:!0,toneMapped:!1});super(l,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const up=new S,wc=new S,dp=new S;class E_ extends mt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new $e;i.setAttribute("position",new Xe([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new bn({fog:!1,toneMapped:!1});this.lightPlane=new Qi(i,r),this.add(this.lightPlane),i=new $e,i.setAttribute("position",new Xe([0,0,0,0,0,1],3)),this.targetLine=new Qi(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),up.setFromMatrixPosition(this.light.matrixWorld),wc.setFromMatrixPosition(this.light.target.matrixWorld),dp.subVectors(wc,up),this.lightPlane.lookAt(wc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(wc),this.targetLine.scale.z=dp.length()}}const Sc=new S,Xt=new ql;class v_ extends Ci{constructor(e){const t=new $e,n=new bn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],a={};o("n1","n2"),o("n2","n4"),o("n4","n3"),o("n3","n1"),o("f1","f2"),o("f2","f4"),o("f4","f3"),o("f3","f1"),o("n1","f1"),o("n2","f2"),o("n3","f3"),o("n4","f4"),o("p","n1"),o("p","n2"),o("p","n3"),o("p","n4"),o("u1","u2"),o("u2","u3"),o("u3","u1"),o("c","t"),o("p","c"),o("cn1","cn2"),o("cn3","cn4"),o("cf1","cf2"),o("cf3","cf4");function o(p,g){c(p),c(g)}function c(p){i.push(0,0,0),r.push(0,0,0),a[p]===void 0&&(a[p]=[]),a[p].push(i.length/3-1)}t.setAttribute("position",new Xe(i,3)),t.setAttribute("color",new Xe(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const l=new ae(16755200),h=new ae(16711680),u=new ae(43775),d=new ae(16777215),f=new ae(3355443);this.setColors(l,h,u,d,f)}setColors(e,t,n,i,r){const o=this.geometry.getAttribute("color");return o.setXYZ(0,e.r,e.g,e.b),o.setXYZ(1,e.r,e.g,e.b),o.setXYZ(2,e.r,e.g,e.b),o.setXYZ(3,e.r,e.g,e.b),o.setXYZ(4,e.r,e.g,e.b),o.setXYZ(5,e.r,e.g,e.b),o.setXYZ(6,e.r,e.g,e.b),o.setXYZ(7,e.r,e.g,e.b),o.setXYZ(8,e.r,e.g,e.b),o.setXYZ(9,e.r,e.g,e.b),o.setXYZ(10,e.r,e.g,e.b),o.setXYZ(11,e.r,e.g,e.b),o.setXYZ(12,e.r,e.g,e.b),o.setXYZ(13,e.r,e.g,e.b),o.setXYZ(14,e.r,e.g,e.b),o.setXYZ(15,e.r,e.g,e.b),o.setXYZ(16,e.r,e.g,e.b),o.setXYZ(17,e.r,e.g,e.b),o.setXYZ(18,e.r,e.g,e.b),o.setXYZ(19,e.r,e.g,e.b),o.setXYZ(20,e.r,e.g,e.b),o.setXYZ(21,e.r,e.g,e.b),o.setXYZ(22,e.r,e.g,e.b),o.setXYZ(23,e.r,e.g,e.b),o.setXYZ(24,t.r,t.g,t.b),o.setXYZ(25,t.r,t.g,t.b),o.setXYZ(26,t.r,t.g,t.b),o.setXYZ(27,t.r,t.g,t.b),o.setXYZ(28,t.r,t.g,t.b),o.setXYZ(29,t.r,t.g,t.b),o.setXYZ(30,t.r,t.g,t.b),o.setXYZ(31,t.r,t.g,t.b),o.setXYZ(32,n.r,n.g,n.b),o.setXYZ(33,n.r,n.g,n.b),o.setXYZ(34,n.r,n.g,n.b),o.setXYZ(35,n.r,n.g,n.b),o.setXYZ(36,n.r,n.g,n.b),o.setXYZ(37,n.r,n.g,n.b),o.setXYZ(38,i.r,i.g,i.b),o.setXYZ(39,i.r,i.g,i.b),o.setXYZ(40,r.r,r.g,r.b),o.setXYZ(41,r.r,r.g,r.b),o.setXYZ(42,r.r,r.g,r.b),o.setXYZ(43,r.r,r.g,r.b),o.setXYZ(44,r.r,r.g,r.b),o.setXYZ(45,r.r,r.g,r.b),o.setXYZ(46,r.r,r.g,r.b),o.setXYZ(47,r.r,r.g,r.b),o.setXYZ(48,r.r,r.g,r.b),o.setXYZ(49,r.r,r.g,r.b),o.needsUpdate=!0,this}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;let r,a;if(Xt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),this.camera.reversedDepth===!0)r=1,a=0;else if(this.camera.coordinateSystem===ii)r=-1,a=1;else if(this.camera.coordinateSystem===ya)r=0,a=1;else throw new Error("THREE.CameraHelper.update(): Invalid coordinate system: "+this.camera.coordinateSystem);Kt("c",t,e,Xt,0,0,r),Kt("t",t,e,Xt,0,0,a),Kt("n1",t,e,Xt,-n,-i,r),Kt("n2",t,e,Xt,n,-i,r),Kt("n3",t,e,Xt,-n,i,r),Kt("n4",t,e,Xt,n,i,r),Kt("f1",t,e,Xt,-n,-i,a),Kt("f2",t,e,Xt,n,-i,a),Kt("f3",t,e,Xt,-n,i,a),Kt("f4",t,e,Xt,n,i,a),Kt("u1",t,e,Xt,n*.7,i*1.1,r),Kt("u2",t,e,Xt,-n*.7,i*1.1,r),Kt("u3",t,e,Xt,0,i*2,r),Kt("cf1",t,e,Xt,-n,0,a),Kt("cf2",t,e,Xt,n,0,a),Kt("cf3",t,e,Xt,0,-i,a),Kt("cf4",t,e,Xt,0,i,a),Kt("cn1",t,e,Xt,-n,0,r),Kt("cn2",t,e,Xt,n,0,r),Kt("cn3",t,e,Xt,0,-i,r),Kt("cn4",t,e,Xt,0,i,r),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Kt(s,e,t,n,i,r,a){Sc.set(i,r,a).unproject(n);const o=e[s];if(o!==void 0){const c=t.getAttribute("position");for(let l=0,h=o.length;l<h;l++)c.setXYZ(o[l],Sc.x,Sc.y,Sc.z)}}const Cc=new Yt;class w_ extends Ci{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),r=new $e;r.setIndex(new ht(n,1)),r.setAttribute("position",new ht(i,3)),super(r,new bn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Cc.setFromObject(this.object),Cc.isEmpty())return;const e=Cc.min,t=Cc.max,n=this.geometry.attributes.position,i=n.array;i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=e.x,i[4]=t.y,i[5]=t.z,i[6]=e.x,i[7]=e.y,i[8]=t.z,i[9]=t.x,i[10]=e.y,i[11]=t.z,i[12]=t.x,i[13]=t.y,i[14]=e.z,i[15]=e.x,i[16]=t.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=t.x,i[22]=e.y,i[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class S_ extends Ci{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new $e;r.setIndex(new ht(n,1)),r.setAttribute("position",new Xe(i,3)),super(r,new bn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class C_ extends Qi{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new $e;a.setAttribute("position",new Xe(r,3)),a.computeBoundingSphere(),super(a,new bn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const o=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],c=new $e;c.setAttribute("position",new Xe(o,3)),c.computeBoundingSphere(),this.add(new Be(c,new Cn({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const fp=new S;let Mc,Zh;class M_ extends mt{constructor(e=new S(0,0,1),t=new S(0,0,0),n=1,i=16776960,r=n*.2,a=r*.2){super(),this.type="ArrowHelper",Mc===void 0&&(Mc=new $e,Mc.setAttribute("position",new Xe([0,0,0,0,1,0],3)),Zh=new zi(.5,1,5,1),Zh.translate(0,-.5,0)),this.position.copy(t),this.line=new Qi(Mc,new bn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Be(Zh,new Cn({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{fp.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(fp,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class I_ extends Ci{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new $e;i.setAttribute("position",new Xe(t,3)),i.setAttribute("color",new Xe(n,3));const r=new bn({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new ae,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class T_{constructor(){this.type="ShapePath",this.color=new ae,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Bl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,a){return this.currentPath.bezierCurveTo(e,t,n,i,r,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(A){const x=[];for(let b=0,y=A.length;b<y;b++){const _=A[b],w=new fr;w.curves=_.curves,x.push(w)}return x}function n(A,x){const b=x.length;let y=!1;for(let _=b-1,w=0;w<b;_=w++){let C=x[_],T=x[w],v=T.x-C.x,E=T.y-C.y;if(Math.abs(E)>Number.EPSILON){if(E<0&&(C=x[w],v=-v,T=x[_],E=-E),A.y<C.y||A.y>T.y)continue;if(A.y===C.y){if(A.x===C.x)return!0}else{const B=E*(A.x-C.x)-v*(A.y-C.y);if(B===0)return!0;if(B<0)continue;y=!y}}else{if(A.y!==C.y)continue;if(T.x<=A.x&&A.x<=C.x||C.x<=A.x&&A.x<=T.x)return!0}}return y}const i=vi.isClockWise,r=this.subPaths;if(r.length===0)return[];let a,o,c;const l=[];if(r.length===1)return o=r[0],c=new fr,c.curves=o.curves,l.push(c),l;let h=!i(r[0].getPoints());h=e?!h:h;const u=[],d=[];let f=[],p=0,g;d[p]=void 0,f[p]=[];for(let A=0,x=r.length;A<x;A++)o=r[A],g=o.getPoints(),a=i(g),a=e?!a:a,a?(!h&&d[p]&&p++,d[p]={s:new fr,p:g},d[p].s.curves=o.curves,h&&p++,f[p]=[]):f[p].push({h:o,p:g[0]});if(!d[0])return t(r);if(d.length>1){let A=!1,x=0;for(let b=0,y=d.length;b<y;b++)u[b]=[];for(let b=0,y=d.length;b<y;b++){const _=f[b];for(let w=0;w<_.length;w++){const C=_[w];let T=!0;for(let v=0;v<d.length;v++)n(C.p,d[v].p)&&(b!==v&&x++,T?(T=!1,u[v].push(C)):A=!0);T&&u[b].push(C)}}x>0&&A===!1&&(f=u)}let m;for(let A=0,x=d.length;A<x;A++){c=d[A].s,l.push(c),m=f[A];for(let b=0,y=m.length;b<y;b++)c.holes.push(m[b].h)}return l}}class B_ extends Gi{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function R_(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function D_(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function P_(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function Xu(s,e,t,n){const i=L_(n);switch(t){case fd:return s*e;case es:return s*e/i.components*i.byteLength;case So:return s*e/i.components*i.byteLength;case ys:return s*e*2/i.components*i.byteLength;case Gl:return s*e*2/i.components*i.byteLength;case ha:return s*e*3/i.components*i.byteLength;case zt:return s*e*4/i.components*i.byteLength;case zl:return s*e*4/i.components*i.byteLength;case lr:case _s:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case hr:case sa:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case dl:case fa:return Math.max(s,16)*Math.max(e,8)/4;case io:case mr:return Math.max(s,8)*Math.max(e,8)/2;case so:case pa:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case Aa:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Es:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case fl:return Math.floor((s+4)/5)*Math.floor((e+3)/4)*16;case pl:return Math.floor((s+4)/5)*Math.floor((e+4)/5)*16;case Al:return Math.floor((s+5)/6)*Math.floor((e+4)/5)*16;case ur:return Math.floor((s+5)/6)*Math.floor((e+5)/6)*16;case ml:return Math.floor((s+7)/8)*Math.floor((e+4)/5)*16;case gl:return Math.floor((s+7)/8)*Math.floor((e+5)/6)*16;case yl:return Math.floor((s+7)/8)*Math.floor((e+7)/8)*16;case bl:return Math.floor((s+9)/10)*Math.floor((e+4)/5)*16;case xl:return Math.floor((s+9)/10)*Math.floor((e+5)/6)*16;case _l:return Math.floor((s+9)/10)*Math.floor((e+7)/8)*16;case El:return Math.floor((s+9)/10)*Math.floor((e+9)/10)*16;case vl:return Math.floor((s+11)/12)*Math.floor((e+9)/10)*16;case wl:return Math.floor((s+11)/12)*Math.floor((e+11)/12)*16;case gr:case Sl:case ro:return Math.ceil(s/4)*Math.ceil(e/4)*16;case ao:case oo:return Math.ceil(s/4)*Math.ceil(e/4)*8;case co:case lo:return Math.ceil(s/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function L_(s){switch(s){case yt:case ud:return{byteLength:1,components:1};case ca:case dd:case ei:return{byteLength:2,components:1};case Ol:case Ql:return{byteLength:2,components:4};case rs:case kl:case rn:return{byteLength:4,components:1};case vo:case wo:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}class F_{static contain(e,t){return R_(e,t)}static cover(e,t){return D_(e,t)}static fill(e){return P_(e)}static getByteLength(e,t,n,i){return Xu(e,t,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Fl}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Fl);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function Qg(){let s=null,e=!1,t=null,n=null;function i(r,a){t(r,a),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function U_(s){const e=new WeakMap;function t(o,c){const l=o.array,h=o.usage,u=l.byteLength,d=s.createBuffer();s.bindBuffer(c,d),s.bufferData(c,l,h),o.onUploadCallback();let f;if(l instanceof Float32Array)f=s.FLOAT;else if(typeof Float16Array<"u"&&l instanceof Float16Array)f=s.HALF_FLOAT;else if(l instanceof Uint16Array)o.isFloat16BufferAttribute?f=s.HALF_FLOAT:f=s.UNSIGNED_SHORT;else if(l instanceof Int16Array)f=s.SHORT;else if(l instanceof Uint32Array)f=s.UNSIGNED_INT;else if(l instanceof Int32Array)f=s.INT;else if(l instanceof Int8Array)f=s.BYTE;else if(l instanceof Uint8Array)f=s.UNSIGNED_BYTE;else if(l instanceof Uint8ClampedArray)f=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+l);return{buffer:d,type:f,bytesPerElement:l.BYTES_PER_ELEMENT,version:o.version,size:u}}function n(o,c,l){const h=c.array,u=c.updateRanges;if(s.bindBuffer(l,o),u.length===0)s.bufferSubData(l,0,h);else{u.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<u.length;f++){const p=u[d],g=u[f];g.start<=p.start+p.count+1?p.count=Math.max(p.count,g.start+g.count-p.start):(++d,u[d]=g)}u.length=d+1;for(let f=0,p=u.length;f<p;f++){const g=u[f];s.bufferSubData(l,g.start*h.BYTES_PER_ELEMENT,h,g.start,g.count)}c.clearUpdateRanges()}c.onUploadCallback()}function i(o){return o.isInterleavedBufferAttribute&&(o=o.data),e.get(o)}function r(o){o.isInterleavedBufferAttribute&&(o=o.data);const c=e.get(o);c&&(s.deleteBuffer(c.buffer),e.delete(o))}function a(o,c){if(o.isInterleavedBufferAttribute&&(o=o.data),o.isGLBufferAttribute){const h=e.get(o);(!h||h.version<o.version)&&e.set(o,{buffer:o.buffer,type:o.type,bytesPerElement:o.elementSize,version:o.version});return}const l=e.get(o);if(l===void 0)e.set(o,t(o,c));else if(l.version<o.version){if(l.size!==o.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(l.buffer,o,c),l.version=o.version}}return{get:i,remove:r,update:a}}var N_=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,k_=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,O_=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,Q_=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,G_=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,z_=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,H_=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,V_=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,W_=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,q_=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,X_=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,Y_=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,K_=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,J_=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,j_=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Z_=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,$_=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,eE=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,tE=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,nE=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,iE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,sE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,rE=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,aE=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,oE=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,cE=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,lE=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,hE=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,uE=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,dE=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,fE="gl_FragColor = linearToOutputTexel( gl_FragColor );",pE=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,AE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,mE=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,gE=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,yE=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,bE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,xE=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,_E=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,EE=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,vE=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,wE=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,SE=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,CE=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,ME=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,IE=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,TE=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,BE=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,RE=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,DE=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,PE=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,LE=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,FE=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,UE=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,NE=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,kE=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,OE=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,QE=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,GE=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,zE=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,HE=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,VE=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,WE=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,qE=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,XE=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,YE=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,KE=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,JE=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,jE=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,ZE=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,$E=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,ev=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,tv=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,nv=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,iv=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,sv=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,rv=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,av=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,ov=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,cv=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,lv=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,hv=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,uv=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,dv=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,fv=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,pv=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Av=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,mv=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,gv=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,yv=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow( sampler2D shadow, vec2 uv, float compare ) {
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare, distribution.x );
		#endif
		if ( hard_shadow != 1.0 ) {
			float distance = compare - distribution.x;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,bv=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,xv=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,_v=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Ev=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,vv=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,wv=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Sv=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Cv=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Mv=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Iv=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Tv=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Bv=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,Rv=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,Dv=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Pv=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Lv=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Fv=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Uv=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Nv=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,kv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Ov=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Qv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Gv=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,zv=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Hv=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSED_DEPTH_BUFFER
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,Vv=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Wv=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,qv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Xv=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Yv=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Kv=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Jv=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,jv=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Zv=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,$v=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ew=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,tw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,iw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,sw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,rw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,aw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,ow=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,lw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,uw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,dw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,pw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Aw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,gt={alphahash_fragment:N_,alphahash_pars_fragment:k_,alphamap_fragment:O_,alphamap_pars_fragment:Q_,alphatest_fragment:G_,alphatest_pars_fragment:z_,aomap_fragment:H_,aomap_pars_fragment:V_,batching_pars_vertex:W_,batching_vertex:q_,begin_vertex:X_,beginnormal_vertex:Y_,bsdfs:K_,iridescence_fragment:J_,bumpmap_pars_fragment:j_,clipping_planes_fragment:Z_,clipping_planes_pars_fragment:$_,clipping_planes_pars_vertex:eE,clipping_planes_vertex:tE,color_fragment:nE,color_pars_fragment:iE,color_pars_vertex:sE,color_vertex:rE,common:aE,cube_uv_reflection_fragment:oE,defaultnormal_vertex:cE,displacementmap_pars_vertex:lE,displacementmap_vertex:hE,emissivemap_fragment:uE,emissivemap_pars_fragment:dE,colorspace_fragment:fE,colorspace_pars_fragment:pE,envmap_fragment:AE,envmap_common_pars_fragment:mE,envmap_pars_fragment:gE,envmap_pars_vertex:yE,envmap_physical_pars_fragment:TE,envmap_vertex:bE,fog_vertex:xE,fog_pars_vertex:_E,fog_fragment:EE,fog_pars_fragment:vE,gradientmap_pars_fragment:wE,lightmap_pars_fragment:SE,lights_lambert_fragment:CE,lights_lambert_pars_fragment:ME,lights_pars_begin:IE,lights_toon_fragment:BE,lights_toon_pars_fragment:RE,lights_phong_fragment:DE,lights_phong_pars_fragment:PE,lights_physical_fragment:LE,lights_physical_pars_fragment:FE,lights_fragment_begin:UE,lights_fragment_maps:NE,lights_fragment_end:kE,logdepthbuf_fragment:OE,logdepthbuf_pars_fragment:QE,logdepthbuf_pars_vertex:GE,logdepthbuf_vertex:zE,map_fragment:HE,map_pars_fragment:VE,map_particle_fragment:WE,map_particle_pars_fragment:qE,metalnessmap_fragment:XE,metalnessmap_pars_fragment:YE,morphinstance_vertex:KE,morphcolor_vertex:JE,morphnormal_vertex:jE,morphtarget_pars_vertex:ZE,morphtarget_vertex:$E,normal_fragment_begin:ev,normal_fragment_maps:tv,normal_pars_fragment:nv,normal_pars_vertex:iv,normal_vertex:sv,normalmap_pars_fragment:rv,clearcoat_normal_fragment_begin:av,clearcoat_normal_fragment_maps:ov,clearcoat_pars_fragment:cv,iridescence_pars_fragment:lv,opaque_fragment:hv,packing:uv,premultiplied_alpha_fragment:dv,project_vertex:fv,dithering_fragment:pv,dithering_pars_fragment:Av,roughnessmap_fragment:mv,roughnessmap_pars_fragment:gv,shadowmap_pars_fragment:yv,shadowmap_pars_vertex:bv,shadowmap_vertex:xv,shadowmask_pars_fragment:_v,skinbase_vertex:Ev,skinning_pars_vertex:vv,skinning_vertex:wv,skinnormal_vertex:Sv,specularmap_fragment:Cv,specularmap_pars_fragment:Mv,tonemapping_fragment:Iv,tonemapping_pars_fragment:Tv,transmission_fragment:Bv,transmission_pars_fragment:Rv,uv_pars_fragment:Dv,uv_pars_vertex:Pv,uv_vertex:Lv,worldpos_vertex:Fv,background_vert:Uv,background_frag:Nv,backgroundCube_vert:kv,backgroundCube_frag:Ov,cube_vert:Qv,cube_frag:Gv,depth_vert:zv,depth_frag:Hv,distanceRGBA_vert:Vv,distanceRGBA_frag:Wv,equirect_vert:qv,equirect_frag:Xv,linedashed_vert:Yv,linedashed_frag:Kv,meshbasic_vert:Jv,meshbasic_frag:jv,meshlambert_vert:Zv,meshlambert_frag:$v,meshmatcap_vert:ew,meshmatcap_frag:tw,meshnormal_vert:nw,meshnormal_frag:iw,meshphong_vert:sw,meshphong_frag:rw,meshphysical_vert:aw,meshphysical_frag:ow,meshtoon_vert:cw,meshtoon_frag:lw,points_vert:hw,points_frag:uw,shadow_vert:dw,shadow_frag:fw,sprite_vert:pw,sprite_frag:Aw},Pe={common:{diffuse:{value:new ae(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new dt},alphaMap:{value:null},alphaMapTransform:{value:new dt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new dt}},envmap:{envMap:{value:null},envMapRotation:{value:new dt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new dt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new dt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new dt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new dt},normalScale:{value:new $(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new dt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new dt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new dt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new dt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ae(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ae(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new dt},alphaTest:{value:0},uvTransform:{value:new dt}},sprite:{diffuse:{value:new ae(16777215)},opacity:{value:1},center:{value:new $(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new dt},alphaMap:{value:null},alphaMapTransform:{value:new dt},alphaTest:{value:0}}},_i={basic:{uniforms:Pn([Pe.common,Pe.specularmap,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.fog]),vertexShader:gt.meshbasic_vert,fragmentShader:gt.meshbasic_frag},lambert:{uniforms:Pn([Pe.common,Pe.specularmap,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.fog,Pe.lights,{emissive:{value:new ae(0)}}]),vertexShader:gt.meshlambert_vert,fragmentShader:gt.meshlambert_frag},phong:{uniforms:Pn([Pe.common,Pe.specularmap,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.fog,Pe.lights,{emissive:{value:new ae(0)},specular:{value:new ae(1118481)},shininess:{value:30}}]),vertexShader:gt.meshphong_vert,fragmentShader:gt.meshphong_frag},standard:{uniforms:Pn([Pe.common,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.roughnessmap,Pe.metalnessmap,Pe.fog,Pe.lights,{emissive:{value:new ae(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:gt.meshphysical_vert,fragmentShader:gt.meshphysical_frag},toon:{uniforms:Pn([Pe.common,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.gradientmap,Pe.fog,Pe.lights,{emissive:{value:new ae(0)}}]),vertexShader:gt.meshtoon_vert,fragmentShader:gt.meshtoon_frag},matcap:{uniforms:Pn([Pe.common,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.fog,{matcap:{value:null}}]),vertexShader:gt.meshmatcap_vert,fragmentShader:gt.meshmatcap_frag},points:{uniforms:Pn([Pe.points,Pe.fog]),vertexShader:gt.points_vert,fragmentShader:gt.points_frag},dashed:{uniforms:Pn([Pe.common,Pe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:gt.linedashed_vert,fragmentShader:gt.linedashed_frag},depth:{uniforms:Pn([Pe.common,Pe.displacementmap]),vertexShader:gt.depth_vert,fragmentShader:gt.depth_frag},normal:{uniforms:Pn([Pe.common,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,{opacity:{value:1}}]),vertexShader:gt.meshnormal_vert,fragmentShader:gt.meshnormal_frag},sprite:{uniforms:Pn([Pe.sprite,Pe.fog]),vertexShader:gt.sprite_vert,fragmentShader:gt.sprite_frag},background:{uniforms:{uvTransform:{value:new dt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:gt.background_vert,fragmentShader:gt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new dt}},vertexShader:gt.backgroundCube_vert,fragmentShader:gt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:gt.cube_vert,fragmentShader:gt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:gt.equirect_vert,fragmentShader:gt.equirect_frag},distanceRGBA:{uniforms:Pn([Pe.common,Pe.displacementmap,{referencePosition:{value:new S},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:gt.distanceRGBA_vert,fragmentShader:gt.distanceRGBA_frag},shadow:{uniforms:Pn([Pe.lights,Pe.fog,{color:{value:new ae(0)},opacity:{value:1}}]),vertexShader:gt.shadow_vert,fragmentShader:gt.shadow_frag}};_i.physical={uniforms:Pn([_i.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new dt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new dt},clearcoatNormalScale:{value:new $(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new dt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new dt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new dt},sheen:{value:0},sheenColor:{value:new ae(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new dt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new dt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new dt},transmissionSamplerSize:{value:new $},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new dt},attenuationDistance:{value:0},attenuationColor:{value:new ae(0)},specularColor:{value:new ae(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new dt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new dt},anisotropyVector:{value:new $},anisotropyMap:{value:null},anisotropyMapTransform:{value:new dt}}]),vertexShader:gt.meshphysical_vert,fragmentShader:gt.meshphysical_frag};const Ic={r:0,b:0,g:0},Vs=new sn,mw=new Ke;function gw(s,e,t,n,i,r,a){const o=new ae(0);let c=r===!0?0:1,l,h,u=null,d=0,f=null;function p(b){let y=b.isScene===!0?b.background:null;return y&&y.isTexture&&(y=(b.backgroundBlurriness>0?t:e).get(y)),y}function g(b){let y=!1;const _=p(b);_===null?A(o,c):_&&_.isColor&&(A(_,1),y=!0);const w=s.xr.getEnvironmentBlendMode();w==="additive"?n.buffers.color.setClear(0,0,0,1,a):w==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(s.autoClear||y)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function m(b,y){const _=p(y);_&&(_.isCubeTexture||_.mapping===va)?(h===void 0&&(h=new Be(new Ft(1,1,1),new Yn({name:"BackgroundCubeMaterial",uniforms:xa(_i.backgroundCube.uniforms),vertexShader:_i.backgroundCube.vertexShader,fragmentShader:_i.backgroundCube.fragmentShader,side:Mn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(w,C,T){this.matrixWorld.copyPosition(T.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(h)),Vs.copy(y.backgroundRotation),Vs.x*=-1,Vs.y*=-1,Vs.z*=-1,_.isCubeTexture&&_.isRenderTargetTexture===!1&&(Vs.y*=-1,Vs.z*=-1),h.material.uniforms.envMap.value=_,h.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=y.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(mw.makeRotationFromEuler(Vs)),h.material.toneMapped=xt.getTransfer(_.colorSpace)!==Lt,(u!==_||d!==_.version||f!==s.toneMapping)&&(h.material.needsUpdate=!0,u=_,d=_.version,f=s.toneMapping),h.layers.enableAll(),b.unshift(h,h.geometry,h.material,0,0,null)):_&&_.isTexture&&(l===void 0&&(l=new Be(new pi(2,2),new Yn({name:"BackgroundMaterial",uniforms:xa(_i.background.uniforms),vertexShader:_i.background.vertexShader,fragmentShader:_i.background.fragmentShader,side:wi,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=_,l.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,l.material.toneMapped=xt.getTransfer(_.colorSpace)!==Lt,_.matrixAutoUpdate===!0&&_.updateMatrix(),l.material.uniforms.uvTransform.value.copy(_.matrix),(u!==_||d!==_.version||f!==s.toneMapping)&&(l.material.needsUpdate=!0,u=_,d=_.version,f=s.toneMapping),l.layers.enableAll(),b.unshift(l,l.geometry,l.material,0,0,null))}function A(b,y){b.getRGB(Ic,Wm(s)),n.buffers.color.setClear(Ic.r,Ic.g,Ic.b,y,a)}function x(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),l!==void 0&&(l.geometry.dispose(),l.material.dispose(),l=void 0)}return{getClearColor:function(){return o},setClearColor:function(b,y=1){o.set(b),c=y,A(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(b){c=b,A(o,c)},render:g,addToRenderList:m,dispose:x}}function yw(s,e){const t=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=d(null);let r=i,a=!1;function o(E,B,D,F,N){let G=!1;const k=u(F,D,B);r!==k&&(r=k,l(r.object)),G=f(E,F,D,N),G&&p(E,F,D,N),N!==null&&e.update(N,s.ELEMENT_ARRAY_BUFFER),(G||a)&&(a=!1,y(E,B,D,F),N!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e.get(N).buffer))}function c(){return s.createVertexArray()}function l(E){return s.bindVertexArray(E)}function h(E){return s.deleteVertexArray(E)}function u(E,B,D){const F=D.wireframe===!0;let N=n[E.id];N===void 0&&(N={},n[E.id]=N);let G=N[B.id];G===void 0&&(G={},N[B.id]=G);let k=G[F];return k===void 0&&(k=d(c()),G[F]=k),k}function d(E){const B=[],D=[],F=[];for(let N=0;N<t;N++)B[N]=0,D[N]=0,F[N]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:B,enabledAttributes:D,attributeDivisors:F,object:E,attributes:{},index:null}}function f(E,B,D,F){const N=r.attributes,G=B.attributes;let k=0;const J=D.getAttributes();for(const U in J)if(J[U].location>=0){const Ae=N[U];let oe=G[U];if(oe===void 0&&(U==="instanceMatrix"&&E.instanceMatrix&&(oe=E.instanceMatrix),U==="instanceColor"&&E.instanceColor&&(oe=E.instanceColor)),Ae===void 0||Ae.attribute!==oe||oe&&Ae.data!==oe.data)return!0;k++}return r.attributesNum!==k||r.index!==F}function p(E,B,D,F){const N={},G=B.attributes;let k=0;const J=D.getAttributes();for(const U in J)if(J[U].location>=0){let Ae=G[U];Ae===void 0&&(U==="instanceMatrix"&&E.instanceMatrix&&(Ae=E.instanceMatrix),U==="instanceColor"&&E.instanceColor&&(Ae=E.instanceColor));const oe={};oe.attribute=Ae,Ae&&Ae.data&&(oe.data=Ae.data),N[U]=oe,k++}r.attributes=N,r.attributesNum=k,r.index=F}function g(){const E=r.newAttributes;for(let B=0,D=E.length;B<D;B++)E[B]=0}function m(E){A(E,0)}function A(E,B){const D=r.newAttributes,F=r.enabledAttributes,N=r.attributeDivisors;D[E]=1,F[E]===0&&(s.enableVertexAttribArray(E),F[E]=1),N[E]!==B&&(s.vertexAttribDivisor(E,B),N[E]=B)}function x(){const E=r.newAttributes,B=r.enabledAttributes;for(let D=0,F=B.length;D<F;D++)B[D]!==E[D]&&(s.disableVertexAttribArray(D),B[D]=0)}function b(E,B,D,F,N,G,k){k===!0?s.vertexAttribIPointer(E,B,D,N,G):s.vertexAttribPointer(E,B,D,F,N,G)}function y(E,B,D,F){g();const N=F.attributes,G=D.getAttributes(),k=B.defaultAttributeValues;for(const J in G){const U=G[J];if(U.location>=0){let ee=N[J];if(ee===void 0&&(J==="instanceMatrix"&&E.instanceMatrix&&(ee=E.instanceMatrix),J==="instanceColor"&&E.instanceColor&&(ee=E.instanceColor)),ee!==void 0){const Ae=ee.normalized,oe=ee.itemSize,Me=e.get(ee);if(Me===void 0)continue;const Ne=Me.buffer,st=Me.type,Oe=Me.bytesPerElement,K=st===s.INT||st===s.UNSIGNED_INT||ee.gpuType===kl;if(ee.isInterleavedBufferAttribute){const X=ee.data,Re=X.stride,Ue=ee.offset;if(X.isInstancedInterleavedBuffer){for(let Qe=0;Qe<U.locationSize;Qe++)A(U.location+Qe,X.meshPerAttribute);E.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=X.meshPerAttribute*X.count)}else for(let Qe=0;Qe<U.locationSize;Qe++)m(U.location+Qe);s.bindBuffer(s.ARRAY_BUFFER,Ne);for(let Qe=0;Qe<U.locationSize;Qe++)b(U.location+Qe,oe/U.locationSize,st,Ae,Re*Oe,(Ue+oe/U.locationSize*Qe)*Oe,K)}else{if(ee.isInstancedBufferAttribute){for(let X=0;X<U.locationSize;X++)A(U.location+X,ee.meshPerAttribute);E.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=ee.meshPerAttribute*ee.count)}else for(let X=0;X<U.locationSize;X++)m(U.location+X);s.bindBuffer(s.ARRAY_BUFFER,Ne);for(let X=0;X<U.locationSize;X++)b(U.location+X,oe/U.locationSize,st,Ae,oe*Oe,oe/U.locationSize*X*Oe,K)}}else if(k!==void 0){const Ae=k[J];if(Ae!==void 0)switch(Ae.length){case 2:s.vertexAttrib2fv(U.location,Ae);break;case 3:s.vertexAttrib3fv(U.location,Ae);break;case 4:s.vertexAttrib4fv(U.location,Ae);break;default:s.vertexAttrib1fv(U.location,Ae)}}}}x()}function _(){T();for(const E in n){const B=n[E];for(const D in B){const F=B[D];for(const N in F)h(F[N].object),delete F[N];delete B[D]}delete n[E]}}function w(E){if(n[E.id]===void 0)return;const B=n[E.id];for(const D in B){const F=B[D];for(const N in F)h(F[N].object),delete F[N];delete B[D]}delete n[E.id]}function C(E){for(const B in n){const D=n[B];if(D[E.id]===void 0)continue;const F=D[E.id];for(const N in F)h(F[N].object),delete F[N];delete D[E.id]}}function T(){v(),a=!0,r!==i&&(r=i,l(r.object))}function v(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:o,reset:T,resetDefaultState:v,dispose:_,releaseStatesOfGeometry:w,releaseStatesOfProgram:C,initAttributes:g,enableAttribute:m,disableUnusedAttributes:x}}function bw(s,e,t){let n;function i(l){n=l}function r(l,h){s.drawArrays(n,l,h),t.update(h,n,1)}function a(l,h,u){u!==0&&(s.drawArraysInstanced(n,l,h,u),t.update(h,n,u))}function o(l,h,u){if(u===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,l,0,h,0,u);let f=0;for(let p=0;p<u;p++)f+=h[p];t.update(f,n,1)}function c(l,h,u,d){if(u===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<l.length;p++)a(l[p],h[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(n,l,0,h,0,d,0,u);let p=0;for(let g=0;g<u;g++)p+=h[g]*d[g];t.update(p,n,1)}}this.setMode=i,this.render=r,this.renderInstances=a,this.renderMultiDraw=o,this.renderMultiDrawInstances=c}function xw(s,e,t,n){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const C=e.get("EXT_texture_filter_anisotropic");i=s.getParameter(C.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function a(C){return!(C!==zt&&n.convert(C)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function o(C){const T=C===ei&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(C!==yt&&n.convert(C)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&C!==rn&&!T)}function c(C){if(C==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";C="mediump"}return C==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=t.precision!==void 0?t.precision:"highp";const h=c(l);h!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",h,"instead."),l=h);const u=t.logarithmicDepthBuffer===!0,d=t.reversedDepthBuffer===!0&&e.has("EXT_clip_control"),f=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),p=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),g=s.getParameter(s.MAX_TEXTURE_SIZE),m=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),A=s.getParameter(s.MAX_VERTEX_ATTRIBS),x=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),b=s.getParameter(s.MAX_VARYING_VECTORS),y=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),_=p>0,w=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:c,textureFormatReadable:a,textureTypeReadable:o,precision:l,logarithmicDepthBuffer:u,reversedDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:g,maxCubemapSize:m,maxAttributes:A,maxVertexUniforms:x,maxVaryings:b,maxFragmentUniforms:y,vertexTextures:_,maxSamples:w}}function _w(s){const e=this;let t=null,n=0,i=!1,r=!1;const a=new Vn,o=new dt,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const f=u.length!==0||d||n!==0||i;return i=d,n=u.length,f},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,d){t=h(u,d,0)},this.setState=function(u,d,f){const p=u.clippingPlanes,g=u.clipIntersection,m=u.clipShadows,A=s.get(u);if(!i||p===null||p.length===0||r&&!m)r?h(null):l();else{const x=r?0:n,b=x*4;let y=A.clippingState||null;c.value=y,y=h(p,d,b,f);for(let _=0;_!==b;++_)y[_]=t[_];A.clippingState=y,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=x}};function l(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(u,d,f,p){const g=u!==null?u.length:0;let m=null;if(g!==0){if(m=c.value,p!==!0||m===null){const A=f+g*4,x=d.matrixWorldInverse;o.getNormalMatrix(x),(m===null||m.length<A)&&(m=new Float32Array(A));for(let b=0,y=f;b!==g;++b,y+=4)a.copy(u[b]).applyMatrix4(x,o),a.normal.toArray(m,y),m[y+3]=a.constant}c.value=m,c.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,m}}function Ew(s){let e=new WeakMap;function t(a,o){return o===to?a.mapping=ss:o===no&&(a.mapping=Ss),a}function n(a){if(a&&a.isTexture){const o=a.mapping;if(o===to||o===no)if(e.has(a)){const c=e.get(a).texture;return t(c,a.mapping)}else{const c=a.image;if(c&&c.height>0){const l=new Xm(c.height);return l.fromEquirectangularTexture(s,a),e.set(a,l),a.addEventListener("dispose",i),t(l.texture,a.mapping)}else return null}}return a}function i(a){const o=a.target;o.removeEventListener("dispose",i);const c=e.get(o);c!==void 0&&(e.delete(o),c.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}const ea=4,pp=[.125,.215,.35,.446,.526,.582],er=20,$h=new ko,Ap=new ae;let eu=null,tu=0,nu=0,iu=!1;const $s=(1+Math.sqrt(5))/2,Wr=1/$s,mp=[new S(-$s,Wr,0),new S($s,Wr,0),new S(-Wr,0,$s),new S(Wr,0,$s),new S(0,$s,-Wr),new S(0,$s,Wr),new S(-1,1,-1),new S(1,1,-1),new S(-1,1,1),new S(1,1,1)],vw=new S;class Yu{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100,r={}){const{size:a=256,position:o=vw}=r;eu=this._renderer.getRenderTarget(),tu=this._renderer.getActiveCubeFace(),nu=this._renderer.getActiveMipmapLevel(),iu=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(a);const c=this._allocateTargets();return c.depthBuffer=!0,this._sceneToCubeUV(e,n,i,c,o),t>0&&this._blur(c,0,0,t),this._applyPMREM(c),this._cleanup(c),c}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=bp(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=yp(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(eu,tu,nu),this._renderer.xr.enabled=iu,e.scissorTest=!1,Tc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===ss||e.mapping===Ss?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),eu=this._renderer.getRenderTarget(),tu=this._renderer.getActiveCubeFace(),nu=this._renderer.getActiveMipmapLevel(),iu=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Qt,minFilter:Qt,generateMipmaps:!1,type:ei,format:zt,colorSpace:Ot,depthBuffer:!1},i=gp(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=gp(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=ww(r)),this._blurMaterial=Sw(r,e,t)}return i}_compileMaterial(e){const t=new Be(this._lodPlanes[0],e);this._renderer.compile(t,$h)}_sceneToCubeUV(e,t,n,i,r){const c=new $t(90,1,t,n),l=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,d=u.autoClear,f=u.toneMapping;u.getClearColor(Ap),u.toneMapping=ki,u.autoClear=!1,u.state.buffers.depth.getReversed()&&(u.setRenderTarget(i),u.clearDepth(),u.setRenderTarget(null));const g=new Cn({name:"PMREM.Background",side:Mn,depthWrite:!1,depthTest:!1}),m=new Be(new Ft,g);let A=!1;const x=e.background;x?x.isColor&&(g.color.copy(x),e.background=null,A=!0):(g.color.copy(Ap),A=!0);for(let b=0;b<6;b++){const y=b%3;y===0?(c.up.set(0,l[b],0),c.position.set(r.x,r.y,r.z),c.lookAt(r.x+h[b],r.y,r.z)):y===1?(c.up.set(0,0,l[b]),c.position.set(r.x,r.y,r.z),c.lookAt(r.x,r.y+h[b],r.z)):(c.up.set(0,l[b],0),c.position.set(r.x,r.y,r.z),c.lookAt(r.x,r.y,r.z+h[b]));const _=this._cubeSize;Tc(i,y*_,b>2?_:0,_,_),u.setRenderTarget(i),A&&u.render(m,c),u.render(e,c)}m.geometry.dispose(),m.material.dispose(),u.toneMapping=f,u.autoClear=d,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===ss||e.mapping===Ss;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=bp()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=yp());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new Be(this._lodPlanes[0],r),o=r.uniforms;o.envMap.value=e;const c=this._cubeSize;Tc(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(a,$h)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let r=1;r<i;r++){const a=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=mp[(i-r-1)%mp.length];this._blur(e,r-1,r,a,o)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,o){const c=this._renderer,l=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new Be(this._lodPlanes[i],l),d=l.uniforms,f=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*er-1),g=r/p,m=isFinite(r)?1+Math.floor(h*g):er;m>er&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${er}`);const A=[];let x=0;for(let C=0;C<er;++C){const T=C/g,v=Math.exp(-T*T/2);A.push(v),C===0?x+=v:C<m&&(x+=2*v)}for(let C=0;C<A.length;C++)A[C]=A[C]/x;d.envMap.value=e.texture,d.samples.value=m,d.weights.value=A,d.latitudinal.value=a==="latitudinal",o&&(d.poleAxis.value=o);const{_lodMax:b}=this;d.dTheta.value=p,d.mipInt.value=b-n;const y=this._sizeLods[i],_=3*y*(i>b-ea?i-b+ea:0),w=4*(this._cubeSize-y);Tc(t,_,w,3*y,2*y),c.setRenderTarget(t),c.render(u,$h)}}function ww(s){const e=[],t=[],n=[];let i=s;const r=s-ea+1+pp.length;for(let a=0;a<r;a++){const o=Math.pow(2,i);t.push(o);let c=1/o;a>s-ea?c=pp[a-s+ea-1]:a===0&&(c=0),n.push(c);const l=1/(o-2),h=-l,u=1+l,d=[h,h,u,h,u,u,h,h,u,u,h,u],f=6,p=6,g=3,m=2,A=1,x=new Float32Array(g*p*f),b=new Float32Array(m*p*f),y=new Float32Array(A*p*f);for(let w=0;w<f;w++){const C=w%3*2/3-1,T=w>2?0:-1,v=[C,T,0,C+2/3,T,0,C+2/3,T+1,0,C,T,0,C+2/3,T+1,0,C,T+1,0];x.set(v,g*p*w),b.set(d,m*p*w);const E=[w,w,w,w,w,w];y.set(E,A*p*w)}const _=new $e;_.setAttribute("position",new ht(x,g)),_.setAttribute("uv",new ht(b,m)),_.setAttribute("faceIndex",new ht(y,A)),e.push(_),i>ea&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function gp(s,e,t){const n=new Si(s,e,t);return n.texture.mapping=va,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Tc(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function Sw(s,e,t){const n=new Float32Array(er),i=new S(0,1,0);return new Yn({name:"SphericalGaussianBlur",defines:{n:er,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Jd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ts,depthTest:!1,depthWrite:!1})}function yp(){return new Yn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Jd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ts,depthTest:!1,depthWrite:!1})}function bp(){return new Yn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Jd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ts,depthTest:!1,depthWrite:!1})}function Jd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Cw(s){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture){const c=o.mapping,l=c===to||c===no,h=c===ss||c===Ss;if(l||h){let u=e.get(o);const d=u!==void 0?u.texture.pmremVersion:0;if(o.isRenderTargetTexture&&o.pmremVersion!==d)return t===null&&(t=new Yu(s)),u=l?t.fromEquirectangular(o,u):t.fromCubemap(o,u),u.texture.pmremVersion=o.pmremVersion,e.set(o,u),u.texture;if(u!==void 0)return u.texture;{const f=o.image;return l&&f&&f.height>0||h&&f&&i(f)?(t===null&&(t=new Yu(s)),u=l?t.fromEquirectangular(o):t.fromCubemap(o),u.texture.pmremVersion=o.pmremVersion,e.set(o,u),o.addEventListener("dispose",r),u.texture):null}}}return o}function i(o){let c=0;const l=6;for(let h=0;h<l;h++)o[h]!==void 0&&c++;return c===l}function r(o){const c=o.target;c.removeEventListener("dispose",r);const l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function Mw(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&Ao("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Iw(s,e,t,n){const i={},r=new WeakMap;function a(u){const d=u.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);d.removeEventListener("dispose",a),delete i[d.id];const f=r.get(d);f&&(e.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function o(u,d){return i[d.id]===!0||(d.addEventListener("dispose",a),i[d.id]=!0,t.memory.geometries++),d}function c(u){const d=u.attributes;for(const f in d)e.update(d[f],s.ARRAY_BUFFER)}function l(u){const d=[],f=u.index,p=u.attributes.position;let g=0;if(f!==null){const x=f.array;g=f.version;for(let b=0,y=x.length;b<y;b+=3){const _=x[b+0],w=x[b+1],C=x[b+2];d.push(_,w,w,C,C,_)}}else if(p!==void 0){const x=p.array;g=p.version;for(let b=0,y=x.length/3-1;b<y;b+=3){const _=b+0,w=b+1,C=b+2;d.push(_,w,w,C,C,_)}}else return;const m=new(Gm(d)?xd:bd)(d,1);m.version=g;const A=r.get(u);A&&e.remove(A),r.set(u,m)}function h(u){const d=r.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&l(u)}else l(u);return r.get(u)}return{get:o,update:c,getWireframeAttribute:h}}function Tw(s,e,t){let n;function i(d){n=d}let r,a;function o(d){r=d.type,a=d.bytesPerElement}function c(d,f){s.drawElements(n,f,r,d*a),t.update(f,n,1)}function l(d,f,p){p!==0&&(s.drawElementsInstanced(n,f,r,d*a,p),t.update(f,n,p))}function h(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,f,0,r,d,0,p);let m=0;for(let A=0;A<p;A++)m+=f[A];t.update(m,n,1)}function u(d,f,p,g){if(p===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let A=0;A<d.length;A++)l(d[A]/a,f[A],g[A]);else{m.multiDrawElementsInstancedWEBGL(n,f,0,r,d,0,g,0,p);let A=0;for(let x=0;x<p;x++)A+=f[x]*g[x];t.update(A,n,1)}}this.setMode=i,this.setIndex=o,this.render=c,this.renderInstances=l,this.renderMultiDraw=h,this.renderMultiDrawInstances=u}function Bw(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,o){switch(t.calls++,a){case s.TRIANGLES:t.triangles+=o*(r/3);break;case s.LINES:t.lines+=o*(r/2);break;case s.LINE_STRIP:t.lines+=o*(r-1);break;case s.LINE_LOOP:t.lines+=o*r;break;case s.POINTS:t.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function Rw(s,e,t){const n=new WeakMap,i=new wt;function r(a,o,c){const l=a.morphTargetInfluences,h=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,u=h!==void 0?h.length:0;let d=n.get(o);if(d===void 0||d.count!==u){let v=function(){C.dispose(),n.delete(o),o.removeEventListener("dispose",v)};d!==void 0&&d.texture.dispose();const f=o.morphAttributes.position!==void 0,p=o.morphAttributes.normal!==void 0,g=o.morphAttributes.color!==void 0,m=o.morphAttributes.position||[],A=o.morphAttributes.normal||[],x=o.morphAttributes.color||[];let b=0;f===!0&&(b=1),p===!0&&(b=2),g===!0&&(b=3);let y=o.attributes.position.count*b,_=1;y>e.maxTextureSize&&(_=Math.ceil(y/e.maxTextureSize),y=e.maxTextureSize);const w=new Float32Array(y*_*4*u),C=new Vl(w,y,_,u);C.type=rn,C.needsUpdate=!0;const T=b*4;for(let E=0;E<u;E++){const B=m[E],D=A[E],F=x[E],N=y*_*4*E;for(let G=0;G<B.count;G++){const k=G*T;f===!0&&(i.fromBufferAttribute(B,G),w[N+k+0]=i.x,w[N+k+1]=i.y,w[N+k+2]=i.z,w[N+k+3]=0),p===!0&&(i.fromBufferAttribute(D,G),w[N+k+4]=i.x,w[N+k+5]=i.y,w[N+k+6]=i.z,w[N+k+7]=0),g===!0&&(i.fromBufferAttribute(F,G),w[N+k+8]=i.x,w[N+k+9]=i.y,w[N+k+10]=i.z,w[N+k+11]=F.itemSize===4?i.w:1)}}d={count:u,texture:C,size:new $(y,_)},n.set(o,d),o.addEventListener("dispose",v)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)c.getUniforms().setValue(s,"morphTexture",a.morphTexture,t);else{let f=0;for(let g=0;g<l.length;g++)f+=l[g];const p=o.morphTargetsRelative?1:1-f;c.getUniforms().setValue(s,"morphTargetBaseInfluence",p),c.getUniforms().setValue(s,"morphTargetInfluences",l)}c.getUniforms().setValue(s,"morphTargetsTexture",d.texture,t),c.getUniforms().setValue(s,"morphTargetsTextureSize",d.size)}return{update:r}}function Dw(s,e,t,n){let i=new WeakMap;function r(c){const l=n.render.frame,h=c.geometry,u=e.get(c,h);if(i.get(u)!==l&&(e.update(u),i.set(u,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",o)===!1&&c.addEventListener("dispose",o),i.get(c)!==l&&(t.update(c.instanceMatrix,s.ARRAY_BUFFER),c.instanceColor!==null&&t.update(c.instanceColor,s.ARRAY_BUFFER),i.set(c,l))),c.isSkinnedMesh){const d=c.skeleton;i.get(d)!==l&&(d.update(),i.set(d,l))}return u}function a(){i=new WeakMap}function o(c){const l=c.target;l.removeEventListener("dispose",o),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:r,dispose:a}}const Gg=new Ht,xp=new Cd(1,1),zg=new Vl,Hg=new Co,Vg=new Mo,_p=[],Ep=[],vp=new Float32Array(16),wp=new Float32Array(9),Sp=new Float32Array(4);function Ia(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=_p[i];if(r===void 0&&(r=new Float32Array(i),_p[i]=r),e!==0){n.toArray(r,0);for(let a=1,o=0;a!==e;++a)o+=t,s[a].toArray(r,o)}return r}function ln(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function hn(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function hh(s,e){let t=Ep[e];t===void 0&&(t=new Int32Array(e),Ep[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function Pw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function Lw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ln(t,e))return;s.uniform2fv(this.addr,e),hn(t,e)}}function Fw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(ln(t,e))return;s.uniform3fv(this.addr,e),hn(t,e)}}function Uw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ln(t,e))return;s.uniform4fv(this.addr,e),hn(t,e)}}function Nw(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(ln(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),hn(t,e)}else{if(ln(t,n))return;Sp.set(n),s.uniformMatrix2fv(this.addr,!1,Sp),hn(t,n)}}function kw(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(ln(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),hn(t,e)}else{if(ln(t,n))return;wp.set(n),s.uniformMatrix3fv(this.addr,!1,wp),hn(t,n)}}function Ow(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(ln(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),hn(t,e)}else{if(ln(t,n))return;vp.set(n),s.uniformMatrix4fv(this.addr,!1,vp),hn(t,n)}}function Qw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function Gw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ln(t,e))return;s.uniform2iv(this.addr,e),hn(t,e)}}function zw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ln(t,e))return;s.uniform3iv(this.addr,e),hn(t,e)}}function Hw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ln(t,e))return;s.uniform4iv(this.addr,e),hn(t,e)}}function Vw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function Ww(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ln(t,e))return;s.uniform2uiv(this.addr,e),hn(t,e)}}function qw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ln(t,e))return;s.uniform3uiv(this.addr,e),hn(t,e)}}function Xw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ln(t,e))return;s.uniform4uiv(this.addr,e),hn(t,e)}}function Yw(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let r;this.type===s.SAMPLER_2D_SHADOW?(xp.compareFunction=md,r=xp):r=Gg,t.setTexture2D(e||r,i)}function Kw(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Hg,i)}function Jw(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Vg,i)}function jw(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||zg,i)}function Zw(s){switch(s){case 5126:return Pw;case 35664:return Lw;case 35665:return Fw;case 35666:return Uw;case 35674:return Nw;case 35675:return kw;case 35676:return Ow;case 5124:case 35670:return Qw;case 35667:case 35671:return Gw;case 35668:case 35672:return zw;case 35669:case 35673:return Hw;case 5125:return Vw;case 36294:return Ww;case 36295:return qw;case 36296:return Xw;case 35678:case 36198:case 36298:case 36306:case 35682:return Yw;case 35679:case 36299:case 36307:return Kw;case 35680:case 36300:case 36308:case 36293:return Jw;case 36289:case 36303:case 36311:case 36292:return jw}}function $w(s,e){s.uniform1fv(this.addr,e)}function eS(s,e){const t=Ia(e,this.size,2);s.uniform2fv(this.addr,t)}function tS(s,e){const t=Ia(e,this.size,3);s.uniform3fv(this.addr,t)}function nS(s,e){const t=Ia(e,this.size,4);s.uniform4fv(this.addr,t)}function iS(s,e){const t=Ia(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function sS(s,e){const t=Ia(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function rS(s,e){const t=Ia(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function aS(s,e){s.uniform1iv(this.addr,e)}function oS(s,e){s.uniform2iv(this.addr,e)}function cS(s,e){s.uniform3iv(this.addr,e)}function lS(s,e){s.uniform4iv(this.addr,e)}function hS(s,e){s.uniform1uiv(this.addr,e)}function uS(s,e){s.uniform2uiv(this.addr,e)}function dS(s,e){s.uniform3uiv(this.addr,e)}function fS(s,e){s.uniform4uiv(this.addr,e)}function pS(s,e,t){const n=this.cache,i=e.length,r=hh(t,i);ln(n,r)||(s.uniform1iv(this.addr,r),hn(n,r));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||Gg,r[a])}function AS(s,e,t){const n=this.cache,i=e.length,r=hh(t,i);ln(n,r)||(s.uniform1iv(this.addr,r),hn(n,r));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||Hg,r[a])}function mS(s,e,t){const n=this.cache,i=e.length,r=hh(t,i);ln(n,r)||(s.uniform1iv(this.addr,r),hn(n,r));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||Vg,r[a])}function gS(s,e,t){const n=this.cache,i=e.length,r=hh(t,i);ln(n,r)||(s.uniform1iv(this.addr,r),hn(n,r));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||zg,r[a])}function yS(s){switch(s){case 5126:return $w;case 35664:return eS;case 35665:return tS;case 35666:return nS;case 35674:return iS;case 35675:return sS;case 35676:return rS;case 5124:case 35670:return aS;case 35667:case 35671:return oS;case 35668:case 35672:return cS;case 35669:case 35673:return lS;case 5125:return hS;case 36294:return uS;case 36295:return dS;case 36296:return fS;case 35678:case 36198:case 36298:case 36306:case 35682:return pS;case 35679:case 36299:case 36307:return AS;case 35680:case 36300:case 36308:case 36293:return mS;case 36289:case 36303:case 36311:case 36292:return gS}}class bS{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=Zw(t.type)}}class xS{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=yS(t.type)}}class _S{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const o=i[r];o.setValue(e,t[o.id],n)}}}const su=/(\w+)(\])?(\[|\.)?/g;function Cp(s,e){s.seq.push(e),s.map[e.id]=e}function ES(s,e,t){const n=s.name,i=n.length;for(su.lastIndex=0;;){const r=su.exec(n),a=su.lastIndex;let o=r[1];const c=r[2]==="]",l=r[3];if(c&&(o=o|0),l===void 0||l==="["&&a+2===i){Cp(t,l===void 0?new bS(o,s,e):new xS(o,s,e));break}else{let u=t.map[o];u===void 0&&(u=new _S(o),Cp(t,u)),t=u}}}class Kc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),a=e.getUniformLocation(t,r.name);ES(r,a,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const o=t[r],c=n[o.id];c.needsUpdate!==!1&&o.setValue(e,c.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const a=e[i];a.id in t&&n.push(a)}return n}}function Mp(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}const vS=37297;let wS=0;function SS(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let a=i;a<r;a++){const o=a+1;n.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return n.join(`
`)}const Ip=new dt;function CS(s){xt._getMatrix(Ip,xt.workingColorSpace,s);const e=`mat3( ${Ip.elements.map(t=>t.toFixed(4))} )`;switch(xt.getTransfer(s)){case uo:return[e,"LinearTransferOETF"];case Lt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[e,"LinearTransferOETF"]}}function Tp(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),r=(s.getShaderInfoLog(e)||"").trim();if(n&&r==="")return"";const a=/ERROR: 0:(\d+)/.exec(r);if(a){const o=parseInt(a[1]);return t.toUpperCase()+`

`+r+`

`+SS(s.getShaderSource(e),o)}else return r}function MS(s,e){const t=CS(e);return[`vec4 ${s}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function IS(s,e){let t;switch(e){case xm:t="Linear";break;case _m:t="Reinhard";break;case Em:t="Cineon";break;case Ul:t="ACESFilmic";break;case wm:t="AgX";break;case Sm:t="Neutral";break;case vm:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Bc=new S;function TS(){xt.getLuminanceCoefficients(Bc);const s=Bc.x.toFixed(4),e=Bc.y.toFixed(4),t=Bc.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function BS(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Ya).join(`
`)}function RS(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function DS(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),a=r.name;let o=1;r.type===s.FLOAT_MAT2&&(o=2),r.type===s.FLOAT_MAT3&&(o=3),r.type===s.FLOAT_MAT4&&(o=4),t[a]={type:r.type,location:s.getAttribLocation(e,a),locationSize:o}}return t}function Ya(s){return s!==""}function Bp(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Rp(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const PS=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ku(s){return s.replace(PS,FS)}const LS=new Map;function FS(s,e){let t=gt[e];if(t===void 0){const n=LS.get(e);if(n!==void 0)t=gt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Ku(t)}const US=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Dp(s){return s.replace(US,NS)}function NS(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Pp(s){let e=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function kS(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===ld?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===hd?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Li&&(e="SHADOWMAP_TYPE_VSM"),e}function OS(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case ss:case Ss:e="ENVMAP_TYPE_CUBE";break;case va:e="ENVMAP_TYPE_CUBE_UV";break}return e}function QS(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Ss:e="ENVMAP_MODE_REFRACTION";break}return e}function GS(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case _o:e="ENVMAP_BLENDING_MULTIPLY";break;case ym:e="ENVMAP_BLENDING_MIX";break;case bm:e="ENVMAP_BLENDING_ADD";break}return e}function zS(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:n,maxMip:t}}function HS(s,e,t,n){const i=s.getContext(),r=t.defines;let a=t.vertexShader,o=t.fragmentShader;const c=kS(t),l=OS(t),h=QS(t),u=GS(t),d=zS(t),f=BS(t),p=RS(r),g=i.createProgram();let m,A,x=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Ya).join(`
`),m.length>0&&(m+=`
`),A=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Ya).join(`
`),A.length>0&&(A+=`
`)):(m=[Pp(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",t.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ya).join(`
`),A=[Pp(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",t.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==ki?"#define TONE_MAPPING":"",t.toneMapping!==ki?gt.tonemapping_pars_fragment:"",t.toneMapping!==ki?IS("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",gt.colorspace_pars_fragment,MS("linearToOutputTexel",t.outputColorSpace),TS(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Ya).join(`
`)),a=Ku(a),a=Bp(a,t),a=Rp(a,t),o=Ku(o),o=Bp(o,t),o=Rp(o,t),a=Dp(a),o=Dp(o),t.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,m=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,A=["#define varying in",t.glslVersion===Gu?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Gu?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+A);const b=x+m+a,y=x+A+o,_=Mp(i,i.VERTEX_SHADER,b),w=Mp(i,i.FRAGMENT_SHADER,y);i.attachShader(g,_),i.attachShader(g,w),t.index0AttributeName!==void 0?i.bindAttribLocation(g,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g);function C(B){if(s.debug.checkShaderErrors){const D=i.getProgramInfoLog(g)||"",F=i.getShaderInfoLog(_)||"",N=i.getShaderInfoLog(w)||"",G=D.trim(),k=F.trim(),J=N.trim();let U=!0,ee=!0;if(i.getProgramParameter(g,i.LINK_STATUS)===!1)if(U=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,g,_,w);else{const Ae=Tp(i,_,"vertex"),oe=Tp(i,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,i.VALIDATE_STATUS)+`

Material Name: `+B.name+`
Material Type: `+B.type+`

Program Info Log: `+G+`
`+Ae+`
`+oe)}else G!==""?console.warn("THREE.WebGLProgram: Program Info Log:",G):(k===""||J==="")&&(ee=!1);ee&&(B.diagnostics={runnable:U,programLog:G,vertexShader:{log:k,prefix:m},fragmentShader:{log:J,prefix:A}})}i.deleteShader(_),i.deleteShader(w),T=new Kc(i,g),v=DS(i,g)}let T;this.getUniforms=function(){return T===void 0&&C(this),T};let v;this.getAttributes=function(){return v===void 0&&C(this),v};let E=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return E===!1&&(E=i.getProgramParameter(g,vS)),E},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=wS++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=_,this.fragmentShader=w,this}let VS=0;class WS{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new qS(e),t.set(e,n)),n}}class qS{constructor(e){this.id=VS++,this.code=e,this.usedTimes=0}}function XS(s,e,t,n,i,r,a){const o=new Wl,c=new WS,l=new Set,h=[],u=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(v){return l.add(v),v===0?"uv":`uv${v}`}function m(v,E,B,D,F){const N=D.fog,G=F.geometry,k=v.isMeshStandardMaterial?D.environment:null,J=(v.isMeshStandardMaterial?t:e).get(v.envMap||k),U=J&&J.mapping===va?J.image.height:null,ee=p[v.type];v.precision!==null&&(f=i.getMaxPrecision(v.precision),f!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",f,"instead."));const Ae=G.morphAttributes.position||G.morphAttributes.normal||G.morphAttributes.color,oe=Ae!==void 0?Ae.length:0;let Me=0;G.morphAttributes.position!==void 0&&(Me=1),G.morphAttributes.normal!==void 0&&(Me=2),G.morphAttributes.color!==void 0&&(Me=3);let Ne,st,Oe,K;if(ee){const Bt=_i[ee];Ne=Bt.vertexShader,st=Bt.fragmentShader}else Ne=v.vertexShader,st=v.fragmentShader,c.update(v),Oe=c.getVertexShaderID(v),K=c.getFragmentShaderID(v);const X=s.getRenderTarget(),Re=s.state.buffers.depth.getReversed(),Ue=F.isInstancedMesh===!0,Qe=F.isBatchedMesh===!0,at=!!v.map,_t=!!v.matcap,P=!!J,de=!!v.aoMap,ne=!!v.lightMap,ie=!!v.bumpMap,te=!!v.normalMap,_e=!!v.displacementMap,le=!!v.emissiveMap,ve=!!v.metalnessMap,nt=!!v.roughnessMap,Ze=v.anisotropy>0,R=v.clearcoat>0,I=v.dispersion>0,W=v.iridescence>0,Y=v.sheen>0,he=v.transmission>0,Z=Ze&&!!v.anisotropyMap,Ge=R&&!!v.clearcoatMap,we=R&&!!v.clearcoatNormalMap,qe=R&&!!v.clearcoatRoughnessMap,Ve=W&&!!v.iridescenceMap,ye=W&&!!v.iridescenceThicknessMap,Fe=Y&&!!v.sheenColorMap,et=Y&&!!v.sheenRoughnessMap,Ye=!!v.specularMap,De=!!v.specularColorMap,lt=!!v.specularIntensityMap,z=he&&!!v.transmissionMap,xe=he&&!!v.thicknessMap,Ee=!!v.gradientMap,ke=!!v.alphaMap,be=v.alphaTest>0,ce=!!v.alphaHash,ze=!!v.extensions;let it=ki;v.toneMapped&&(X===null||X.isXRRenderTarget===!0)&&(it=s.toneMapping);const Ct={shaderID:ee,shaderType:v.type,shaderName:v.name,vertexShader:Ne,fragmentShader:st,defines:v.defines,customVertexShaderID:Oe,customFragmentShaderID:K,isRawShaderMaterial:v.isRawShaderMaterial===!0,glslVersion:v.glslVersion,precision:f,batching:Qe,batchingColor:Qe&&F._colorsTexture!==null,instancing:Ue,instancingColor:Ue&&F.instanceColor!==null,instancingMorph:Ue&&F.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:X===null?s.outputColorSpace:X.isXRRenderTarget===!0?X.texture.colorSpace:Ot,alphaToCoverage:!!v.alphaToCoverage,map:at,matcap:_t,envMap:P,envMapMode:P&&J.mapping,envMapCubeUVHeight:U,aoMap:de,lightMap:ne,bumpMap:ie,normalMap:te,displacementMap:d&&_e,emissiveMap:le,normalMapObjectSpace:te&&v.normalMapType===Pm,normalMapTangentSpace:te&&v.normalMapType===Ms,metalnessMap:ve,roughnessMap:nt,anisotropy:Ze,anisotropyMap:Z,clearcoat:R,clearcoatMap:Ge,clearcoatNormalMap:we,clearcoatRoughnessMap:qe,dispersion:I,iridescence:W,iridescenceMap:Ve,iridescenceThicknessMap:ye,sheen:Y,sheenColorMap:Fe,sheenRoughnessMap:et,specularMap:Ye,specularColorMap:De,specularIntensityMap:lt,transmission:he,transmissionMap:z,thicknessMap:xe,gradientMap:Ee,opaque:v.transparent===!1&&v.blending===cr&&v.alphaToCoverage===!1,alphaMap:ke,alphaTest:be,alphaHash:ce,combine:v.combine,mapUv:at&&g(v.map.channel),aoMapUv:de&&g(v.aoMap.channel),lightMapUv:ne&&g(v.lightMap.channel),bumpMapUv:ie&&g(v.bumpMap.channel),normalMapUv:te&&g(v.normalMap.channel),displacementMapUv:_e&&g(v.displacementMap.channel),emissiveMapUv:le&&g(v.emissiveMap.channel),metalnessMapUv:ve&&g(v.metalnessMap.channel),roughnessMapUv:nt&&g(v.roughnessMap.channel),anisotropyMapUv:Z&&g(v.anisotropyMap.channel),clearcoatMapUv:Ge&&g(v.clearcoatMap.channel),clearcoatNormalMapUv:we&&g(v.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:qe&&g(v.clearcoatRoughnessMap.channel),iridescenceMapUv:Ve&&g(v.iridescenceMap.channel),iridescenceThicknessMapUv:ye&&g(v.iridescenceThicknessMap.channel),sheenColorMapUv:Fe&&g(v.sheenColorMap.channel),sheenRoughnessMapUv:et&&g(v.sheenRoughnessMap.channel),specularMapUv:Ye&&g(v.specularMap.channel),specularColorMapUv:De&&g(v.specularColorMap.channel),specularIntensityMapUv:lt&&g(v.specularIntensityMap.channel),transmissionMapUv:z&&g(v.transmissionMap.channel),thicknessMapUv:xe&&g(v.thicknessMap.channel),alphaMapUv:ke&&g(v.alphaMap.channel),vertexTangents:!!G.attributes.tangent&&(te||Ze),vertexColors:v.vertexColors,vertexAlphas:v.vertexColors===!0&&!!G.attributes.color&&G.attributes.color.itemSize===4,pointsUvs:F.isPoints===!0&&!!G.attributes.uv&&(at||ke),fog:!!N,useFog:v.fog===!0,fogExp2:!!N&&N.isFogExp2,flatShading:v.flatShading===!0&&v.wireframe===!1,sizeAttenuation:v.sizeAttenuation===!0,logarithmicDepthBuffer:u,reversedDepthBuffer:Re,skinning:F.isSkinnedMesh===!0,morphTargets:G.morphAttributes.position!==void 0,morphNormals:G.morphAttributes.normal!==void 0,morphColors:G.morphAttributes.color!==void 0,morphTargetsCount:oe,morphTextureStride:Me,numDirLights:E.directional.length,numPointLights:E.point.length,numSpotLights:E.spot.length,numSpotLightMaps:E.spotLightMap.length,numRectAreaLights:E.rectArea.length,numHemiLights:E.hemi.length,numDirLightShadows:E.directionalShadowMap.length,numPointLightShadows:E.pointShadowMap.length,numSpotLightShadows:E.spotShadowMap.length,numSpotLightShadowsWithMaps:E.numSpotLightShadowsWithMaps,numLightProbes:E.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:v.dithering,shadowMapEnabled:s.shadowMap.enabled&&B.length>0,shadowMapType:s.shadowMap.type,toneMapping:it,decodeVideoTexture:at&&v.map.isVideoTexture===!0&&xt.getTransfer(v.map.colorSpace)===Lt,decodeVideoTextureEmissive:le&&v.emissiveMap.isVideoTexture===!0&&xt.getTransfer(v.emissiveMap.colorSpace)===Lt,premultipliedAlpha:v.premultipliedAlpha,doubleSided:v.side===An,flipSided:v.side===Mn,useDepthPacking:v.depthPacking>=0,depthPacking:v.depthPacking||0,index0AttributeName:v.index0AttributeName,extensionClipCullDistance:ze&&v.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(ze&&v.extensions.multiDraw===!0||Qe)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:v.customProgramCacheKey()};return Ct.vertexUv1s=l.has(1),Ct.vertexUv2s=l.has(2),Ct.vertexUv3s=l.has(3),l.clear(),Ct}function A(v){const E=[];if(v.shaderID?E.push(v.shaderID):(E.push(v.customVertexShaderID),E.push(v.customFragmentShaderID)),v.defines!==void 0)for(const B in v.defines)E.push(B),E.push(v.defines[B]);return v.isRawShaderMaterial===!1&&(x(E,v),b(E,v),E.push(s.outputColorSpace)),E.push(v.customProgramCacheKey),E.join()}function x(v,E){v.push(E.precision),v.push(E.outputColorSpace),v.push(E.envMapMode),v.push(E.envMapCubeUVHeight),v.push(E.mapUv),v.push(E.alphaMapUv),v.push(E.lightMapUv),v.push(E.aoMapUv),v.push(E.bumpMapUv),v.push(E.normalMapUv),v.push(E.displacementMapUv),v.push(E.emissiveMapUv),v.push(E.metalnessMapUv),v.push(E.roughnessMapUv),v.push(E.anisotropyMapUv),v.push(E.clearcoatMapUv),v.push(E.clearcoatNormalMapUv),v.push(E.clearcoatRoughnessMapUv),v.push(E.iridescenceMapUv),v.push(E.iridescenceThicknessMapUv),v.push(E.sheenColorMapUv),v.push(E.sheenRoughnessMapUv),v.push(E.specularMapUv),v.push(E.specularColorMapUv),v.push(E.specularIntensityMapUv),v.push(E.transmissionMapUv),v.push(E.thicknessMapUv),v.push(E.combine),v.push(E.fogExp2),v.push(E.sizeAttenuation),v.push(E.morphTargetsCount),v.push(E.morphAttributeCount),v.push(E.numDirLights),v.push(E.numPointLights),v.push(E.numSpotLights),v.push(E.numSpotLightMaps),v.push(E.numHemiLights),v.push(E.numRectAreaLights),v.push(E.numDirLightShadows),v.push(E.numPointLightShadows),v.push(E.numSpotLightShadows),v.push(E.numSpotLightShadowsWithMaps),v.push(E.numLightProbes),v.push(E.shadowMapType),v.push(E.toneMapping),v.push(E.numClippingPlanes),v.push(E.numClipIntersection),v.push(E.depthPacking)}function b(v,E){o.disableAll(),E.supportsVertexTextures&&o.enable(0),E.instancing&&o.enable(1),E.instancingColor&&o.enable(2),E.instancingMorph&&o.enable(3),E.matcap&&o.enable(4),E.envMap&&o.enable(5),E.normalMapObjectSpace&&o.enable(6),E.normalMapTangentSpace&&o.enable(7),E.clearcoat&&o.enable(8),E.iridescence&&o.enable(9),E.alphaTest&&o.enable(10),E.vertexColors&&o.enable(11),E.vertexAlphas&&o.enable(12),E.vertexUv1s&&o.enable(13),E.vertexUv2s&&o.enable(14),E.vertexUv3s&&o.enable(15),E.vertexTangents&&o.enable(16),E.anisotropy&&o.enable(17),E.alphaHash&&o.enable(18),E.batching&&o.enable(19),E.dispersion&&o.enable(20),E.batchingColor&&o.enable(21),E.gradientMap&&o.enable(22),v.push(o.mask),o.disableAll(),E.fog&&o.enable(0),E.useFog&&o.enable(1),E.flatShading&&o.enable(2),E.logarithmicDepthBuffer&&o.enable(3),E.reversedDepthBuffer&&o.enable(4),E.skinning&&o.enable(5),E.morphTargets&&o.enable(6),E.morphNormals&&o.enable(7),E.morphColors&&o.enable(8),E.premultipliedAlpha&&o.enable(9),E.shadowMapEnabled&&o.enable(10),E.doubleSided&&o.enable(11),E.flipSided&&o.enable(12),E.useDepthPacking&&o.enable(13),E.dithering&&o.enable(14),E.transmission&&o.enable(15),E.sheen&&o.enable(16),E.opaque&&o.enable(17),E.pointsUvs&&o.enable(18),E.decodeVideoTexture&&o.enable(19),E.decodeVideoTextureEmissive&&o.enable(20),E.alphaToCoverage&&o.enable(21),v.push(o.mask)}function y(v){const E=p[v.type];let B;if(E){const D=_i[E];B=mo.clone(D.uniforms)}else B=v.uniforms;return B}function _(v,E){let B;for(let D=0,F=h.length;D<F;D++){const N=h[D];if(N.cacheKey===E){B=N,++B.usedTimes;break}}return B===void 0&&(B=new HS(s,E,v,r),h.push(B)),B}function w(v){if(--v.usedTimes===0){const E=h.indexOf(v);h[E]=h[h.length-1],h.pop(),v.destroy()}}function C(v){c.remove(v)}function T(){c.dispose()}return{getParameters:m,getProgramCacheKey:A,getUniforms:y,acquireProgram:_,releaseProgram:w,releaseShaderCache:C,programs:h,dispose:T}}function YS(){let s=new WeakMap;function e(a){return s.has(a)}function t(a){let o=s.get(a);return o===void 0&&(o={},s.set(a,o)),o}function n(a){s.delete(a)}function i(a,o,c){s.get(a)[o]=c}function r(){s=new WeakMap}return{has:e,get:t,remove:n,update:i,dispose:r}}function KS(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function Lp(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function Fp(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function a(u,d,f,p,g,m){let A=s[e];return A===void 0?(A={id:u.id,object:u,geometry:d,material:f,groupOrder:p,renderOrder:u.renderOrder,z:g,group:m},s[e]=A):(A.id=u.id,A.object=u,A.geometry=d,A.material=f,A.groupOrder=p,A.renderOrder=u.renderOrder,A.z=g,A.group=m),e++,A}function o(u,d,f,p,g,m){const A=a(u,d,f,p,g,m);f.transmission>0?n.push(A):f.transparent===!0?i.push(A):t.push(A)}function c(u,d,f,p,g,m){const A=a(u,d,f,p,g,m);f.transmission>0?n.unshift(A):f.transparent===!0?i.unshift(A):t.unshift(A)}function l(u,d){t.length>1&&t.sort(u||KS),n.length>1&&n.sort(d||Lp),i.length>1&&i.sort(d||Lp)}function h(){for(let u=e,d=s.length;u<d;u++){const f=s[u];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:o,unshift:c,finish:h,sort:l}}function JS(){let s=new WeakMap;function e(n,i){const r=s.get(n);let a;return r===void 0?(a=new Fp,s.set(n,[a])):i>=r.length?(a=new Fp,r.push(a)):a=r[i],a}function t(){s=new WeakMap}return{get:e,dispose:t}}function jS(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new S,color:new ae};break;case"SpotLight":t={position:new S,direction:new S,color:new ae,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new S,color:new ae,distance:0,decay:0};break;case"HemisphereLight":t={direction:new S,skyColor:new ae,groundColor:new ae};break;case"RectAreaLight":t={color:new ae,position:new S,halfWidth:new S,halfHeight:new S};break}return s[e.id]=t,t}}}function ZS(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let $S=0;function eC(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function tC(s){const e=new jS,t=ZS(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let l=0;l<9;l++)n.probe.push(new S);const i=new S,r=new Ke,a=new Ke;function o(l){let h=0,u=0,d=0;for(let v=0;v<9;v++)n.probe[v].set(0,0,0);let f=0,p=0,g=0,m=0,A=0,x=0,b=0,y=0,_=0,w=0,C=0;l.sort(eC);for(let v=0,E=l.length;v<E;v++){const B=l[v],D=B.color,F=B.intensity,N=B.distance,G=B.shadow&&B.shadow.map?B.shadow.map.texture:null;if(B.isAmbientLight)h+=D.r*F,u+=D.g*F,d+=D.b*F;else if(B.isLightProbe){for(let k=0;k<9;k++)n.probe[k].addScaledVector(B.sh.coefficients[k],F);C++}else if(B.isDirectionalLight){const k=e.get(B);if(k.color.copy(B.color).multiplyScalar(B.intensity),B.castShadow){const J=B.shadow,U=t.get(B);U.shadowIntensity=J.intensity,U.shadowBias=J.bias,U.shadowNormalBias=J.normalBias,U.shadowRadius=J.radius,U.shadowMapSize=J.mapSize,n.directionalShadow[f]=U,n.directionalShadowMap[f]=G,n.directionalShadowMatrix[f]=B.shadow.matrix,x++}n.directional[f]=k,f++}else if(B.isSpotLight){const k=e.get(B);k.position.setFromMatrixPosition(B.matrixWorld),k.color.copy(D).multiplyScalar(F),k.distance=N,k.coneCos=Math.cos(B.angle),k.penumbraCos=Math.cos(B.angle*(1-B.penumbra)),k.decay=B.decay,n.spot[g]=k;const J=B.shadow;if(B.map&&(n.spotLightMap[_]=B.map,_++,J.updateMatrices(B),B.castShadow&&w++),n.spotLightMatrix[g]=J.matrix,B.castShadow){const U=t.get(B);U.shadowIntensity=J.intensity,U.shadowBias=J.bias,U.shadowNormalBias=J.normalBias,U.shadowRadius=J.radius,U.shadowMapSize=J.mapSize,n.spotShadow[g]=U,n.spotShadowMap[g]=G,y++}g++}else if(B.isRectAreaLight){const k=e.get(B);k.color.copy(D).multiplyScalar(F),k.halfWidth.set(B.width*.5,0,0),k.halfHeight.set(0,B.height*.5,0),n.rectArea[m]=k,m++}else if(B.isPointLight){const k=e.get(B);if(k.color.copy(B.color).multiplyScalar(B.intensity),k.distance=B.distance,k.decay=B.decay,B.castShadow){const J=B.shadow,U=t.get(B);U.shadowIntensity=J.intensity,U.shadowBias=J.bias,U.shadowNormalBias=J.normalBias,U.shadowRadius=J.radius,U.shadowMapSize=J.mapSize,U.shadowCameraNear=J.camera.near,U.shadowCameraFar=J.camera.far,n.pointShadow[p]=U,n.pointShadowMap[p]=G,n.pointShadowMatrix[p]=B.shadow.matrix,b++}n.point[p]=k,p++}else if(B.isHemisphereLight){const k=e.get(B);k.skyColor.copy(B.color).multiplyScalar(F),k.groundColor.copy(B.groundColor).multiplyScalar(F),n.hemi[A]=k,A++}}m>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Pe.LTC_FLOAT_1,n.rectAreaLTC2=Pe.LTC_FLOAT_2):(n.rectAreaLTC1=Pe.LTC_HALF_1,n.rectAreaLTC2=Pe.LTC_HALF_2)),n.ambient[0]=h,n.ambient[1]=u,n.ambient[2]=d;const T=n.hash;(T.directionalLength!==f||T.pointLength!==p||T.spotLength!==g||T.rectAreaLength!==m||T.hemiLength!==A||T.numDirectionalShadows!==x||T.numPointShadows!==b||T.numSpotShadows!==y||T.numSpotMaps!==_||T.numLightProbes!==C)&&(n.directional.length=f,n.spot.length=g,n.rectArea.length=m,n.point.length=p,n.hemi.length=A,n.directionalShadow.length=x,n.directionalShadowMap.length=x,n.pointShadow.length=b,n.pointShadowMap.length=b,n.spotShadow.length=y,n.spotShadowMap.length=y,n.directionalShadowMatrix.length=x,n.pointShadowMatrix.length=b,n.spotLightMatrix.length=y+_-w,n.spotLightMap.length=_,n.numSpotLightShadowsWithMaps=w,n.numLightProbes=C,T.directionalLength=f,T.pointLength=p,T.spotLength=g,T.rectAreaLength=m,T.hemiLength=A,T.numDirectionalShadows=x,T.numPointShadows=b,T.numSpotShadows=y,T.numSpotMaps=_,T.numLightProbes=C,n.version=$S++)}function c(l,h){let u=0,d=0,f=0,p=0,g=0;const m=h.matrixWorldInverse;for(let A=0,x=l.length;A<x;A++){const b=l[A];if(b.isDirectionalLight){const y=n.directional[u];y.direction.setFromMatrixPosition(b.matrixWorld),i.setFromMatrixPosition(b.target.matrixWorld),y.direction.sub(i),y.direction.transformDirection(m),u++}else if(b.isSpotLight){const y=n.spot[f];y.position.setFromMatrixPosition(b.matrixWorld),y.position.applyMatrix4(m),y.direction.setFromMatrixPosition(b.matrixWorld),i.setFromMatrixPosition(b.target.matrixWorld),y.direction.sub(i),y.direction.transformDirection(m),f++}else if(b.isRectAreaLight){const y=n.rectArea[p];y.position.setFromMatrixPosition(b.matrixWorld),y.position.applyMatrix4(m),a.identity(),r.copy(b.matrixWorld),r.premultiply(m),a.extractRotation(r),y.halfWidth.set(b.width*.5,0,0),y.halfHeight.set(0,b.height*.5,0),y.halfWidth.applyMatrix4(a),y.halfHeight.applyMatrix4(a),p++}else if(b.isPointLight){const y=n.point[d];y.position.setFromMatrixPosition(b.matrixWorld),y.position.applyMatrix4(m),d++}else if(b.isHemisphereLight){const y=n.hemi[g];y.direction.setFromMatrixPosition(b.matrixWorld),y.direction.transformDirection(m),g++}}}return{setup:o,setupView:c,state:n}}function Up(s){const e=new tC(s),t=[],n=[];function i(h){l.camera=h,t.length=0,n.length=0}function r(h){t.push(h)}function a(h){n.push(h)}function o(){e.setup(t)}function c(h){e.setupView(t,h)}const l={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:l,setupLights:o,setupLightsView:c,pushLight:r,pushShadow:a}}function nC(s){let e=new WeakMap;function t(i,r=0){const a=e.get(i);let o;return a===void 0?(o=new Up(s),e.set(i,[o])):r>=a.length?(o=new Up(s),a.push(o)):o=a[r],o}function n(){e=new WeakMap}return{get:t,dispose:n}}const iC=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,sC=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function rC(s,e,t){let n=new Sa;const i=new $,r=new $,a=new wt,o=new Ld({depthPacking:Dm}),c=new Fd,l={},h=t.maxTextureSize,u={[wi]:Mn,[Mn]:wi,[An]:An},d=new Yn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new $},radius:{value:4}},vertexShader:iC,fragmentShader:sC}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new $e;p.setAttribute("position",new ht(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new Be(p,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=ld;let A=this.type;this.render=function(w,C,T){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||w.length===0)return;const v=s.getRenderTarget(),E=s.getActiveCubeFace(),B=s.getActiveMipmapLevel(),D=s.state;D.setBlending(ts),D.buffers.depth.getReversed()===!0?D.buffers.color.setClear(0,0,0,0):D.buffers.color.setClear(1,1,1,1),D.buffers.depth.setTest(!0),D.setScissorTest(!1);const F=A!==Li&&this.type===Li,N=A===Li&&this.type!==Li;for(let G=0,k=w.length;G<k;G++){const J=w[G],U=J.shadow;if(U===void 0){console.warn("THREE.WebGLShadowMap:",J,"has no shadow.");continue}if(U.autoUpdate===!1&&U.needsUpdate===!1)continue;i.copy(U.mapSize);const ee=U.getFrameExtents();if(i.multiply(ee),r.copy(U.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(r.x=Math.floor(h/ee.x),i.x=r.x*ee.x,U.mapSize.x=r.x),i.y>h&&(r.y=Math.floor(h/ee.y),i.y=r.y*ee.y,U.mapSize.y=r.y)),U.map===null||F===!0||N===!0){const oe=this.type!==Li?{minFilter:Jt,magFilter:Jt}:{};U.map!==null&&U.map.dispose(),U.map=new Si(i.x,i.y,oe),U.map.texture.name=J.name+".shadowMap",U.camera.updateProjectionMatrix()}s.setRenderTarget(U.map),s.clear();const Ae=U.getViewportCount();for(let oe=0;oe<Ae;oe++){const Me=U.getViewport(oe);a.set(r.x*Me.x,r.y*Me.y,r.x*Me.z,r.y*Me.w),D.viewport(a),U.updateMatrices(J,oe),n=U.getFrustum(),y(C,T,U.camera,J,this.type)}U.isPointLightShadow!==!0&&this.type===Li&&x(U,T),U.needsUpdate=!1}A=this.type,m.needsUpdate=!1,s.setRenderTarget(v,E,B)};function x(w,C){const T=e.update(g);d.defines.VSM_SAMPLES!==w.blurSamples&&(d.defines.VSM_SAMPLES=w.blurSamples,f.defines.VSM_SAMPLES=w.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new Si(i.x,i.y)),d.uniforms.shadow_pass.value=w.map.texture,d.uniforms.resolution.value=w.mapSize,d.uniforms.radius.value=w.radius,s.setRenderTarget(w.mapPass),s.clear(),s.renderBufferDirect(C,null,T,d,g,null),f.uniforms.shadow_pass.value=w.mapPass.texture,f.uniforms.resolution.value=w.mapSize,f.uniforms.radius.value=w.radius,s.setRenderTarget(w.map),s.clear(),s.renderBufferDirect(C,null,T,f,g,null)}function b(w,C,T,v){let E=null;const B=T.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(B!==void 0)E=B;else if(E=T.isPointLight===!0?c:o,s.localClippingEnabled&&C.clipShadows===!0&&Array.isArray(C.clippingPlanes)&&C.clippingPlanes.length!==0||C.displacementMap&&C.displacementScale!==0||C.alphaMap&&C.alphaTest>0||C.map&&C.alphaTest>0||C.alphaToCoverage===!0){const D=E.uuid,F=C.uuid;let N=l[D];N===void 0&&(N={},l[D]=N);let G=N[F];G===void 0&&(G=E.clone(),N[F]=G,C.addEventListener("dispose",_)),E=G}if(E.visible=C.visible,E.wireframe=C.wireframe,v===Li?E.side=C.shadowSide!==null?C.shadowSide:C.side:E.side=C.shadowSide!==null?C.shadowSide:u[C.side],E.alphaMap=C.alphaMap,E.alphaTest=C.alphaToCoverage===!0?.5:C.alphaTest,E.map=C.map,E.clipShadows=C.clipShadows,E.clippingPlanes=C.clippingPlanes,E.clipIntersection=C.clipIntersection,E.displacementMap=C.displacementMap,E.displacementScale=C.displacementScale,E.displacementBias=C.displacementBias,E.wireframeLinewidth=C.wireframeLinewidth,E.linewidth=C.linewidth,T.isPointLight===!0&&E.isMeshDistanceMaterial===!0){const D=s.properties.get(E);D.light=T}return E}function y(w,C,T,v,E){if(w.visible===!1)return;if(w.layers.test(C.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&E===Li)&&(!w.frustumCulled||n.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,w.matrixWorld);const F=e.update(w),N=w.material;if(Array.isArray(N)){const G=F.groups;for(let k=0,J=G.length;k<J;k++){const U=G[k],ee=N[U.materialIndex];if(ee&&ee.visible){const Ae=b(w,ee,v,E);w.onBeforeShadow(s,w,C,T,F,Ae,U),s.renderBufferDirect(T,null,F,Ae,w,U),w.onAfterShadow(s,w,C,T,F,Ae,U)}}}else if(N.visible){const G=b(w,N,v,E);w.onBeforeShadow(s,w,C,T,F,G,null),s.renderBufferDirect(T,null,F,G,w,null),w.onAfterShadow(s,w,C,T,F,G,null)}}const D=w.children;for(let F=0,N=D.length;F<N;F++)y(D[F],C,T,v,E)}function _(w){w.target.removeEventListener("dispose",_);for(const T in l){const v=l[T],E=w.target.uuid;E in v&&(v[E].dispose(),delete v[E])}}}const aC={[rl]:al,[ol]:hl,[cl]:ul,[Ar]:ll,[al]:rl,[hl]:ol,[ul]:cl,[ll]:Ar};function oC(s,e){function t(){let z=!1;const xe=new wt;let Ee=null;const ke=new wt(0,0,0,0);return{setMask:function(be){Ee!==be&&!z&&(s.colorMask(be,be,be,be),Ee=be)},setLocked:function(be){z=be},setClear:function(be,ce,ze,it,Ct){Ct===!0&&(be*=it,ce*=it,ze*=it),xe.set(be,ce,ze,it),ke.equals(xe)===!1&&(s.clearColor(be,ce,ze,it),ke.copy(xe))},reset:function(){z=!1,Ee=null,ke.set(-1,0,0,0)}}}function n(){let z=!1,xe=!1,Ee=null,ke=null,be=null;return{setReversed:function(ce){if(xe!==ce){const ze=e.get("EXT_clip_control");ce?ze.clipControlEXT(ze.LOWER_LEFT_EXT,ze.ZERO_TO_ONE_EXT):ze.clipControlEXT(ze.LOWER_LEFT_EXT,ze.NEGATIVE_ONE_TO_ONE_EXT),xe=ce;const it=be;be=null,this.setClear(it)}},getReversed:function(){return xe},setTest:function(ce){ce?X(s.DEPTH_TEST):Re(s.DEPTH_TEST)},setMask:function(ce){Ee!==ce&&!z&&(s.depthMask(ce),Ee=ce)},setFunc:function(ce){if(xe&&(ce=aC[ce]),ke!==ce){switch(ce){case rl:s.depthFunc(s.NEVER);break;case al:s.depthFunc(s.ALWAYS);break;case ol:s.depthFunc(s.LESS);break;case Ar:s.depthFunc(s.LEQUAL);break;case cl:s.depthFunc(s.EQUAL);break;case ll:s.depthFunc(s.GEQUAL);break;case hl:s.depthFunc(s.GREATER);break;case ul:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}ke=ce}},setLocked:function(ce){z=ce},setClear:function(ce){be!==ce&&(xe&&(ce=1-ce),s.clearDepth(ce),be=ce)},reset:function(){z=!1,Ee=null,ke=null,be=null,xe=!1}}}function i(){let z=!1,xe=null,Ee=null,ke=null,be=null,ce=null,ze=null,it=null,Ct=null;return{setTest:function(Bt){z||(Bt?X(s.STENCIL_TEST):Re(s.STENCIL_TEST))},setMask:function(Bt){xe!==Bt&&!z&&(s.stencilMask(Bt),xe=Bt)},setFunc:function(Bt,Qn,_n){(Ee!==Bt||ke!==Qn||be!==_n)&&(s.stencilFunc(Bt,Qn,_n),Ee=Bt,ke=Qn,be=_n)},setOp:function(Bt,Qn,_n){(ce!==Bt||ze!==Qn||it!==_n)&&(s.stencilOp(Bt,Qn,_n),ce=Bt,ze=Qn,it=_n)},setLocked:function(Bt){z=Bt},setClear:function(Bt){Ct!==Bt&&(s.clearStencil(Bt),Ct=Bt)},reset:function(){z=!1,xe=null,Ee=null,ke=null,be=null,ce=null,ze=null,it=null,Ct=null}}}const r=new t,a=new n,o=new i,c=new WeakMap,l=new WeakMap;let h={},u={},d=new WeakMap,f=[],p=null,g=!1,m=null,A=null,x=null,b=null,y=null,_=null,w=null,C=new ae(0,0,0),T=0,v=!1,E=null,B=null,D=null,F=null,N=null;const G=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let k=!1,J=0;const U=s.getParameter(s.VERSION);U.indexOf("WebGL")!==-1?(J=parseFloat(/^WebGL (\d)/.exec(U)[1]),k=J>=1):U.indexOf("OpenGL ES")!==-1&&(J=parseFloat(/^OpenGL ES (\d)/.exec(U)[1]),k=J>=2);let ee=null,Ae={};const oe=s.getParameter(s.SCISSOR_BOX),Me=s.getParameter(s.VIEWPORT),Ne=new wt().fromArray(oe),st=new wt().fromArray(Me);function Oe(z,xe,Ee,ke){const be=new Uint8Array(4),ce=s.createTexture();s.bindTexture(z,ce),s.texParameteri(z,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(z,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let ze=0;ze<Ee;ze++)z===s.TEXTURE_3D||z===s.TEXTURE_2D_ARRAY?s.texImage3D(xe,0,s.RGBA,1,1,ke,0,s.RGBA,s.UNSIGNED_BYTE,be):s.texImage2D(xe+ze,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,be);return ce}const K={};K[s.TEXTURE_2D]=Oe(s.TEXTURE_2D,s.TEXTURE_2D,1),K[s.TEXTURE_CUBE_MAP]=Oe(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),K[s.TEXTURE_2D_ARRAY]=Oe(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),K[s.TEXTURE_3D]=Oe(s.TEXTURE_3D,s.TEXTURE_3D,1,1),r.setClear(0,0,0,1),a.setClear(1),o.setClear(0),X(s.DEPTH_TEST),a.setFunc(Ar),ie(!1),te(Uu),X(s.CULL_FACE),de(ts);function X(z){h[z]!==!0&&(s.enable(z),h[z]=!0)}function Re(z){h[z]!==!1&&(s.disable(z),h[z]=!1)}function Ue(z,xe){return u[z]!==xe?(s.bindFramebuffer(z,xe),u[z]=xe,z===s.DRAW_FRAMEBUFFER&&(u[s.FRAMEBUFFER]=xe),z===s.FRAMEBUFFER&&(u[s.DRAW_FRAMEBUFFER]=xe),!0):!1}function Qe(z,xe){let Ee=f,ke=!1;if(z){Ee=d.get(xe),Ee===void 0&&(Ee=[],d.set(xe,Ee));const be=z.textures;if(Ee.length!==be.length||Ee[0]!==s.COLOR_ATTACHMENT0){for(let ce=0,ze=be.length;ce<ze;ce++)Ee[ce]=s.COLOR_ATTACHMENT0+ce;Ee.length=be.length,ke=!0}}else Ee[0]!==s.BACK&&(Ee[0]=s.BACK,ke=!0);ke&&s.drawBuffers(Ee)}function at(z){return p!==z?(s.useProgram(z),p=z,!0):!1}const _t={[gs]:s.FUNC_ADD,[tm]:s.FUNC_SUBTRACT,[nm]:s.FUNC_REVERSE_SUBTRACT};_t[im]=s.MIN,_t[sm]=s.MAX;const P={[rm]:s.ZERO,[am]:s.ONE,[om]:s.SRC_COLOR,[il]:s.SRC_ALPHA,[fm]:s.SRC_ALPHA_SATURATE,[um]:s.DST_COLOR,[lm]:s.DST_ALPHA,[cm]:s.ONE_MINUS_SRC_COLOR,[sl]:s.ONE_MINUS_SRC_ALPHA,[dm]:s.ONE_MINUS_DST_COLOR,[hm]:s.ONE_MINUS_DST_ALPHA,[pm]:s.CONSTANT_COLOR,[Am]:s.ONE_MINUS_CONSTANT_COLOR,[mm]:s.CONSTANT_ALPHA,[gm]:s.ONE_MINUS_CONSTANT_ALPHA};function de(z,xe,Ee,ke,be,ce,ze,it,Ct,Bt){if(z===ts){g===!0&&(Re(s.BLEND),g=!1);return}if(g===!1&&(X(s.BLEND),g=!0),z!==em){if(z!==m||Bt!==v){if((A!==gs||y!==gs)&&(s.blendEquation(s.FUNC_ADD),A=gs,y=gs),Bt)switch(z){case cr:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case nl:s.blendFunc(s.ONE,s.ONE);break;case Nu:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case ku:s.blendFuncSeparate(s.DST_COLOR,s.ONE_MINUS_SRC_ALPHA,s.ZERO,s.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",z);break}else switch(z){case cr:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case nl:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE,s.ONE,s.ONE);break;case Nu:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case ku:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",z);break}x=null,b=null,_=null,w=null,C.set(0,0,0),T=0,m=z,v=Bt}return}be=be||xe,ce=ce||Ee,ze=ze||ke,(xe!==A||be!==y)&&(s.blendEquationSeparate(_t[xe],_t[be]),A=xe,y=be),(Ee!==x||ke!==b||ce!==_||ze!==w)&&(s.blendFuncSeparate(P[Ee],P[ke],P[ce],P[ze]),x=Ee,b=ke,_=ce,w=ze),(it.equals(C)===!1||Ct!==T)&&(s.blendColor(it.r,it.g,it.b,Ct),C.copy(it),T=Ct),m=z,v=!1}function ne(z,xe){z.side===An?Re(s.CULL_FACE):X(s.CULL_FACE);let Ee=z.side===Mn;xe&&(Ee=!Ee),ie(Ee),z.blending===cr&&z.transparent===!1?de(ts):de(z.blending,z.blendEquation,z.blendSrc,z.blendDst,z.blendEquationAlpha,z.blendSrcAlpha,z.blendDstAlpha,z.blendColor,z.blendAlpha,z.premultipliedAlpha),a.setFunc(z.depthFunc),a.setTest(z.depthTest),a.setMask(z.depthWrite),r.setMask(z.colorWrite);const ke=z.stencilWrite;o.setTest(ke),ke&&(o.setMask(z.stencilWriteMask),o.setFunc(z.stencilFunc,z.stencilRef,z.stencilFuncMask),o.setOp(z.stencilFail,z.stencilZFail,z.stencilZPass)),le(z.polygonOffset,z.polygonOffsetFactor,z.polygonOffsetUnits),z.alphaToCoverage===!0?X(s.SAMPLE_ALPHA_TO_COVERAGE):Re(s.SAMPLE_ALPHA_TO_COVERAGE)}function ie(z){E!==z&&(z?s.frontFace(s.CW):s.frontFace(s.CCW),E=z)}function te(z){z!==ZA?(X(s.CULL_FACE),z!==B&&(z===Uu?s.cullFace(s.BACK):z===$A?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):Re(s.CULL_FACE),B=z}function _e(z){z!==D&&(k&&s.lineWidth(z),D=z)}function le(z,xe,Ee){z?(X(s.POLYGON_OFFSET_FILL),(F!==xe||N!==Ee)&&(s.polygonOffset(xe,Ee),F=xe,N=Ee)):Re(s.POLYGON_OFFSET_FILL)}function ve(z){z?X(s.SCISSOR_TEST):Re(s.SCISSOR_TEST)}function nt(z){z===void 0&&(z=s.TEXTURE0+G-1),ee!==z&&(s.activeTexture(z),ee=z)}function Ze(z,xe,Ee){Ee===void 0&&(ee===null?Ee=s.TEXTURE0+G-1:Ee=ee);let ke=Ae[Ee];ke===void 0&&(ke={type:void 0,texture:void 0},Ae[Ee]=ke),(ke.type!==z||ke.texture!==xe)&&(ee!==Ee&&(s.activeTexture(Ee),ee=Ee),s.bindTexture(z,xe||K[z]),ke.type=z,ke.texture=xe)}function R(){const z=Ae[ee];z!==void 0&&z.type!==void 0&&(s.bindTexture(z.type,null),z.type=void 0,z.texture=void 0)}function I(){try{s.compressedTexImage2D(...arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function W(){try{s.compressedTexImage3D(...arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Y(){try{s.texSubImage2D(...arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function he(){try{s.texSubImage3D(...arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Z(){try{s.compressedTexSubImage2D(...arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Ge(){try{s.compressedTexSubImage3D(...arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function we(){try{s.texStorage2D(...arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function qe(){try{s.texStorage3D(...arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Ve(){try{s.texImage2D(...arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function ye(){try{s.texImage3D(...arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Fe(z){Ne.equals(z)===!1&&(s.scissor(z.x,z.y,z.z,z.w),Ne.copy(z))}function et(z){st.equals(z)===!1&&(s.viewport(z.x,z.y,z.z,z.w),st.copy(z))}function Ye(z,xe){let Ee=l.get(xe);Ee===void 0&&(Ee=new WeakMap,l.set(xe,Ee));let ke=Ee.get(z);ke===void 0&&(ke=s.getUniformBlockIndex(xe,z.name),Ee.set(z,ke))}function De(z,xe){const ke=l.get(xe).get(z);c.get(xe)!==ke&&(s.uniformBlockBinding(xe,ke,z.__bindingPointIndex),c.set(xe,ke))}function lt(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),a.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),h={},ee=null,Ae={},u={},d=new WeakMap,f=[],p=null,g=!1,m=null,A=null,x=null,b=null,y=null,_=null,w=null,C=new ae(0,0,0),T=0,v=!1,E=null,B=null,D=null,F=null,N=null,Ne.set(0,0,s.canvas.width,s.canvas.height),st.set(0,0,s.canvas.width,s.canvas.height),r.reset(),a.reset(),o.reset()}return{buffers:{color:r,depth:a,stencil:o},enable:X,disable:Re,bindFramebuffer:Ue,drawBuffers:Qe,useProgram:at,setBlending:de,setMaterial:ne,setFlipSided:ie,setCullFace:te,setLineWidth:_e,setPolygonOffset:le,setScissorTest:ve,activeTexture:nt,bindTexture:Ze,unbindTexture:R,compressedTexImage2D:I,compressedTexImage3D:W,texImage2D:Ve,texImage3D:ye,updateUBOMapping:Ye,uniformBlockBinding:De,texStorage2D:we,texStorage3D:qe,texSubImage2D:Y,texSubImage3D:he,compressedTexSubImage2D:Z,compressedTexSubImage3D:Ge,scissor:Fe,viewport:et,reset:lt}}function cC(s,e,t,n,i,r,a){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),l=new $,h=new WeakMap;let u;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(R,I){return f?new OffscreenCanvas(R,I):po("canvas")}function g(R,I,W){let Y=1;const he=Ze(R);if((he.width>W||he.height>W)&&(Y=W/Math.max(he.width,he.height)),Y<1)if(typeof HTMLImageElement<"u"&&R instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&R instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&R instanceof ImageBitmap||typeof VideoFrame<"u"&&R instanceof VideoFrame){const Z=Math.floor(Y*he.width),Ge=Math.floor(Y*he.height);u===void 0&&(u=p(Z,Ge));const we=I?p(Z,Ge):u;return we.width=Z,we.height=Ge,we.getContext("2d").drawImage(R,0,0,Z,Ge),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+he.width+"x"+he.height+") to ("+Z+"x"+Ge+")."),we}else return"data"in R&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+he.width+"x"+he.height+")."),R;return R}function m(R){return R.generateMipmaps}function A(R){s.generateMipmap(R)}function x(R){return R.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:R.isWebGL3DRenderTarget?s.TEXTURE_3D:R.isWebGLArrayRenderTarget||R.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function b(R,I,W,Y,he=!1){if(R!==null){if(s[R]!==void 0)return s[R];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+R+"'")}let Z=I;if(I===s.RED&&(W===s.FLOAT&&(Z=s.R32F),W===s.HALF_FLOAT&&(Z=s.R16F),W===s.UNSIGNED_BYTE&&(Z=s.R8)),I===s.RED_INTEGER&&(W===s.UNSIGNED_BYTE&&(Z=s.R8UI),W===s.UNSIGNED_SHORT&&(Z=s.R16UI),W===s.UNSIGNED_INT&&(Z=s.R32UI),W===s.BYTE&&(Z=s.R8I),W===s.SHORT&&(Z=s.R16I),W===s.INT&&(Z=s.R32I)),I===s.RG&&(W===s.FLOAT&&(Z=s.RG32F),W===s.HALF_FLOAT&&(Z=s.RG16F),W===s.UNSIGNED_BYTE&&(Z=s.RG8)),I===s.RG_INTEGER&&(W===s.UNSIGNED_BYTE&&(Z=s.RG8UI),W===s.UNSIGNED_SHORT&&(Z=s.RG16UI),W===s.UNSIGNED_INT&&(Z=s.RG32UI),W===s.BYTE&&(Z=s.RG8I),W===s.SHORT&&(Z=s.RG16I),W===s.INT&&(Z=s.RG32I)),I===s.RGB_INTEGER&&(W===s.UNSIGNED_BYTE&&(Z=s.RGB8UI),W===s.UNSIGNED_SHORT&&(Z=s.RGB16UI),W===s.UNSIGNED_INT&&(Z=s.RGB32UI),W===s.BYTE&&(Z=s.RGB8I),W===s.SHORT&&(Z=s.RGB16I),W===s.INT&&(Z=s.RGB32I)),I===s.RGBA_INTEGER&&(W===s.UNSIGNED_BYTE&&(Z=s.RGBA8UI),W===s.UNSIGNED_SHORT&&(Z=s.RGBA16UI),W===s.UNSIGNED_INT&&(Z=s.RGBA32UI),W===s.BYTE&&(Z=s.RGBA8I),W===s.SHORT&&(Z=s.RGBA16I),W===s.INT&&(Z=s.RGBA32I)),I===s.RGB&&(W===s.UNSIGNED_INT_5_9_9_9_REV&&(Z=s.RGB9_E5),W===s.UNSIGNED_INT_10F_11F_11F_REV&&(Z=s.R11F_G11F_B10F)),I===s.RGBA){const Ge=he?uo:xt.getTransfer(Y);W===s.FLOAT&&(Z=s.RGBA32F),W===s.HALF_FLOAT&&(Z=s.RGBA16F),W===s.UNSIGNED_BYTE&&(Z=Ge===Lt?s.SRGB8_ALPHA8:s.RGBA8),W===s.UNSIGNED_SHORT_4_4_4_4&&(Z=s.RGBA4),W===s.UNSIGNED_SHORT_5_5_5_1&&(Z=s.RGB5_A1)}return(Z===s.R16F||Z===s.R32F||Z===s.RG16F||Z===s.RG32F||Z===s.RGBA16F||Z===s.RGBA32F)&&e.get("EXT_color_buffer_float"),Z}function y(R,I){let W;return R?I===null||I===rs||I===la?W=s.DEPTH24_STENCIL8:I===rn?W=s.DEPTH32F_STENCIL8:I===ca&&(W=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):I===null||I===rs||I===la?W=s.DEPTH_COMPONENT24:I===rn?W=s.DEPTH_COMPONENT32F:I===ca&&(W=s.DEPTH_COMPONENT16),W}function _(R,I){return m(R)===!0||R.isFramebufferTexture&&R.minFilter!==Jt&&R.minFilter!==Qt?Math.log2(Math.max(I.width,I.height))+1:R.mipmaps!==void 0&&R.mipmaps.length>0?R.mipmaps.length:R.isCompressedTexture&&Array.isArray(R.image)?I.mipmaps.length:1}function w(R){const I=R.target;I.removeEventListener("dispose",w),T(I),I.isVideoTexture&&h.delete(I)}function C(R){const I=R.target;I.removeEventListener("dispose",C),E(I)}function T(R){const I=n.get(R);if(I.__webglInit===void 0)return;const W=R.source,Y=d.get(W);if(Y){const he=Y[I.__cacheKey];he.usedTimes--,he.usedTimes===0&&v(R),Object.keys(Y).length===0&&d.delete(W)}n.remove(R)}function v(R){const I=n.get(R);s.deleteTexture(I.__webglTexture);const W=R.source,Y=d.get(W);delete Y[I.__cacheKey],a.memory.textures--}function E(R){const I=n.get(R);if(R.depthTexture&&(R.depthTexture.dispose(),n.remove(R.depthTexture)),R.isWebGLCubeRenderTarget)for(let Y=0;Y<6;Y++){if(Array.isArray(I.__webglFramebuffer[Y]))for(let he=0;he<I.__webglFramebuffer[Y].length;he++)s.deleteFramebuffer(I.__webglFramebuffer[Y][he]);else s.deleteFramebuffer(I.__webglFramebuffer[Y]);I.__webglDepthbuffer&&s.deleteRenderbuffer(I.__webglDepthbuffer[Y])}else{if(Array.isArray(I.__webglFramebuffer))for(let Y=0;Y<I.__webglFramebuffer.length;Y++)s.deleteFramebuffer(I.__webglFramebuffer[Y]);else s.deleteFramebuffer(I.__webglFramebuffer);if(I.__webglDepthbuffer&&s.deleteRenderbuffer(I.__webglDepthbuffer),I.__webglMultisampledFramebuffer&&s.deleteFramebuffer(I.__webglMultisampledFramebuffer),I.__webglColorRenderbuffer)for(let Y=0;Y<I.__webglColorRenderbuffer.length;Y++)I.__webglColorRenderbuffer[Y]&&s.deleteRenderbuffer(I.__webglColorRenderbuffer[Y]);I.__webglDepthRenderbuffer&&s.deleteRenderbuffer(I.__webglDepthRenderbuffer)}const W=R.textures;for(let Y=0,he=W.length;Y<he;Y++){const Z=n.get(W[Y]);Z.__webglTexture&&(s.deleteTexture(Z.__webglTexture),a.memory.textures--),n.remove(W[Y])}n.remove(R)}let B=0;function D(){B=0}function F(){const R=B;return R>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+R+" texture units while this GPU supports only "+i.maxTextures),B+=1,R}function N(R){const I=[];return I.push(R.wrapS),I.push(R.wrapT),I.push(R.wrapR||0),I.push(R.magFilter),I.push(R.minFilter),I.push(R.anisotropy),I.push(R.internalFormat),I.push(R.format),I.push(R.type),I.push(R.generateMipmaps),I.push(R.premultiplyAlpha),I.push(R.flipY),I.push(R.unpackAlignment),I.push(R.colorSpace),I.join()}function G(R,I){const W=n.get(R);if(R.isVideoTexture&&ve(R),R.isRenderTargetTexture===!1&&R.isExternalTexture!==!0&&R.version>0&&W.__version!==R.version){const Y=R.image;if(Y===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Y.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{K(W,R,I);return}}else R.isExternalTexture&&(W.__webglTexture=R.sourceTexture?R.sourceTexture:null);t.bindTexture(s.TEXTURE_2D,W.__webglTexture,s.TEXTURE0+I)}function k(R,I){const W=n.get(R);if(R.isRenderTargetTexture===!1&&R.version>0&&W.__version!==R.version){K(W,R,I);return}t.bindTexture(s.TEXTURE_2D_ARRAY,W.__webglTexture,s.TEXTURE0+I)}function J(R,I){const W=n.get(R);if(R.isRenderTargetTexture===!1&&R.version>0&&W.__version!==R.version){K(W,R,I);return}t.bindTexture(s.TEXTURE_3D,W.__webglTexture,s.TEXTURE0+I)}function U(R,I){const W=n.get(R);if(R.version>0&&W.__version!==R.version){X(W,R,I);return}t.bindTexture(s.TEXTURE_CUBE_MAP,W.__webglTexture,s.TEXTURE0+I)}const ee={[On]:s.REPEAT,[ni]:s.CLAMP_TO_EDGE,[oa]:s.MIRRORED_REPEAT},Ae={[Jt]:s.NEAREST,[Eo]:s.NEAREST_MIPMAP_NEAREST,[ir]:s.NEAREST_MIPMAP_LINEAR,[Qt]:s.LINEAR,[ia]:s.LINEAR_MIPMAP_NEAREST,[Wn]:s.LINEAR_MIPMAP_LINEAR},oe={[Lm]:s.NEVER,[Qm]:s.ALWAYS,[Fm]:s.LESS,[md]:s.LEQUAL,[Um]:s.EQUAL,[Om]:s.GEQUAL,[Nm]:s.GREATER,[km]:s.NOTEQUAL};function Me(R,I){if(I.type===rn&&e.has("OES_texture_float_linear")===!1&&(I.magFilter===Qt||I.magFilter===ia||I.magFilter===ir||I.magFilter===Wn||I.minFilter===Qt||I.minFilter===ia||I.minFilter===ir||I.minFilter===Wn)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(R,s.TEXTURE_WRAP_S,ee[I.wrapS]),s.texParameteri(R,s.TEXTURE_WRAP_T,ee[I.wrapT]),(R===s.TEXTURE_3D||R===s.TEXTURE_2D_ARRAY)&&s.texParameteri(R,s.TEXTURE_WRAP_R,ee[I.wrapR]),s.texParameteri(R,s.TEXTURE_MAG_FILTER,Ae[I.magFilter]),s.texParameteri(R,s.TEXTURE_MIN_FILTER,Ae[I.minFilter]),I.compareFunction&&(s.texParameteri(R,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(R,s.TEXTURE_COMPARE_FUNC,oe[I.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(I.magFilter===Jt||I.minFilter!==ir&&I.minFilter!==Wn||I.type===rn&&e.has("OES_texture_float_linear")===!1)return;if(I.anisotropy>1||n.get(I).__currentAnisotropy){const W=e.get("EXT_texture_filter_anisotropic");s.texParameterf(R,W.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(I.anisotropy,i.getMaxAnisotropy())),n.get(I).__currentAnisotropy=I.anisotropy}}}function Ne(R,I){let W=!1;R.__webglInit===void 0&&(R.__webglInit=!0,I.addEventListener("dispose",w));const Y=I.source;let he=d.get(Y);he===void 0&&(he={},d.set(Y,he));const Z=N(I);if(Z!==R.__cacheKey){he[Z]===void 0&&(he[Z]={texture:s.createTexture(),usedTimes:0},a.memory.textures++,W=!0),he[Z].usedTimes++;const Ge=he[R.__cacheKey];Ge!==void 0&&(he[R.__cacheKey].usedTimes--,Ge.usedTimes===0&&v(I)),R.__cacheKey=Z,R.__webglTexture=he[Z].texture}return W}function st(R,I,W){return Math.floor(Math.floor(R/W)/I)}function Oe(R,I,W,Y){const Z=R.updateRanges;if(Z.length===0)t.texSubImage2D(s.TEXTURE_2D,0,0,0,I.width,I.height,W,Y,I.data);else{Z.sort((ye,Fe)=>ye.start-Fe.start);let Ge=0;for(let ye=1;ye<Z.length;ye++){const Fe=Z[Ge],et=Z[ye],Ye=Fe.start+Fe.count,De=st(et.start,I.width,4),lt=st(Fe.start,I.width,4);et.start<=Ye+1&&De===lt&&st(et.start+et.count-1,I.width,4)===De?Fe.count=Math.max(Fe.count,et.start+et.count-Fe.start):(++Ge,Z[Ge]=et)}Z.length=Ge+1;const we=s.getParameter(s.UNPACK_ROW_LENGTH),qe=s.getParameter(s.UNPACK_SKIP_PIXELS),Ve=s.getParameter(s.UNPACK_SKIP_ROWS);s.pixelStorei(s.UNPACK_ROW_LENGTH,I.width);for(let ye=0,Fe=Z.length;ye<Fe;ye++){const et=Z[ye],Ye=Math.floor(et.start/4),De=Math.ceil(et.count/4),lt=Ye%I.width,z=Math.floor(Ye/I.width),xe=De,Ee=1;s.pixelStorei(s.UNPACK_SKIP_PIXELS,lt),s.pixelStorei(s.UNPACK_SKIP_ROWS,z),t.texSubImage2D(s.TEXTURE_2D,0,lt,z,xe,Ee,W,Y,I.data)}R.clearUpdateRanges(),s.pixelStorei(s.UNPACK_ROW_LENGTH,we),s.pixelStorei(s.UNPACK_SKIP_PIXELS,qe),s.pixelStorei(s.UNPACK_SKIP_ROWS,Ve)}}function K(R,I,W){let Y=s.TEXTURE_2D;(I.isDataArrayTexture||I.isCompressedArrayTexture)&&(Y=s.TEXTURE_2D_ARRAY),I.isData3DTexture&&(Y=s.TEXTURE_3D);const he=Ne(R,I),Z=I.source;t.bindTexture(Y,R.__webglTexture,s.TEXTURE0+W);const Ge=n.get(Z);if(Z.version!==Ge.__version||he===!0){t.activeTexture(s.TEXTURE0+W);const we=xt.getPrimaries(xt.workingColorSpace),qe=I.colorSpace===Ei?null:xt.getPrimaries(I.colorSpace),Ve=I.colorSpace===Ei||we===qe?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,I.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,I.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,I.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ve);let ye=g(I.image,!1,i.maxTextureSize);ye=nt(I,ye);const Fe=r.convert(I.format,I.colorSpace),et=r.convert(I.type);let Ye=b(I.internalFormat,Fe,et,I.colorSpace,I.isVideoTexture);Me(Y,I);let De;const lt=I.mipmaps,z=I.isVideoTexture!==!0,xe=Ge.__version===void 0||he===!0,Ee=Z.dataReady,ke=_(I,ye);if(I.isDepthTexture)Ye=y(I.format===da,I.type),xe&&(z?t.texStorage2D(s.TEXTURE_2D,1,Ye,ye.width,ye.height):t.texImage2D(s.TEXTURE_2D,0,Ye,ye.width,ye.height,0,Fe,et,null));else if(I.isDataTexture)if(lt.length>0){z&&xe&&t.texStorage2D(s.TEXTURE_2D,ke,Ye,lt[0].width,lt[0].height);for(let be=0,ce=lt.length;be<ce;be++)De=lt[be],z?Ee&&t.texSubImage2D(s.TEXTURE_2D,be,0,0,De.width,De.height,Fe,et,De.data):t.texImage2D(s.TEXTURE_2D,be,Ye,De.width,De.height,0,Fe,et,De.data);I.generateMipmaps=!1}else z?(xe&&t.texStorage2D(s.TEXTURE_2D,ke,Ye,ye.width,ye.height),Ee&&Oe(I,ye,Fe,et)):t.texImage2D(s.TEXTURE_2D,0,Ye,ye.width,ye.height,0,Fe,et,ye.data);else if(I.isCompressedTexture)if(I.isCompressedArrayTexture){z&&xe&&t.texStorage3D(s.TEXTURE_2D_ARRAY,ke,Ye,lt[0].width,lt[0].height,ye.depth);for(let be=0,ce=lt.length;be<ce;be++)if(De=lt[be],I.format!==zt)if(Fe!==null)if(z){if(Ee)if(I.layerUpdates.size>0){const ze=Xu(De.width,De.height,I.format,I.type);for(const it of I.layerUpdates){const Ct=De.data.subarray(it*ze/De.data.BYTES_PER_ELEMENT,(it+1)*ze/De.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,be,0,0,it,De.width,De.height,1,Fe,Ct)}I.clearLayerUpdates()}else t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,be,0,0,0,De.width,De.height,ye.depth,Fe,De.data)}else t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,be,Ye,De.width,De.height,ye.depth,0,De.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else z?Ee&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,be,0,0,0,De.width,De.height,ye.depth,Fe,et,De.data):t.texImage3D(s.TEXTURE_2D_ARRAY,be,Ye,De.width,De.height,ye.depth,0,Fe,et,De.data)}else{z&&xe&&t.texStorage2D(s.TEXTURE_2D,ke,Ye,lt[0].width,lt[0].height);for(let be=0,ce=lt.length;be<ce;be++)De=lt[be],I.format!==zt?Fe!==null?z?Ee&&t.compressedTexSubImage2D(s.TEXTURE_2D,be,0,0,De.width,De.height,Fe,De.data):t.compressedTexImage2D(s.TEXTURE_2D,be,Ye,De.width,De.height,0,De.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):z?Ee&&t.texSubImage2D(s.TEXTURE_2D,be,0,0,De.width,De.height,Fe,et,De.data):t.texImage2D(s.TEXTURE_2D,be,Ye,De.width,De.height,0,Fe,et,De.data)}else if(I.isDataArrayTexture)if(z){if(xe&&t.texStorage3D(s.TEXTURE_2D_ARRAY,ke,Ye,ye.width,ye.height,ye.depth),Ee)if(I.layerUpdates.size>0){const be=Xu(ye.width,ye.height,I.format,I.type);for(const ce of I.layerUpdates){const ze=ye.data.subarray(ce*be/ye.data.BYTES_PER_ELEMENT,(ce+1)*be/ye.data.BYTES_PER_ELEMENT);t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,ce,ye.width,ye.height,1,Fe,et,ze)}I.clearLayerUpdates()}else t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,ye.width,ye.height,ye.depth,Fe,et,ye.data)}else t.texImage3D(s.TEXTURE_2D_ARRAY,0,Ye,ye.width,ye.height,ye.depth,0,Fe,et,ye.data);else if(I.isData3DTexture)z?(xe&&t.texStorage3D(s.TEXTURE_3D,ke,Ye,ye.width,ye.height,ye.depth),Ee&&t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,ye.width,ye.height,ye.depth,Fe,et,ye.data)):t.texImage3D(s.TEXTURE_3D,0,Ye,ye.width,ye.height,ye.depth,0,Fe,et,ye.data);else if(I.isFramebufferTexture){if(xe)if(z)t.texStorage2D(s.TEXTURE_2D,ke,Ye,ye.width,ye.height);else{let be=ye.width,ce=ye.height;for(let ze=0;ze<ke;ze++)t.texImage2D(s.TEXTURE_2D,ze,Ye,be,ce,0,Fe,et,null),be>>=1,ce>>=1}}else if(lt.length>0){if(z&&xe){const be=Ze(lt[0]);t.texStorage2D(s.TEXTURE_2D,ke,Ye,be.width,be.height)}for(let be=0,ce=lt.length;be<ce;be++)De=lt[be],z?Ee&&t.texSubImage2D(s.TEXTURE_2D,be,0,0,Fe,et,De):t.texImage2D(s.TEXTURE_2D,be,Ye,Fe,et,De);I.generateMipmaps=!1}else if(z){if(xe){const be=Ze(ye);t.texStorage2D(s.TEXTURE_2D,ke,Ye,be.width,be.height)}Ee&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Fe,et,ye)}else t.texImage2D(s.TEXTURE_2D,0,Ye,Fe,et,ye);m(I)&&A(Y),Ge.__version=Z.version,I.onUpdate&&I.onUpdate(I)}R.__version=I.version}function X(R,I,W){if(I.image.length!==6)return;const Y=Ne(R,I),he=I.source;t.bindTexture(s.TEXTURE_CUBE_MAP,R.__webglTexture,s.TEXTURE0+W);const Z=n.get(he);if(he.version!==Z.__version||Y===!0){t.activeTexture(s.TEXTURE0+W);const Ge=xt.getPrimaries(xt.workingColorSpace),we=I.colorSpace===Ei?null:xt.getPrimaries(I.colorSpace),qe=I.colorSpace===Ei||Ge===we?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,I.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,I.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,I.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,qe);const Ve=I.isCompressedTexture||I.image[0].isCompressedTexture,ye=I.image[0]&&I.image[0].isDataTexture,Fe=[];for(let ce=0;ce<6;ce++)!Ve&&!ye?Fe[ce]=g(I.image[ce],!0,i.maxCubemapSize):Fe[ce]=ye?I.image[ce].image:I.image[ce],Fe[ce]=nt(I,Fe[ce]);const et=Fe[0],Ye=r.convert(I.format,I.colorSpace),De=r.convert(I.type),lt=b(I.internalFormat,Ye,De,I.colorSpace),z=I.isVideoTexture!==!0,xe=Z.__version===void 0||Y===!0,Ee=he.dataReady;let ke=_(I,et);Me(s.TEXTURE_CUBE_MAP,I);let be;if(Ve){z&&xe&&t.texStorage2D(s.TEXTURE_CUBE_MAP,ke,lt,et.width,et.height);for(let ce=0;ce<6;ce++){be=Fe[ce].mipmaps;for(let ze=0;ze<be.length;ze++){const it=be[ze];I.format!==zt?Ye!==null?z?Ee&&t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ce,ze,0,0,it.width,it.height,Ye,it.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ce,ze,lt,it.width,it.height,0,it.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):z?Ee&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ce,ze,0,0,it.width,it.height,Ye,De,it.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ce,ze,lt,it.width,it.height,0,Ye,De,it.data)}}}else{if(be=I.mipmaps,z&&xe){be.length>0&&ke++;const ce=Ze(Fe[0]);t.texStorage2D(s.TEXTURE_CUBE_MAP,ke,lt,ce.width,ce.height)}for(let ce=0;ce<6;ce++)if(ye){z?Ee&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ce,0,0,0,Fe[ce].width,Fe[ce].height,Ye,De,Fe[ce].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ce,0,lt,Fe[ce].width,Fe[ce].height,0,Ye,De,Fe[ce].data);for(let ze=0;ze<be.length;ze++){const Ct=be[ze].image[ce].image;z?Ee&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ce,ze+1,0,0,Ct.width,Ct.height,Ye,De,Ct.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ce,ze+1,lt,Ct.width,Ct.height,0,Ye,De,Ct.data)}}else{z?Ee&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ce,0,0,0,Ye,De,Fe[ce]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ce,0,lt,Ye,De,Fe[ce]);for(let ze=0;ze<be.length;ze++){const it=be[ze];z?Ee&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ce,ze+1,0,0,Ye,De,it.image[ce]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ce,ze+1,lt,Ye,De,it.image[ce])}}}m(I)&&A(s.TEXTURE_CUBE_MAP),Z.__version=he.version,I.onUpdate&&I.onUpdate(I)}R.__version=I.version}function Re(R,I,W,Y,he,Z){const Ge=r.convert(W.format,W.colorSpace),we=r.convert(W.type),qe=b(W.internalFormat,Ge,we,W.colorSpace),Ve=n.get(I),ye=n.get(W);if(ye.__renderTarget=I,!Ve.__hasExternalTextures){const Fe=Math.max(1,I.width>>Z),et=Math.max(1,I.height>>Z);he===s.TEXTURE_3D||he===s.TEXTURE_2D_ARRAY?t.texImage3D(he,Z,qe,Fe,et,I.depth,0,Ge,we,null):t.texImage2D(he,Z,qe,Fe,et,0,Ge,we,null)}t.bindFramebuffer(s.FRAMEBUFFER,R),le(I)?o.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,Y,he,ye.__webglTexture,0,_e(I)):(he===s.TEXTURE_2D||he>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&he<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,Y,he,ye.__webglTexture,Z),t.bindFramebuffer(s.FRAMEBUFFER,null)}function Ue(R,I,W){if(s.bindRenderbuffer(s.RENDERBUFFER,R),I.depthBuffer){const Y=I.depthTexture,he=Y&&Y.isDepthTexture?Y.type:null,Z=y(I.stencilBuffer,he),Ge=I.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,we=_e(I);le(I)?o.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,we,Z,I.width,I.height):W?s.renderbufferStorageMultisample(s.RENDERBUFFER,we,Z,I.width,I.height):s.renderbufferStorage(s.RENDERBUFFER,Z,I.width,I.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,Ge,s.RENDERBUFFER,R)}else{const Y=I.textures;for(let he=0;he<Y.length;he++){const Z=Y[he],Ge=r.convert(Z.format,Z.colorSpace),we=r.convert(Z.type),qe=b(Z.internalFormat,Ge,we,Z.colorSpace),Ve=_e(I);W&&le(I)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Ve,qe,I.width,I.height):le(I)?o.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Ve,qe,I.width,I.height):s.renderbufferStorage(s.RENDERBUFFER,qe,I.width,I.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function Qe(R,I){if(I&&I.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,R),!(I.depthTexture&&I.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const Y=n.get(I.depthTexture);Y.__renderTarget=I,(!Y.__webglTexture||I.depthTexture.image.width!==I.width||I.depthTexture.image.height!==I.height)&&(I.depthTexture.image.width=I.width,I.depthTexture.image.height=I.height,I.depthTexture.needsUpdate=!0),G(I.depthTexture,0);const he=Y.__webglTexture,Z=_e(I);if(I.depthTexture.format===ua)le(I)?o.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,he,0,Z):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,he,0);else if(I.depthTexture.format===da)le(I)?o.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,he,0,Z):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,he,0);else throw new Error("Unknown depthTexture format")}function at(R){const I=n.get(R),W=R.isWebGLCubeRenderTarget===!0;if(I.__boundDepthTexture!==R.depthTexture){const Y=R.depthTexture;if(I.__depthDisposeCallback&&I.__depthDisposeCallback(),Y){const he=()=>{delete I.__boundDepthTexture,delete I.__depthDisposeCallback,Y.removeEventListener("dispose",he)};Y.addEventListener("dispose",he),I.__depthDisposeCallback=he}I.__boundDepthTexture=Y}if(R.depthTexture&&!I.__autoAllocateDepthBuffer){if(W)throw new Error("target.depthTexture not supported in Cube render targets");const Y=R.texture.mipmaps;Y&&Y.length>0?Qe(I.__webglFramebuffer[0],R):Qe(I.__webglFramebuffer,R)}else if(W){I.__webglDepthbuffer=[];for(let Y=0;Y<6;Y++)if(t.bindFramebuffer(s.FRAMEBUFFER,I.__webglFramebuffer[Y]),I.__webglDepthbuffer[Y]===void 0)I.__webglDepthbuffer[Y]=s.createRenderbuffer(),Ue(I.__webglDepthbuffer[Y],R,!1);else{const he=R.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Z=I.__webglDepthbuffer[Y];s.bindRenderbuffer(s.RENDERBUFFER,Z),s.framebufferRenderbuffer(s.FRAMEBUFFER,he,s.RENDERBUFFER,Z)}}else{const Y=R.texture.mipmaps;if(Y&&Y.length>0?t.bindFramebuffer(s.FRAMEBUFFER,I.__webglFramebuffer[0]):t.bindFramebuffer(s.FRAMEBUFFER,I.__webglFramebuffer),I.__webglDepthbuffer===void 0)I.__webglDepthbuffer=s.createRenderbuffer(),Ue(I.__webglDepthbuffer,R,!1);else{const he=R.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Z=I.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,Z),s.framebufferRenderbuffer(s.FRAMEBUFFER,he,s.RENDERBUFFER,Z)}}t.bindFramebuffer(s.FRAMEBUFFER,null)}function _t(R,I,W){const Y=n.get(R);I!==void 0&&Re(Y.__webglFramebuffer,R,R.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),W!==void 0&&at(R)}function P(R){const I=R.texture,W=n.get(R),Y=n.get(I);R.addEventListener("dispose",C);const he=R.textures,Z=R.isWebGLCubeRenderTarget===!0,Ge=he.length>1;if(Ge||(Y.__webglTexture===void 0&&(Y.__webglTexture=s.createTexture()),Y.__version=I.version,a.memory.textures++),Z){W.__webglFramebuffer=[];for(let we=0;we<6;we++)if(I.mipmaps&&I.mipmaps.length>0){W.__webglFramebuffer[we]=[];for(let qe=0;qe<I.mipmaps.length;qe++)W.__webglFramebuffer[we][qe]=s.createFramebuffer()}else W.__webglFramebuffer[we]=s.createFramebuffer()}else{if(I.mipmaps&&I.mipmaps.length>0){W.__webglFramebuffer=[];for(let we=0;we<I.mipmaps.length;we++)W.__webglFramebuffer[we]=s.createFramebuffer()}else W.__webglFramebuffer=s.createFramebuffer();if(Ge)for(let we=0,qe=he.length;we<qe;we++){const Ve=n.get(he[we]);Ve.__webglTexture===void 0&&(Ve.__webglTexture=s.createTexture(),a.memory.textures++)}if(R.samples>0&&le(R)===!1){W.__webglMultisampledFramebuffer=s.createFramebuffer(),W.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,W.__webglMultisampledFramebuffer);for(let we=0;we<he.length;we++){const qe=he[we];W.__webglColorRenderbuffer[we]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,W.__webglColorRenderbuffer[we]);const Ve=r.convert(qe.format,qe.colorSpace),ye=r.convert(qe.type),Fe=b(qe.internalFormat,Ve,ye,qe.colorSpace,R.isXRRenderTarget===!0),et=_e(R);s.renderbufferStorageMultisample(s.RENDERBUFFER,et,Fe,R.width,R.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+we,s.RENDERBUFFER,W.__webglColorRenderbuffer[we])}s.bindRenderbuffer(s.RENDERBUFFER,null),R.depthBuffer&&(W.__webglDepthRenderbuffer=s.createRenderbuffer(),Ue(W.__webglDepthRenderbuffer,R,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(Z){t.bindTexture(s.TEXTURE_CUBE_MAP,Y.__webglTexture),Me(s.TEXTURE_CUBE_MAP,I);for(let we=0;we<6;we++)if(I.mipmaps&&I.mipmaps.length>0)for(let qe=0;qe<I.mipmaps.length;qe++)Re(W.__webglFramebuffer[we][qe],R,I,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+we,qe);else Re(W.__webglFramebuffer[we],R,I,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+we,0);m(I)&&A(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ge){for(let we=0,qe=he.length;we<qe;we++){const Ve=he[we],ye=n.get(Ve);let Fe=s.TEXTURE_2D;(R.isWebGL3DRenderTarget||R.isWebGLArrayRenderTarget)&&(Fe=R.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(Fe,ye.__webglTexture),Me(Fe,Ve),Re(W.__webglFramebuffer,R,Ve,s.COLOR_ATTACHMENT0+we,Fe,0),m(Ve)&&A(Fe)}t.unbindTexture()}else{let we=s.TEXTURE_2D;if((R.isWebGL3DRenderTarget||R.isWebGLArrayRenderTarget)&&(we=R.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(we,Y.__webglTexture),Me(we,I),I.mipmaps&&I.mipmaps.length>0)for(let qe=0;qe<I.mipmaps.length;qe++)Re(W.__webglFramebuffer[qe],R,I,s.COLOR_ATTACHMENT0,we,qe);else Re(W.__webglFramebuffer,R,I,s.COLOR_ATTACHMENT0,we,0);m(I)&&A(we),t.unbindTexture()}R.depthBuffer&&at(R)}function de(R){const I=R.textures;for(let W=0,Y=I.length;W<Y;W++){const he=I[W];if(m(he)){const Z=x(R),Ge=n.get(he).__webglTexture;t.bindTexture(Z,Ge),A(Z),t.unbindTexture()}}}const ne=[],ie=[];function te(R){if(R.samples>0){if(le(R)===!1){const I=R.textures,W=R.width,Y=R.height;let he=s.COLOR_BUFFER_BIT;const Z=R.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Ge=n.get(R),we=I.length>1;if(we)for(let Ve=0;Ve<I.length;Ve++)t.bindFramebuffer(s.FRAMEBUFFER,Ge.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ve,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,Ge.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ve,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,Ge.__webglMultisampledFramebuffer);const qe=R.texture.mipmaps;qe&&qe.length>0?t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Ge.__webglFramebuffer[0]):t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Ge.__webglFramebuffer);for(let Ve=0;Ve<I.length;Ve++){if(R.resolveDepthBuffer&&(R.depthBuffer&&(he|=s.DEPTH_BUFFER_BIT),R.stencilBuffer&&R.resolveStencilBuffer&&(he|=s.STENCIL_BUFFER_BIT)),we){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Ge.__webglColorRenderbuffer[Ve]);const ye=n.get(I[Ve]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,ye,0)}s.blitFramebuffer(0,0,W,Y,0,0,W,Y,he,s.NEAREST),c===!0&&(ne.length=0,ie.length=0,ne.push(s.COLOR_ATTACHMENT0+Ve),R.depthBuffer&&R.resolveDepthBuffer===!1&&(ne.push(Z),ie.push(Z),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,ie)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,ne))}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),we)for(let Ve=0;Ve<I.length;Ve++){t.bindFramebuffer(s.FRAMEBUFFER,Ge.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ve,s.RENDERBUFFER,Ge.__webglColorRenderbuffer[Ve]);const ye=n.get(I[Ve]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,Ge.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ve,s.TEXTURE_2D,ye,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Ge.__webglMultisampledFramebuffer)}else if(R.depthBuffer&&R.resolveDepthBuffer===!1&&c){const I=R.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[I])}}}function _e(R){return Math.min(i.maxSamples,R.samples)}function le(R){const I=n.get(R);return R.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&I.__useRenderToTexture!==!1}function ve(R){const I=a.render.frame;h.get(R)!==I&&(h.set(R,I),R.update())}function nt(R,I){const W=R.colorSpace,Y=R.format,he=R.type;return R.isCompressedTexture===!0||R.isVideoTexture===!0||W!==Ot&&W!==Ei&&(xt.getTransfer(W)===Lt?(Y!==zt||he!==yt)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",W)),I}function Ze(R){return typeof HTMLImageElement<"u"&&R instanceof HTMLImageElement?(l.width=R.naturalWidth||R.width,l.height=R.naturalHeight||R.height):typeof VideoFrame<"u"&&R instanceof VideoFrame?(l.width=R.displayWidth,l.height=R.displayHeight):(l.width=R.width,l.height=R.height),l}this.allocateTextureUnit=F,this.resetTextureUnits=D,this.setTexture2D=G,this.setTexture2DArray=k,this.setTexture3D=J,this.setTextureCube=U,this.rebindTextures=_t,this.setupRenderTarget=P,this.updateRenderTargetMipmap=de,this.updateMultisampleRenderTarget=te,this.setupDepthRenderbuffer=at,this.setupFrameBufferTexture=Re,this.useMultisampledRTT=le}function Wg(s,e){function t(n,i=Ei){let r;const a=xt.getTransfer(i);if(n===yt)return s.UNSIGNED_BYTE;if(n===Ol)return s.UNSIGNED_SHORT_4_4_4_4;if(n===Ql)return s.UNSIGNED_SHORT_5_5_5_1;if(n===vo)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===wo)return s.UNSIGNED_INT_10F_11F_11F_REV;if(n===ud)return s.BYTE;if(n===dd)return s.SHORT;if(n===ca)return s.UNSIGNED_SHORT;if(n===kl)return s.INT;if(n===rs)return s.UNSIGNED_INT;if(n===rn)return s.FLOAT;if(n===ei)return s.HALF_FLOAT;if(n===fd)return s.ALPHA;if(n===ha)return s.RGB;if(n===zt)return s.RGBA;if(n===ua)return s.DEPTH_COMPONENT;if(n===da)return s.DEPTH_STENCIL;if(n===es)return s.RED;if(n===So)return s.RED_INTEGER;if(n===ys)return s.RG;if(n===Gl)return s.RG_INTEGER;if(n===zl)return s.RGBA_INTEGER;if(n===lr||n===_s||n===hr||n===sa)if(a===Lt)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(n===lr)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===_s)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===hr)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===sa)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(n===lr)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===_s)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===hr)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===sa)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===io||n===dl||n===mr||n===fa)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(n===io)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===dl)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===mr)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===fa)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===so||n===pa||n===Aa)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(n===so||n===pa)return a===Lt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===Aa)return a===Lt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Es||n===fl||n===pl||n===Al||n===ur||n===ml||n===gl||n===yl||n===bl||n===xl||n===_l||n===El||n===vl||n===wl)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(n===Es)return a===Lt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===fl)return a===Lt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===pl)return a===Lt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Al)return a===Lt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===ur)return a===Lt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===ml)return a===Lt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===gl)return a===Lt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===yl)return a===Lt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===bl)return a===Lt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===xl)return a===Lt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===_l)return a===Lt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===El)return a===Lt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===vl)return a===Lt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===wl)return a===Lt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===gr||n===Sl||n===ro)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(n===gr)return a===Lt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Sl)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===ro)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===ao||n===oo||n===co||n===lo)if(r=e.get("EXT_texture_compression_rgtc"),r!==null){if(n===ao)return r.COMPRESSED_RED_RGTC1_EXT;if(n===oo)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===co)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===lo)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===la?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:t}}const lC=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,hC=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class uC{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t){if(this.texture===null){const n=new Md(e.texture);(e.depthNear!==t.depthNear||e.depthFar!==t.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=n}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new Yn({vertexShader:lC,fragmentShader:hC,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new Be(new pi(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class dC extends Gi{constructor(e,t){super();const n=this;let i=null,r=1,a=null,o="local-floor",c=1,l=null,h=null,u=null,d=null,f=null,p=null;const g=typeof XRWebGLBinding<"u",m=new uC,A={},x=t.getContextAttributes();let b=null,y=null;const _=[],w=[],C=new $;let T=null;const v=new $t;v.viewport=new wt;const E=new $t;E.viewport=new wt;const B=[v,E],D=new Dg;let F=null,N=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(K){let X=_[K];return X===void 0&&(X=new Yc,_[K]=X),X.getTargetRaySpace()},this.getControllerGrip=function(K){let X=_[K];return X===void 0&&(X=new Yc,_[K]=X),X.getGripSpace()},this.getHand=function(K){let X=_[K];return X===void 0&&(X=new Yc,_[K]=X),X.getHandSpace()};function G(K){const X=w.indexOf(K.inputSource);if(X===-1)return;const Re=_[X];Re!==void 0&&(Re.update(K.inputSource,K.frame,l||a),Re.dispatchEvent({type:K.type,data:K.inputSource}))}function k(){i.removeEventListener("select",G),i.removeEventListener("selectstart",G),i.removeEventListener("selectend",G),i.removeEventListener("squeeze",G),i.removeEventListener("squeezestart",G),i.removeEventListener("squeezeend",G),i.removeEventListener("end",k),i.removeEventListener("inputsourceschange",J);for(let K=0;K<_.length;K++){const X=w[K];X!==null&&(w[K]=null,_[K].disconnect(X))}F=null,N=null,m.reset();for(const K in A)delete A[K];e.setRenderTarget(b),f=null,d=null,u=null,i=null,y=null,Oe.stop(),n.isPresenting=!1,e.setPixelRatio(T),e.setSize(C.width,C.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(K){r=K,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(K){o=K,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(K){l=K},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u===null&&g&&(u=new XRWebGLBinding(i,t)),u},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(K){if(i=K,i!==null){if(b=e.getRenderTarget(),i.addEventListener("select",G),i.addEventListener("selectstart",G),i.addEventListener("selectend",G),i.addEventListener("squeeze",G),i.addEventListener("squeezestart",G),i.addEventListener("squeezeend",G),i.addEventListener("end",k),i.addEventListener("inputsourceschange",J),x.xrCompatible!==!0&&await t.makeXRCompatible(),T=e.getPixelRatio(),e.getSize(C),g&&"createProjectionLayer"in XRWebGLBinding.prototype){let Re=null,Ue=null,Qe=null;x.depth&&(Qe=x.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Re=x.stencil?da:ua,Ue=x.stencil?la:rs);const at={colorFormat:t.RGBA8,depthFormat:Qe,scaleFactor:r};u=this.getBinding(),d=u.createProjectionLayer(at),i.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),y=new Si(d.textureWidth,d.textureHeight,{format:zt,type:yt,depthTexture:new Cd(d.textureWidth,d.textureHeight,Ue,void 0,void 0,void 0,void 0,void 0,void 0,Re),stencilBuffer:x.stencil,colorSpace:e.outputColorSpace,samples:x.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}else{const Re={antialias:x.antialias,alpha:!0,depth:x.depth,stencil:x.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(i,t,Re),i.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),y=new Si(f.framebufferWidth,f.framebufferHeight,{format:zt,type:yt,colorSpace:e.outputColorSpace,stencilBuffer:x.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}y.isXRRenderTarget=!0,this.setFoveation(c),l=null,a=await i.requestReferenceSpace(o),Oe.setContext(i),Oe.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return m.getDepthTexture()};function J(K){for(let X=0;X<K.removed.length;X++){const Re=K.removed[X],Ue=w.indexOf(Re);Ue>=0&&(w[Ue]=null,_[Ue].disconnect(Re))}for(let X=0;X<K.added.length;X++){const Re=K.added[X];let Ue=w.indexOf(Re);if(Ue===-1){for(let at=0;at<_.length;at++)if(at>=w.length){w.push(Re),Ue=at;break}else if(w[at]===null){w[at]=Re,Ue=at;break}if(Ue===-1)break}const Qe=_[Ue];Qe&&Qe.connect(Re)}}const U=new S,ee=new S;function Ae(K,X,Re){U.setFromMatrixPosition(X.matrixWorld),ee.setFromMatrixPosition(Re.matrixWorld);const Ue=U.distanceTo(ee),Qe=X.projectionMatrix.elements,at=Re.projectionMatrix.elements,_t=Qe[14]/(Qe[10]-1),P=Qe[14]/(Qe[10]+1),de=(Qe[9]+1)/Qe[5],ne=(Qe[9]-1)/Qe[5],ie=(Qe[8]-1)/Qe[0],te=(at[8]+1)/at[0],_e=_t*ie,le=_t*te,ve=Ue/(-ie+te),nt=ve*-ie;if(X.matrixWorld.decompose(K.position,K.quaternion,K.scale),K.translateX(nt),K.translateZ(ve),K.matrixWorld.compose(K.position,K.quaternion,K.scale),K.matrixWorldInverse.copy(K.matrixWorld).invert(),Qe[10]===-1)K.projectionMatrix.copy(X.projectionMatrix),K.projectionMatrixInverse.copy(X.projectionMatrixInverse);else{const Ze=_t+ve,R=P+ve,I=_e-nt,W=le+(Ue-nt),Y=de*P/R*Ze,he=ne*P/R*Ze;K.projectionMatrix.makePerspective(I,W,Y,he,Ze,R),K.projectionMatrixInverse.copy(K.projectionMatrix).invert()}}function oe(K,X){X===null?K.matrixWorld.copy(K.matrix):K.matrixWorld.multiplyMatrices(X.matrixWorld,K.matrix),K.matrixWorldInverse.copy(K.matrixWorld).invert()}this.updateCamera=function(K){if(i===null)return;let X=K.near,Re=K.far;m.texture!==null&&(m.depthNear>0&&(X=m.depthNear),m.depthFar>0&&(Re=m.depthFar)),D.near=E.near=v.near=X,D.far=E.far=v.far=Re,(F!==D.near||N!==D.far)&&(i.updateRenderState({depthNear:D.near,depthFar:D.far}),F=D.near,N=D.far),D.layers.mask=K.layers.mask|6,v.layers.mask=D.layers.mask&3,E.layers.mask=D.layers.mask&5;const Ue=K.parent,Qe=D.cameras;oe(D,Ue);for(let at=0;at<Qe.length;at++)oe(Qe[at],Ue);Qe.length===2?Ae(D,v,E):D.projectionMatrix.copy(v.projectionMatrix),Me(K,D,Ue)};function Me(K,X,Re){Re===null?K.matrix.copy(X.matrixWorld):(K.matrix.copy(Re.matrixWorld),K.matrix.invert(),K.matrix.multiply(X.matrixWorld)),K.matrix.decompose(K.position,K.quaternion,K.scale),K.updateMatrixWorld(!0),K.projectionMatrix.copy(X.projectionMatrix),K.projectionMatrixInverse.copy(X.projectionMatrixInverse),K.isPerspectiveCamera&&(K.fov=ba*2*Math.atan(1/K.projectionMatrix.elements[5]),K.zoom=1)}this.getCamera=function(){return D},this.getFoveation=function(){if(!(d===null&&f===null))return c},this.setFoveation=function(K){c=K,d!==null&&(d.fixedFoveation=K),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=K)},this.hasDepthSensing=function(){return m.texture!==null},this.getDepthSensingMesh=function(){return m.getMesh(D)},this.getCameraTexture=function(K){return A[K]};let Ne=null;function st(K,X){if(h=X.getViewerPose(l||a),p=X,h!==null){const Re=h.views;f!==null&&(e.setRenderTargetFramebuffer(y,f.framebuffer),e.setRenderTarget(y));let Ue=!1;Re.length!==D.cameras.length&&(D.cameras.length=0,Ue=!0);for(let P=0;P<Re.length;P++){const de=Re[P];let ne=null;if(f!==null)ne=f.getViewport(de);else{const te=u.getViewSubImage(d,de);ne=te.viewport,P===0&&(e.setRenderTargetTextures(y,te.colorTexture,te.depthStencilTexture),e.setRenderTarget(y))}let ie=B[P];ie===void 0&&(ie=new $t,ie.layers.enable(P),ie.viewport=new wt,B[P]=ie),ie.matrix.fromArray(de.transform.matrix),ie.matrix.decompose(ie.position,ie.quaternion,ie.scale),ie.projectionMatrix.fromArray(de.projectionMatrix),ie.projectionMatrixInverse.copy(ie.projectionMatrix).invert(),ie.viewport.set(ne.x,ne.y,ne.width,ne.height),P===0&&(D.matrix.copy(ie.matrix),D.matrix.decompose(D.position,D.quaternion,D.scale)),Ue===!0&&D.cameras.push(ie)}const Qe=i.enabledFeatures;if(Qe&&Qe.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&g){u=n.getBinding();const P=u.getDepthInformation(Re[0]);P&&P.isValid&&P.texture&&m.init(P,i.renderState)}if(Qe&&Qe.includes("camera-access")&&g){e.state.unbindTexture(),u=n.getBinding();for(let P=0;P<Re.length;P++){const de=Re[P].camera;if(de){let ne=A[de];ne||(ne=new Md,A[de]=ne);const ie=u.getCameraImage(de);ne.sourceTexture=ie}}}}for(let Re=0;Re<_.length;Re++){const Ue=w[Re],Qe=_[Re];Ue!==null&&Qe!==void 0&&Qe.update(Ue,X,l||a)}Ne&&Ne(K,X),X.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:X}),p=null}const Oe=new Qg;Oe.setAnimationLoop(st),this.setAnimationLoop=function(K){Ne=K},this.dispose=function(){}}}const Ws=new sn,fC=new Ke;function pC(s,e){function t(m,A){m.matrixAutoUpdate===!0&&m.updateMatrix(),A.value.copy(m.matrix)}function n(m,A){A.color.getRGB(m.fogColor.value,Wm(s)),A.isFog?(m.fogNear.value=A.near,m.fogFar.value=A.far):A.isFogExp2&&(m.fogDensity.value=A.density)}function i(m,A,x,b,y){A.isMeshBasicMaterial||A.isMeshLambertMaterial?r(m,A):A.isMeshToonMaterial?(r(m,A),u(m,A)):A.isMeshPhongMaterial?(r(m,A),h(m,A)):A.isMeshStandardMaterial?(r(m,A),d(m,A),A.isMeshPhysicalMaterial&&f(m,A,y)):A.isMeshMatcapMaterial?(r(m,A),p(m,A)):A.isMeshDepthMaterial?r(m,A):A.isMeshDistanceMaterial?(r(m,A),g(m,A)):A.isMeshNormalMaterial?r(m,A):A.isLineBasicMaterial?(a(m,A),A.isLineDashedMaterial&&o(m,A)):A.isPointsMaterial?c(m,A,x,b):A.isSpriteMaterial?l(m,A):A.isShadowMaterial?(m.color.value.copy(A.color),m.opacity.value=A.opacity):A.isShaderMaterial&&(A.uniformsNeedUpdate=!1)}function r(m,A){m.opacity.value=A.opacity,A.color&&m.diffuse.value.copy(A.color),A.emissive&&m.emissive.value.copy(A.emissive).multiplyScalar(A.emissiveIntensity),A.map&&(m.map.value=A.map,t(A.map,m.mapTransform)),A.alphaMap&&(m.alphaMap.value=A.alphaMap,t(A.alphaMap,m.alphaMapTransform)),A.bumpMap&&(m.bumpMap.value=A.bumpMap,t(A.bumpMap,m.bumpMapTransform),m.bumpScale.value=A.bumpScale,A.side===Mn&&(m.bumpScale.value*=-1)),A.normalMap&&(m.normalMap.value=A.normalMap,t(A.normalMap,m.normalMapTransform),m.normalScale.value.copy(A.normalScale),A.side===Mn&&m.normalScale.value.negate()),A.displacementMap&&(m.displacementMap.value=A.displacementMap,t(A.displacementMap,m.displacementMapTransform),m.displacementScale.value=A.displacementScale,m.displacementBias.value=A.displacementBias),A.emissiveMap&&(m.emissiveMap.value=A.emissiveMap,t(A.emissiveMap,m.emissiveMapTransform)),A.specularMap&&(m.specularMap.value=A.specularMap,t(A.specularMap,m.specularMapTransform)),A.alphaTest>0&&(m.alphaTest.value=A.alphaTest);const x=e.get(A),b=x.envMap,y=x.envMapRotation;b&&(m.envMap.value=b,Ws.copy(y),Ws.x*=-1,Ws.y*=-1,Ws.z*=-1,b.isCubeTexture&&b.isRenderTargetTexture===!1&&(Ws.y*=-1,Ws.z*=-1),m.envMapRotation.value.setFromMatrix4(fC.makeRotationFromEuler(Ws)),m.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=A.reflectivity,m.ior.value=A.ior,m.refractionRatio.value=A.refractionRatio),A.lightMap&&(m.lightMap.value=A.lightMap,m.lightMapIntensity.value=A.lightMapIntensity,t(A.lightMap,m.lightMapTransform)),A.aoMap&&(m.aoMap.value=A.aoMap,m.aoMapIntensity.value=A.aoMapIntensity,t(A.aoMap,m.aoMapTransform))}function a(m,A){m.diffuse.value.copy(A.color),m.opacity.value=A.opacity,A.map&&(m.map.value=A.map,t(A.map,m.mapTransform))}function o(m,A){m.dashSize.value=A.dashSize,m.totalSize.value=A.dashSize+A.gapSize,m.scale.value=A.scale}function c(m,A,x,b){m.diffuse.value.copy(A.color),m.opacity.value=A.opacity,m.size.value=A.size*x,m.scale.value=b*.5,A.map&&(m.map.value=A.map,t(A.map,m.uvTransform)),A.alphaMap&&(m.alphaMap.value=A.alphaMap,t(A.alphaMap,m.alphaMapTransform)),A.alphaTest>0&&(m.alphaTest.value=A.alphaTest)}function l(m,A){m.diffuse.value.copy(A.color),m.opacity.value=A.opacity,m.rotation.value=A.rotation,A.map&&(m.map.value=A.map,t(A.map,m.mapTransform)),A.alphaMap&&(m.alphaMap.value=A.alphaMap,t(A.alphaMap,m.alphaMapTransform)),A.alphaTest>0&&(m.alphaTest.value=A.alphaTest)}function h(m,A){m.specular.value.copy(A.specular),m.shininess.value=Math.max(A.shininess,1e-4)}function u(m,A){A.gradientMap&&(m.gradientMap.value=A.gradientMap)}function d(m,A){m.metalness.value=A.metalness,A.metalnessMap&&(m.metalnessMap.value=A.metalnessMap,t(A.metalnessMap,m.metalnessMapTransform)),m.roughness.value=A.roughness,A.roughnessMap&&(m.roughnessMap.value=A.roughnessMap,t(A.roughnessMap,m.roughnessMapTransform)),A.envMap&&(m.envMapIntensity.value=A.envMapIntensity)}function f(m,A,x){m.ior.value=A.ior,A.sheen>0&&(m.sheenColor.value.copy(A.sheenColor).multiplyScalar(A.sheen),m.sheenRoughness.value=A.sheenRoughness,A.sheenColorMap&&(m.sheenColorMap.value=A.sheenColorMap,t(A.sheenColorMap,m.sheenColorMapTransform)),A.sheenRoughnessMap&&(m.sheenRoughnessMap.value=A.sheenRoughnessMap,t(A.sheenRoughnessMap,m.sheenRoughnessMapTransform))),A.clearcoat>0&&(m.clearcoat.value=A.clearcoat,m.clearcoatRoughness.value=A.clearcoatRoughness,A.clearcoatMap&&(m.clearcoatMap.value=A.clearcoatMap,t(A.clearcoatMap,m.clearcoatMapTransform)),A.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=A.clearcoatRoughnessMap,t(A.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),A.clearcoatNormalMap&&(m.clearcoatNormalMap.value=A.clearcoatNormalMap,t(A.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(A.clearcoatNormalScale),A.side===Mn&&m.clearcoatNormalScale.value.negate())),A.dispersion>0&&(m.dispersion.value=A.dispersion),A.iridescence>0&&(m.iridescence.value=A.iridescence,m.iridescenceIOR.value=A.iridescenceIOR,m.iridescenceThicknessMinimum.value=A.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=A.iridescenceThicknessRange[1],A.iridescenceMap&&(m.iridescenceMap.value=A.iridescenceMap,t(A.iridescenceMap,m.iridescenceMapTransform)),A.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=A.iridescenceThicknessMap,t(A.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),A.transmission>0&&(m.transmission.value=A.transmission,m.transmissionSamplerMap.value=x.texture,m.transmissionSamplerSize.value.set(x.width,x.height),A.transmissionMap&&(m.transmissionMap.value=A.transmissionMap,t(A.transmissionMap,m.transmissionMapTransform)),m.thickness.value=A.thickness,A.thicknessMap&&(m.thicknessMap.value=A.thicknessMap,t(A.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=A.attenuationDistance,m.attenuationColor.value.copy(A.attenuationColor)),A.anisotropy>0&&(m.anisotropyVector.value.set(A.anisotropy*Math.cos(A.anisotropyRotation),A.anisotropy*Math.sin(A.anisotropyRotation)),A.anisotropyMap&&(m.anisotropyMap.value=A.anisotropyMap,t(A.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=A.specularIntensity,m.specularColor.value.copy(A.specularColor),A.specularColorMap&&(m.specularColorMap.value=A.specularColorMap,t(A.specularColorMap,m.specularColorMapTransform)),A.specularIntensityMap&&(m.specularIntensityMap.value=A.specularIntensityMap,t(A.specularIntensityMap,m.specularIntensityMapTransform))}function p(m,A){A.matcap&&(m.matcap.value=A.matcap)}function g(m,A){const x=e.get(A).light;m.referencePosition.value.setFromMatrixPosition(x.matrixWorld),m.nearDistance.value=x.shadow.camera.near,m.farDistance.value=x.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function AC(s,e,t,n){let i={},r={},a=[];const o=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function c(x,b){const y=b.program;n.uniformBlockBinding(x,y)}function l(x,b){let y=i[x.id];y===void 0&&(p(x),y=h(x),i[x.id]=y,x.addEventListener("dispose",m));const _=b.program;n.updateUBOMapping(x,_);const w=e.render.frame;r[x.id]!==w&&(d(x),r[x.id]=w)}function h(x){const b=u();x.__bindingPointIndex=b;const y=s.createBuffer(),_=x.__size,w=x.usage;return s.bindBuffer(s.UNIFORM_BUFFER,y),s.bufferData(s.UNIFORM_BUFFER,_,w),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,b,y),y}function u(){for(let x=0;x<o;x++)if(a.indexOf(x)===-1)return a.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(x){const b=i[x.id],y=x.uniforms,_=x.__cache;s.bindBuffer(s.UNIFORM_BUFFER,b);for(let w=0,C=y.length;w<C;w++){const T=Array.isArray(y[w])?y[w]:[y[w]];for(let v=0,E=T.length;v<E;v++){const B=T[v];if(f(B,w,v,_)===!0){const D=B.__offset,F=Array.isArray(B.value)?B.value:[B.value];let N=0;for(let G=0;G<F.length;G++){const k=F[G],J=g(k);typeof k=="number"||typeof k=="boolean"?(B.__data[0]=k,s.bufferSubData(s.UNIFORM_BUFFER,D+N,B.__data)):k.isMatrix3?(B.__data[0]=k.elements[0],B.__data[1]=k.elements[1],B.__data[2]=k.elements[2],B.__data[3]=0,B.__data[4]=k.elements[3],B.__data[5]=k.elements[4],B.__data[6]=k.elements[5],B.__data[7]=0,B.__data[8]=k.elements[6],B.__data[9]=k.elements[7],B.__data[10]=k.elements[8],B.__data[11]=0):(k.toArray(B.__data,N),N+=J.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,D,B.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function f(x,b,y,_){const w=x.value,C=b+"_"+y;if(_[C]===void 0)return typeof w=="number"||typeof w=="boolean"?_[C]=w:_[C]=w.clone(),!0;{const T=_[C];if(typeof w=="number"||typeof w=="boolean"){if(T!==w)return _[C]=w,!0}else if(T.equals(w)===!1)return T.copy(w),!0}return!1}function p(x){const b=x.uniforms;let y=0;const _=16;for(let C=0,T=b.length;C<T;C++){const v=Array.isArray(b[C])?b[C]:[b[C]];for(let E=0,B=v.length;E<B;E++){const D=v[E],F=Array.isArray(D.value)?D.value:[D.value];for(let N=0,G=F.length;N<G;N++){const k=F[N],J=g(k),U=y%_,ee=U%J.boundary,Ae=U+ee;y+=ee,Ae!==0&&_-Ae<J.storage&&(y+=_-Ae),D.__data=new Float32Array(J.storage/Float32Array.BYTES_PER_ELEMENT),D.__offset=y,y+=J.storage}}}const w=y%_;return w>0&&(y+=_-w),x.__size=y,x.__cache={},this}function g(x){const b={boundary:0,storage:0};return typeof x=="number"||typeof x=="boolean"?(b.boundary=4,b.storage=4):x.isVector2?(b.boundary=8,b.storage=8):x.isVector3||x.isColor?(b.boundary=16,b.storage=12):x.isVector4?(b.boundary=16,b.storage=16):x.isMatrix3?(b.boundary=48,b.storage=48):x.isMatrix4?(b.boundary=64,b.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),b}function m(x){const b=x.target;b.removeEventListener("dispose",m);const y=a.indexOf(b.__bindingPointIndex);a.splice(y,1),s.deleteBuffer(i[b.id]),delete i[b.id],delete r[b.id]}function A(){for(const x in i)s.deleteBuffer(i[x]);a=[],i={},r={}}return{bind:c,update:l,dispose:A}}class qg{constructor(e={}){const{canvas:t=zm(),context:n=null,depth:i=!0,stencil:r=!1,alpha:a=!1,antialias:o=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1,reversedDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=n.getContextAttributes().alpha}else f=a;const p=new Uint32Array(4),g=new Int32Array(4);let m=null,A=null;const x=[],b=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=ki,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const y=this;let _=!1;this._outputColorSpace=Tt;let w=0,C=0,T=null,v=-1,E=null;const B=new wt,D=new wt;let F=null;const N=new ae(0);let G=0,k=t.width,J=t.height,U=1,ee=null,Ae=null;const oe=new wt(0,0,k,J),Me=new wt(0,0,k,J);let Ne=!1;const st=new Sa;let Oe=!1,K=!1;const X=new Ke,Re=new S,Ue=new wt,Qe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let at=!1;function _t(){return T===null?U:1}let P=n;function de(M,L){return t.getContext(M,L)}try{const M={alpha:!0,depth:i,stencil:r,antialias:o,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Fl}`),t.addEventListener("webglcontextlost",Ee,!1),t.addEventListener("webglcontextrestored",ke,!1),t.addEventListener("webglcontextcreationerror",be,!1),P===null){const L="webgl2";if(P=de(L,M),P===null)throw de(L)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(M){throw console.error("THREE.WebGLRenderer: "+M.message),M}let ne,ie,te,_e,le,ve,nt,Ze,R,I,W,Y,he,Z,Ge,we,qe,Ve,ye,Fe,et,Ye,De,lt;function z(){ne=new Mw(P),ne.init(),Ye=new Wg(P,ne),ie=new xw(P,ne,e,Ye),te=new oC(P,ne),ie.reversedDepthBuffer&&d&&te.buffers.depth.setReversed(!0),_e=new Bw(P),le=new YS,ve=new cC(P,ne,te,le,ie,Ye,_e),nt=new Ew(y),Ze=new Cw(y),R=new U_(P),De=new yw(P,R),I=new Iw(P,R,_e,De),W=new Dw(P,I,R,_e),ye=new Rw(P,ie,ve),we=new _w(le),Y=new XS(y,nt,Ze,ne,ie,De,we),he=new pC(y,le),Z=new JS,Ge=new nC(ne),Ve=new gw(y,nt,Ze,te,W,f,c),qe=new rC(y,W,ie),lt=new AC(P,_e,ie,te),Fe=new bw(P,ne,_e),et=new Tw(P,ne,_e),_e.programs=Y.programs,y.capabilities=ie,y.extensions=ne,y.properties=le,y.renderLists=Z,y.shadowMap=qe,y.state=te,y.info=_e}z();const xe=new dC(y,P);this.xr=xe,this.getContext=function(){return P},this.getContextAttributes=function(){return P.getContextAttributes()},this.forceContextLoss=function(){const M=ne.get("WEBGL_lose_context");M&&M.loseContext()},this.forceContextRestore=function(){const M=ne.get("WEBGL_lose_context");M&&M.restoreContext()},this.getPixelRatio=function(){return U},this.setPixelRatio=function(M){M!==void 0&&(U=M,this.setSize(k,J,!1))},this.getSize=function(M){return M.set(k,J)},this.setSize=function(M,L,O=!0){if(xe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}k=M,J=L,t.width=Math.floor(M*U),t.height=Math.floor(L*U),O===!0&&(t.style.width=M+"px",t.style.height=L+"px"),this.setViewport(0,0,M,L)},this.getDrawingBufferSize=function(M){return M.set(k*U,J*U).floor()},this.setDrawingBufferSize=function(M,L,O){k=M,J=L,U=O,t.width=Math.floor(M*O),t.height=Math.floor(L*O),this.setViewport(0,0,M,L)},this.getCurrentViewport=function(M){return M.copy(B)},this.getViewport=function(M){return M.copy(oe)},this.setViewport=function(M,L,O,V){M.isVector4?oe.set(M.x,M.y,M.z,M.w):oe.set(M,L,O,V),te.viewport(B.copy(oe).multiplyScalar(U).round())},this.getScissor=function(M){return M.copy(Me)},this.setScissor=function(M,L,O,V){M.isVector4?Me.set(M.x,M.y,M.z,M.w):Me.set(M,L,O,V),te.scissor(D.copy(Me).multiplyScalar(U).round())},this.getScissorTest=function(){return Ne},this.setScissorTest=function(M){te.setScissorTest(Ne=M)},this.setOpaqueSort=function(M){ee=M},this.setTransparentSort=function(M){Ae=M},this.getClearColor=function(M){return M.copy(Ve.getClearColor())},this.setClearColor=function(){Ve.setClearColor(...arguments)},this.getClearAlpha=function(){return Ve.getClearAlpha()},this.setClearAlpha=function(){Ve.setClearAlpha(...arguments)},this.clear=function(M=!0,L=!0,O=!0){let V=0;if(M){let Q=!1;if(T!==null){const j=T.texture.format;Q=j===zl||j===Gl||j===So}if(Q){const j=T.texture.type,se=j===yt||j===rs||j===ca||j===la||j===Ol||j===Ql,me=Ve.getClearColor(),ge=Ve.getClearAlpha(),Se=me.r,Le=me.g,Ce=me.b;se?(p[0]=Se,p[1]=Le,p[2]=Ce,p[3]=ge,P.clearBufferuiv(P.COLOR,0,p)):(g[0]=Se,g[1]=Le,g[2]=Ce,g[3]=ge,P.clearBufferiv(P.COLOR,0,g))}else V|=P.COLOR_BUFFER_BIT}L&&(V|=P.DEPTH_BUFFER_BIT),O&&(V|=P.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),P.clear(V)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ee,!1),t.removeEventListener("webglcontextrestored",ke,!1),t.removeEventListener("webglcontextcreationerror",be,!1),Ve.dispose(),Z.dispose(),Ge.dispose(),le.dispose(),nt.dispose(),Ze.dispose(),W.dispose(),De.dispose(),lt.dispose(),Y.dispose(),xe.dispose(),xe.removeEventListener("sessionstart",_n),xe.removeEventListener("sessionend",Kn),Vt.stop()};function Ee(M){M.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),_=!0}function ke(){console.log("THREE.WebGLRenderer: Context Restored."),_=!1;const M=_e.autoReset,L=qe.enabled,O=qe.autoUpdate,V=qe.needsUpdate,Q=qe.type;z(),_e.autoReset=M,qe.enabled=L,qe.autoUpdate=O,qe.needsUpdate=V,qe.type=Q}function be(M){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",M.statusMessage)}function ce(M){const L=M.target;L.removeEventListener("dispose",ce),ze(L)}function ze(M){it(M),le.remove(M)}function it(M){const L=le.get(M).programs;L!==void 0&&(L.forEach(function(O){Y.releaseProgram(O)}),M.isShaderMaterial&&Y.releaseShaderCache(M))}this.renderBufferDirect=function(M,L,O,V,Q,j){L===null&&(L=Qe);const se=Q.isMesh&&Q.matrixWorld.determinant()<0,me=Je(M,L,O,V,Q);te.setMaterial(V,se);let ge=O.index,Se=1;if(V.wireframe===!0){if(ge=I.getWireframeAttribute(O),ge===void 0)return;Se=2}const Le=O.drawRange,Ce=O.attributes.position;let Ie=Le.start*Se,je=(Le.start+Le.count)*Se;j!==null&&(Ie=Math.max(Ie,j.start*Se),je=Math.min(je,(j.start+j.count)*Se)),ge!==null?(Ie=Math.max(Ie,0),je=Math.min(je,ge.count)):Ce!=null&&(Ie=Math.max(Ie,0),je=Math.min(je,Ce.count));const ut=je-Ie;if(ut<0||ut===1/0)return;De.setup(Q,V,me,O,ge);let ft,pt=Fe;if(ge!==null&&(ft=R.get(ge),pt=et,pt.setIndex(ft)),Q.isMesh)V.wireframe===!0?(te.setLineWidth(V.wireframeLinewidth*_t()),pt.setMode(P.LINES)):pt.setMode(P.TRIANGLES);else if(Q.isLine){let We=V.linewidth;We===void 0&&(We=1),te.setLineWidth(We*_t()),Q.isLineSegments?pt.setMode(P.LINES):Q.isLineLoop?pt.setMode(P.LINE_LOOP):pt.setMode(P.LINE_STRIP)}else Q.isPoints?pt.setMode(P.POINTS):Q.isSprite&&pt.setMode(P.TRIANGLES);if(Q.isBatchedMesh)if(Q._multiDrawInstances!==null)Ao("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),pt.renderMultiDrawInstances(Q._multiDrawStarts,Q._multiDrawCounts,Q._multiDrawCount,Q._multiDrawInstances);else if(ne.get("WEBGL_multi_draw"))pt.renderMultiDraw(Q._multiDrawStarts,Q._multiDrawCounts,Q._multiDrawCount);else{const We=Q._multiDrawStarts,St=Q._multiDrawCounts,ct=Q._multiDrawCount,un=ge?R.get(ge).bytesPerElement:1,ri=le.get(V).currentProgram.getUniforms();for(let en=0;en<ct;en++)ri.setValue(P,"_gl_DrawID",en),pt.render(We[en]/un,St[en])}else if(Q.isInstancedMesh)pt.renderInstances(Ie,ut,Q.count);else if(O.isInstancedBufferGeometry){const We=O._maxInstanceCount!==void 0?O._maxInstanceCount:1/0,St=Math.min(O.instanceCount,We);pt.renderInstances(Ie,ut,St)}else pt.render(Ie,ut)};function Ct(M,L,O){M.transparent===!0&&M.side===An&&M.forceSinglePass===!1?(M.side=Mn,M.needsUpdate=!0,Ti(M,L,O),M.side=wi,M.needsUpdate=!0,Ti(M,L,O),M.side=An):Ti(M,L,O)}this.compile=function(M,L,O=null){O===null&&(O=M),A=Ge.get(O),A.init(L),b.push(A),O.traverseVisible(function(Q){Q.isLight&&Q.layers.test(L.layers)&&(A.pushLight(Q),Q.castShadow&&A.pushShadow(Q))}),M!==O&&M.traverseVisible(function(Q){Q.isLight&&Q.layers.test(L.layers)&&(A.pushLight(Q),Q.castShadow&&A.pushShadow(Q))}),A.setupLights();const V=new Set;return M.traverse(function(Q){if(!(Q.isMesh||Q.isPoints||Q.isLine||Q.isSprite))return;const j=Q.material;if(j)if(Array.isArray(j))for(let se=0;se<j.length;se++){const me=j[se];Ct(me,O,Q),V.add(me)}else Ct(j,O,Q),V.add(j)}),A=b.pop(),V},this.compileAsync=function(M,L,O=null){const V=this.compile(M,L,O);return new Promise(Q=>{function j(){if(V.forEach(function(se){le.get(se).currentProgram.isReady()&&V.delete(se)}),V.size===0){Q(M);return}setTimeout(j,10)}ne.get("KHR_parallel_shader_compile")!==null?j():setTimeout(j,10)})};let Bt=null;function Qn(M){Bt&&Bt(M)}function _n(){Vt.stop()}function Kn(){Vt.start()}const Vt=new Qg;Vt.setAnimationLoop(Qn),typeof self<"u"&&Vt.setContext(self),this.setAnimationLoop=function(M){Bt=M,xe.setAnimationLoop(M),M===null?Vt.stop():Vt.start()},xe.addEventListener("sessionstart",_n),xe.addEventListener("sessionend",Kn),this.render=function(M,L){if(L!==void 0&&L.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(_===!0)return;if(M.matrixWorldAutoUpdate===!0&&M.updateMatrixWorld(),L.parent===null&&L.matrixWorldAutoUpdate===!0&&L.updateMatrixWorld(),xe.enabled===!0&&xe.isPresenting===!0&&(xe.cameraAutoUpdate===!0&&xe.updateCamera(L),L=xe.getCamera()),M.isScene===!0&&M.onBeforeRender(y,M,L,T),A=Ge.get(M,b.length),A.init(L),b.push(A),X.multiplyMatrices(L.projectionMatrix,L.matrixWorldInverse),st.setFromProjectionMatrix(X,ii,L.reversedDepth),K=this.localClippingEnabled,Oe=we.init(this.clippingPlanes,K),m=Z.get(M,x.length),m.init(),x.push(m),xe.enabled===!0&&xe.isPresenting===!0){const j=y.xr.getDepthSensingMesh();j!==null&&Hi(j,L,-1/0,y.sortObjects)}Hi(M,L,0,y.sortObjects),m.finish(),y.sortObjects===!0&&m.sort(ee,Ae),at=xe.enabled===!1||xe.isPresenting===!1||xe.hasDepthSensing()===!1,at&&Ve.addToRenderList(m,M),this.info.render.frame++,Oe===!0&&we.beginShadows();const O=A.state.shadowsArray;qe.render(O,M,L),Oe===!0&&we.endShadows(),this.info.autoReset===!0&&this.info.reset();const V=m.opaque,Q=m.transmissive;if(A.setupLights(),L.isArrayCamera){const j=L.cameras;if(Q.length>0)for(let se=0,me=j.length;se<me;se++){const ge=j[se];os(V,Q,M,ge)}at&&Ve.render(M);for(let se=0,me=j.length;se<me;se++){const ge=j[se];as(m,M,ge,ge.viewport)}}else Q.length>0&&os(V,Q,M,L),at&&Ve.render(M),as(m,M,L);T!==null&&C===0&&(ve.updateMultisampleRenderTarget(T),ve.updateRenderTargetMipmap(T)),M.isScene===!0&&M.onAfterRender(y,M,L),De.resetDefaultState(),v=-1,E=null,b.pop(),b.length>0?(A=b[b.length-1],Oe===!0&&we.setGlobalState(y.clippingPlanes,A.state.camera)):A=null,x.pop(),x.length>0?m=x[x.length-1]:m=null};function Hi(M,L,O,V){if(M.visible===!1)return;if(M.layers.test(L.layers)){if(M.isGroup)O=M.renderOrder;else if(M.isLOD)M.autoUpdate===!0&&M.update(L);else if(M.isLight)A.pushLight(M),M.castShadow&&A.pushShadow(M);else if(M.isSprite){if(!M.frustumCulled||st.intersectsSprite(M)){V&&Ue.setFromMatrixPosition(M.matrixWorld).applyMatrix4(X);const se=W.update(M),me=M.material;me.visible&&m.push(M,se,me,O,Ue.z,null)}}else if((M.isMesh||M.isLine||M.isPoints)&&(!M.frustumCulled||st.intersectsObject(M))){const se=W.update(M),me=M.material;if(V&&(M.boundingSphere!==void 0?(M.boundingSphere===null&&M.computeBoundingSphere(),Ue.copy(M.boundingSphere.center)):(se.boundingSphere===null&&se.computeBoundingSphere(),Ue.copy(se.boundingSphere.center)),Ue.applyMatrix4(M.matrixWorld).applyMatrix4(X)),Array.isArray(me)){const ge=se.groups;for(let Se=0,Le=ge.length;Se<Le;Se++){const Ce=ge[Se],Ie=me[Ce.materialIndex];Ie&&Ie.visible&&m.push(M,se,Ie,O,Ue.z,Ce)}}else me.visible&&m.push(M,se,me,O,Ue.z,null)}}const j=M.children;for(let se=0,me=j.length;se<me;se++)Hi(j[se],L,O,V)}function as(M,L,O,V){const Q=M.opaque,j=M.transmissive,se=M.transparent;A.setupLightsView(O),Oe===!0&&we.setGlobalState(y.clippingPlanes,O),V&&te.viewport(B.copy(V)),Q.length>0&&Vi(Q,L,O),j.length>0&&Vi(j,L,O),se.length>0&&Vi(se,L,O),te.buffers.depth.setTest(!0),te.buffers.depth.setMask(!0),te.buffers.color.setMask(!0),te.setPolygonOffset(!1)}function os(M,L,O,V){if((O.isScene===!0?O.overrideMaterial:null)!==null)return;A.state.transmissionRenderTarget[V.id]===void 0&&(A.state.transmissionRenderTarget[V.id]=new Si(1,1,{generateMipmaps:!0,type:ne.has("EXT_color_buffer_half_float")||ne.has("EXT_color_buffer_float")?ei:yt,minFilter:Wn,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:xt.workingColorSpace}));const j=A.state.transmissionRenderTarget[V.id],se=V.viewport||B;j.setSize(se.z*y.transmissionResolutionScale,se.w*y.transmissionResolutionScale);const me=y.getRenderTarget(),ge=y.getActiveCubeFace(),Se=y.getActiveMipmapLevel();y.setRenderTarget(j),y.getClearColor(N),G=y.getClearAlpha(),G<1&&y.setClearColor(16777215,.5),y.clear(),at&&Ve.render(O);const Le=y.toneMapping;y.toneMapping=ki;const Ce=V.viewport;if(V.viewport!==void 0&&(V.viewport=void 0),A.setupLightsView(V),Oe===!0&&we.setGlobalState(y.clippingPlanes,V),Vi(M,O,V),ve.updateMultisampleRenderTarget(j),ve.updateRenderTargetMipmap(j),ne.has("WEBGL_multisampled_render_to_texture")===!1){let Ie=!1;for(let je=0,ut=L.length;je<ut;je++){const ft=L[je],pt=ft.object,We=ft.geometry,St=ft.material,ct=ft.group;if(St.side===An&&pt.layers.test(V.layers)){const un=St.side;St.side=Mn,St.needsUpdate=!0,cs(pt,O,V,We,St,ct),St.side=un,St.needsUpdate=!0,Ie=!0}}Ie===!0&&(ve.updateMultisampleRenderTarget(j),ve.updateRenderTargetMipmap(j))}y.setRenderTarget(me,ge,Se),y.setClearColor(N,G),Ce!==void 0&&(V.viewport=Ce),y.toneMapping=Le}function Vi(M,L,O){const V=L.isScene===!0?L.overrideMaterial:null;for(let Q=0,j=M.length;Q<j;Q++){const se=M[Q],me=se.object,ge=se.geometry,Se=se.group;let Le=se.material;Le.allowOverride===!0&&V!==null&&(Le=V),me.layers.test(O.layers)&&cs(me,L,O,ge,Le,Se)}}function cs(M,L,O,V,Q,j){M.onBeforeRender(y,L,O,V,Q,j),M.modelViewMatrix.multiplyMatrices(O.matrixWorldInverse,M.matrixWorld),M.normalMatrix.getNormalMatrix(M.modelViewMatrix),Q.onBeforeRender(y,L,O,V,M,j),Q.transparent===!0&&Q.side===An&&Q.forceSinglePass===!1?(Q.side=Mn,Q.needsUpdate=!0,y.renderBufferDirect(O,L,V,Q,M,j),Q.side=wi,Q.needsUpdate=!0,y.renderBufferDirect(O,L,V,Q,M,j),Q.side=An):y.renderBufferDirect(O,L,V,Q,M,j),M.onAfterRender(y,L,O,V,Q,j)}function Ti(M,L,O){L.isScene!==!0&&(L=Qe);const V=le.get(M),Q=A.state.lights,j=A.state.shadowsArray,se=Q.state.version,me=Y.getParameters(M,Q.state,j,L,O),ge=Y.getProgramCacheKey(me);let Se=V.programs;V.environment=M.isMeshStandardMaterial?L.environment:null,V.fog=L.fog,V.envMap=(M.isMeshStandardMaterial?Ze:nt).get(M.envMap||V.environment),V.envMapRotation=V.environment!==null&&M.envMap===null?L.environmentRotation:M.envMapRotation,Se===void 0&&(M.addEventListener("dispose",ce),Se=new Map,V.programs=Se);let Le=Se.get(ge);if(Le!==void 0){if(V.currentProgram===Le&&V.lightsStateVersion===se)return fe(M,me),Le}else me.uniforms=Y.getUniforms(M),M.onBeforeCompile(me,y),Le=Y.acquireProgram(me,ge),Se.set(ge,Le),V.uniforms=me.uniforms;const Ce=V.uniforms;return(!M.isShaderMaterial&&!M.isRawShaderMaterial||M.clipping===!0)&&(Ce.clippingPlanes=we.uniform),fe(M,me),V.needsLights=re(M),V.lightsStateVersion=se,V.needsLights&&(Ce.ambientLightColor.value=Q.state.ambient,Ce.lightProbe.value=Q.state.probe,Ce.directionalLights.value=Q.state.directional,Ce.directionalLightShadows.value=Q.state.directionalShadow,Ce.spotLights.value=Q.state.spot,Ce.spotLightShadows.value=Q.state.spotShadow,Ce.rectAreaLights.value=Q.state.rectArea,Ce.ltc_1.value=Q.state.rectAreaLTC1,Ce.ltc_2.value=Q.state.rectAreaLTC2,Ce.pointLights.value=Q.state.point,Ce.pointLightShadows.value=Q.state.pointShadow,Ce.hemisphereLights.value=Q.state.hemi,Ce.directionalShadowMap.value=Q.state.directionalShadowMap,Ce.directionalShadowMatrix.value=Q.state.directionalShadowMatrix,Ce.spotShadowMap.value=Q.state.spotShadowMap,Ce.spotLightMatrix.value=Q.state.spotLightMatrix,Ce.spotLightMap.value=Q.state.spotLightMap,Ce.pointShadowMap.value=Q.state.pointShadowMap,Ce.pointShadowMatrix.value=Q.state.pointShadowMatrix),V.currentProgram=Le,V.uniformsList=null,Le}function H(M){if(M.uniformsList===null){const L=M.currentProgram.getUniforms();M.uniformsList=Kc.seqWithValue(L.seq,M.uniforms)}return M.uniformsList}function fe(M,L){const O=le.get(M);O.outputColorSpace=L.outputColorSpace,O.batching=L.batching,O.batchingColor=L.batchingColor,O.instancing=L.instancing,O.instancingColor=L.instancingColor,O.instancingMorph=L.instancingMorph,O.skinning=L.skinning,O.morphTargets=L.morphTargets,O.morphNormals=L.morphNormals,O.morphColors=L.morphColors,O.morphTargetsCount=L.morphTargetsCount,O.numClippingPlanes=L.numClippingPlanes,O.numIntersection=L.numClipIntersection,O.vertexAlphas=L.vertexAlphas,O.vertexTangents=L.vertexTangents,O.toneMapping=L.toneMapping}function Je(M,L,O,V,Q){L.isScene!==!0&&(L=Qe),ve.resetTextureUnits();const j=L.fog,se=V.isMeshStandardMaterial?L.environment:null,me=T===null?y.outputColorSpace:T.isXRRenderTarget===!0?T.texture.colorSpace:Ot,ge=(V.isMeshStandardMaterial?Ze:nt).get(V.envMap||se),Se=V.vertexColors===!0&&!!O.attributes.color&&O.attributes.color.itemSize===4,Le=!!O.attributes.tangent&&(!!V.normalMap||V.anisotropy>0),Ce=!!O.morphAttributes.position,Ie=!!O.morphAttributes.normal,je=!!O.morphAttributes.color;let ut=ki;V.toneMapped&&(T===null||T.isXRRenderTarget===!0)&&(ut=y.toneMapping);const ft=O.morphAttributes.position||O.morphAttributes.normal||O.morphAttributes.color,pt=ft!==void 0?ft.length:0,We=le.get(V),St=A.state.lights;if(Oe===!0&&(K===!0||M!==E)){const Pt=M===E&&V.id===v;we.setState(V,M,Pt)}let ct=!1;V.version===We.__version?(We.needsLights&&We.lightsStateVersion!==St.state.version||We.outputColorSpace!==me||Q.isBatchedMesh&&We.batching===!1||!Q.isBatchedMesh&&We.batching===!0||Q.isBatchedMesh&&We.batchingColor===!0&&Q.colorTexture===null||Q.isBatchedMesh&&We.batchingColor===!1&&Q.colorTexture!==null||Q.isInstancedMesh&&We.instancing===!1||!Q.isInstancedMesh&&We.instancing===!0||Q.isSkinnedMesh&&We.skinning===!1||!Q.isSkinnedMesh&&We.skinning===!0||Q.isInstancedMesh&&We.instancingColor===!0&&Q.instanceColor===null||Q.isInstancedMesh&&We.instancingColor===!1&&Q.instanceColor!==null||Q.isInstancedMesh&&We.instancingMorph===!0&&Q.morphTexture===null||Q.isInstancedMesh&&We.instancingMorph===!1&&Q.morphTexture!==null||We.envMap!==ge||V.fog===!0&&We.fog!==j||We.numClippingPlanes!==void 0&&(We.numClippingPlanes!==we.numPlanes||We.numIntersection!==we.numIntersection)||We.vertexAlphas!==Se||We.vertexTangents!==Le||We.morphTargets!==Ce||We.morphNormals!==Ie||We.morphColors!==je||We.toneMapping!==ut||We.morphTargetsCount!==pt)&&(ct=!0):(ct=!0,We.__version=V.version);let un=We.currentProgram;ct===!0&&(un=Ti(V,L,Q));let ri=!1,en=!1,ai=!1;const Mt=un.getUniforms(),qt=We.uniforms;if(te.useProgram(un.program)&&(ri=!0,en=!0,ai=!0),V.id!==v&&(v=V.id,en=!0),ri||E!==M){te.buffers.depth.getReversed()&&M.reversedDepth!==!0&&(M._reversedDepth=!0,M.updateProjectionMatrix()),Mt.setValue(P,"projectionMatrix",M.projectionMatrix),Mt.setValue(P,"viewMatrix",M.matrixWorldInverse);const Ut=Mt.map.cameraPosition;Ut!==void 0&&Ut.setValue(P,Re.setFromMatrixPosition(M.matrixWorld)),ie.logarithmicDepthBuffer&&Mt.setValue(P,"logDepthBufFC",2/(Math.log(M.far+1)/Math.LN2)),(V.isMeshPhongMaterial||V.isMeshToonMaterial||V.isMeshLambertMaterial||V.isMeshBasicMaterial||V.isMeshStandardMaterial||V.isShaderMaterial)&&Mt.setValue(P,"isOrthographic",M.isOrthographicCamera===!0),E!==M&&(E=M,en=!0,ai=!0)}if(Q.isSkinnedMesh){Mt.setOptional(P,Q,"bindMatrix"),Mt.setOptional(P,Q,"bindMatrixInverse");const Pt=Q.skeleton;Pt&&(Pt.boneTexture===null&&Pt.computeBoneTexture(),Mt.setValue(P,"boneTexture",Pt.boneTexture,ve))}Q.isBatchedMesh&&(Mt.setOptional(P,Q,"batchingTexture"),Mt.setValue(P,"batchingTexture",Q._matricesTexture,ve),Mt.setOptional(P,Q,"batchingIdTexture"),Mt.setValue(P,"batchingIdTexture",Q._indirectTexture,ve),Mt.setOptional(P,Q,"batchingColorTexture"),Q._colorsTexture!==null&&Mt.setValue(P,"batchingColorTexture",Q._colorsTexture,ve));const tn=O.morphAttributes;if((tn.position!==void 0||tn.normal!==void 0||tn.color!==void 0)&&ye.update(Q,O,un),(en||We.receiveShadow!==Q.receiveShadow)&&(We.receiveShadow=Q.receiveShadow,Mt.setValue(P,"receiveShadow",Q.receiveShadow)),V.isMeshGouraudMaterial&&V.envMap!==null&&(qt.envMap.value=ge,qt.flipEnvMap.value=ge.isCubeTexture&&ge.isRenderTargetTexture===!1?-1:1),V.isMeshStandardMaterial&&V.envMap===null&&L.environment!==null&&(qt.envMapIntensity.value=L.environmentIntensity),en&&(Mt.setValue(P,"toneMappingExposure",y.toneMappingExposure),We.needsLights&&q(qt,ai),j&&V.fog===!0&&he.refreshFogUniforms(qt,j),he.refreshMaterialUniforms(qt,V,U,J,A.state.transmissionRenderTarget[M.id]),Kc.upload(P,H(We),qt,ve)),V.isShaderMaterial&&V.uniformsNeedUpdate===!0&&(Kc.upload(P,H(We),qt,ve),V.uniformsNeedUpdate=!1),V.isSpriteMaterial&&Mt.setValue(P,"center",Q.center),Mt.setValue(P,"modelViewMatrix",Q.modelViewMatrix),Mt.setValue(P,"normalMatrix",Q.normalMatrix),Mt.setValue(P,"modelMatrix",Q.matrixWorld),V.isShaderMaterial||V.isRawShaderMaterial){const Pt=V.uniformsGroups;for(let Ut=0,oi=Pt.length;Ut<oi;Ut++){const Jn=Pt[Ut];lt.update(Jn,un),lt.bind(Jn,un)}}return un}function q(M,L){M.ambientLightColor.needsUpdate=L,M.lightProbe.needsUpdate=L,M.directionalLights.needsUpdate=L,M.directionalLightShadows.needsUpdate=L,M.pointLights.needsUpdate=L,M.pointLightShadows.needsUpdate=L,M.spotLights.needsUpdate=L,M.spotLightShadows.needsUpdate=L,M.rectAreaLights.needsUpdate=L,M.hemisphereLights.needsUpdate=L}function re(M){return M.isMeshLambertMaterial||M.isMeshToonMaterial||M.isMeshPhongMaterial||M.isMeshStandardMaterial||M.isShadowMaterial||M.isShaderMaterial&&M.lights===!0}this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return C},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(M,L,O){const V=le.get(M);V.__autoAllocateDepthBuffer=M.resolveDepthBuffer===!1,V.__autoAllocateDepthBuffer===!1&&(V.__useRenderToTexture=!1),le.get(M.texture).__webglTexture=L,le.get(M.depthTexture).__webglTexture=V.__autoAllocateDepthBuffer?void 0:O,V.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(M,L){const O=le.get(M);O.__webglFramebuffer=L,O.__useDefaultFramebuffer=L===void 0};const pe=P.createFramebuffer();this.setRenderTarget=function(M,L=0,O=0){T=M,w=L,C=O;let V=!0,Q=null,j=!1,se=!1;if(M){const ge=le.get(M);if(ge.__useDefaultFramebuffer!==void 0)te.bindFramebuffer(P.FRAMEBUFFER,null),V=!1;else if(ge.__webglFramebuffer===void 0)ve.setupRenderTarget(M);else if(ge.__hasExternalTextures)ve.rebindTextures(M,le.get(M.texture).__webglTexture,le.get(M.depthTexture).__webglTexture);else if(M.depthBuffer){const Ce=M.depthTexture;if(ge.__boundDepthTexture!==Ce){if(Ce!==null&&le.has(Ce)&&(M.width!==Ce.image.width||M.height!==Ce.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");ve.setupDepthRenderbuffer(M)}}const Se=M.texture;(Se.isData3DTexture||Se.isDataArrayTexture||Se.isCompressedArrayTexture)&&(se=!0);const Le=le.get(M).__webglFramebuffer;M.isWebGLCubeRenderTarget?(Array.isArray(Le[L])?Q=Le[L][O]:Q=Le[L],j=!0):M.samples>0&&ve.useMultisampledRTT(M)===!1?Q=le.get(M).__webglMultisampledFramebuffer:Array.isArray(Le)?Q=Le[O]:Q=Le,B.copy(M.viewport),D.copy(M.scissor),F=M.scissorTest}else B.copy(oe).multiplyScalar(U).floor(),D.copy(Me).multiplyScalar(U).floor(),F=Ne;if(O!==0&&(Q=pe),te.bindFramebuffer(P.FRAMEBUFFER,Q)&&V&&te.drawBuffers(M,Q),te.viewport(B),te.scissor(D),te.setScissorTest(F),j){const ge=le.get(M.texture);P.framebufferTexture2D(P.FRAMEBUFFER,P.COLOR_ATTACHMENT0,P.TEXTURE_CUBE_MAP_POSITIVE_X+L,ge.__webglTexture,O)}else if(se){const ge=L;for(let Se=0;Se<M.textures.length;Se++){const Le=le.get(M.textures[Se]);P.framebufferTextureLayer(P.FRAMEBUFFER,P.COLOR_ATTACHMENT0+Se,Le.__webglTexture,O,ge)}}else if(M!==null&&O!==0){const ge=le.get(M.texture);P.framebufferTexture2D(P.FRAMEBUFFER,P.COLOR_ATTACHMENT0,P.TEXTURE_2D,ge.__webglTexture,O)}v=-1},this.readRenderTargetPixels=function(M,L,O,V,Q,j,se,me=0){if(!(M&&M.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ge=le.get(M).__webglFramebuffer;if(M.isWebGLCubeRenderTarget&&se!==void 0&&(ge=ge[se]),ge){te.bindFramebuffer(P.FRAMEBUFFER,ge);try{const Se=M.textures[me],Le=Se.format,Ce=Se.type;if(!ie.textureFormatReadable(Le)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!ie.textureTypeReadable(Ce)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}L>=0&&L<=M.width-V&&O>=0&&O<=M.height-Q&&(M.textures.length>1&&P.readBuffer(P.COLOR_ATTACHMENT0+me),P.readPixels(L,O,V,Q,Ye.convert(Le),Ye.convert(Ce),j))}finally{const Se=T!==null?le.get(T).__webglFramebuffer:null;te.bindFramebuffer(P.FRAMEBUFFER,Se)}}},this.readRenderTargetPixelsAsync=async function(M,L,O,V,Q,j,se,me=0){if(!(M&&M.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let ge=le.get(M).__webglFramebuffer;if(M.isWebGLCubeRenderTarget&&se!==void 0&&(ge=ge[se]),ge)if(L>=0&&L<=M.width-V&&O>=0&&O<=M.height-Q){te.bindFramebuffer(P.FRAMEBUFFER,ge);const Se=M.textures[me],Le=Se.format,Ce=Se.type;if(!ie.textureFormatReadable(Le))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!ie.textureTypeReadable(Ce))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const Ie=P.createBuffer();P.bindBuffer(P.PIXEL_PACK_BUFFER,Ie),P.bufferData(P.PIXEL_PACK_BUFFER,j.byteLength,P.STREAM_READ),M.textures.length>1&&P.readBuffer(P.COLOR_ATTACHMENT0+me),P.readPixels(L,O,V,Q,Ye.convert(Le),Ye.convert(Ce),0);const je=T!==null?le.get(T).__webglFramebuffer:null;te.bindFramebuffer(P.FRAMEBUFFER,je);const ut=P.fenceSync(P.SYNC_GPU_COMMANDS_COMPLETE,0);return P.flush(),await lb(P,ut,4),P.bindBuffer(P.PIXEL_PACK_BUFFER,Ie),P.getBufferSubData(P.PIXEL_PACK_BUFFER,0,j),P.deleteBuffer(Ie),P.deleteSync(ut),j}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(M,L=null,O=0){const V=Math.pow(2,-O),Q=Math.floor(M.image.width*V),j=Math.floor(M.image.height*V),se=L!==null?L.x:0,me=L!==null?L.y:0;ve.setTexture2D(M,0),P.copyTexSubImage2D(P.TEXTURE_2D,O,0,0,se,me,Q,j),te.unbindTexture()};const Te=P.createFramebuffer(),He=P.createFramebuffer();this.copyTextureToTexture=function(M,L,O=null,V=null,Q=0,j=null){j===null&&(Q!==0?(Ao("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),j=Q,Q=0):j=0);let se,me,ge,Se,Le,Ce,Ie,je,ut;const ft=M.isCompressedTexture?M.mipmaps[j]:M.image;if(O!==null)se=O.max.x-O.min.x,me=O.max.y-O.min.y,ge=O.isBox3?O.max.z-O.min.z:1,Se=O.min.x,Le=O.min.y,Ce=O.isBox3?O.min.z:0;else{const tn=Math.pow(2,-Q);se=Math.floor(ft.width*tn),me=Math.floor(ft.height*tn),M.isDataArrayTexture?ge=ft.depth:M.isData3DTexture?ge=Math.floor(ft.depth*tn):ge=1,Se=0,Le=0,Ce=0}V!==null?(Ie=V.x,je=V.y,ut=V.z):(Ie=0,je=0,ut=0);const pt=Ye.convert(L.format),We=Ye.convert(L.type);let St;L.isData3DTexture?(ve.setTexture3D(L,0),St=P.TEXTURE_3D):L.isDataArrayTexture||L.isCompressedArrayTexture?(ve.setTexture2DArray(L,0),St=P.TEXTURE_2D_ARRAY):(ve.setTexture2D(L,0),St=P.TEXTURE_2D),P.pixelStorei(P.UNPACK_FLIP_Y_WEBGL,L.flipY),P.pixelStorei(P.UNPACK_PREMULTIPLY_ALPHA_WEBGL,L.premultiplyAlpha),P.pixelStorei(P.UNPACK_ALIGNMENT,L.unpackAlignment);const ct=P.getParameter(P.UNPACK_ROW_LENGTH),un=P.getParameter(P.UNPACK_IMAGE_HEIGHT),ri=P.getParameter(P.UNPACK_SKIP_PIXELS),en=P.getParameter(P.UNPACK_SKIP_ROWS),ai=P.getParameter(P.UNPACK_SKIP_IMAGES);P.pixelStorei(P.UNPACK_ROW_LENGTH,ft.width),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,ft.height),P.pixelStorei(P.UNPACK_SKIP_PIXELS,Se),P.pixelStorei(P.UNPACK_SKIP_ROWS,Le),P.pixelStorei(P.UNPACK_SKIP_IMAGES,Ce);const Mt=M.isDataArrayTexture||M.isData3DTexture,qt=L.isDataArrayTexture||L.isData3DTexture;if(M.isDepthTexture){const tn=le.get(M),Pt=le.get(L),Ut=le.get(tn.__renderTarget),oi=le.get(Pt.__renderTarget);te.bindFramebuffer(P.READ_FRAMEBUFFER,Ut.__webglFramebuffer),te.bindFramebuffer(P.DRAW_FRAMEBUFFER,oi.__webglFramebuffer);for(let Jn=0;Jn<ge;Jn++)Mt&&(P.framebufferTextureLayer(P.READ_FRAMEBUFFER,P.COLOR_ATTACHMENT0,le.get(M).__webglTexture,Q,Ce+Jn),P.framebufferTextureLayer(P.DRAW_FRAMEBUFFER,P.COLOR_ATTACHMENT0,le.get(L).__webglTexture,j,ut+Jn)),P.blitFramebuffer(Se,Le,se,me,Ie,je,se,me,P.DEPTH_BUFFER_BIT,P.NEAREST);te.bindFramebuffer(P.READ_FRAMEBUFFER,null),te.bindFramebuffer(P.DRAW_FRAMEBUFFER,null)}else if(Q!==0||M.isRenderTargetTexture||le.has(M)){const tn=le.get(M),Pt=le.get(L);te.bindFramebuffer(P.READ_FRAMEBUFFER,Te),te.bindFramebuffer(P.DRAW_FRAMEBUFFER,He);for(let Ut=0;Ut<ge;Ut++)Mt?P.framebufferTextureLayer(P.READ_FRAMEBUFFER,P.COLOR_ATTACHMENT0,tn.__webglTexture,Q,Ce+Ut):P.framebufferTexture2D(P.READ_FRAMEBUFFER,P.COLOR_ATTACHMENT0,P.TEXTURE_2D,tn.__webglTexture,Q),qt?P.framebufferTextureLayer(P.DRAW_FRAMEBUFFER,P.COLOR_ATTACHMENT0,Pt.__webglTexture,j,ut+Ut):P.framebufferTexture2D(P.DRAW_FRAMEBUFFER,P.COLOR_ATTACHMENT0,P.TEXTURE_2D,Pt.__webglTexture,j),Q!==0?P.blitFramebuffer(Se,Le,se,me,Ie,je,se,me,P.COLOR_BUFFER_BIT,P.NEAREST):qt?P.copyTexSubImage3D(St,j,Ie,je,ut+Ut,Se,Le,se,me):P.copyTexSubImage2D(St,j,Ie,je,Se,Le,se,me);te.bindFramebuffer(P.READ_FRAMEBUFFER,null),te.bindFramebuffer(P.DRAW_FRAMEBUFFER,null)}else qt?M.isDataTexture||M.isData3DTexture?P.texSubImage3D(St,j,Ie,je,ut,se,me,ge,pt,We,ft.data):L.isCompressedArrayTexture?P.compressedTexSubImage3D(St,j,Ie,je,ut,se,me,ge,pt,ft.data):P.texSubImage3D(St,j,Ie,je,ut,se,me,ge,pt,We,ft):M.isDataTexture?P.texSubImage2D(P.TEXTURE_2D,j,Ie,je,se,me,pt,We,ft.data):M.isCompressedTexture?P.compressedTexSubImage2D(P.TEXTURE_2D,j,Ie,je,ft.width,ft.height,pt,ft.data):P.texSubImage2D(P.TEXTURE_2D,j,Ie,je,se,me,pt,We,ft);P.pixelStorei(P.UNPACK_ROW_LENGTH,ct),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,un),P.pixelStorei(P.UNPACK_SKIP_PIXELS,ri),P.pixelStorei(P.UNPACK_SKIP_ROWS,en),P.pixelStorei(P.UNPACK_SKIP_IMAGES,ai),j===0&&L.generateMipmaps&&P.generateMipmap(St),te.unbindTexture()},this.initRenderTarget=function(M){le.get(M).__webglFramebuffer===void 0&&ve.setupRenderTarget(M)},this.initTexture=function(M){M.isCubeTexture?ve.setTextureCube(M,0):M.isData3DTexture?ve.setTexture3D(M,0):M.isDataArrayTexture||M.isCompressedArrayTexture?ve.setTexture2DArray(M,0):ve.setTexture2D(M,0),te.unbindTexture()},this.resetState=function(){w=0,C=0,T=null,te.reset(),De.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ii}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=xt._getDrawingBufferColorSpace(e),t.unpackColorSpace=xt._getUnpackColorSpace()}}const mC=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Ul,AddEquation:gs,AddOperation:bm,AdditiveAnimationBlendMode:pd,AdditiveBlending:nl,AgXToneMapping:wm,AlphaFormat:fd,AlwaysCompare:Qm,AlwaysDepth:al,AlwaysStencilFunc:Qu,AmbientLight:Sg,AnimationAction:Ug,AnimationClip:Ea,AnimationLoader:Px,AnimationMixer:Ng,AnimationObjectGroup:t_,AnimationUtils:Tx,ArcCurve:ng,ArrayCamera:Dg,ArrowHelper:M_,AttachedBindMode:Ou,Audio:Wd,AudioAnalyser:Wx,AudioContext:Hd,AudioListener:Pg,AudioLoader:Rg,AxesHelper:I_,BackSide:Mn,BasicDepthPacking:Rm,BasicShadowMap:fy,BatchedMesh:Jm,Bone:Yl,BooleanKeyframeTrack:Er,Box2:d_,Box3:Yt,Box3Helper:S_,BoxGeometry:Ft,BoxHelper:w_,BufferAttribute:ht,BufferGeometry:$e,BufferGeometryLoader:Tg,ByteType:ud,Cache:Ni,Camera:ql,CameraHelper:v_,CanvasTexture:eg,CapsuleGeometry:Do,CatmullRomCurve3:Po,CineonToneMapping:Em,CircleGeometry:jl,ClampToEdgeWrapping:ni,Clock:Vd,Color:ae,ColorKeyframeTrack:kd,ColorManagement:xt,CompressedArrayTexture:Zm,CompressedCubeTexture:$m,CompressedTexture:Ca,CompressedTextureLoader:Lx,ConeGeometry:zi,ConstantAlphaFactor:mm,ConstantColorFactor:pm,Controls:B_,CubeCamera:qm,CubeReflectionMapping:ss,CubeRefractionMapping:Ss,CubeTexture:Mo,CubeTextureLoader:Fx,CubeUVReflectionMapping:va,CubicBezierCurve:Td,CubicBezierCurve3:ig,CubicInterpolant:_g,CullFaceBack:Uu,CullFaceFront:$A,CullFaceFrontBack:dy,CullFaceNone:ZA,Curve:Mi,CurvePath:rg,CustomBlending:em,CustomToneMapping:vm,CylinderGeometry:Dt,Cylindrical:u_,Data3DTexture:Co,DataArrayTexture:Vl,DataTexture:qn,DataTextureLoader:Ux,DataUtils:wb,DecrementStencilOp:wy,DecrementWrapStencilOp:Cy,DefaultLoadingManager:wg,DepthFormat:ua,DepthStencilFormat:da,DepthTexture:Cd,DetachedBindMode:Cm,DirectionalLight:Oo,DirectionalLightHelper:E_,DiscreteInterpolant:Eg,DodecahedronGeometry:Zl,DoubleSide:An,DstAlphaFactor:lm,DstColorFactor:um,DynamicCopyUsage:Qy,DynamicDrawUsage:li,DynamicReadUsage:Ny,EdgesGeometry:tg,EllipseCurve:$l,EqualCompare:Um,EqualDepth:cl,EqualStencilFunc:By,EquirectangularReflectionMapping:to,EquirectangularRefractionMapping:no,Euler:sn,EventDispatcher:Gi,ExternalTexture:Md,ExtrudeGeometry:eh,FileLoader:In,Float16BufferAttribute:Rb,Float32BufferAttribute:Xe,FloatType:rn,Fog:Io,FogExp2:Xl,FramebufferTexture:Zb,FrontSide:wi,Frustum:Sa,FrustumArray:Kl,GLBufferAttribute:o_,GLSL1:zy,GLSL3:Gu,GreaterCompare:Nm,GreaterDepth:hl,GreaterEqualCompare:Om,GreaterEqualDepth:ll,GreaterEqualStencilFunc:Ly,GreaterStencilFunc:Dy,GridHelper:x_,Group:bt,HalfFloatType:ei,HemisphereLight:Qd,HemisphereLightHelper:b_,IcosahedronGeometry:th,ImageBitmapLoader:Bg,ImageLoader:xo,ImageUtils:Hm,IncrementStencilOp:vy,IncrementWrapStencilOp:Sy,InstancedBufferAttribute:Oi,InstancedBufferGeometry:zd,InstancedInterleavedBuffer:a_,InstancedMesh:Ln,Int16BufferAttribute:Tb,Int32BufferAttribute:Bb,Int8BufferAttribute:Cb,IntType:kl,InterleavedBuffer:To,InterleavedBufferAttribute:Cs,Interpolant:Ma,InterpolateDiscrete:ma,InterpolateLinear:ga,InterpolateSmooth:Xc,InterpolationSamplingMode:Wy,InterpolationSamplingType:Vy,InvertStencilOp:My,KeepStencilOp:Zs,KeyframeTrack:Ai,LOD:vd,LatheGeometry:nh,Layers:Wl,LessCompare:Fm,LessDepth:ol,LessEqualCompare:md,LessEqualDepth:Ar,LessEqualStencilFunc:Ry,LessStencilFunc:Ty,Light:Ts,LightProbe:Ig,Line:Qi,Line3:kg,LineBasicMaterial:bn,LineCurve:Bd,LineCurve3:sg,LineDashedMaterial:yg,LineLoop:Sd,LineSegments:Ci,LinearFilter:Qt,LinearInterpolant:Nd,LinearMipMapLinearFilter:gy,LinearMipMapNearestFilter:my,LinearMipmapLinearFilter:Wn,LinearMipmapNearestFilter:ia,LinearSRGBColorSpace:Ot,LinearToneMapping:xm,LinearTransfer:uo,Loader:xn,LoaderUtils:vs,LoadingManager:Od,LoopOnce:Mm,LoopPingPong:Tm,LoopRepeat:Im,MOUSE:hy,Material:cn,MaterialLoader:ch,MathUtils:ue,Matrix2:Kd,Matrix3:dt,Matrix4:Ke,MaxEquation:sm,Mesh:Be,MeshBasicMaterial:Cn,MeshDepthMaterial:Ld,MeshDistanceMaterial:Fd,MeshLambertMaterial:mg,MeshMatcapMaterial:gg,MeshNormalMaterial:Ag,MeshPhongMaterial:fg,MeshPhysicalMaterial:mn,MeshStandardMaterial:tt,MeshToonMaterial:pg,MinEquation:im,MirroredRepeatWrapping:oa,MixOperation:ym,MultiplyBlending:ku,MultiplyOperation:_o,NearestFilter:Jt,NearestMipMapLinearFilter:Ay,NearestMipMapNearestFilter:py,NearestMipmapLinearFilter:ir,NearestMipmapNearestFilter:Eo,NeutralToneMapping:Sm,NeverCompare:Lm,NeverDepth:rl,NeverStencilFunc:Iy,NoBlending:ts,NoColorSpace:Ei,NoToneMapping:ki,NormalAnimationBlendMode:Hl,NormalBlending:cr,NotEqualCompare:km,NotEqualDepth:ul,NotEqualStencilFunc:Py,NumberKeyframeTrack:br,Object3D:mt,ObjectLoader:Qx,ObjectSpaceNormalMap:Pm,OctahedronGeometry:Lo,OneFactor:am,OneMinusConstantAlphaFactor:gm,OneMinusConstantColorFactor:Am,OneMinusDstAlphaFactor:hm,OneMinusDstColorFactor:dm,OneMinusSrcAlphaFactor:sl,OneMinusSrcColorFactor:cm,OrthographicCamera:ko,PCFShadowMap:ld,PCFSoftShadowMap:hd,PMREMGenerator:Yu,Path:Bl,PerspectiveCamera:$t,Plane:Vn,PlaneGeometry:pi,PlaneHelper:C_,PointLight:is,PointLightHelper:g_,Points:Jl,PointsMaterial:Ro,PolarGridHelper:__,PolyhedronGeometry:Is,PositionalAudio:Lg,PropertyBinding:It,PropertyMixer:Fg,QuadraticBezierCurve:Rd,QuadraticBezierCurve3:Dd,Quaternion:an,QuaternionKeyframeTrack:xr,QuaternionLinearInterpolant:vg,RED_GREEN_RGTC2_Format:co,RED_RGTC1_Format:ao,REVISION:Fl,RGBADepthPacking:Dm,RGBAFormat:zt,RGBAIntegerFormat:zl,RGBA_ASTC_10x10_Format:El,RGBA_ASTC_10x5_Format:bl,RGBA_ASTC_10x6_Format:xl,RGBA_ASTC_10x8_Format:_l,RGBA_ASTC_12x10_Format:vl,RGBA_ASTC_12x12_Format:wl,RGBA_ASTC_4x4_Format:Es,RGBA_ASTC_5x4_Format:fl,RGBA_ASTC_5x5_Format:pl,RGBA_ASTC_6x5_Format:Al,RGBA_ASTC_6x6_Format:ur,RGBA_ASTC_8x5_Format:ml,RGBA_ASTC_8x6_Format:gl,RGBA_ASTC_8x8_Format:yl,RGBA_BPTC_Format:gr,RGBA_ETC2_EAC_Format:Aa,RGBA_PVRTC_2BPPV1_Format:fa,RGBA_PVRTC_4BPPV1_Format:mr,RGBA_S3TC_DXT1_Format:_s,RGBA_S3TC_DXT3_Format:hr,RGBA_S3TC_DXT5_Format:sa,RGBDepthPacking:by,RGBFormat:ha,RGBIntegerFormat:yy,RGB_BPTC_SIGNED_Format:Sl,RGB_BPTC_UNSIGNED_Format:ro,RGB_ETC1_Format:so,RGB_ETC2_Format:pa,RGB_PVRTC_2BPPV1_Format:dl,RGB_PVRTC_4BPPV1_Format:io,RGB_S3TC_DXT1_Format:lr,RGDepthPacking:xy,RGFormat:ys,RGIntegerFormat:Gl,RawShaderMaterial:dg,Ray:wa,Raycaster:lh,RectAreaLight:Cg,RedFormat:es,RedIntegerFormat:So,ReinhardToneMapping:_m,RenderTarget:yd,RenderTarget3D:i_,RepeatWrapping:On,ReplaceStencilOp:Ey,ReverseSubtractEquation:nm,RingGeometry:Fo,SIGNED_RED_GREEN_RGTC2_Format:lo,SIGNED_RED_RGTC1_Format:oo,SRGBColorSpace:Tt,SRGBTransfer:Lt,Scene:_d,ShaderChunk:gt,ShaderLib:_i,ShaderMaterial:Yn,ShadowMaterial:ug,Shape:fr,ShapeGeometry:ih,ShapePath:T_,ShapeUtils:vi,ShortType:dd,Skeleton:Bo,SkeletonHelper:m_,SkinnedMesh:wd,Source:bs,Sphere:on,SphereGeometry:Xn,Spherical:h_,SphericalHarmonics3:Mg,SplineCurve:Pd,SpotLight:oh,SpotLightHelper:A_,Sprite:Km,SpriteMaterial:Ed,SrcAlphaFactor:il,SrcAlphaSaturateFactor:fm,SrcColorFactor:om,StaticCopyUsage:Oy,StaticDrawUsage:fo,StaticReadUsage:Uy,StereoCamera:zx,StreamCopyUsage:Gy,StreamDrawUsage:Fy,StreamReadUsage:ky,StringKeyframeTrack:vr,SubtractEquation:tm,SubtractiveBlending:Nu,TOUCH:uy,TangentSpaceNormalMap:Ms,TetrahedronGeometry:sh,Texture:Ht,TextureLoader:No,TextureUtils:F_,Timer:c_,TimestampQuery:Hy,TorusGeometry:Uo,TorusKnotGeometry:rh,Triangle:Nn,TriangleFanDrawMode:Cl,TriangleStripDrawMode:Ad,TrianglesDrawMode:Bm,TubeGeometry:ah,UVMapping:Nl,Uint16BufferAttribute:bd,Uint32BufferAttribute:xd,Uint8BufferAttribute:Mb,Uint8ClampedBufferAttribute:Ib,Uniform:Yd,UniformsGroup:r_,UniformsLib:Pe,UniformsUtils:mo,UnsignedByteType:yt,UnsignedInt101111Type:wo,UnsignedInt248Type:la,UnsignedInt5999Type:vo,UnsignedIntType:rs,UnsignedShort4444Type:Ol,UnsignedShort5551Type:Ql,UnsignedShortType:ca,VSMShadowMap:Li,Vector2:$,Vector3:S,Vector4:wt,VectorKeyframeTrack:_r,VideoFrameTexture:jb,VideoTexture:jm,WebGL3DRenderTarget:pb,WebGLArrayRenderTarget:fb,WebGLCoordinateSystem:ii,WebGLCubeRenderTarget:Xm,WebGLRenderTarget:Si,WebGLRenderer:qg,WebGLUtils:Wg,WebGPUCoordinateSystem:ya,WebXRController:Yc,WireframeGeometry:hg,WrapAroundEnding:ho,ZeroCurvatureEnding:sr,ZeroFactor:rm,ZeroSlopeEnding:rr,ZeroStencilOp:_y,createCanvasElement:zm},Symbol.toStringTag,{value:"Module"}));function Ii(){return""}function vt(...s){return s.filter(Boolean).map(e=>String(e).replace(/(^\/+|\/+$)/g,"")).join("/")}function ru(s){return typeof s=="string"?s:s&&typeof s.url=="string"?s.url:""}class gC{constructor(e,t,n,i){this.scene=e,this.camera=t,this.lightingRef=n,this.anchors=i,this.listener=new Pg,this.camera.add(this.listener),this.loader=new Rg;const r=this.listener.context;this.masterGain=r.createGain(),this.masterGain.gain.value=.9,this.masterGain.connect(this.listener.getInput()),this.bus={ambience:r.createGain(),voices:r.createGain(),effects:r.createGain()},this.bus.ambience.gain.value=.9,this.bus.voices.gain.value=.7,this.bus.effects.gain.value=.7,this.bus.ambience.connect(this.masterGain),this.bus.voices.connect(this.masterGain),this.bus.effects.connect(this.masterGain),this.buffers=new Map,this.emitters=[],this.oneShotTimers=[],this.ready=!1,this.manifestLoaded=!1,this._manifest=null,this._manifestUrl="",this._resolveAssetPath=a=>a,this.zones={harbor:{pos:i.harbor,radius:50},agora:{pos:i.agora,radius:40},acropolis:{pos:i.acropolis,radius:40}}}logMissing(e,t){console.info(`[audio] Optional asset missing: ${e} (${t}). Drop a file at public/${t} to enable.`)}async loadBuffer(e,t){if(!t)return null;const n=this.buffers.get(e);if(n)return n;try{const i=await new Promise((r,a)=>this.loader.load(t,r,void 0,a));return this.buffers.set(e,i),i}catch{return this.logMissing(e,t),null}}_makePositional(e,t,n="ambience",{loop:i=!0,volume:r=.6,refDistance:a=12,maxDistance:o=80,rolloff:c=1}={}){if(!e)return null;const l=new Lg(this.listener);l.setBuffer(e),l.setLoop(i),l.setRefDistance(a),l.setMaxDistance(o),l.setRolloffFactor(c),l.setVolume(r),l.userData.group=n;const h=l.getOutput?l.getOutput():l.source;if(h&&this.bus[n]){try{h.disconnect()}catch{}h.connect(this.bus[n])}const u=new mt;u.position.copy(t),u.add(l),this.scene.add(u);const d={obj:u,src:l,group:n};return this.emitters.push(d),i||this._attachOneShotCleanup(d),l}_makeGlobal(e,t="ambience",{loop:n=!0,volume:i=.3}={}){if(!e)return null;const r=new Wd(this.listener);r.setBuffer(e),r.setLoop(n),r.setVolume(i),r.userData.group=t;const a=r.getOutput?r.getOutput():r.source;if(a&&this.bus[t]){try{a.disconnect()}catch{}a.connect(this.bus[t])}const o={obj:this.camera,src:r,group:t};return this.emitters.push(o),n||this._attachOneShotCleanup(o),r}async _fetchManifest(e){const n=String(e??"").trim();if(!n||!n.endsWith(".json"))return null;try{const i=await fetch(n,{method:"GET"});if(!i.ok)return null;if((i.headers.get("content-type")||"").includes("application/json"))return await i.json();const a=await i.text();try{return JSON.parse(a)}catch{return null}}catch(i){return console.warn("[audio] manifest fetch error:",n,i),null}}_createAssetResolver(e){const t=ru(e);if(!t)return i=>i;let n=null;try{const i=typeof window<"u"&&window.location?.origin?window.location.origin:"http://localhost",r=new URL(t,i);r.hash="",r.search="";const a=r.pathname||"/",o=a.lastIndexOf("/"),c=o>=0?a.slice(0,o+1):"/";r.pathname=c,n=r}catch{const i=t.replace(/[#?].*$/,""),r=i.lastIndexOf("/");n=r>=0?i.slice(0,r+1):""}return i=>{if(!i||typeof i!="string"||/^[a-z]+:/i.test(i)||i.startsWith("//")||i.startsWith("/"))return i;if(n instanceof URL)try{return new URL(i,n).toString()}catch{}const r=i.replace(/^\.\//,"").replace(/^\//,"");return(typeof n=="string"?n:"")+r}}_normalizeManifestSchema(e){if(!e||typeof e!="object"||Array.isArray(e)||e?.categories&&typeof e.categories=="object")return e;const{ambient:t,effects:n}=e,i=t&&typeof t=="object"&&!Array.isArray(t),r=n&&typeof n=="object"&&!Array.isArray(n);if(!i&&!r)return e;const a=(c,l)=>{if(l==null)return null;if(typeof l=="string")return{id:c,file:l};if(typeof l=="object"){const h=l.file??l.url??l.path;if(!h)return null;const u={id:c,file:h},d=["loop","volume","group","refDistance","maxDistance","rolloff"];for(const f of d)l[f]!==void 0&&(u[f]=l[f]);return u}return null},o=c=>{if(!c||typeof c!="object")return[];const l=[];for(const[h,u]of Object.entries(c)){const d=a(h,u);d&&l.push(d)}return l};return{version:1,categories:{ambience:o(t),fx:o(n)}}}async loadManifest(e="public/audio/manifest.json"){const t=Ii(),n=Array.isArray(e)?e:[e],i=[vt(t,"public/audio/manifest.json")],r=[...n,...i].map(a=>ru(a)||a).filter(Boolean).map(a=>{const o=String(a).trim();return o?/^(?:[a-z]+:)?\/\//i.test(o)||o.startsWith("/")?o:vt(t,o):""}).filter(Boolean);for(const a of r){const o=await this._fetchManifest(a);if(o)return this._manifestUrl=a,this._manifest=this._normalizeManifestSchema(o),this._resolveAssetPath=this._createAssetResolver(ru(this._manifestUrl)),this.manifestLoaded=!0,console.log("[audio] manifest loaded:",this._manifestUrl),this._manifest}throw this.manifestLoaded=!1,this._manifest=null,this._manifestUrl="",this._resolveAssetPath=a=>a,new Error("[audio] manifest.json missing")}async _initFromCategorizedManifest(e,t){const n=Array.isArray(e?.ambience)?e.ambience.filter(r=>r&&r.file):[];for(const[r,a]of n.entries()){const o=a?.id||a?.file||`ambience-${r}`,c=await this.loadBuffer(o,t(a?.file));if(!c)continue;const l={loop:a.loop!==!1,volume:a.volume??.35,refDistance:a.refDistance??12,maxDistance:a.maxDistance??80,rolloff:a.rolloff??1},u=(a?.id&&this.zones?.[a.id])?.pos;u?this._makePositional(c,u,a.group||"ambience",l)?.play():this._makeGlobal(c,a.group||"ambience",l)?.play()}const i=Array.isArray(e?.fx)?e.fx.filter(r=>r&&r.file):[];for(const[r,a]of i.entries()){const o=a?.id||a?.file||`fx-${r}`;await this.loadBuffer(o,t(a?.file))}!n.length&&!i.length?console.info("[audio] running silently (no categorized entries)."):console.info("[audio] manifest loaded.",{ambience:n.length,fx:i.length})}async initFromManifest(e="public/audio/manifest.json"){if(!this._manifest)try{await this.loadManifest(e)}catch{}const t=this._manifest??{ambient:{},effects:{}},n=this._resolveAssetPath||(g=>g);if(t?.categories){await this._initFromCategorizedManifest(t.categories,n),this.ready=!0;return}const i=t.ambient??{},r=t.effects??{},a=await this.loadBuffer("sea",n(i.sea)),o=await this.loadBuffer("gulls",n(i.gulls)),c=await this.loadBuffer("wind",n(i.wind)),l=await this.loadBuffer("market",n(i.market)),h=await this.loadBuffer("fountain",n(i.fountain)),u=await this.loadBuffer("lyre",n(i.lyre)),d=await this.loadBuffer("blacksmith",n(r.blacksmith)),f=await this.loadBuffer("goats",n(r.goats)),p=await this.loadBuffer("cart",n(r.cart));this._makeGlobal(a,"ambience",{volume:.25})?.play(),this._makeGlobal(c,"ambience",{volume:.05})?.play(),this._makePositional(o,this.zones.harbor.pos,"ambience",{volume:.35,refDistance:16,maxDistance:120})?.play(),this._makePositional(l,this.zones.agora.pos,"voices",{volume:.35,refDistance:10})?.play(),this._makePositional(h,this.zones.agora.pos.clone().add(new S(6,0,-4)),"ambience",{volume:.25,refDistance:8})?.play(),this._makePositional(u,this.zones.acropolis.pos,"ambience",{volume:.22,refDistance:10})?.play(),this.scheduleOneShots(d,this.zones.agora.pos.clone().add(new S(-8,0,6)),"effects",12,22),this.scheduleOneShots(f,this.zones.harbor.pos.clone().add(new S(18,0,10)),"effects",18,38),this.scheduleOneShots(p,this.zones.agora.pos.clone().add(new S(12,0,-12)),"effects",25,45),this.ready=!0}scheduleOneShots(e,t,n,i=12,r=24){if(!e)return;const a=c=>{const l=setTimeout(()=>{this._removeOneShotTimer(l);const h=this._makePositional(e,t,n,{loop:!1,volume:.35,refDistance:8});h&&h.play();const u=(Math.random()*(r-i)+i)*1e3;a(u)},c);this.oneShotTimers.push(l)},o=(Math.random()*(r-i)+i)*1e3;a(o)}update(e){if(!this.ready)return;const t=this.lightingRef?.getNightFactor?.()??0,n=(i,r,a)=>i+(r-i)*a;this.bus.voices.gain.value=n(.75,.35,t),this.bus.ambience.gain.value=n(.85,.95,t),this.masterGain.gain.value=n(.9,.8,t)}async ensureUserGestureResume(){const e=this.listener.context;if(e.state==="running")return;const t=async()=>{try{await e.resume()}catch{}window.removeEventListener("pointerdown",t),window.removeEventListener("keydown",t)};window.addEventListener("pointerdown",t),window.addEventListener("keydown",t)}dispose(){this.emitters.forEach(({obj:e,src:t})=>{try{t.stop()}catch{}e&&e!==this.camera&&this.scene.remove(e)}),this.oneShotTimers.forEach(e=>clearTimeout(e)),this.emitters=[],this.buffers.clear();try{this.camera.remove(this.listener)}catch{}}_attachOneShotCleanup(e){const{obj:t,src:n}=e;let i=!1;const r=()=>{if(i)return;i=!0,t&&t!==this.camera&&this.scene.remove(t);const o=this.emitters.indexOf(e);o!==-1&&this.emitters.splice(o,1)},a=n.onEnded?n.onEnded.bind(n):null;n.onEnded=()=>{a&&a(),r()}}_removeOneShotTimer(e){const t=this.oneShotTimers.indexOf(e);t!==-1&&this.oneShotTimers.splice(t,1)}}const Np="ui-root-style",Rl="ui-root";function yC(){let s=document.getElementById(Rl);return s||(s=document.createElement("div"),s.id=Rl,document.body.appendChild(s),bC(),["topLeft","topRight","bottomLeft","bottomRight","center"].forEach(e=>{const t=document.createElement("div");t.dataset.slot=e,t.className=`ui-slot ui-slot--${e}`,s.appendChild(t)})),s}function uh(s="topRight"){const e=yC();return e.querySelector(`.ui-slot--${s}`)||e}function bC(){if(document.getElementById(Np))return;const s=document.createElement("style");s.id=Np,s.textContent=`
    #${Rl} {
      position: fixed;
      inset: 0;
      pointer-events: none; /* panels opt-in */
      display: grid;
      grid-template-rows: auto 1fr auto;
      grid-template-columns: 1fr 1fr;
      padding: 12px;
      gap: 12px;
      z-index: 1200;
    }
    .ui-slot { display: flex; gap: 10px; align-items: flex-start; }
    .ui-slot > * { pointer-events: auto; }
    .ui-slot--topLeft    { grid-row: 1; grid-column: 1; justify-self: start; }
    .ui-slot--topRight   { grid-row: 1; grid-column: 2; justify-self: end; }
    .ui-slot--bottomLeft { grid-row: 3; grid-column: 1; align-items: flex-end; }
    .ui-slot--bottomRight{ grid-row: 3; grid-column: 2; justify-self: end; align-items: flex-end; }
    .ui-slot--center     { grid-row: 2; grid-column: 1 / span 2; justify-content: center; }

    /* Small screens: tighter padding and single column top row */
    @media (max-width: 640px) {
      #${Rl} { padding: 8px; gap: 8px; }
      .ui-slot--topRight, .ui-slot--topLeft { justify-self: stretch; }
      .ui-slot--topLeft, .ui-slot--topRight { flex-wrap: wrap; }
    }
  `,document.head.appendChild(s)}function xC(s,e={}){if(!s)return null;const t=e.key??"F10",n=document.createElement("div");Object.assign(n.style,{padding:"10px 12px",background:"rgba(0,0,0,0.55)",backdropFilter:"blur(4px)",borderRadius:"10px",color:"#fff",font:"12px/1.2 ui-sans-serif, system-ui",userSelect:"none"});const i=(a,o,c=.8)=>{const l=document.createElement("div");l.style.display="flex",l.style.alignItems="center",l.style.margin="4px 0";const h=document.createElement("span");h.textContent=a,h.style.width="80px";const u=document.createElement("input");return u.type="range",u.min="0",u.max="1",u.step="0.01",u.value=String(c),u.style.width="140px",u.addEventListener("input",()=>{o.gain.value=Number(u.value)}),l.appendChild(h),l.appendChild(u),l};n.appendChild(i("Master",s.masterGain,.9)),n.appendChild(i("Ambience",s.bus.ambience,.9)),n.appendChild(i("Voices",s.bus.voices,.7)),n.appendChild(i("Effects",s.bus.effects,.7)),uh("topRight").appendChild(n);const r=a=>{a.key===t&&(n.style.display=n.style.display!=="none"?"none":"block",a.preventDefault())};return window.addEventListener("keydown",r),{dispose(){window.removeEventListener("keydown",r),n.remove()}}}class dh extends Be{constructor(){const e=dh.SkyShader,t=new Yn({name:e.name,uniforms:mo.clone(e.uniforms),vertexShader:e.vertexShader,fragmentShader:e.fragmentShader,side:Mn,depthWrite:!1});super(new Ft(1,1,1),t),this.isSky=!0}}dh.SkyShader={name:"SkyShader",uniforms:{turbidity:{value:2},rayleigh:{value:1},mieCoefficient:{value:.005},mieDirectionalG:{value:.8},sunPosition:{value:new S},up:{value:new S(0,1,0)}},vertexShader:`
		uniform vec3 sunPosition;
		uniform float rayleigh;
		uniform float turbidity;
		uniform float mieCoefficient;
		uniform vec3 up;

		varying vec3 vWorldPosition;
		varying vec3 vSunDirection;
		varying float vSunfade;
		varying vec3 vBetaR;
		varying vec3 vBetaM;
		varying float vSunE;

		// constants for atmospheric scattering
		const float e = 2.71828182845904523536028747135266249775724709369995957;
		const float pi = 3.141592653589793238462643383279502884197169;

		// wavelength of used primaries, according to preetham
		const vec3 lambda = vec3( 680E-9, 550E-9, 450E-9 );
		// this pre-calculation replaces older TotalRayleigh(vec3 lambda) function:
		// (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn))
		const vec3 totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );

		// mie stuff
		// K coefficient for the primaries
		const float v = 4.0;
		const vec3 K = vec3( 0.686, 0.678, 0.666 );
		// MieConst = pi * pow( ( 2.0 * pi ) / lambda, vec3( v - 2.0 ) ) * K
		const vec3 MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );

		// earth shadow hack
		// cutoffAngle = pi / 1.95;
		const float cutoffAngle = 1.6110731556870734;
		const float steepness = 1.5;
		const float EE = 1000.0;

		float sunIntensity( float zenithAngleCos ) {
			zenithAngleCos = clamp( zenithAngleCos, -1.0, 1.0 );
			return EE * max( 0.0, 1.0 - pow( e, -( ( cutoffAngle - acos( zenithAngleCos ) ) / steepness ) ) );
		}

		vec3 totalMie( float T ) {
			float c = ( 0.2 * T ) * 10E-18;
			return 0.434 * c * MieConst;
		}

		void main() {

			vec4 worldPosition = modelMatrix * vec4( position, 1.0 );
			vWorldPosition = worldPosition.xyz;

			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
			gl_Position.z = gl_Position.w; // set z to camera.far

			vSunDirection = normalize( sunPosition );

			vSunE = sunIntensity( dot( vSunDirection, up ) );

			vSunfade = 1.0 - clamp( 1.0 - exp( ( sunPosition.y / 450000.0 ) ), 0.0, 1.0 );

			float rayleighCoefficient = rayleigh - ( 1.0 * ( 1.0 - vSunfade ) );

			// extinction (absorption + out scattering)
			// rayleigh coefficients
			vBetaR = totalRayleigh * rayleighCoefficient;

			// mie coefficients
			vBetaM = totalMie( turbidity ) * mieCoefficient;

		}`,fragmentShader:`
		varying vec3 vWorldPosition;
		varying vec3 vSunDirection;
		varying float vSunfade;
		varying vec3 vBetaR;
		varying vec3 vBetaM;
		varying float vSunE;

		uniform float mieDirectionalG;
		uniform vec3 up;

		// constants for atmospheric scattering
		const float pi = 3.141592653589793238462643383279502884197169;

		const float n = 1.0003; // refractive index of air
		const float N = 2.545E25; // number of molecules per unit volume for air at 288.15K and 1013mb (sea level -45 celsius)

		// optical length at zenith for molecules
		const float rayleighZenithLength = 8.4E3;
		const float mieZenithLength = 1.25E3;
		// 66 arc seconds -> degrees, and the cosine of that
		const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;

		// 3.0 / ( 16.0 * pi )
		const float THREE_OVER_SIXTEENPI = 0.05968310365946075;
		// 1.0 / ( 4.0 * pi )
		const float ONE_OVER_FOURPI = 0.07957747154594767;

		float rayleighPhase( float cosTheta ) {
			return THREE_OVER_SIXTEENPI * ( 1.0 + pow( cosTheta, 2.0 ) );
		}

		float hgPhase( float cosTheta, float g ) {
			float g2 = pow( g, 2.0 );
			float inverse = 1.0 / pow( 1.0 - 2.0 * g * cosTheta + g2, 1.5 );
			return ONE_OVER_FOURPI * ( ( 1.0 - g2 ) * inverse );
		}

		void main() {

			vec3 direction = normalize( vWorldPosition - cameraPosition );

			// optical length
			// cutoff angle at 90 to avoid singularity in next formula.
			float zenithAngle = acos( max( 0.0, dot( up, direction ) ) );
			float inverse = 1.0 / ( cos( zenithAngle ) + 0.15 * pow( 93.885 - ( ( zenithAngle * 180.0 ) / pi ), -1.253 ) );
			float sR = rayleighZenithLength * inverse;
			float sM = mieZenithLength * inverse;

			// combined extinction factor
			vec3 Fex = exp( -( vBetaR * sR + vBetaM * sM ) );

			// in scattering
			float cosTheta = dot( direction, vSunDirection );

			float rPhase = rayleighPhase( cosTheta * 0.5 + 0.5 );
			vec3 betaRTheta = vBetaR * rPhase;

			float mPhase = hgPhase( cosTheta, mieDirectionalG );
			vec3 betaMTheta = vBetaM * mPhase;

			vec3 Lin = pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * ( 1.0 - Fex ), vec3( 1.5 ) );
			Lin *= mix( vec3( 1.0 ), pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * Fex, vec3( 1.0 / 2.0 ) ), clamp( pow( 1.0 - dot( up, vSunDirection ), 5.0 ), 0.0, 1.0 ) );

			// nightsky
			float theta = acos( direction.y ); // elevation --> y-axis, [-pi/2, pi/2]
			float phi = atan( direction.z, direction.x ); // azimuth --> x-axis [-pi/2, pi/2]
			vec2 uv = vec2( phi, theta ) / vec2( 2.0 * pi, pi ) + vec2( 0.5, 0.0 );
			vec3 L0 = vec3( 0.1 ) * Fex;

			// composition + solar disc
			float sundisk = smoothstep( sunAngularDiameterCos, sunAngularDiameterCos + 0.00002, cosTheta );
			L0 += ( vSunE * 19000.0 * Fex ) * sundisk;

			vec3 texColor = ( Lin + L0 ) * 0.04 + vec3( 0.0, 0.0003, 0.00075 );

			vec3 retColor = pow( texColor, vec3( 1.0 / ( 1.2 + ( 1.2 * vSunfade ) ) ) );

			gl_FragColor = vec4( retColor, 1.0 );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>

		}`};const _C=1e3;function EC(s){const e=new dh;e.scale.setScalar(45e4),e.userData.noCollision=!0;const t=e.material.uniforms;return t.turbidity.value=10,t.rayleigh.value=2,t.mieCoefficient.value=.005,t.mieDirectionalG.value=.8,t.sunPosition.value.set(0,1,0),s.add(e),{sky:e}}const Xg=new S(0,1,0);function Yg(s){return!Number.isFinite(s)||s<0?0:s>1?1:s}function au(s,e){if(!s||typeof s!="object")return 0;const t=Yg(e);return s.timeOfDayPhase=t,t}function vC(s,e=Xg){const n=Yg(s)*Math.PI*2;return e.set(Math.cos(n),Math.sin(n),0),e}function kp(s,e){const{sky:t}=s||{};if(!t||!t.material||!t.material.uniforms||!t.material.uniforms.sunPosition)return;const n=e?.timeOfDayPhase??0,i=vC(n,Xg);return t.material.uniforms.sunPosition.value.copy(i).normalize(),i}function wC(s,e){const t=Math.max(0,e),n=new $e,i=new Float32Array(t*3);for(let o=0;o<t;o++){const c=new S(Math.random()*2-1,Math.random()*2-1,Math.random()*2-1).normalize(),l=_C*(.8+Math.random()*.2),h=o*3;i[h]=c.x*l,i[h+1]=c.y*l,i[h+2]=c.z*l}n.setAttribute("position",new ht(i,3));const r=new Ro({size:1.2,color:16777215,transparent:!0,opacity:0,depthWrite:!1,blending:nl}),a=new Jl(n,r);return a.matrixAutoUpdate=!1,a.updateMatrix(),s.add(a),a}function Op(s,e){if(!s)return;const t=s.material;if(!t)return;const n=Math.sin(e*Math.PI*2),a=1-ue.smoothstep(n,-.2,.1);t.opacity=ue.lerp(t.opacity,a,.05)}const SC=new ae("#ffb37f"),CC=new ae("#ffffff"),MC=new ae("#ff9f76"),IC=new ae("#0b1d51"),Kg=new ae("#bde0fe"),TC=new ae("#1f1f2e"),Jg=new ae("#9d8189"),BC=new ae,jg=new S;function ou(s,e,t,n){return s.copy(e).lerp(t,n),s}function RC(s){const e=new Oo(16777215,1);e.castShadow=!0,e.shadow.mapSize.set(1024,1024),e.shadow.bias=-5e-4;const t=e.shadow.camera;t.near=1,t.far=300,t.left=-120,t.right=120,t.top=120,t.bottom=-120,e.shadow.normalBias=.02,e.shadow.camera.updateProjectionMatrix(),s.add(e),s.add(e.target);const n=new Qd(Kg,Jg,.6);return s.add(n),{sunLight:e,hemiLight:n,nightFactor:0}}function Qp(s,e){if(!s||!s.sunLight||!s.hemiLight)return;const{sunLight:t,hemiLight:n}=s,i=jg.copy(e).normalize(),r=i.y,a=ue.clamp(ue.smoothstep(r,-.15,.1),0,1),o=1-a;t.position.copy(i).multiplyScalar(100),t.target.position.set(0,0,0),t.target.updateMatrixWorld();const c=ue.lerp(.05,1.4,a);t.intensity=ue.lerp(t.intensity,c,.1);const h=ou(BC,SC,CC,a).lerp(MC,o*.55);t.color.copy(h);const u=ue.lerp(.12,.95,a);n.intensity=ue.lerp(n.intensity,u,.1),ou(n.color,IC,Kg,a),ou(n.groundColor,TC,Jg,a),s.nightFactor=o}function DC(s){const e=new Oo(12574719,.2);e.castShadow=!1;const t=new Xn(5,16,16),n=new Cn({color:15661055,transparent:!0,opacity:.3}),i=new Be(t,n),r=new bt;return r.userData.noCollision=!0,r.add(e),r.add(i),s.add(r),s.add(e.target),{light:e,mesh:i,group:r}}function Gp(s,e){if(!s||!e)return;const{light:t,mesh:n,group:i}=s,r=jg.copy(e).multiplyScalar(-1).normalize();i.position.copy(r.multiplyScalar(400)),t.position.set(0,0,0),t.target.position.set(0,0,0),t.target.updateMatrixWorld(),n&&n.position.set(0,0,0);const a=ue.clamp(-e.y,0,1);t.intensity=ue.lerp(.05,.25,a),n&&n.material&&(n.material.opacity=ue.lerp(.3,1,a),n.material.transparent=!0)}function PC(s,e,t){const n=new lh,i=new $,r=2236996,a=1/24,o=new Map;let c=null,l=a;function h(y){let _=y;for(;_;){if(_.userData&&_.userData.interactable)return _;_=_.parent}return null}function u(y){return!y||!y.material?[]:Array.isArray(y.material)?y.material:[y.material]}function d(y){return y&&(y.userData?.highlightTarget||y)}function f(){if(!c)return;const y=d(c);for(const _ of u(y)){if(!_||!o.has(_))continue;const w=o.get(_);_.emissive&&w.emissive&&_.emissive.copy(w.emissive),_.color&&w.color&&_.color.copy(w.color),o.delete(_)}c=null,l=a}function p(y){const _=d(y);for(const w of u(_))w&&(o.has(w)||o.set(w,{emissive:w.emissive?w.emissive.clone():null,color:w.color?w.color.clone():null}),w.emissive?w.emissive.setHex(r):w.color&&w.color.offsetHSL(0,0,.2));c=y}function g(y,_){const w=s.domElement.clientWidth,C=s.domElement.clientHeight;if(w===0||C===0)return null;const T=y/w*2-1,v=-(_/C)*2+1;i.set(T,v),n.setFromCamera(i,e);const E=n.intersectObjects(t.children,!0);return E.length>0?E[0]:null}function m(){i.set(0,0),n.setFromCamera(i,e);const y=n.intersectObjects(t.children,!0);return y.length>0?y[0]:null}function A(y=a){if(Number.isFinite(y)&&(l+=y),l<a)return c;l=0;const _=m(),w=_?h(_.object):null;return w?(w===c||(f(),p(w)),c):(f(),null)}function x(){return c}function b(){if(!c){console.log("Nothing to interact with.");return}const y=c.userData&&c.userData.onUse;if(typeof y=="function")y(c);else{const _=c.name||c.type||"object";console.log(`Nothing to interact with on ${_}.`)}}return{raycaster:n,mouse:i,pickObject:g,pickCenter:m,updateHover:A,clearHover:f,getCurrentHover:x,useObject:b}}function LC(){if(document.querySelector(".crosshair-overlay"))return;FC();const s=document.createElement("div");s.className="crosshair-overlay",document.body.appendChild(s)}const zp="crosshair-overlay-style";function FC(){if(document.getElementById(zp))return;const s=document.createElement("style");s.id=zp,s.textContent=`
    .crosshair-overlay {
      position: fixed;
      top: 50%;
      left: 50%;
      width: 16px;
      height: 16px;
      transform: translate(-50%, -50%);
      pointer-events: none;
      z-index: 1000;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .crosshair-overlay::before {
      content: "";
      width: 4px;
      height: 4px;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.9);
      box-shadow: 0 0 6px rgba(255, 255, 255, 0.6);
    }
  `,document.head.appendChild(s)}const Hp=typeof globalThis<"u"&&typeof globalThis.SEA_LEVEL_Y<"u"?globalThis.SEA_LEVEL_Y:void 0,ot=typeof Hp<"u"?Hp:0,kn=new S(-120,ot,80),Gt=new S(-80,8,40),nn=new S(-40,14,10),UC=110,Ju=260,Vp=2,NC=.35,kC=3.2,Wp=new $(-120,80),OC=ot,QC=new S(-70,0,25),GC=new $(140,110),zC=1297302345,qp=new $(260,100),Xp=new $(0,-100),HC=4.5,Rc=kn.x-HC,Jc={west:-190,east:-117,north:-120,south:0},cu=new S(kn.x+Xp.x,ot,kn.z+Xp.y),Zg={base:{generator:"lush-grass",baseColor:[121,182,112],shadowColor:[67,117,70],highlightColor:[198,246,154],shadowStrength:.45,highlightStrength:.65,contrast:1.02,repeat:[18,18],rotation:0,colorSpace:"srgb",seed:2024},details:[{generator:"lush-grass-detail",repeat:[36,36],rotation:.23,anisotropy:8,strength:.75,tint:[1.1,1.12,1.02],minHeight:-15,maxHeight:32,fade:10,slopeMax:.42,mode:"mix",seed:404},{generator:"fresh-grass-lowlands",repeat:[48,48],rotation:.47,anisotropy:8,strength:.5,tint:[1.18,1.2,1.08],minHeight:-20,maxHeight:18,fade:8,slopeMax:.38,mode:"mix",seed:405},{generator:"dry-grass-detail",repeat:[32,32],rotation:.11,anisotropy:8,strength:.28,tint:[1.04,1,.92],minHeight:16,maxHeight:46,fade:6,slopeMin:.32,mode:"multiply",seed:406}]},{clamp:ws,lerp:eo}=ue;function Yp(s,e){if(!Number.isFinite(e)||e<=0)return s;let t=s%e;return t<0&&(t+=e),t}function Dc(s,e,t,n,i){const r=Yp(s,n),a=Yp(e,i),o=Math.sin(r*127.1+a*311.7+t*74.7)*43758.5453;return o-Math.floor(o)}function VC(s,e,t,n,i){const r=Math.floor(s),a=Math.floor(e),o=s-r,c=e-a,l=Dc(r,a,t,n,i),h=Dc(r+1,a,t,n,i),u=Dc(r,a+1,t,n,i),d=Dc(r+1,a+1,t,n,i),f=eo(l,h,o),p=eo(u,d,o);return eo(f,p,c)}function Kp(s,e,t={}){const{octaves:n=4,persistence:i=.55,lacunarity:r=2,seed:a=1,periodX:o=0,periodY:c=0}=t;let l=1,h=1,u=0,d=0;for(let f=0;f<n;f++){const p=a+f*17.23,g=o?Math.max(1,Math.round(o*h)):0,m=c?Math.max(1,Math.round(c*h)):0;u+=VC(s*h,e*h,p,g,m)*l,d+=l,l*=i,h*=r}return d<=0?0:u/d}function WC(s,e){const[t,n,i]=s,r=.2126*t+.7152*n+.0722*i;return[ws(r+(t-r)*e,0,255),ws(r+(n-r)*e,0,255),ws(r+(i-r)*e,0,255)]}function qC(s,e){const[t,n,i]=s,r=a=>ws((a-128)*e+128,0,255);return[r(t),r(n),r(i)]}function XC(s,e,t,n){const{shadowMix:i,highlightMix:r,variation:a}=n,o=(c,l,h)=>{const u=eo(c,l,i),d=eo(u,h,r);return ws(d*(1+a),0,255)};return[o(s[0],e[0],t[0]),o(s[1],e[1],t[1]),o(s[2],e[2],t[2])]}function Jp(s,e,t,n,i,r){const a=Math.max(Math.abs(t),1e-6),o=Math.max(Math.abs(n),1e-6),c=Math.max(1,Math.round(a)),l=Math.max(1,Math.round(o)),h=c/a,u=l/o;return{x:(s*t+i)*h,y:(e*n+r)*u,periodX:c,periodY:l}}function fh(s={}){const{size:e=256,seed:t=1337,baseColor:n=[92,148,70],shadowColor:i=[36,74,34],highlightColor:r=[164,214,116],bladeFrequency:a=5.5,bladeTaper:o=1.45,highlightStrength:c=.55,shadowStrength:l=.65,noiseScale:h=3.5,patchiness:u=.2,saturation:d=1.08,contrast:f=1.06}=s,p=e,g=e,m=new Uint8Array(p*g*4);for(let x=0;x<g;x++)for(let b=0;b<p;b++){const y=b/p,_=x/g,w=Jp(y,_,h,h,t*.13,t*.19),C=Kp(w.x,w.y,{octaves:4,persistence:.55,seed:t,periodX:w.periodX,periodY:w.periodY}),T=Jp(y,_,h*1.7,h*1.1,t*.31,t*.47),v=Kp(T.x,T.y,{octaves:5,persistence:.5,seed:t*1.7,periodX:T.periodX,periodY:T.periodY}),E=Math.sin((y+_*.25)*Math.PI*a+v*Math.PI*2)*.5+.5,B=Math.pow(E,o),D=ws(B*l,0,1),F=ws(Math.pow(1-B,2)*c,0,1),N=ws((C-.5)*(u*2.4),-.35,.4);let G=XC(n,i,r,{shadowMix:D,highlightMix:F,variation:N});G=WC(G,d),G=qC(G,f);const k=(x*p+b)*4;m[k]=G[0],m[k+1]=G[1],m[k+2]=G[2],m[k+3]=255}const A=new qn(m,p,g,zt,yt);return A.needsUpdate=!0,A.wrapS=A.wrapT=On,A.flipY=!1,"colorSpace"in A&&Tt&&(A.colorSpace=Tt),A}function YC(s={}){return fh({size:s.size??256,seed:(s.seed??1337)*3.1,baseColor:s.baseColor??[86,146,68],shadowColor:s.shadowColor??[30,64,32],highlightColor:s.highlightColor??[182,226,128],bladeFrequency:s.bladeFrequency??9.5,bladeTaper:s.bladeTaper??1.1,highlightStrength:s.highlightStrength??.85,shadowStrength:s.shadowStrength??.75,noiseScale:s.noiseScale??5.5,patchiness:s.patchiness??.35,saturation:s.saturation??1.12,contrast:s.contrast??1.15})}function KC(s={}){return fh({size:s.size??256,seed:(s.seed??733)*2.7,baseColor:s.baseColor??[112,168,98],shadowColor:s.shadowColor??[58,106,64],highlightColor:s.highlightColor??[196,232,150],bladeFrequency:s.bladeFrequency??6.25,bladeTaper:s.bladeTaper??1.3,highlightStrength:s.highlightStrength??.68,shadowStrength:s.shadowStrength??.52,noiseScale:s.noiseScale??4.1,patchiness:s.patchiness??.22,saturation:s.saturation??1.08,contrast:s.contrast??1.04})}function JC(s={}){return fh({size:s.size??256,seed:(s.seed??905)*3.5,baseColor:s.baseColor??[170,156,108],shadowColor:s.shadowColor??[102,96,68],highlightColor:s.highlightColor??[216,206,150],bladeFrequency:s.bladeFrequency??8.4,bladeTaper:s.bladeTaper??1.05,highlightStrength:s.highlightStrength??.58,shadowStrength:s.shadowStrength??.48,noiseScale:s.noiseScale??5.9,patchiness:s.patchiness??.32,saturation:s.saturation??.94,contrast:s.contrast??1.1})}const jC=new No,ZC={"lush-grass":s=>fh({size:s.size,seed:s.seed,baseColor:s.baseColor,shadowColor:s.shadowColor,highlightColor:s.highlightColor,bladeFrequency:s.bladeFrequency,bladeTaper:s.bladeTaper,highlightStrength:s.highlightStrength,shadowStrength:s.shadowStrength,noiseScale:s.noiseScale,patchiness:s.patchiness,saturation:s.saturation,contrast:s.contrast}),"lush-grass-detail":s=>YC({size:s.size,seed:s.seed,baseColor:s.baseColor,shadowColor:s.shadowColor,highlightColor:s.highlightColor,bladeFrequency:s.bladeFrequency,bladeTaper:s.bladeTaper,highlightStrength:s.highlightStrength,shadowStrength:s.shadowStrength,noiseScale:s.noiseScale,patchiness:s.patchiness,saturation:s.saturation,contrast:s.contrast}),"fresh-grass-lowlands":s=>KC({size:s.size,seed:s.seed,baseColor:s.baseColor,shadowColor:s.shadowColor,highlightColor:s.highlightColor,bladeFrequency:s.bladeFrequency,bladeTaper:s.bladeTaper,highlightStrength:s.highlightStrength,shadowStrength:s.shadowStrength,noiseScale:s.noiseScale,patchiness:s.patchiness,saturation:s.saturation,contrast:s.contrast}),"dry-grass-detail":s=>JC({size:s.size,seed:s.seed,baseColor:s.baseColor,shadowColor:s.shadowColor,highlightColor:s.highlightColor,bladeFrequency:s.bladeFrequency,bladeTaper:s.bladeTaper,highlightStrength:s.highlightStrength,shadowStrength:s.shadowStrength,noiseScale:s.noiseScale,patchiness:s.patchiness,saturation:s.saturation,contrast:s.contrast})};function $g(s){const e=s?.generator??s?.procedural;if(!e)return null;const t=ZC[e];if(!t)return console.warn(`Unknown ground texture generator: ${e}`),null;try{return t(s)}catch(n){return console.warn(`Failed to build procedural texture: ${e}`,n),null}}function Dl(s,e={}){s.wrapS=s.wrapT=On;const[t,n]=Array.isArray(e.repeat)?[e.repeat[0]??1,e.repeat[1]??e.repeat[0]??1]:[e.repeat??1,e.repeat??1];if(s.repeat.set(t,n),e.offset){const[i,r]=Array.isArray(e.offset)?[e.offset[0]??0,e.offset[1]??0]:[e.offset??0,e.offset??0];s.offset.set(i,r)}typeof e.rotation=="number"&&e.rotation!==0&&(s.center.set(.5,.5),s.rotation=e.rotation),e.colorSpace==="srgb"?"colorSpace"in s&&Tt!==void 0&&(s.colorSpace=Tt):e.colorSpace==="linear"&&"colorSpace"in s&&Ot!==void 0&&(s.colorSpace=Ot),typeof e.anisotropy=="number"&&(s.anisotropy=e.anisotropy),s.needsUpdate=!0}function e0(s,e,t){try{const n=jC.load(s,()=>{Dl(n,e)},void 0,i=>{console.warn(`Failed to load ground texture: ${s}`,i)});return Dl(n,e),n}catch(n){return console.warn(`Failed to load ground texture: ${s}`,n),null}}function $C(s){const e=s?.url?e0(s.url,s):$g(s);if(!e)return null;Dl(e,s);const t=ue.clamp(s.strength??.35,0,1),n=Number.isFinite(s.minHeight)?s.minHeight:-1e3,i=Number.isFinite(s.maxHeight)?s.maxHeight:1e3,r=Math.max(s.fade??8,0),a=new ae(1,1,1);Array.isArray(s.tint)?a.setRGB(s.tint[0]??1,s.tint[1]??s.tint[0]??1,s.tint[2]??s.tint[1]??s.tint[0]??1):typeof s.tint=="string"&&a.set(s.tint);const o=s.mode==="mix"?1:0;return{texture:e,params:new wt(n,i,r,t),tint:a,mode:o}}function eM(s,e=Zg){if(!s)return{detailLayers:[]};const t={detailLayers:[]},n=e?.base;if(n?.url||n?.generator||n?.procedural){const r=n.url?e0(n.url,n):$g(n);r&&(Dl(r,n),s.map=r,s.needsUpdate=!0)}const i=Array.isArray(e?.details)?e.details:[];for(const r of i){const a=$C(r);a&&t.detailLayers.push(a)}return t}function tM(s,e){if(!e?.detailLayers?.length)return;s.defines||(s.defines={}),s.defines.USE_UV===void 0&&(s.defines.USE_UV=""),s.vertexShader.includes("#include <uv_pars_vertex>")||(s.vertexShader=s.vertexShader.replace("void main() {",`#include <uv_pars_vertex>
void main() {`)),s.vertexShader.includes("#include <uv_vertex>")||(s.vertexShader=s.vertexShader.replace("#include <project_vertex>",`#include <uv_vertex>
#include <project_vertex>`));const t=[],n=[];e.detailLayers.forEach((a,o)=>{const c=`uGroundDetailMap${o}`,l=`uGroundDetailParams${o}`,h=`uGroundDetailTint${o}`,u=`uGroundDetailMode${o}`;s.uniforms[c]={value:a.texture},s.uniforms[l]={value:a.params},s.uniforms[h]={value:a.tint},s.uniforms[u]={value:a.mode},t.push([`uniform sampler2D ${c};`,`uniform vec4 ${l};`,`uniform vec3 ${h};`,`uniform float ${u};`].join(`
`)),n.push(`
      {
        vec4 detailSample = texture2D(${c}, vUv);
        float minH = ${l}.x;
        float maxH = ${l}.y;
        float fade = max(${l}.z, 0.0001);
        float strength = clamp(${l}.w, 0.0, 1.0);
        float mask = 1.0;
        if (maxH > minH) {
          mask = smoothstep(minH, minH + fade, groundHeight);
          mask *= 1.0 - smoothstep(maxH - fade, maxH, groundHeight);
        }
        float layerStrength = strength * mask;
        if (layerStrength > 0.0) {
          vec3 layerColor = detailSample.rgb * ${h};
          if (abs(${u} - 1.0) < 0.5) {
            diffuseColor.rgb = mix(diffuseColor.rgb, layerColor, layerStrength);
          } else {
            diffuseColor.rgb *= mix(vec3(1.0), layerColor, layerStrength);
          }
        }
      }
    `)});const r=["#include <common>",...s.fragmentShader.includes("#include <uv_pars_fragment>")?[]:["#include <uv_pars_fragment>"],...t].join(`
`);s.fragmentShader=s.fragmentShader.replace("#include <common>",r),s.fragmentShader=s.fragmentShader.replace("vec4 diffuseColor = vec4( diffuse, opacity );",`vec4 diffuseColor = vec4( diffuse, opacity );
float groundHeight = vGroundHeight;
${n.join(`
`)}`)}const nM=8,iM=10,jp=24;let qs=new WeakMap;const jc=["map","normalMap","roughnessMap"],t0=["aoMap","emissiveMap","lightMap","specularIntensityMap","specularColorMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","sheenColorMap","sheenRoughnessMap","transmissionMap","thicknessMap","iridescenceMap","iridescenceThicknessMap","anisotropyMap","metalnessMap","bumpMap","displacementMap","alphaMap","envMap"],sM={aoMap:s=>{"aoMapIntensity"in s&&(s.aoMapIntensity=0)},emissiveMap:s=>{"emissiveIntensity"in s&&(s.emissiveIntensity=0)},lightMap:s=>{"lightMapIntensity"in s&&(s.lightMapIntensity=0)},clearcoatMap:s=>{"clearcoat"in s&&(s.clearcoat=0)},clearcoatNormalMap:s=>{"clearcoat"in s&&(s.clearcoat=0)},clearcoatRoughnessMap:s=>{"clearcoat"in s&&(s.clearcoat=0),"clearcoatRoughness"in s&&(s.clearcoatRoughness=0)},sheenColorMap:s=>{"sheen"in s&&(s.sheen=0),s.sheenColor?.isColor&&s.sheenColor.setRGB(0,0,0)},sheenRoughnessMap:s=>{"sheen"in s&&(s.sheen=0)},transmissionMap:s=>{"transmission"in s&&(s.transmission=0)},thicknessMap:s=>{"thickness"in s&&(s.thickness=0)},specularIntensityMap:s=>{"specularIntensity"in s&&(s.specularIntensity=1)},specularColorMap:s=>{s.specularColor?.isColor&&s.specularColor.setRGB(1,1,1)},iridescenceMap:s=>{"iridescence"in s&&(s.iridescence=0)},iridescenceThicknessMap:s=>{"iridescence"in s&&(s.iridescence=0)},anisotropyMap:s=>{"anisotropy"in s&&(s.anisotropy=0)}},lu=160,rM=.45,aM=.8,Pc=new S,qr=new S;function oM(s){const e=s?.userData?.textureBudget;if(typeof e=="string"){const t=e.toLowerCase();return t==="distant"||t==="far"}return!!s?.userData?.textureBudgetDistant}function cM(s){return!!(s?.userData?.textureBudgetSmall||s?.userData?.smallObject)}function lM(s){if(!s)return!1;if(oM(s))return!0;const e=s?.userData?.distanceToCamera;if(Number.isFinite(e))return e>lu;try{if(typeof s.getWorldPosition=="function")return s.getWorldPosition(Pc),Pc.length()>lu;if(s.matrixWorld)return Pc.setFromMatrixPosition(s.matrixWorld),Pc.length()>lu}catch{}return!1}function hM(s){if(!s)return!1;if(cM(s))return!0;try{typeof s.getWorldScale=="function"?s.getWorldScale(qr):s.scale?qr.copy(s.scale):qr.set(1,1,1);const e=(Math.abs(qr.x)+Math.abs(qr.y)+Math.abs(qr.z))/3;if(e<rM)return!0;if(s.isMesh&&s.geometry){const t=s.geometry;let n=t.boundingSphere?.radius;if(!Number.isFinite(n)&&typeof t.computeBoundingSphere=="function"&&(t.computeBoundingSphere(),n=t.boundingSphere?.radius),Number.isFinite(n)&&n*e<aM)return!0}}catch{}return!1}function uM(s,e){const t=lM(s),n=hM(s);return e==="map"?Number.POSITIVE_INFINITY:e==="roughnessMap"||e==="aoMap"?t?1:6:e==="normalMap"?n?2:8:e==="metalnessMap"||e==="specularIntensityMap"?10:e==="displacementMap"||e==="bumpMap"||e==="lightMap"?12:e==="emissiveMap"?14:20}function hi(s){return!!(s&&typeof s=="object"&&s.isTexture)}function dM(s){return s?s.renderer?s.renderer:s.scene?.userData?.renderer?s.scene.userData.renderer:null:null}function n0(s){const e=dM(s);if(Number.isFinite(s?.maxTextures))return Math.max(1,Math.floor(s.maxTextures));const t=e?.capabilities;if(t){const n=t.maxTextures??t.maxTextureUnits??t.maxFragmentTextures??t.maxFragmentUniforms;if(Number.isFinite(n))return Math.max(1,Math.floor(n))}return nM}function fM(s){const e=new Set(jc.concat(t0));for(const t in s)t&&t.endsWith("Map")&&e.add(t);return Array.from(e)}function i0(s){const e=fM(s),t=[];for(const n of e)hi(s[n])&&t.push(n);return t}function hu(s,e,t){if(!t||!s)return;const n=i0(s);!t.countedMaterials.has(s)&&(t.countedMaterials.add(s),t.active+=n.length);for(const r of n){if(r==="map")continue;const a=uM(e,r);if(!Number.isFinite(a))continue;const o=`${s.uuid}:${r}`,c=t.candidates.get(o);(!c||a<c.priority)&&t.candidates.set(o,{material:s,slot:r,priority:a,key:o})}}function pM(s){if(!s||s.active<=s.limit)return;const e=Array.from(s.candidates.values());e.sort((t,n)=>t.priority===n.priority?t.slot.localeCompare(n.slot):t.priority-n.priority);for(const t of e){if(s.active<=s.limit)break;const{material:n,slot:i,key:r}=t;if(!n||!hi(n[i])){s.candidates.delete(r);continue}Zc(n,i)&&(s.candidates.delete(r),s.active=Math.max(0,s.active-1))}}function Zc(s,e){if(!e||!hi(s[e]))return!1;s[e]=null;const t=sM[e];return t&&t(s),s.needsUpdate!==!0&&(s.needsUpdate=!0),!0}function AM(s){if(!s?.isMeshPhysicalMaterial)return!1;const e=(s.clearcoat??0)>.001||hi(s.clearcoatMap)||hi(s.clearcoatNormalMap)||hi(s.clearcoatRoughnessMap),t=(s.sheen??0)>.001||s.sheenColor?.isColor&&s.sheenColor.getHex()!==0||hi(s.sheenColorMap)||hi(s.sheenRoughnessMap),n=(s.transmission??0)>.001||hi(s.transmissionMap)||(s.thickness??0)>.001||hi(s.thicknessMap),i=(s.iridescence??0)>.001||hi(s.iridescenceMap)||hi(s.iridescenceThicknessMap);return e||t||n||i}function mM(s,e,t){if(!s?.isMeshPhysicalMaterial)return null;const i=n0(e)<=iM;if(!t&&!i||AM(s))return null;const r=new tt;return r.copy(s),r.name=s.name,r.userData={...s.userData||{}},r.onBeforeCompile=s.onBeforeCompile,typeof s.customProgramCacheKey=="function"&&(r.customProgramCacheKey=()=>s.customProgramCacheKey.call(r)),r.needsUpdate=!0,r}function gM(s,e){if(!s)return s;const t=qs.get(s);if(t)return t;if(s.userData?.textureBudget==="skip"||s.userData?.textureBudgetSkip)return qs.set(s,s),s;const n=i0(s),i=Math.max(3,n0(e));if(n.length<=i)return qs.set(s,s),s;const r=new Set(n);let a=!1;for(const c of t0)if(r.has(c)&&!jc.includes(c)&&Zc(s,c)&&(r.delete(c),a=!0,r.size<=i))break;if(r.size>i){for(const c of n)if(r.has(c)&&!jc.includes(c)&&Zc(s,c)&&(r.delete(c),a=!0,r.size<=i))break}if(r.size>i){for(const c of jc.filter(l=>l!=="map"))if(r.has(c)&&Zc(s,c)&&(r.delete(c),a=!0,r.size<=i))break}if(r.size>i)return qs.set(s,s),s;const o=mM(s,e,a);return o&&o!==s?(qs.set(s,o),qs.set(o,o),o):(qs.set(s,s),s)}function Pl(s,e={}){return s&&(Array.isArray(s)?s.map(t=>Pl(t,e)):gM(s,e))}function jd(s,e={}){if(!s||typeof s.traverse!="function")return;const n=e.safeMode===!0?{limit:Math.max(1,Math.floor(Number.isFinite(e.safeModeLimit)?Math.min(e.safeModeLimit,jp):jp)),active:0,countedMaterials:new WeakSet,candidates:new Map}:null;s.traverse(i=>{const r=i.material;if(r)if(Array.isArray(r)){let a=!1;const o=r.map(l=>{const h=Pl(l,e);return h&&h!==l&&(a=!0),h});a&&(i.material=o);const c=Array.isArray(i.material)?i.material:[i.material];for(const l of c)hu(l,i,n)}else{const a=Pl(r,e);a&&a!==r?(i.material=a,hu(a,i,n)):hu(r,i,n)}}),n&&pM(n)}function yM(s,e){const t=Math.floor(s),n=Math.floor(e),i=s-t,r=e-n,a=new Array(4);for(let A=0;A<4;A++){const x=t+(A&1),b=n+(A>>1),y=Math.sin(x*374761393+b*668265263)*43758.5453,_=y-Math.floor(y);a[A]={x:Math.cos(_*Math.PI*2),z:Math.sin(_*Math.PI*2)}}const o=a[0].x*i+a[0].z*r,c=a[1].x*(i-1)+a[1].z*r,l=a[2].x*i+a[2].z*(r-1),h=a[3].x*(i-1)+a[3].z*(r-1),u=A=>A*A*A*(A*(A*6-15)+10),d=u(i),f=u(r),p=(A,x,b)=>A+(x-A)*b,g=p(o,c,d),m=p(l,h,d);return p(g,m,f)}function bM(s,e,t,n,i){let r=1,a=1,o=0,c=0;for(let l=0;l<t;l++)o+=yM(s*a,e*a)*r,c+=r,r*=n,a*=i;return o/c}const Lc=new S,xM=18,Zp=70;function _M(s){const n=new pi(500,500,256,256),i=n.attributes.position,r=i.count,a=new Float32Array(r),o=new Float32Array(r*3),c=new ht(o,3);n.setAttribute("color",c);const l=new ae,h=25,u=.01,d=new $(Gt.x,Gt.z),f=Math.max(48,Ju*.65),p=Math.max(f+32,Ju*1.05),g=Gt.y;for(let C=0;C<r;C++){const T=i.getX(C),v=i.getY(C);let E=bM(T*u,v*u,5,.5,2.1)*h;const B=T-Wp.x,D=v-Wp.y,F=Math.hypot(B,D);if(F<Zp){const G=1-ue.smoothstep(F,xM,Zp);G>0&&(E=ue.lerp(E,OC,G))}{const G=T-d.x,k=v-d.y,J=Math.hypot(G,k);if(J<p){const U=ue.clamp((J-f)/Math.max(.001,p-f),0,1),ee=U*U*(3-2*U);E=ue.lerp(g,E,ee)}}i.setZ(C,E),a[C]=E;const N=ue.clamp((E+h)/(h*2),0,1);N<.42?l.setRGB(.3,.55,.22):N<.72?l.setRGB(.43,.31,.18):l.setRGB(.62,.62,.62),c.setXYZ(C,l.r,l.g,l.b)}if(i.needsUpdate=!0,c.needsUpdate=!0,n.computeVertexNormals(),n.userData.baseHeights=a,n.userData.segmentCount=256,n.userData.size=500,!n.getAttribute("basePos")){const C=new ht(new Float32Array(i.array),3);n.setAttribute("basePos",C)}let m=new tt({color:10727051,roughness:.9,metalness:0,vertexColors:!0});const A=eM(m,Zg),x=A.detailLayers.length>0,b=n.getAttribute("basePos"),y={uTime:{value:0},uWindStrength:{value:.18},uWindFreq:{value:.15},uCityCenter:{value:new $(Gt.x,Gt.z)},uCityInner:{value:f},uCityOuter:{value:p}};m.onBeforeCompile=C=>{C.uniforms.uTime=y.uTime,C.uniforms.uWindStrength=y.uWindStrength,C.uniforms.uWindFreq=y.uWindFreq,C.uniforms.uCityCenter=y.uCityCenter,C.uniforms.uCityInner=y.uCityInner,C.uniforms.uCityOuter=y.uCityOuter,C.vertexShader=`
      uniform float uTime;
      uniform float uWindStrength;
      uniform float uWindFreq;
      uniform vec2 uCityCenter;
      uniform float uCityInner;
      uniform float uCityOuter;
      ${x?"varying float vGroundHeight;":""}
      attribute vec3 basePos;
    `+C.vertexShader,C.vertexShader=C.vertexShader.replace("#include <begin_vertex>",`
        // Start from the stored base position. PlaneGeometry is XY with height in Z.
        vec3 transformed = basePos;
${x?`
        vGroundHeight = basePos.z;`:""}

        // Measure distance to the city center in the ground plane (object-space XY).
        float dx = basePos.x - uCityCenter.x;
        float dz = basePos.y - uCityCenter.y;
        float dCity = sqrt(dx * dx + dz * dz);

        float cityFactor = 1.0;
        if (dCity <= uCityInner) {
          cityFactor = 0.0;
        } else if (dCity < uCityOuter) {
          float t = (dCity - uCityInner) / max(0.0001, (uCityOuter - uCityInner));
          cityFactor = clamp(t, 0.0, 1.0);
        }

        float swayPhase = (basePos.x + basePos.y) * uWindFreq + uTime * 0.5;
        float sway = sin(swayPhase) * 0.3;
        transformed.z += sway * uWindStrength * cityFactor;
      `),x&&(C.fragmentShader.includes("varying float vGroundHeight")||(C.fragmentShader=`varying float vGroundHeight;
${C.fragmentShader}`),tM(C,A))},m=Pl(m,{renderer:s?.userData?.renderer??null});const _=new Be(n,m);_.rotation.x=-Math.PI/2,_.receiveShadow=!0,_.name="Terrain",s.add(_);const w=257;return _.userData.getHeightAt=(C,T)=>{Lc.set(C,0,T),_.worldToLocal(Lc);const v=500/2,E=Lc.x+v,B=Lc.z+v;if(E<0||E>500||B<0||B>500)return null;const D=E/500,F=B/500,N=D*256,G=F*256,k=Math.floor(N),J=Math.min(k+1,256),U=Math.floor(G),ee=Math.min(U+1,256),Ae=N-k,oe=G-U,Me=U*w+k,Ne=U*w+J,st=ee*w+k,Oe=ee*w+J,K=_.userData.swayUniforms,X=de=>{if(!K)return 0;const ne=K.uWindStrength?.value??0;if(ne===0)return 0;const ie=b.getX(de),te=b.getY(de),_e=K.uCityCenter?.value,le=K.uCityInner?.value??0,ve=K.uCityOuter?.value??le;let nt=1;if(_e){const W=ie-_e.x,Y=te-_e.y,he=Math.hypot(W,Y);if(he<=le)nt=0;else if(he<ve){const Z=Math.max(1e-4,ve-le),Ge=(he-le)/Z;nt=ue.clamp(Ge,0,1)}}if(nt===0)return 0;const Ze=K.uWindFreq?.value??0,R=K.uTime?.value??0,I=(ie+te)*Ze+R*.5;return Math.sin(I)*.3*ne*nt},Re=a[Me]+X(Me),Ue=a[Ne]+X(Ne),Qe=a[st]+X(st),at=a[Oe]+X(Oe),_t=Re+(Ue-Re)*Ae,P=Qe+(at-Qe)*Ae;return _t+(P-_t)*oe},_.userData.swayUniforms=y,_.userData.groundTextureState=A,_}function EM(s,e){if(!s)return;const t=s.userData.swayUniforms;t&&(t.uTime.value=e)}class vM extends Be{constructor(e,t={}){super(e),this.isWater=!0;const n=this,i=t.textureWidth!==void 0?t.textureWidth:512,r=t.textureHeight!==void 0?t.textureHeight:512,a=t.clipBias!==void 0?t.clipBias:0,o=t.alpha!==void 0?t.alpha:1,c=t.time!==void 0?t.time:0,l=t.waterNormals!==void 0?t.waterNormals:null,h=t.sunDirection!==void 0?t.sunDirection:new S(.70707,.70707,0),u=new ae(t.sunColor!==void 0?t.sunColor:16777215),d=new ae(t.waterColor!==void 0?t.waterColor:8355711),f=t.eye!==void 0?t.eye:new S(0,0,0),p=t.distortionScale!==void 0?t.distortionScale:20,g=t.side!==void 0?t.side:wi,m=t.fog!==void 0?t.fog:!1,A=new Vn,x=new S,b=new S,y=new S,_=new Ke,w=new S(0,0,-1),C=new wt,T=new S,v=new S,E=new wt,B=new Ke,D=new $t,F=new Si(i,r),N={name:"MirrorShader",uniforms:mo.merge([Pe.fog,Pe.lights,{normalSampler:{value:null},mirrorSampler:{value:null},alpha:{value:1},time:{value:0},size:{value:1},distortionScale:{value:20},textureMatrix:{value:new Ke},sunColor:{value:new ae(8355711)},sunDirection:{value:new S(.70707,.70707,0)},eye:{value:new S},waterColor:{value:new ae(5592405)}}]),vertexShader:`
				uniform mat4 textureMatrix;
				uniform float time;

				varying vec4 mirrorCoord;
				varying vec4 worldPosition;

				#include <common>
				#include <fog_pars_vertex>
				#include <shadowmap_pars_vertex>
				#include <logdepthbuf_pars_vertex>

				void main() {
					mirrorCoord = modelMatrix * vec4( position, 1.0 );
					worldPosition = mirrorCoord.xyzw;
					mirrorCoord = textureMatrix * mirrorCoord;
					vec4 mvPosition =  modelViewMatrix * vec4( position, 1.0 );
					gl_Position = projectionMatrix * mvPosition;

				#include <beginnormal_vertex>
				#include <defaultnormal_vertex>
				#include <logdepthbuf_vertex>
				#include <fog_vertex>
				#include <shadowmap_vertex>
			}`,fragmentShader:`
				uniform sampler2D mirrorSampler;
				uniform float alpha;
				uniform float time;
				uniform float size;
				uniform float distortionScale;
				uniform sampler2D normalSampler;
				uniform vec3 sunColor;
				uniform vec3 sunDirection;
				uniform vec3 eye;
				uniform vec3 waterColor;

				varying vec4 mirrorCoord;
				varying vec4 worldPosition;

				vec4 getNoise( vec2 uv ) {
					vec2 uv0 = ( uv / 103.0 ) + vec2(time / 17.0, time / 29.0);
					vec2 uv1 = uv / 107.0-vec2( time / -19.0, time / 31.0 );
					vec2 uv2 = uv / vec2( 8907.0, 9803.0 ) + vec2( time / 101.0, time / 97.0 );
					vec2 uv3 = uv / vec2( 1091.0, 1027.0 ) - vec2( time / 109.0, time / -113.0 );
					vec4 noise = texture2D( normalSampler, uv0 ) +
						texture2D( normalSampler, uv1 ) +
						texture2D( normalSampler, uv2 ) +
						texture2D( normalSampler, uv3 );
					return noise * 0.5 - 1.0;
				}

				void sunLight( const vec3 surfaceNormal, const vec3 eyeDirection, float shiny, float spec, float diffuse, inout vec3 diffuseColor, inout vec3 specularColor ) {
					vec3 reflection = normalize( reflect( -sunDirection, surfaceNormal ) );
					float direction = max( 0.0, dot( eyeDirection, reflection ) );
					specularColor += pow( direction, shiny ) * sunColor * spec;
					diffuseColor += max( dot( sunDirection, surfaceNormal ), 0.0 ) * sunColor * diffuse;
				}

				#include <common>
				#include <packing>
				#include <bsdfs>
				#include <fog_pars_fragment>
				#include <logdepthbuf_pars_fragment>
				#include <lights_pars_begin>
				#include <shadowmap_pars_fragment>
				#include <shadowmask_pars_fragment>

				void main() {

					#include <logdepthbuf_fragment>
					vec4 noise = getNoise( worldPosition.xz * size );
					vec3 surfaceNormal = normalize( noise.xzy * vec3( 1.5, 1.0, 1.5 ) );

					vec3 diffuseLight = vec3(0.0);
					vec3 specularLight = vec3(0.0);

					vec3 worldToEye = eye-worldPosition.xyz;
					vec3 eyeDirection = normalize( worldToEye );
					sunLight( surfaceNormal, eyeDirection, 100.0, 2.0, 0.5, diffuseLight, specularLight );

					float distance = length(worldToEye);

					vec2 distortion = surfaceNormal.xz * ( 0.001 + 1.0 / distance ) * distortionScale;
					vec3 reflectionSample = vec3( texture2D( mirrorSampler, mirrorCoord.xy / mirrorCoord.w + distortion ) );

					float theta = max( dot( eyeDirection, surfaceNormal ), 0.0 );
					float rf0 = 0.3;
					float reflectance = rf0 + ( 1.0 - rf0 ) * pow( ( 1.0 - theta ), 5.0 );
					vec3 scatter = max( 0.0, dot( surfaceNormal, eyeDirection ) ) * waterColor;
					vec3 albedo = mix( ( sunColor * diffuseLight * 0.3 + scatter ) * getShadowMask(), ( vec3( 0.1 ) + reflectionSample * 0.9 + reflectionSample * specularLight ), reflectance);
					vec3 outgoingLight = albedo;
					gl_FragColor = vec4( outgoingLight, alpha );

					#include <tonemapping_fragment>
					#include <colorspace_fragment>
					#include <fog_fragment>	
				}`},G=new Yn({name:N.name,uniforms:mo.clone(N.uniforms),vertexShader:N.vertexShader,fragmentShader:N.fragmentShader,lights:!0,side:g,fog:m});G.uniforms.mirrorSampler.value=F.texture,G.uniforms.textureMatrix.value=B,G.uniforms.alpha.value=o,G.uniforms.time.value=c,G.uniforms.normalSampler.value=l,G.uniforms.sunColor.value=u,G.uniforms.waterColor.value=d,G.uniforms.sunDirection.value=h,G.uniforms.distortionScale.value=p,G.uniforms.eye.value=f,n.material=G,n.onBeforeRender=function(k,J,U){if(b.setFromMatrixPosition(n.matrixWorld),y.setFromMatrixPosition(U.matrixWorld),_.extractRotation(n.matrixWorld),x.set(0,0,1),x.applyMatrix4(_),T.subVectors(b,y),T.dot(x)>0)return;T.reflect(x).negate(),T.add(b),_.extractRotation(U.matrixWorld),w.set(0,0,-1),w.applyMatrix4(_),w.add(y),v.subVectors(b,w),v.reflect(x).negate(),v.add(b),D.position.copy(T),D.up.set(0,1,0),D.up.applyMatrix4(_),D.up.reflect(x),D.lookAt(v),D.far=U.far,D.updateMatrixWorld(),D.projectionMatrix.copy(U.projectionMatrix),B.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),B.multiply(D.projectionMatrix),B.multiply(D.matrixWorldInverse),A.setFromNormalAndCoplanarPoint(x,b),A.applyMatrix4(D.matrixWorldInverse),C.set(A.normal.x,A.normal.y,A.normal.z,A.constant);const ee=D.projectionMatrix;E.x=(Math.sign(C.x)+ee.elements[8])/ee.elements[0],E.y=(Math.sign(C.y)+ee.elements[9])/ee.elements[5],E.z=-1,E.w=(1+ee.elements[10])/ee.elements[14],C.multiplyScalar(2/C.dot(E)),ee.elements[2]=C.x,ee.elements[6]=C.y,ee.elements[10]=C.z+1-a,ee.elements[14]=C.w,f.setFromMatrixPosition(U.matrixWorld);const Ae=k.getRenderTarget(),oe=k.xr.enabled,Me=k.shadowMap.autoUpdate;n.visible=!1,k.xr.enabled=!1,k.shadowMap.autoUpdate=!1,k.setRenderTarget(F),k.state.buffers.depth.setMask(!0),k.autoClear===!1&&k.clear(),k.render(J,D),n.visible=!0,k.xr.enabled=oe,k.shadowMap.autoUpdate=Me,k.setRenderTarget(Ae);const Ne=U.viewport;Ne!==void 0&&k.state.viewport(Ne)}}}function $p(s,e,t){const n=Math.pow(2,t),i=(s*n+e*n*1.3)*.12;return Math.sin(i*1.7+t*1.1)*.6}function wM(s=256){const e=new Uint8Array(s*s*4);for(let n=0;n<s;n++)for(let i=0;i<s;i++){let r=0,a=0;for(let l=0;l<4;l++){const h=1/Math.pow(2,l);r+=$p(i,n,l)*h,a+=$p(n,i,l)*h}const o=Math.sqrt(Math.max(0,1-r*r-a*a)),c=(n*s+i)*4;e[c]=Math.floor((r*.5+.5)*255),e[c+1]=Math.floor((a*.5+.5)*255),e[c+2]=Math.floor((o*.5+.5)*255),e[c+3]=255}const t=new qn(e,s,s,zt);return t.wrapS=On,t.wrapT=On,t.anisotropy=4,t.needsUpdate=!0,t}const s0=new ae(1724032),SM=new ae(597034),CM=new ae,MM=-117;let uu=null;function IM(s){return s&&Number.isFinite(s.devicePixelRatio)?s.devicePixelRatio:typeof window<"u"&&window.devicePixelRatio?window.devicePixelRatio:1}function TM(s){const e=s?.baseTextureSize??512,t=ue.clamp(IM(s),.75,3),n=Math.round(e*t);return ue.clamp(n,256,2048)}async function BM(s,e={}){uu||(uu=wM());const t=TM(e);s.traverse(w=>{w&&(w.name==="AegeanOcean"||w.userData?.isWater)&&w.parent?.remove(w)});const n=Number.isFinite(e.position?.x)?e.position.x:cu.x,i=Number.isFinite(e.position?.z)?e.position.z:cu.z,r=Number.isFinite(e.size?.x)?e.size.x:qp.x,a=Number.isFinite(e.size?.y)?e.size.y:qp.y,o=e?.bounds&&["west","east","north","south"].every(w=>Number.isFinite(e.bounds[w]));let c,l,h,u;if(o)({west:c,east:l,north:h,south:u}=e.bounds);else{const w=r*.5,C=a*.5,T=0,v=n,E=i,B=E-C,D=E+T;c=v-w,l=v+w,h=B,u=D}c>l&&([c,l]=[l,c]),h>u&&([h,u]=[u,h]);const d=Math.max(.1,l-c),f=Math.max(.1,u-h),p=new pi(d,f,1,1),g=new vM(p,{textureWidth:t,textureHeight:t,waterNormals:uu,sunDirection:new S(.707,.5,.5).normalize(),sunColor:15923455,waterColor:s0.clone(),distortionScale:3.2,fog:!!s.fog}),m=(c+l)*.5,A=(h+u)*.5;g.rotation.x=-Math.PI/2,g.position.set(m,cu.y,A);const x=(l-c)*.5,b=Math.max(h,MM),y=Math.max(u,b),_=[new Vn(new S(1,0,0),-(m-x)),new Vn(new S(-1,0,0),m+x),new Vn(new S(0,0,-1),y),new Vn(new S(0,0,1),-b)];if(g.material&&(g.material.clippingPlanes=_,g.material.clipIntersection=!0,g.material.depthWrite=!0,g.material.transparent=!0,g.material.needsUpdate=!0,typeof window<"u"&&window.location?.search?.includes("waterdbg=1"))){const w=s.getObjectByName("WaterClipDebug");w&&s.remove(w),RM(s,c,l,b,y)}return g.receiveShadow=!0,g.name="AegeanOcean",g.userData.noCollision=!0,g.userData.isWater=!0,g.renderOrder=-1,s.add(g),{mesh:g,uniforms:g.material.uniforms}}function RM(s,e,t,n,i){const r=new $e().setFromPoints([new S(e,0,n),new S(t,0,n),new S(t,0,i),new S(e,0,i),new S(e,0,n)]),a=new Qi(r,new bn({transparent:!0,opacity:.8}));return a.position.y=ot+.02,a.name="WaterClipDebug",s.add(a),a}function eA(s,e=0,t,n=0){if(!s)return;const i=s.uniforms??s.mesh?.material?.uniforms;if(!i)return;Number.isFinite(e)&&(i.time.value+=e),t&&i.sunDirection&&i.sunDirection.value.copy(t);const r=ue.clamp(typeof n=="number"?n:0,0,1);i.distortionScale&&(i.distortionScale.value=ue.lerp(3.2,1.2,r)),i.waterColor&&i.waterColor.value.copy(CM.copy(s0).lerp(SM,r))}const tA=new Ke,nA=new S,DM=new S(1,1,1),PM=new an;function ji(s){s.castShadow=!0,s.receiveShadow=!0}function du(s){return new tt({color:s,roughness:.75,metalness:.05})}function fu(s,e){const{width:t,length:n,spacing:i,offsetX:r=0,offsetZ:a=0,deckHeight:o,postHeight:c,inset:l=.6}=e,h=t/2-l,u=n/2-l,d=o-c;for(let f=-u;f<=u+.001;f+=i)s.push({x:r-h,y:d,z:a+f}),s.push({x:r+h,y:d,z:a+f})}function iA(s,e,{height:t,radiusTop:n,radiusBottom:i,material:r}){if(!e||e.length===0)return null;const a=new Dt(n,i,t,12);a.translate(0,t/2,0);const o=new Ln(a,r,e.length);o.name=s,o.castShadow=!0,o.receiveShadow=!0;for(let c=0;c<e.length;c++){const l=e[c];nA.set(l.x,l.y,l.z),tA.compose(nA,PM,DM),o.setMatrixAt(c,tA)}return o.instanceMatrix.needsUpdate=!0,o}function LM(s,e={}){const t=e.center?e.center.clone():kn.clone(),n=e.mainLength??70,i=e.mainWidth??9,r=e.deckHeight??1.4,a=e.approachLength??32,o=e.spurLength??24,c=e.postSpacing??6,l=du(8084287),h=du(4864551),u=new tt({color:14274995,roughness:.4,metalness:.1}),d=new bt;d.name="Harbor",d.position.copy(t);const f=new Be(new Ft(i,.6,n),l);f.position.y=r,ji(f),d.add(f);const p=[],g=r+3;fu(p,{width:i,length:n,spacing:c,deckHeight:r,postHeight:g}),fu(p,{width:i-4,length:o,spacing:c,deckHeight:r,postHeight:g,offsetX:-i/2+1.2,offsetZ:o/2+2}),fu(p,{width:i-4,length:o,spacing:c,deckHeight:r,postHeight:g,offsetX:-i/2+1.2,offsetZ:-(o/2+2)});const m=iA("HarborPierPosts",p,{height:g,radiusTop:.45,radiusBottom:.55,material:h});m&&d.add(m);const A=new Be(new Ft(a,.5,i-2),l);A.position.set(i/2+a/2,r,0),ji(A),d.add(A);const x=r+3,b=(i-2)/2-.6,y=[],_=i/2+a/2,w=r-x;for(let X=-a/2;X<=a/2+.001;X+=c)y.push({x:_+X,y:w,z:-b}),y.push({x:_+X,y:w,z:b});const C=iA("HarborWalkwayPosts",y,{height:x,radiusTop:.4,radiusBottom:.5,material:h});C&&d.add(C);const T=new Be(new Ft(i-4,.45,o),l);T.position.set(-i/2+1.2,r,o/2+2),ji(T),d.add(T);const v=T.clone();v.position.z=-(o/2+2),d.add(v);const E=new Ft(.2,1.1,n),B=new Be(E,u);B.position.set(-i/2+.6,r+.8,0),ji(B),d.add(B);const D=B.clone();D.position.x=i/2-.6,d.add(D);const F=new Dt(.35,.35,.8,16),N=new tt({color:2961461,roughness:.6,metalness:.4}),G=[new S(-i/2+1.3,r+.4,o+3),new S(-i/2+1.3,r+.4,-o-3),new S(i/2-1.3,r+.4,n/2-6),new S(i/2-1.3,r+.4,-n/2+6)];for(const X of G){const Re=new Be(F,N);Re.position.copy(X),ji(Re),d.add(Re)}const k=du(9399109),J=new Be(new Ft(2.4,2.4,2.4),k);J.position.set(i/2-2,r+1.2,-n/4),ji(J),d.add(J);const U=new Be(new Ft(1.6,1.6,1.6),k);U.position.set(i/2-3.4,r+.8,-n/4+3),ji(U),d.add(U);const ee=new Be(new Ft(1.8,1.8,1.8),k);ee.position.set(i/2-2.4,r+.9,-n/4-2.4),ji(ee),d.add(ee);const Ae=new bt;Ae.name="HarborLamp",Ae.position.set(i/2+a-4,0,0);const oe=new Be(new Dt(.12,.16,4,16),u);oe.position.y=2,oe.castShadow=!0,oe.receiveShadow=!1,Ae.add(oe);const Me=new Be(new Ft(.2,.2,1.6),u);Me.position.set(0,3.4,.6),ji(Me),Ae.add(Me);const Ne=new tt({color:16777215,emissive:new ae(16773832),emissiveIntensity:0}),st=new Be(new Xn(.28,16,16),Ne);st.position.set(0,3.2,1.2),st.castShadow=!1,Ae.add(st);const Oe=new is(16773832,0,18,2);Oe.position.copy(st.position),Oe.castShadow=!1,Ae.add(Oe);const K={light:Oe,material:Ne,baseIntensity:1.4,overrideState:null};return Ae.userData.interactable=!0,Ae.userData.highlightTarget=st,Ae.userData.light=Oe,Ae.userData.onUse=()=>{const X=K.overrideState;X===null?K.overrideState=!0:X===!0?K.overrideState=!1:K.overrideState=null},d.userData.lamp=K,d.add(Ae),d.userData.posts={pier:m,walkway:C},s.add(d),d}function sA(s,e=0){if(!s)return;const t=s.userData?.lamp;if(!t)return;const n=ue.clamp(e,0,1);let i=ue.lerp(0,t.baseIntensity,n);if(t.overrideState===!0?i=t.baseIntensity:t.overrideState===!1&&(i=0),t.light.intensity=i,t.material){const r=t.baseIntensity>0?i/t.baseIntensity:0;t.material.emissiveIntensity=r>0?1.6*r:0}}function FM(s,e){const t=[kn.clone().add(new S(8,0,-10)),kn.clone().lerp(Gt,.4).add(new S(-10,2,6)),Gt.clone(),Gt.clone().lerp(nn,.6).add(new S(6,2,-4)),nn.clone()],n=new Po(t,!1,"catmullrom",.1),i=180,r=kC,a=new pi(r,1,1,i),o=a.attributes.position,c=new S,l=new S,h=e?.userData?.getHeightAt?.bind(e?.userData);for(let p=0;p<=i;p++){const g=p/i,m=n.getPoint(g),A=n.getPoint(Math.min(1,g+1/i));c.subVectors(A,m).normalize();const x=Math.atan2(c.x,c.z);for(let b=0;b<2;b++){const y=p*2+b,_=b===0?-.5:.5;l.set(Math.sin(x)*_*r,0,Math.cos(x)*_*r);const w=m.x+l.x,C=m.z+l.z;let T=h?h(w,C):m.y;Number.isFinite(T)||(T=m.y),T+=.08,o.setXYZ(y,w,T,C)}}o.needsUpdate=!0,a.computeVertexNormals();const u=new tt({color:9079434,roughness:1,metalness:0,side:An}),d=new Be(a,u);d.renderOrder=1,d.receiveShadow=!0,d.name="MainHillRoad";const f=new bt;return f.name="Roads",f.add(d),s.add(f),{group:f,curve:n,mesh:d}}function ju(s,e=!1){const t=s[0].index!==null,n=new Set(Object.keys(s[0].attributes)),i=new Set(Object.keys(s[0].morphAttributes)),r={},a={},o=s[0].morphTargetsRelative,c=new $e;let l=0;for(let h=0;h<s.length;++h){const u=s[h];let d=0;if(t!==(u.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const f in u.attributes){if(!n.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+'. All geometries must have compatible attributes; make sure "'+f+'" attribute exists among all geometries, or in none of them.'),null;r[f]===void 0&&(r[f]=[]),r[f].push(u.attributes[f]),d++}if(d!==n.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". Make sure all geometries have the same number of attributes."),null;if(o!==u.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const f in u.morphAttributes){if(!i.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+".  .morphAttributes must be consistent throughout all geometries."),null;a[f]===void 0&&(a[f]=[]),a[f].push(u.morphAttributes[f])}if(e){let f;if(t)f=u.index.count;else if(u.attributes.position!==void 0)f=u.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". The geometry must have either an index or a position attribute"),null;c.addGroup(l,f,h),l+=f}}if(t){let h=0;const u=[];for(let d=0;d<s.length;++d){const f=s[d].index;for(let p=0;p<f.count;++p)u.push(f.getX(p)+h);h+=s[d].attributes.position.count}c.setIndex(u)}for(const h in r){const u=rA(r[h]);if(!u)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" attribute."),null;c.setAttribute(h,u)}for(const h in a){const u=a[h][0].length;if(u===0)break;c.morphAttributes=c.morphAttributes||{},c.morphAttributes[h]=[];for(let d=0;d<u;++d){const f=[];for(let g=0;g<a[h].length;++g)f.push(a[h][g][d]);const p=rA(f);if(!p)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" morphAttribute."),null;c.morphAttributes[h].push(p)}}return c}function rA(s){let e,t,n,i=-1,r=0;for(let l=0;l<s.length;++l){const h=s[l];if(e===void 0&&(e=h.array.constructor),e!==h.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(t===void 0&&(t=h.itemSize),t!==h.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(n===void 0&&(n=h.normalized),n!==h.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(i===-1&&(i=h.gpuType),i!==h.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;r+=h.count*t}const a=new e(r),o=new ht(a,t,n);let c=0;for(let l=0;l<s.length;++l){const h=s[l];if(h.isInterleavedBufferAttribute){const u=c/t;for(let d=0,f=h.count;d<f;d++)for(let p=0;p<t;p++){const g=h.getComponent(d,p);o.setComponent(d+u,p,g)}}else a.set(h.array,c);c+=h.count*t}return i!==void 0&&(o.gpuType=i),o}function aA(s,e){if(e===Bm)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),s;if(e===Cl||e===Ad){let t=s.getIndex();if(t===null){const a=[],o=s.getAttribute("position");if(o!==void 0){for(let c=0;c<o.count;c++)a.push(c);s.setIndex(a),t=s.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),s}const n=t.count-2,i=[];if(e===Cl)for(let a=1;a<=n;a++)i.push(t.getX(0)),i.push(t.getX(a)),i.push(t.getX(a+1));else for(let a=0;a<n;a++)a%2===0?(i.push(t.getX(a)),i.push(t.getX(a+1)),i.push(t.getX(a+2))):(i.push(t.getX(a+2)),i.push(t.getX(a+1)),i.push(t.getX(a)));i.length/3!==n&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const r=s.clone();return r.setIndex(i),r.clearGroups(),r}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),s}const pu=new S,oA=new S,Xr=new S,Fc=new S,Uc=new S,UM=new S(0,1,0),cA=new Set;function NM(s,e){return`${Math.round(s)}|${Math.round(e)}`}function kM(s){if(!s)return null;if(Array.isArray(s)&&s.length>=2){const[n,i]=s;return Number.isFinite(n)&&Number.isFinite(i)?{gx:n,gz:i}:null}const e=Number.isFinite(s.gx)?s.gx:Number.isFinite(s.x)?s.x:null,t=Number.isFinite(s.gz)?s.gz:Number.isFinite(s.z)?s.z:Number.isFinite(s.y)?s.y:null;return e==null||t==null?null:{gx:e,gz:t}}function OM(s,e){const t=s*6,n=e*(s+1)>65535?Uint32Array:Uint16Array;return new n(t)}function QM(s,e,t={}){const n=e??t.points;if(!n||n.length<2)throw new Error("createRoad requires at least two control points");const i=Array.isArray(t.gridCells)?t.gridCells:t.gridCell?[t.gridCell]:t.grid?[t.grid]:t.gridPosition?[t.gridPosition]:null;if(i&&i.length>0){let w=!1;for(const C of i){const T=kM(C);if(!T)continue;const v=NM(T.gx,T.gz);cA.has(v)||(cA.add(v),w=!0)}if(!w)return null}const r=t.width??4,a=t.tension??.5,o=!!t.closed,c=r/2,l=new Po(n,o,"centripetal",a),h=t.segments??Math.max(16,n.length*8),u=(h+1)*2,d=new Float32Array(u*3),f=new Float32Array(u*2),p=OM(h,2);let g=0,m=0;const A=t.yOffset??.2;for(let w=0;w<=h;w++){const C=w/h;l.getPointAt(C,pu),l.getTangentAt(C,oA).normalize(),Xr.crossVectors(UM,oA),Xr.lengthSq()<1e-6?Xr.set(1,0,0):Xr.normalize(),Fc.copy(pu).addScaledVector(Xr,c),Uc.copy(pu).addScaledVector(Xr,-c),d[g++]=Fc.x,d[g++]=Fc.y+A,d[g++]=Fc.z,d[g++]=Uc.x,d[g++]=Uc.y+A,d[g++]=Uc.z;const T=C*(t.uvScale??1);f[m++]=0,f[m++]=T,f[m++]=1,f[m++]=T}let x=0;for(let w=0;w<h;w++){const C=w*2;p[x++]=C,p[x++]=C+1,p[x++]=C+2,p[x++]=C+1,p[x++]=C+3,p[x++]=C+2}const b=new $e;b.setAttribute("position",new ht(d,3)),b.setAttribute("uv",new ht(f,2)),b.setIndex(new ht(p,1)),b.computeVertexNormals();const y=new tt({color:t.color??15773006,roughness:.95,metalness:.05,side:An});y.polygonOffset=!0,y.polygonOffsetFactor=-2,y.polygonOffsetUnits=-2;const _=new Be(b,y);return _.name=t.name??"CityRoad",_.receiveShadow=!0,_.castShadow=!1,_.userData.noCollision=t.noCollision??!0,_.position.y+=.015,_.renderOrder=2,s&&s.add(_),_}function Zu(s,e,t,n,i=2,r=12433580){const a=new Dt(i,i,.12,24),o=new tt({color:r,roughness:.95,metalness:0});o.depthWrite=!0,o.transparent=!1;const c=new Be(a,o);return c.position.set(e,t+.06,n),c.receiveShadow=!0,c.renderOrder=2,c.name="FoundationPad",c.userData.noCollision=!0,s.add(c),c}async function GM(s=""){const e=typeof s=="string"&&s.length>0?s:Ii(),t=vt(e,"config/districts.json");try{const n=await fetch(t,{cache:"no-cache"});if(n.ok){const i=await n.json();return lA(i)}}catch{}return lA({seed:1337,districts:[{id:"default",heightRange:[-999,999],buildingDensity:"medium",minSeparation:16,allowedTypes:["house","shop"],road:{width:3.2,color:3355443}}],densitySpacingMeters:{high:11,medium:16,low:22},maxSlopeDeltaPerLot:2,roadSetbackMeters:4})}function lA(s){const e=i=>typeof i=="number"?i:3355443,t={high:11,medium:16,low:22};for(const i of s.districts||[])i.heightRange=Array.isArray(i.heightRange)?i.heightRange:[-999,999],i.allowedTypes=Array.isArray(i.allowedTypes)?i.allowedTypes:["house"],i.minSeparation=Number.isFinite(i.minSeparation)?i.minSeparation:0,i.road=i.road||{},i.road.width=Number.isFinite(i.road.width)?i.road.width:3.2,i.road.color=e(i.road.color);const n=s.densitySpacingMeters||s.densityToLotSpacing||{};return s.densitySpacingMeters={high:Number.isFinite(n.high)?n.high:t.high,medium:Number.isFinite(n.medium)?n.medium:t.medium,low:Number.isFinite(n.low)?n.low:t.low},s.densityToLotSpacing=s.densitySpacingMeters,s.maxSlopeDeltaPerLot=Number.isFinite(s.maxSlopeDeltaPerLot)?s.maxSlopeDeltaPerLot:2,s.roadSetbackMeters=Number.isFinite(s.roadSetbackMeters)?s.roadSetbackMeters:4,s}function zM(s,e,t,n,i="default"){const r=s?.userData?.getHeightAt,a=typeof r=="function"?r(t,n):null;if(!Number.isFinite(a))return e.districts.find(o=>o.id===i)||e.districts[0];for(const o of e.districts){const[c,l]=o.heightRange;if(a>=c&&a<=l)return o}return e.districts.find(o=>o.id===i)||e.districts[0]}function hA(s,e){return s.densitySpacingMeters?.[e]??s.densityToLotSpacing?.[e]??12}const HM="modulepreload",VM=function(s,e){return new URL(s,e).href},uA={},WM=function(e,t,n){let i=Promise.resolve();if(t&&t.length>0){let l=function(h){return Promise.all(h.map(u=>Promise.resolve(u).then(d=>({status:"fulfilled",value:d}),d=>({status:"rejected",reason:d}))))};const a=document.getElementsByTagName("link"),o=document.querySelector("meta[property=csp-nonce]"),c=o?.nonce||o?.getAttribute("nonce");i=l(t.map(h=>{if(h=VM(h,n),h in uA)return;uA[h]=!0;const u=h.endsWith(".css"),d=u?'[rel="stylesheet"]':"";if(n)for(let p=a.length-1;p>=0;p--){const g=a[p];if(g.href===h&&(!u||g.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${h}"]${d}`))return;const f=document.createElement("link");if(f.rel=u?"stylesheet":HM,u||(f.as="script"),f.crossOrigin="",f.href=h,c&&f.setAttribute("nonce",c),document.head.appendChild(f),u)return new Promise((p,g)=>{f.addEventListener("load",p),f.addEventListener("error",()=>g(new Error(`Unable to preload CSS for ${h}`)))})}))}function r(a){const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=a,window.dispatchEvent(o),!o.defaultPrevented)throw a}return i.then(a=>{for(const o of a||[])o.status==="rejected"&&r(o.reason);return e().catch(r)})},Au=new Map,dA=new Set;function qM(s,e){if(!dA.has(s)){dA.add(s);try{e()}catch(t){console.warn("[buildingSpawner] once handler failed",t)}}}async function XM(s){if(!s)return!1;try{const e=await fetch(s,{method:"HEAD"});return e.ok?!(e.headers.get("content-type")||"").toLowerCase().includes("text/html"):!1}catch{return!1}}async function YM(s,e,t){const n=s;if(Au.has(n))return Au.get(n);const i=vt(t,s),r=await XM(i);return Au.set(n,r),r}async function KM(s){const e=Array.isArray(s)?s.filter(i=>typeof i=="string"&&i.length>0):typeof s=="string"&&s.length>0?[s]:[];if(!e.length)return null;let t=null;const n=Ii();for(const i of e)try{if(!t){const{GLTFLoader:o}=await WM(async()=>{const{GLTFLoader:c}=await Promise.resolve().then(()=>AT);return{GLTFLoader:c}},void 0,import.meta.url);t=new o}const r=/^(?:[a-z]+:)?\/\//i.test(i)?i:vt(n,i.replace(/^\/+/,"")),a=await new Promise((o,c)=>{t.load(r,l=>o(l.scene||l.scenes?.[0]||null),void 0,c)});if(a)return a}catch(r){typeof console<"u"&&console.debug&&console.debug("[buildingSpawner] Failed to load GLB candidate",i,r)}return null}const xi={stone:new tt({color:14603968,roughness:.9,metalness:.02}),marble:new tt({color:15194049,roughness:.7,metalness:.05}),clay:new tt({color:13215612,roughness:.95,metalness:0}),wood:new tt({color:9398858,roughness:.85,metalness:0}),roof:new tt({color:10110513,roughness:.75,metalness:0})};function Xs(s,e,t,n){const i=new Be(new Ft(s,e,t),n);return i.castShadow=i.receiveShadow=!0,i}function Nc(s,e,t=1.2){const n=new zi(Math.max(s,e)*.62,t,4);n.rotateY(Math.PI/4);const i=new Be(n,xi.roof);return i.castShadow=i.receiveShadow=!0,i}const ta={house({w:s=5,d:e=7,h:t=3.8}={}){const n=new bt,i=Xs(s,t,e,xi.clay);i.position.y=t*.5,n.add(i);const r=Nc(s*1.02,e*1.02,1+.3*Math.random());return r.position.y=t+r.geometry.parameters.height*.5,n.add(r),n},shop(s){return ta.house({...s,w:6,d:6,h:3.4})},workshop(s){return ta.house({...s,w:6,d:8,h:4})},warehouse({w:s=9,d:e=12,h:t=5.2}={}){const n=new bt,i=Xs(s,t,e,xi.wood);i.position.y=t*.5,n.add(i);const r=Nc(s*1.05,e*1.05,1.4);return r.position.y=t+.7,n.add(r),n},stoa({w:s=10,d:e=6,h:t=4.5}={}){const n=new bt,i=Xs(s,.6,e,xi.stone);i.position.y=.3,n.add(i);const r=Xs(s*.96,t,e*.9,xi.stone);r.position.y=t*.5+.6,n.add(r);const a=Nc(s*1.02,e*1.02,1.4);return a.position.y=.6+t+.7,n.add(a),n},fountain(){const s=new bt,e=new Be(new Dt(1.8,1.8,.4,20),xi.marble);e.position.y=.2,s.add(e);const t=new Be(new Dt(1.2,1.2,.5,16),xi.marble);return t.position.y=.7,s.add(t),s},plaza(){const s=new bt,e=new Be(new Dt(3,3,.2,24),xi.stone);return e.position.y=.1,s.add(e),s},temple({w:s=12,d:e=18,h:t=6}={}){const n=new bt,i=Xs(s,1,e,xi.marble);i.position.y=.5,n.add(i);const r=Xs(s*.7,t,e*.6,xi.marble);r.position.y=1+t*.5,n.add(r);const a=Nc(s*.9,e*.9,1.8);return a.position.y=1+t+.9,n.add(a),n},pier({w:s=3,d:e=12}={}){const t=new bt,n=Xs(s,.4,e,xi.wood);return n.position.y=.2,t.add(n),t},market(){return ta.shop({})},monument(){return ta.fountain()}},fA={house:{prefab:"house",glb:"models/buildings/house.glb"},shop:{prefab:"shop",glb:"models/buildings/shop.glb"},workshop:{prefab:"workshop",glb:"models/buildings/workshop.glb"},warehouse:{prefab:"warehouse",glb:"models/buildings/warehouse.glb"},stoa:{prefab:"stoa",glb:"models/landmarks/stoa_attalos.glb"},fountain:{prefab:"fountain",glb:"models/props/fountain.glb"},plaza:{prefab:"plaza",glb:"models/props/plaza.glb"},temple:{prefab:"temple",glb:"models/landmarks/temple_hephaestus.glb"},pier:{prefab:"pier",glb:"models/harbor/pier.glb"},market:{prefab:"market",glb:"models/props/market_stall.glb"},monument:{prefab:"monument",glb:"models/landmarks/monument.glb"}};function JM(s,e){return s[Math.floor(e()*s.length)]}function jM(s){return function(){let e=s+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}}async function ZM(s,e={}){const t=Number.isFinite(e.seed)?e.seed:12345,n=jM(t),i=s.getObjectByName("LotPads");if(!i)return{count:0};const r=new bt;r.name="Buildings",s.add(r);let a=0;for(const o of i.children.slice()){const c=o.userData?.district||"default",l=eI(c),h=JM(l,n),u=fA[h]||fA.house;let d=null;if(u.glb){const f=Ii(),p=typeof u.glb=="string"?u.glb.trim():"";if(p.length>0){const g=p.replace(/^\/+/,""),m=Array.from(new Set([vt(f,g),g].filter(Boolean)));if(g.startsWith("models/buildings/")&&!await YM(g,h,f)){qM("buildings-missing",()=>console.warn("[buildings] Skipping prototypes (no GLBs found under models/buildings/)")),e.leavePadsVisible||(o.visible=!1);continue}const A=await KM(m);if(A){d=A;const x=new Yt().setFromObject(A),b=new S;x.getSize(b);const y=$M(b.y,3.5,8),_=y>0?y/b.y:1;A.scale.setScalar(_)}}}d||(d=(ta[u.prefab]||ta.house)({})),d.position.copy(o.position),d.position.y=Math.max(d.position.y,0)+.01,d.rotation.y=o.rotation.y+(n()-.5)*.5,d.userData={...d.userData,district:c,type:h},r.add(d),a+=1,e.leavePadsVisible||(o.visible=!1)}return{count:a,group:r}}function $M(s,e,t){return Math.min(Math.max(s,e),t)}function eI(s){switch(s){case"acropolis":return["temple","monument","stoa","plaza"];case"agora":return["shop","stoa","fountain","market","house"];case"harbor":return["warehouse","pier","market","workshop"];case"residential":return["house","workshop","garden","shop"];default:return["house","shop","workshop"]}}function tI(s,e){if(!Array.isArray(s)||s.length===0)return[];if(!(e>0))return s.slice();const t=Math.max(1,Math.floor(e)),n=(a,o)=>`${Math.floor(a/t)},${Math.floor(o/t)}`,i=new Map,r=[];for(const a of s){const o=n(a.x,a.z);let c=!0;const[l,h]=o.split(",").map(Number);for(let u=-1;u<=1&&c;u++)for(let d=-1;d<=1&&c;d++){const f=i.get(`${l+d},${h+u}`);if(f)for(const p of f){const g=a.x-p.x,m=a.z-p.z;if(g*g+m*m<e*e){c=!1;break}}}c&&(i.has(o)||i.set(o,[]),i.get(o).push(a),r.push(a))}return r}function nI(s,e,t,n,i,r){const a=i-t,o=r-n,c=s-t,l=e-n,h=a*a+o*o,u=h>0?Math.max(0,Math.min(1,(c*a+l*o)/h)):0,d=t+a*u,f=n+o*u,p=s-d,g=e-f;return p*p+g*g}function iI(s,e,t){if(!Array.isArray(s)||s.length===0)return[];if(!Array.isArray(e)||e.length===0||!(t>0))return s.slice();const n=t*t;return s.filter(i=>{for(const r of e)if(nI(i.x,i.z,r.ax,r.az,r.bx,r.bz)<=n)return!1;return!0})}function sI(s,e,t){if(!Array.isArray(s)||s.length===0)return[];if(!Array.isArray(e)||e.length===0||!(t>0))return s.slice();const n=t*t;return s.filter(i=>{for(const r of e){const a=i.x-r.x,o=i.z-r.z;if(a*a+o*o<=n)return!1}return!0})}function pA(s,e){if(!s||!e)return 1/0;const t=(s.x??0)-(e.x??0),n=(s.z??0)-(e.z??0);return t*t+n*n}function rI(s,e){return!s||typeof s!="object"?null:s[e]||null}function aI(s,e,t,n,i,r,a){if(!Array.isArray(t)||t.length===0||!Number.isFinite(i)||i<=0||!Number.isFinite(r)||r<=0||typeof a!="function")return 1/0;const{gx:o,gz:c}=a(s,e)||{};if(!Number.isFinite(o)||!Number.isFinite(c))return 1/0;const l=(b,y)=>Math.max(0,Math.min(y,b)),h=i-1,u=r-1,d=l(Math.round(o),h),f=l(Math.round(c),u),p=(b,y)=>{if(y<0||y>=r)return null;const _=t[y];return Array.isArray(_)&&_[b]||null},g=b=>{if(!b)return 1/0;const y=s-b.x,_=e-b.z;return Math.sqrt(y*y+_*_)},m=p(d,f);if(m)return g(m);const A=Number.isFinite(n)&&n>0?n:1,x=Math.max(1,Math.ceil(10/A));for(let b=1;b<=x;b++){let y=1/0;const _=l(d-b,h),w=l(d+b,h),C=l(f-b,u),T=l(f+b,u);for(let v=_;v<=w;v++){const E=p(v,C);if(E){const D=g(E);D<y&&(y=D)}const B=p(v,T);if(B){const D=g(B);D<y&&(y=D)}}for(let v=C+1;v<T;v++){const E=p(_,v);if(E){const D=g(E);D<y&&(y=D)}const B=p(w,v);if(B){const D=g(B);D<y&&(y=D)}}if(y!==1/0)return y}return(x+1)*A}function oI(s){switch(s){case"agora":if(Gt)return{x:Gt.x,z:Gt.z};break;case"acropolis":if(nn)return{x:nn.x,z:nn.z};break;case"harbor":if(kn)return{x:kn.x,z:kn.z};break}return{x:0,z:0}}function tr(s,e,t,n,i={}){const r=i.width??2.8,a=i.yOffset??.05,o=i.color??3092271,c=Array.isArray(i.collectGeometries)?i.collectGeometries:null,l=s.distanceTo(e),h=i.segments??Math.max(8,Math.ceil(l*1.5)),u=tr._material||(tr._material=new tt({color:o,roughness:1,metalness:0,side:An}));u.color.setHex(o);const d=n?.userData?.getHeightAt?.bind(n?.userData)??null;if(!Number.isFinite(l)||l<.02)return null;const f=e.clone().sub(s);f.y=0;const p=Math.hypot(f.x,f.z),g=p>1e-6?new S(-f.z/p,0,f.x/p):new S(1,0,0),m=r*.5,A=(h+1)*2,x=new Float32Array(A*3),b=A>65535?Uint32Array:Uint16Array,y=new b(h*6);let _=0;for(let v=0;v<=h;v++){const E=v/h,B=ue.lerp(s.x,e.x,E),D=ue.lerp(s.z,e.z,E);let F=ue.lerp(s.y,e.y,E);if(d){const J=d(B,D);Number.isFinite(J)&&(F=J)}const N=new S(B,F+a,D),G=N.clone().addScaledVector(g,m),k=N.clone().addScaledVector(g,-m);if(d){const J=d(G.x,G.z),U=d(k.x,k.z);Number.isFinite(J)&&(G.y=J+a),Number.isFinite(U)&&(k.y=U+a)}x[_++]=G.x,x[_++]=G.y,x[_++]=G.z,x[_++]=k.x,x[_++]=k.y,x[_++]=k.z}let w=0;for(let v=0;v<h;v++){const E=v*2;y[w++]=E,y[w++]=E+1,y[w++]=E+2,y[w++]=E+1,y[w++]=E+3,y[w++]=E+2}const C=new $e;if(C.setAttribute("position",new ht(x,3)),C.setIndex(new ht(y,1)),C.computeVertexNormals(),c)return c.push(C),null;const T=new Be(C,u);return T.name="CityRoadSegment",T.castShadow=!1,T.receiveShadow=!0,T.userData.noCollision=!0,T.renderOrder=1,t.add(T),T}const Nt=.05,fn=new Ke,zn=new an,Bn=new S,AA=new S,pn=new S,mA=new S(0,1,0),Yr=new ae,kc={h:0,s:0,l:0};function cI(s){return function(){let e=s+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}}function gA(s,e){if(!s)return;jd(s,{renderer:e});const t=s.userData?.lighting;t&&s.userData?.walls?.material&&(t.material=s.userData.walls.material);const n=s.userData?.streetlights;if(n){if(Array.isArray(n.meshes)){const i=n.meshes.find(r=>r?.material);i?.material&&(n.material=i.material)}if(Array.isArray(n.individuals)){for(const i of n.individuals)i&&(i.bulbMesh?.material&&(i.material=i.bulbMesh.material),i.glassMesh?.material&&(i.glassMaterial=i.glassMesh.material));if(!n.material){const i=n.individuals.find(r=>r?.material);i?.material&&(n.material=i.material)}}}}function Dn(s,e,t,n){const i=s?.userData?.getHeightAt;if(typeof i=="function"){const r=i(e,t);if(Number.isFinite(r))return r}return n}function yA({terrain:s,centerX:e,centerZ:t,width:n,depth:i,rotation:r,maxSlope:a}){const o=Math.cos(r),c=Math.sin(r),l=n/2,h=i/2,u=[{x:-l,z:-h},{x:l,z:-h},{x:-l,z:h},{x:l,z:h}],d=[];let f=1/0,p=-1/0;for(const m of u){const A=m.x*o-m.z*c,x=m.x*c+m.z*o,b=e+A,y=t+x,_=Dn(s,b,y,null);if(!Number.isFinite(_))return null;d.push(_),_<f&&(f=_),_>p&&(p=_)}return p-f>a?null:{height:d.reduce((m,A)=>m+A,0)/d.length,minHeight:f,maxHeight:p}}async function lI(s,e,t={}){const n=t.showFoundationPads===!0,i=t.origin?t.origin.clone():QC.clone(),r=s?.userData?.renderer??null,a=cI(t.seed??zC),o=typeof s?.userData?.baseUrl=="string"?s.userData.baseUrl:"",c=t.districtRules||await GM(o),l=typeof c.typeOverrides=="object"&&c.typeOverrides?c.typeOverrides:{},h=t.gridSize??GC.clone(),u=new Map;for(const q of c.districts||[])q?.id&&u.set(q.id,q);const d=Number.isFinite(c.roadSetbackMeters)?c.roadSetbackMeters:4,f={west:Jc.west,east:Rc+3,north:Jc.north,south:Jc.south};function p(q,re,pe){return q>=pe.west&&q<=pe.east&&re>=pe.north&&re<=pe.south}const g={minX:Rc+3,maxX:Rc+24},m=kn.clone().add(new S(10,0,0)),A=m.clone(),x=t.spacingX??18,b=t.spacingZ??18,y=t.jitter??1,_=t.maxSlope??.18,w=t.roadsVisible==null?!0:!!t.roadsVisible,C=Math.max(3,Math.floor(h.x/x)),T=Math.max(3,Math.floor(h.y/b)),v=(C-1)*x*.5,E=(T-1)*b*.5,B=[],D=[];let F=0;for(let q=0;q<C;q++)for(let re=0;re<T;re++){F++;const pe=i.x+(q*x-v)+ue.lerp(-y,y,a()),Te=i.z+(re*b-E)+ue.lerp(-y,y,a());if(p(pe,Te,f))continue;const He=Dn(e,pe,Te,null);if(!Number.isFinite(He)||He<ot)continue;if(Math.hypot(pe-A.x,Te-A.z)<=Math.min(x,b)*.6){const Ie=Math.max(He+Nt,ot+Nt);D.push({x:pe,y:Ie,z:Te});continue}const L=pe>g.minX&&pe<g.maxX,O=L?ue.lerp(6.8,8.2,a()):ue.lerp(4.4,7.2,a()),V=L?ue.lerp(5.2,6.8,a()):ue.lerp(4.2,7.8,a()),Q=ue.lerp(2.6,3.8,a()),j=Q*ue.lerp(.38,.55,a()),se=Math.max(1,t.rotationSteps??2);let me=Math.floor(a()*se)*(Math.PI*2/se);L&&(me=0);const ge=yA({terrain:e,centerX:pe,centerZ:Te,width:O,depth:V,rotation:me,maxSlope:_});if(!ge)continue;let Se;if(L)Se=.02;else{const Ie=Math.hypot(pe-i.x,Te-i.z);Se=ue.clamp(.1+Ie*.0025,.1,.32)}if(F%5===0){const Ie=Math.max(ge.height+Nt,ot+Nt);D.push({x:pe,y:Ie,z:Te});continue}if(a()<Se)continue;const Ce=Math.max(ge.height+Nt,ot+Nt);B.push({x:pe,y:Ce,z:Te,width:O,depth:V,wallHeight:Q,roofHeight:j,rotation:me,wallColor:new ae().setHSL(ue.lerp(.08,.13,a()),.45,ue.lerp(.62,.74,a())),roofColor:new ae().setHSL(ue.lerp(.02,.04,a()),.55,ue.lerp(.23,.32,a()))})}const N=new bt;N.name="HarborCity";const G=[],k=i.x-v-x*.5,J=i.z-E-b*.5;for(let q=0;q<=T;q++){const re=[],pe=J+q*b;for(let Te=0;Te<=C;Te++){const He=k+Te*x,M=Dn(e,He,pe,null);if(!Number.isFinite(M)||M<ot+Nt){re.push(null);continue}const L=new S(He,M,pe);L.userData={district:zM(e,c,He,pe)},re.push(L)}G.push(re)}const U=G.length,ee=G[0]?.length??0,Ae=[Math.abs(x),Math.abs(b)].filter(q=>Number.isFinite(q)&&q>0),oe=Ae.length>0?Math.min(...Ae):1,Me=(q,re)=>({gx:x!==0?(q-k)/x:0,gz:b!==0?(re-J)/b:0}),Ne=[],st=[],Oe=(q,re)=>{if(!q||!re)return;const pe=re.x-q.x,Te=re.z-q.z;pe*pe+Te*Te<=0||st.push({ax:q.x,az:q.z,bx:re.x,bz:re.z})},K=[],X=[],Re=[],Ue=new Dt(.06,.08,1,8);Ue.translate(0,.5,0);const Qe=new Xn(.18,12,12),at=new tt({color:4013373,roughness:.85,metalness:.25}),_t=new tt({color:16773840,emissive:new ae(16773824),emissiveIntensity:0,roughness:.45,metalness:.05}),P=3.4,de=3,ne=4,ie=3.4,te=3355443,_e=10,le=_e*.5,ve=()=>{const q=N.userData.streetlights;if(q)return q.material=_t,Array.isArray(q.meshes)||(q.meshes=[]),Array.isArray(q.individuals)||(q.individuals=[]),q.dayIntensity==null&&(q.dayIntensity=0),q.nightIntensity==null&&(q.nightIntensity=1.6),q;const re={material:_t,dayIntensity:0,nightIntensity:1.6,meshes:[],individuals:[]};return N.userData.streetlights=re,re},nt=(q,re={})=>{if(!q||q.length===0)return;const pe=q.length,Te=new Ln(Ue,at,pe),He=new Ln(Qe,_t,pe);re.polesName&&(Te.name=re.polesName),re.lampsName&&(He.name=re.lampsName),Te.instanceMatrix.setUsage(li),He.instanceMatrix.setUsage(li),Te.castShadow=!1,Te.receiveShadow=!0,He.castShadow=!1,He.receiveShadow=!1,Te.userData.noCollision=!0,He.userData.noCollision=!0;for(let L=0;L<pe;L++){const O=q[L];pn.set(O.x,O.y,O.z),zn.identity(),Bn.set(1,P,1),fn.compose(pn,zn,Bn),Te.setMatrixAt(L,fn),pn.set(O.x,O.y+P+.18,O.z),Bn.set(1,1,1),fn.compose(pn,zn,Bn),He.setMatrixAt(L,fn)}Te.instanceMatrix.needsUpdate=!0,He.instanceMatrix.needsUpdate=!0,Te.visible=w,He.visible=w,N.add(Te),N.add(He),ve().meshes.push(He)},Ze=Math.floor(G.length/2);for(let q=0;q<G.length;q++){const re=G[q];if(!re)continue;if(q===Ze){let M=[];for(let L=0;L<re.length;L++){const O=re[L];O?M.push(O.clone()):M.length>0&&(M.length>=2&&K.push(M),M=[])}M.length>=2&&K.push(M);continue}const pe=q%de===0;let Te=0,He=le;for(let M=0;M<re.length-1;M++){const L=re[M],O=re[M+1];if(!L||!O){pe&&(Te=0,He=le);continue}const Q=L?.userData?.district?.road||{},j=pe?ie:Q.width??3.2,se=pe?te:Q.color??3355443;if(tr(L,O,N,e,{collectGeometries:Ne,width:j,color:se}),Oe(L,O),pe){const ge=L.distanceTo(O);if(ge>0){for(;Te+ge>=He;){const Se=He-Te,Le=ue.clamp(Se/ge,0,1),Ce=L.clone().lerp(O,Le),Ie=Dn(e,Ce.x,Ce.z,ot);Number.isFinite(Ie)&&Re.push({x:Ce.x,y:Math.max(Ie,ot)+Nt,z:Ce.z}),He+=_e}Te+=ge}}}}const R=G[0]?.length??0;for(let q=0;q<R;q++){const re=q%ne===0;let pe=0,Te=le;for(let He=0;He<G.length-1;He++){const M=G[He][q],L=G[He+1][q];if(!M||!L){re&&(pe=0,Te=le);continue}const V=M?.userData?.district?.road||{},Q=re?ie:V.width??3.2,j=re?te:V.color??3355443;if(tr(M,L,N,e,{collectGeometries:Ne,width:Q,color:j}),Oe(M,L),re){const me=M.distanceTo(L);if(me>0){for(;pe+me>=Te;){const ge=Te-pe,Se=ue.clamp(ge/me,0,1),Le=M.clone().lerp(L,Se),Ce=Dn(e,Le.x,Le.z,ot);Number.isFinite(Ce)&&Re.push({x:Le.x,y:Math.max(Ce,ot)+Nt,z:Le.z}),Te+=_e}pe+=me}}}}const I=Rc+1.5,W=J,Y=J+b*T,he=Dn(e,I,W,ot),Z=Dn(e,I,Y,ot),Ge=new S(I,Math.max(he,ot)+Nt,W),we=new S(I,Math.max(Z,ot)+Nt,Y),qe=Ne.length;tr(Ge,we,N,e,{collectGeometries:Ne,width:3.6,color:3815994}),Oe(Ge,we);const Ve=Ne[Ne.length-1];Ne.length>qe&&Ve&&(Ve.name="QuayPromenade");const ye=3.8,Fe=3092271,et=9,Ye=et*.5;for(const q of K){if(q.length<2)continue;const re=q.map(He=>{const M=Dn(e,He.x,He.z,ot),L=Number.isFinite(M)?M:ot;return new S(He.x,Math.max(L,ot)+Nt,He.z)});let pe=0,Te=Ye;for(let He=0;He<re.length-1;He++){const M=re[He],L=re[He+1];tr(M,L,N,e,{collectGeometries:Ne,width:ye,color:Fe}),Oe(M,L);const O=M.distanceTo(L);if(!(O<=0)){for(;pe+O>=Te;){const V=Te-pe,Q=ue.clamp(V/O,0,1),j=M.clone().lerp(L,Q),se=Dn(e,j.x,j.z,ot);Number.isFinite(se)&&X.push({x:j.x,y:Math.max(se,ot)+Nt,z:j.z}),Te+=et}pe+=O}}}if(Ne.length>0){const q=ju(Ne,!1)||new $e;for(const Te of Ne)Te.dispose();const re=tr._material||new tt({color:3092271,roughness:1,metalness:0,side:An}),pe=new Be(q,re);pe.name="CityRoads",pe.renderOrder=1,pe.userData.noCollision=!0,pe.castShadow=!1,pe.receiveShadow=!0,pe.visible=w,N.add(pe)}const De=new bt;De.name="LotPads",De.userData.noCollision=!0,N.add(De);const lt=new Dt(.8,.8,.08,10),z=new tt({color:12039079,roughness:1,metalness:0}),xe=Number.isFinite(c.maxSlopeDeltaPerLot)?c.maxSlopeDeltaPerLot:2,Ee=4.2,ke=4.2,be=[];function ce(q,re,pe,Te){const He=yA({terrain:e,centerX:q,centerZ:re,width:Ee,depth:ke,rotation:pe,maxSlope:xe});if(!He)return!1;const M=Math.max(0,He.maxHeight-He.minHeight),L=Math.max(Ee,ke,1e-4),O=ue.radToDeg(Math.atan2(M,L));return be.push({x:q,y:He.height+Nt,z:re,rotation:pe,districtId:Te?.id||"unknown",district:Te,slopeDeg:O}),!0}for(let q=0;q<G.length;q++){const re=G[q];if(re)for(let pe=0;pe<re.length;pe++){const Te=re[pe];if(!Te)continue;const He=Te.userData?.district,M=He?.buildingDensity||"medium",O=hA(c,M)*.5,V=(a()-.5)*.6,Q=(a()-.5)*.6,j=[{x:Te.x+O+V,z:Te.z+Q},{x:Te.x-O+V,z:Te.z+Q},{x:Te.x+V,z:Te.z+O+Q},{x:Te.x+V,z:Te.z-O+Q}];for(const{x:se,z:me}of j){const ge=a()*Math.PI*2;ce(se,me,ge,He)}}}let ze=be.slice(),it=Number.isFinite(d)&&d>0?Math.max(0,d):1/0;if(l&&typeof l=="object")for(const q of Object.values(l)){if(!q||typeof q!="object"||!Number.isFinite(q.roadSetback))continue;const re=Math.max(0,q.roadSetback);it=Math.min(it,re)}Number.isFinite(it)||(it=Number.isFinite(d)&&d>0?Math.max(0,d):0),it>0&&(ze=iI(ze,st,it)),d>0&&(ze=sI(ze,D,d));const Ct=new Map;for(const q of ze){const re=q.districtId;Ct.has(re)||Ct.set(re,[]),Ct.get(re).push(q)}const Bt={acropolis:"temple",agora:"shop",residential:"house",harbor:"warehouse"},Qn=[];for(const[q,re]of Ct){const pe=re[0]?.district||u.get(q),Te=pe?.buildingDensity||"medium",He=hA(c,Te),M=Math.max(He,Number.isFinite(pe?.minSeparation)?pe.minSeparation:0),L=Bt[q]||(Array.isArray(pe?.allowedTypes)&&pe.allowedTypes.length>0?pe.allowedTypes[0]:"house"),O=new Map;for(const j of re){const se=j.buildingType||L||"house";O.has(se)||O.set(se,[]),j.buildingType||(j.buildingType=se),O.get(se).push(j)}let V=[];for(const[j,se]of O){const me=rI(l,j);let ge=se;const Se=Number.isFinite(d)&&d>0?Math.max(0,d):0,Le=Number.isFinite(me?.roadSetback)?Math.max(0,me.roadSetback):Se;if(Le>0&&(ge=se.filter(je=>{let ut=je.distanceToRoad;return Number.isFinite(ut)||(ut=aI(je.x,je.z,G,oe,ee,U,Me),je.distanceToRoad=ut),ut>=Le})),me&&Number.isFinite(me.minSeparation)){const je=me.minSeparation;for(const ut of ge)ut.minSeparation=Math.max(ut.minSeparation||0,je)}const Ce=Number.isFinite(me?.minSeparation)?me.minSeparation:0,Ie=Math.max(M,Ce);V.push(...tI(ge,Ie))}const Q=Number.isFinite(pe?.maxPerDistrict)?Math.max(0,pe.maxPerDistrict):1/0;if(Number.isFinite(Q)&&V.length>Q){const j=oI(q);V.sort((se,me)=>{const ge=Number.isFinite(se.slopeDeg)?se.slopeDeg:0,Se=Number.isFinite(me.slopeDeg)?me.slopeDeg:0;if(ge!==Se)return ge-Se;const Le=j?pA(se,j):0,Ce=j?pA(me,j):0;return Le!==Ce?Le-Ce:se.x!==me.x?se.x-me.x:se.z-me.z}),V=V.slice(0,Q)}Qn.push(...V)}for(const q of Qn){const re=new Be(lt,z);re.position.set(q.x,q.y,q.z),re.rotation.y=q.rotation,re.castShadow=!1,re.receiveShadow=!0,re.userData=re.userData||{},re.userData.district=q.districtId||"unknown",re.userData.noCollision=!0,De.add(re)}if(n&&D.length>0)for(const q of D)Zu(N,q.x,q.y,q.z,2.2);if(X.length>0&&nt(X,{polesName:"MainAvenueStreetlightPoles",lampsName:"MainAvenueStreetlightLamps"}),Re.length>0&&nt(Re,{polesName:"SecondaryBoulevardPoles",lampsName:"SecondaryBoulevardLamps"}),n){const q=Dn(e,m.x,m.z,ot),re=Math.max((Number.isFinite(q)?q:ot)+Nt,ot+Nt);Zu(N,m.x,re,m.z,3.2)}const _n=[];let Kn=null,Vt=null;{const L=new Ft(.08,1.7,.08);L.translate(0,1.7/2,0);const O=new Ft(.75*2+.16,.08,.08);O.translate(0,1.7,.55);const V=new Ft(.75*2+.16,.08,.08);V.translate(0,1.7,-.55);const Q=new Ft(.75*2+.12,.12,.55*1.4);Q.translate(0,.9,0);const j=[],se=[[-.75,0,-.55],[.75,0,-.55],[-.75,0,.55],[.75,0,.55]];for(const[Ut,oi,Jn]of se){const Bs=L.clone();Bs.translate(Ut,oi,Jn),j.push(Bs)}j.push(O),j.push(V),j.push(Q);const me=ju(j,!0),ge=new Ft(.75*2+.28,.14,.55*2+.32);ge.translate(0,.07,0);const Se=new tt({color:8018491,roughness:.72,metalness:.08}),Le=new mn({color:12043471,metalness:0,roughness:.85,clearcoat:.06,clearcoatRoughness:.9,envMapIntensity:.6,vertexColors:!0}),Ce=new Ln(me,Se,8),Ie=new Ln(ge,Le,8);Ce.name="HarborPierMarketFrames",Ie.name="HarborPierMarketCanopies",Ce.instanceMatrix.setUsage(li),Ie.instanceMatrix.setUsage(li),Ce.castShadow=!0,Ce.receiveShadow=!1,Ie.castShadow=!1,Ie.receiveShadow=!0,Ce.userData.noCollision=!0,Ie.userData.noCollision=!0;const je=[new ae(13286819),new ae(11965305),new ae(7441542),new ae(10919568)],ut=2.1,ft=1.8,pt=m.z-3*ut/2,We=.75+.14,St=.55+.16,ct=.35,un=2.3,ri=2.1,en=1/2*ft,ai=m.x+en+We,Mt=m.x-en-We,qt=St*2+.6;Kn={min:ai+ct,max:ai+ct+un},Vt={min:Mt-ct-ri,max:Mt-ct};const tn=Array.from({length:2},()=>[]);let Pt=0;for(let Ut=0;Ut<2;Ut++){const oi=tn[Ut],Jn=(Ut-1/2)*ft;for(let Bs=0;Bs<4;Bs++){const gn=(a()-.5)*.28,Bi=(a()-.5)*.4,Ri=m.x+Jn+gn,mi=pt+Bs*ut+Bi,Rs=Ri-We,wr=Ri+We;if(Kn&&wr>Kn.min&&Rs<Kn.max||Vt&&wr>Vt.min&&Rs<Vt.max)continue;if(oi.length>0){const ly=oi[oi.length-1];if(Math.abs(mi-ly.z)<qt)continue}const rf=Dn(e,Ri,mi,ot);if(!Number.isFinite(rf))continue;const af=Math.max(rf+Nt,ot+Nt);pn.set(Ri,af,mi),zn.identity(),Bn.set(1,1,1),fn.compose(pn,zn,Bn),Ce.setMatrixAt(Pt,fn),pn.set(Ri,af+1.7+.18,mi),fn.compose(pn,zn,Bn),Ie.setMatrixAt(Pt,fn);const sy=je[Pt%je.length];Yr.copy(sy),Yr.getHSL(kc);const ry=ue.lerp(-.05,.05,a()),ay=ue.lerp(-.06,.06,a()),oy=ue.clamp(kc.s*(1+ry),0,1),cy=ue.clamp(kc.l*(1+ay),0,1);Yr.setHSL(kc.h,oy,cy),Ie.setColorAt(Pt,Yr),_n.push({xMin:Rs,xMax:wr,zMin:mi-St,zMax:mi+St}),oi.push({z:mi}),Pt++}}Ce.count=Pt,Ie.count=Pt,Ce.instanceMatrix.needsUpdate=!0,Ie.instanceMatrix.needsUpdate=!0,Ie.instanceColor&&(Ie.instanceColor.needsUpdate=!0),Pt>0&&(N.add(Ce),N.add(Ie))}{const re=new Ft(.8,.6,.6);re.translate(0,.3,0);const pe=new tt({color:9399109,roughness:.78,metalness:.04}),Te=new Ln(re,pe,24);Te.name="HarborPierMarketCrates",Te.instanceMatrix.setUsage(li),Te.castShadow=!0,Te.receiveShadow=!0,Te.userData.noCollision=!0;const He=.4,M=.3,L=.4;let O=0;for(let V=0;V<24&&O<24;V++){let Q=!1;for(let j=0;j<3&&!Q;j++){const se=ue.lerp(.6,2.6,a()),me=a()*Math.PI*2,ge=Math.cos(me)*se,Se=Math.sin(me)*se;if(Math.abs(ge)<.6&&Math.abs(Se)<1.6)continue;const Le=m.x+ge,Ce=m.z+Se,Ie=Dn(e,Le,Ce,ot);if(!Number.isFinite(Ie))continue;const je=Le-He,ut=Le+He,ft=Ce-M,pt=Ce+M;if(Kn&&ut>Kn.min&&je<Kn.max||Vt&&ut>Vt.min&&je<Vt.max)continue;let We=!1;for(const ct of _n)if(ut+L>ct.xMin&&je-L<ct.xMax&&pt+L>ct.zMin&&ft-L<ct.zMax){We=!0;break}if(We)continue;const St=Math.max(Ie+Nt,ot+Nt);pn.set(Le,St,Ce),zn.setFromAxisAngle(mA,a()*Math.PI*2),Bn.set(1,1,1),fn.compose(pn,zn,Bn),Te.setMatrixAt(O,fn),O++,Q=!0}}Te.count=O,Te.instanceMatrix.needsUpdate=!0,O>0&&N.add(Te)}{const q=[];for(let Ie=0;Ie<4;Ie++){const je=Math.PI/2*Ie+Math.PI/4,ut=m.x+Math.cos(je)*2.6,ft=m.z+Math.sin(je)*2.6;q.push(new S(ut,0,ft))}if(q.length>0){const Ie=new Ln(Qe,_t,q.length),je=new Ln(Ue,at,q.length);Ie.name="HarborPlazaLamps",je.name="HarborPlazaLampPoles",Ie.instanceMatrix.setUsage(li),je.instanceMatrix.setUsage(li),Ie.castShadow=!1,Ie.receiveShadow=!1,je.castShadow=!1,je.receiveShadow=!0,Ie.userData.noCollision=!0,je.userData.noCollision=!0;for(let ft=0;ft<q.length;ft++){const pt=q[ft],We=Dn(e,pt.x,pt.z,ot),St=Math.max((Number.isFinite(We)?We:ot)+Nt,ot+Nt);pn.set(pt.x,St,pt.z),zn.identity(),Bn.set(1,P,1),fn.compose(pn,zn,Bn),je.setMatrixAt(ft,fn),pn.set(pt.x,St+P+.18,pt.z),Bn.set(1,1,1),fn.compose(pn,zn,Bn),Ie.setMatrixAt(ft,fn)}Ie.instanceMatrix.needsUpdate=!0,je.instanceMatrix.needsUpdate=!0,Ie.visible=w,je.visible=w,N.add(je),N.add(Ie),ve().meshes.push(Ie)}const pe=16773832,Te=Dn(e,m.x,m.z,ot),He=Math.max((Number.isFinite(Te)?Te:ot)+Nt,ot+Nt),M=new bt;M.name="HarborPlazaLamp",M.position.set(m.x,He,m.z),M.userData.noCollision=!0,M.visible=w;const L=new Be(new Dt(.3,.4,.4,12),at);L.position.y=.2,L.castShadow=!0,L.receiveShadow=!0,M.add(L);const O=new Be(new Dt(.08,.1,P,10),at);O.position.y=P/2+.4,O.castShadow=!0,O.receiveShadow=!1,M.add(O);const V=new Be(new Ft(.16,.16,1.2),at);V.position.set(0,P+.32,.5),V.castShadow=!0,V.receiveShadow=!1,M.add(V);const Q=new tt({color:16777215,emissive:new ae(pe),emissiveIntensity:0}),j=new Be(new Xn(.28,16,16),Q);j.position.set(0,P+.12,1),j.castShadow=!1,M.add(j);const se=new mn({color:16777215,metalness:0,roughness:.2,clearcoat:.6,clearcoatRoughness:.3,envMapIntensity:1,transmission:0,emissive:new ae(pe),emissiveIntensity:0}),me=new Be(new Xn(.14,16,16),se);me.castShadow=!1,j.add(me);const ge=new is(pe,0,18,2);ge.position.copy(j.position),ge.castShadow=!0,M.add(ge);const Se=a()*Math.PI*2,Le={light:ge,material:Q,glassMaterial:se,bulbMesh:j,glassMesh:me,baseIntensity:1.2,overrideState:null,flickerPhase:Se};M.userData.interactable=!0,M.userData.highlightTarget=j,M.userData.light=ge,M.userData.flickerPhase=Se,M.userData.onUse=()=>{const Ie=Le.overrideState;Ie===null?Le.overrideState=!0:Ie===!0?Le.overrideState=!1:Le.overrideState=null},N.add(M),ve().individuals.push(Le)}const Hi=[],as=Math.max(h.x,h.y)*.6;for(let q=0;q<5;q++){const re=q/4,pe=i.x-as*.5+as*re,Te=i.z+Math.sin(re*Math.PI*1.2-Math.PI*.3)*(h.y*.45),He=Dn(e,pe,Te,ot)+Nt;Hi.push(new S(pe,He,Te))}if(Hi.length>=2){const q=QM(N,Hi,{width:3.2,segments:64,name:"CityWalkway",noCollision:!0,color:4931381});q&&(q.visible=w)}ZM(N,{seed:t.seed??12345,leavePadsVisible:!1});const os=B.length;if(os===0)return gA(N,r),s.add(N),N;const Vi=new Ft(1,1,1);Vi.translate(0,.5,0);const cs=new Dt(0,.5,1,4,1,!1);cs.rotateY(Math.PI/4),cs.translate(0,.5,0);const Ti=new mn({color:16777215,vertexColors:!0,roughness:.6,metalness:.08,emissive:new ae(16768929),emissiveIntensity:.08,clearcoat:.15,clearcoatRoughness:.6,sheen:.1,envMapIntensity:.7}),H=new mn({color:16777215,vertexColors:!0,roughness:.85,metalness:.05,clearcoat:.05,clearcoatRoughness:.8,envMapIntensity:.5}),fe=new Ln(Vi,Ti,os),Je=new Ln(cs,H,os);fe.instanceMatrix.setUsage(li),Je.instanceMatrix.setUsage(li),fe.castShadow=!0,fe.receiveShadow=!0,Je.castShadow=!0,Je.receiveShadow=!1;for(let q=0;q<B.length;q++){const re=B[q];pn.set(re.x,re.y,re.z),zn.setFromAxisAngle(mA,re.rotation),Bn.set(re.width,re.wallHeight,re.depth),fn.compose(pn,zn,Bn),fe.setMatrixAt(q,fn),fe.setColorAt(q,Yr.copy(re.wallColor)),pn.y=re.y+re.wallHeight,AA.set(re.width*1.04,re.roofHeight,re.depth*1.04),fn.compose(pn,zn,AA),Je.setMatrixAt(q,fn),Je.setColorAt(q,Yr.copy(re.roofColor))}return fe.instanceMatrix&&(fe.instanceMatrix.needsUpdate=!0),Je.instanceMatrix&&(Je.instanceMatrix.needsUpdate=!0),fe.instanceColor&&(fe.instanceColor.needsUpdate=!0),Je.instanceColor&&(Je.instanceColor.needsUpdate=!0),N.add(fe),N.add(Je),N.userData.walls=fe,N.userData.roofs=Je,N.userData.lighting={material:Ti,dayIntensity:.08,nightIntensity:1.35},gA(N,r),s.add(N),N}function Oc(s,e=0){if(!s)return;const t=ue.clamp(e,0,1),n=(typeof performance<"u"?performance.now():Date.now())*.001,i=s.userData?.lighting;if(i?.material){const a=ue.lerp(i.dayIntensity,i.nightIntensity,t);i.material.emissiveIntensity=a}const r=s.userData?.streetlights;if(r?.material){const a=ue.lerp(r.dayIntensity??0,r.nightIntensity??1,t);r.material.emissiveIntensity=a}if(Array.isArray(r?.individuals))for(const a of r.individuals){if(!a)continue;const o=a.baseIntensity??0;let c=ue.lerp(0,o,t);if(a.overrideState===!0?c=o:a.overrideState===!1&&(c=0),t>0&&c>0&&Number.isFinite(a.flickerPhase)){const h=1+t*(.05*Math.sin(n*7)+.03*Math.sin(n*13+a.flickerPhase));c=Math.max(c*h,0)}if(a.light&&(a.light.intensity=c),a.material||a.glassMaterial){const l=o>0?c/o:0,h=r?.nightIntensity??1.6,u=l>0?h*l:0;a.material&&(a.material.emissiveIntensity=u),a.glassMaterial&&(a.glassMaterial.emissiveIntensity=c>0?c:0)}}}function hI(s,e,t,n={}){const{seed:i=20251007,buildingCount:r=140,spacing:a=5.5,harborBand:o=[ot+3,ot+5.5],agoraBand:c=[ot+3,ot+8],acroBand:l=[ot+7,ot+14],avoidHarborRadius:h=UC+18}=n,u=n.showFoundationPads===!0,d=uI(i),f=[],p=e?.userData?.getHeightAt?.bind(e?.userData),g=(a||6)*.8,m=new Map,A=(F,N)=>`${Math.round(F/g)}_${Math.round(N/g)}`,x=new $(Gt.x,Gt.z),b=[{band:o,tries:Math.floor(r*.35)},{band:c,tries:Math.floor(r*.45)},{band:l,tries:Math.floor(r*.2)}],y=new $;let _=0;for(const{band:F,tries:N}of b){let G=0;for(;G++<N&&_<r;){const k=Math.sqrt(d())*Ju,J=d()*Math.PI*2,U=x.x+Math.cos(J)*k,ee=x.y+Math.sin(J)*k;if(y.set(U,ee).distanceTo(new $(kn.x,kn.z))<h)continue;const oe=p?p(U,ee):void 0;if(!Number.isFinite(oe)||oe<F[0]||oe>F[1]||oe<ot+Vp)continue;const Me=A(U,ee);if(m.has(Me))continue;const Ne=p?p(U+1.2,ee):oe,st=p?p(U,ee+1.2):oe;!Number.isFinite(Ne)||!Number.isFinite(st)||Math.max(Math.abs(Ne-oe),Math.abs(st-oe))>NC||(m.set(Me,!0),f.push(new S(U,oe,ee)),_++)}}const{group:w,walls:C,roofs:T,dummy:v}=dI(s),E=new S,B=new S().subVectors(kn,Gt).normalize();let D=0;for(const F of f){let N=0;if(t){const Ae=fI(t,F,180),oe=t.getPoint(Ae),Me=t.getPoint(Math.min(1,Ae+.01));E.subVectors(Me,oe).normalize(),N=Math.atan2(E.x,E.z)}else N=Math.atan2(B.x,B.z);const G=p?p(F.x,F.z):F.y,k=Number.isFinite(G)?G+Nt:F.y+Nt,J=Math.max(k,ot+Vp+Nt),U=.9+d()*.3,ee=Math.max(2,1.8*U);u&&Zu(s,F.x,J,F.z,ee),v.position.set(F.x,J+1,F.z),v.rotation.set(0,N,0),v.scale.setScalar(U),v.updateMatrix(),C.setMatrixAt(D,v.matrix),v.position.set(F.x,J+2,F.z),v.rotation.set(0,N,0),v.updateMatrix(),T.setMatrixAt(D,v.matrix),D++}return C.count=T.count=D,C.instanceMatrix.needsUpdate=!0,T.instanceMatrix.needsUpdate=!0,w}function uI(s=1337){let e=s>>>0||1;return()=>(e=e*1664525+1013904223>>>0)/4294967295}function dI(s,e=120){const t=pI(s,e);return t&&!t.dummy&&(t.dummy=t._dummy??new mt,t._dummy=t.dummy),t?.walls?.material&&(t.walls.material.depthWrite=!0,t.walls.material.transparent=!1),t?.roofs?.material&&(t.roofs.material.depthWrite=!0,t.roofs.material.transparent=!1),t?.walls&&(t.walls.renderOrder=2),t?.roofs&&(t.roofs.renderOrder=2),t}function fI(s,e,t){let n=0,i=1/0;for(let r=0;r<=t;r++){const a=r/t,o=s.getPoint(a),c=(o.x-e.x)*(o.x-e.x)+(o.z-e.z)*(o.z-e.z);c<i&&(i=c,n=a)}return n}const bA=240;let Sn=null;function pI(s,e=bA){if(!s)throw new Error("Scene is required for hill city instancing");const t=Math.max(1,Math.min(1024,e|0||bA));if(Sn&&Sn.capacity>=t)return Sn.group.parent!==s&&s.add(Sn.group),Sn.dummy||(Sn.dummy=Sn._dummy??new mt,Sn._dummy=Sn.dummy),xA(Sn),Sn;Sn&&Sn.group.parent&&Sn.group.parent.remove(Sn.group);const n=AI(),i=mI(),r=gI(),a=yI(),o=new Ln(n,r,t),c=new Ln(i,a,t);o.instanceMatrix.setUsage(li),c.instanceMatrix.setUsage(li),o.castShadow=!0,o.receiveShadow=!0,c.castShadow=!0,c.receiveShadow=!1;const l=new bt;l.name="HillCity",l.add(o),l.add(c);const h=new mt,u={group:l,walls:o,roofs:c,dummy:h,_dummy:h,capacity:t};return o.userData.capacity=t,c.userData.capacity=t,Sn=u,xA(u),s.add(l),u}function xA(s){s.walls.count=0,s.roofs.count=0,s.group.visible=!1,s.walls.instanceMatrix.needsUpdate=!0,s.roofs.instanceMatrix.needsUpdate=!0,s.walls.instanceColor&&(s.walls.instanceColor.needsUpdate=!0),s.roofs.instanceColor&&(s.roofs.instanceColor.needsUpdate=!0)}let mu=null,gu=null;function AI(){if(!mu){const s=new Ft(1,1,1);s.translate(0,.5,0),mu=s}return mu}function mI(){if(!gu){const s=new Dt(0,.5,1,4,1,!1);s.rotateY(Math.PI/4),s.translate(0,.5,0),gu=s}return gu}function gI(){return new mn({color:16777215,vertexColors:!0,roughness:.6,metalness:.08,emissive:new ae(16768929),emissiveIntensity:.08,clearcoat:.15,clearcoatRoughness:.6,sheen:.1,envMapIntensity:.7})}function yI(){return new mn({color:16777215,vertexColors:!0,roughness:.85,metalness:.05,clearcoat:.05,clearcoatRoughness:.8,envMapIntensity:.5})}const fi=40,Ka=1,$u=1800,bI=(Ka*2+1)**2,xI=.75,ed=1.6,_I=new $(.6,.4).normalize(),EI=new ae(5017402),vI=.55,wI=.45,SI=new Yt(new S(-fi,-10,-fi),new S(fi,30,fi));let $n=null;function CI(s){let e=s>>>0;return function(){e+=1831565813;let t=e;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}}function MI(s,e,t){let n=s*374761393+e*668265263+t*362437;return n=(n^n>>>13)*1274126177,n=(n^n>>>16)>>>0,n}function II(s){const e=new $e,t=new Float32Array([0,0,0,-.04,0,0,0,1,0,0,0,0,0,1,0,.04,0,0]);e.setAttribute("position",new ht(t,3)),e.computeVertexNormals();const n=new zd;n.instanceCount=s,n.setAttribute("position",e.getAttribute("position")),n.setAttribute("normal",e.getAttribute("normal"));const i=new Float32Array(s*3),r=new Float32Array(s),a=new Float32Array(s);return n.setAttribute("instanceOffset",new Oi(i,3)),n.setAttribute("instanceScale",new Oi(r,1)),n.setAttribute("instancePhase",new Oi(a,1)),n.boundingBox=SI.clone(),n.boundingSphere=new on(new S(0,ed*.5,0),Math.sqrt(2*fi*fi)+ed),{geometry:n,offsets:i,scales:r,phases:a}}function TI(){const s={uTime:{value:0},uWindDir:{value:_I.clone()},uColor:{value:EI.clone()},uNightFactor:{value:0}},e=`
    attribute vec3 instanceOffset;
    attribute float instanceScale;
    attribute float instancePhase;

    uniform float uTime;
    uniform vec2 uWindDir;

    varying float vTipFactor;
    varying float vWorldY;

    mat2 rotation2D(float angle) {
      float s = sin(angle);
      float c = cos(angle);
      return mat2(c, -s, s, c);
    }

    void main() {
      float phase = instancePhase * 6.28318530718;
      float fastSway = sin(uTime * 7.0 + phase) * 0.05;
      float slowSway = sin(uTime * 1.3 + phase * 1.7) * 0.02;
      float sway = fastSway + slowSway;

      vec3 transformed = position;
      float tip = clamp(position.y, 0.0, 1.0);

      transformed.y *= instanceScale;

      vec2 rotated = rotation2D(phase) * vec2(transformed.x, transformed.z);
      transformed.x = rotated.x;
      transformed.z = rotated.y;

      float bend = tip * tip;
      vec2 windOffset = uWindDir * sway * bend;
      transformed.x += windOffset.x;
      transformed.z += windOffset.y;

      vec3 worldPosition = transformed + instanceOffset;

      vTipFactor = tip;
      vWorldY = worldPosition.y;

      gl_Position = projectionMatrix * modelViewMatrix * vec4(worldPosition, 1.0);
    }
  `,t=`
    uniform vec3 uColor;
    uniform float uNightFactor;

    varying float vTipFactor;
    varying float vWorldY;

    // Avoid conflict with Three.js ShaderChunk-defined helpers
    float luma3(vec3 color) {
      return dot(color, vec3(0.299, 0.587, 0.114));
    }

    void main() {
      float heightTint = mix(0.55, 1.08, clamp(vTipFactor, 0.0, 1.0));
      float altitudeTint = clamp((vWorldY + 2.0) * 0.03, 0.85, 1.1);
      vec3 color = uColor * heightTint * altitudeTint;

      float desatAmount = uNightFactor * ${vI.toFixed(2)};
      float darkenAmount = uNightFactor * ${wI.toFixed(2)};

      float lum = luma3(color);
      color = mix(color, vec3(lum), desatAmount);
      color *= mix(1.0, 0.6, darkenAmount);

      gl_FragColor = vec4(color, 1.0);
    }
  `;return new Yn({uniforms:s,vertexShader:e,fragmentShader:t,side:An})}function r0(s){if(!s)return null;const e=s.userData?.terrainHeightSampler;if(typeof e=="function")return e;const t=s.userData?.getHeightAt;if(typeof t=="function")return t;const i=s.userData?.terrain?.userData?.getHeightAt;return typeof i=="function"?i:null}function BI(s,e,t,n){const{geometry:i,offsets:r,scales:a,phases:o}=s,c=n.heightSampler,l=n.seed,h=(e+.5)*fi,u=(t+.5)*fi,d=CI(MI(e,t,l));for(let f=0;f<$u;f+=1){const p=(d()-.5)*fi,g=(d()-.5)*fi,m=h+p,A=u+g;let x=0;if(c){const _=c(m,A);Number.isFinite(_)&&(x=_)}const b=f*3;r[b+0]=m,r[b+1]=x,r[b+2]=A;const y=ue.lerp(xI,ed,d());a[f]=y,o[f]=d()}i.instanceCount=$u,i.attributes.instanceOffset.needsUpdate=!0,i.attributes.instanceScale.needsUpdate=!0,i.attributes.instancePhase.needsUpdate=!0,s.coord.set(e,t)}function RI(s){const{geometry:e,offsets:t,scales:n,phases:i}=II($u),r={geometry:e,mesh:new Be(e,s.material),offsets:t,scales:n,phases:i,coord:new $(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)};return r.mesh.frustumCulled=!1,r.mesh.name="GrassTile",r.mesh.userData.isGrassTile=!0,r}function DI(s){if(!s)return null;if($n)return $n;const e=TI(),t=new bt;t.name="InstancedGrass",s.add(t);const n={root:t,scene:s,material:e,tiles:[],seed:1013904223,heightSampler:r0(s),time:0,lastCenter:new $(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)};for(let i=0;i<bI;i+=1){const r=RI(n);n.tiles.push(r),t.add(r.mesh)}return $n=n,n}function PI(s,e,t){const n=[];for(let l=-Ka;l<=Ka;l+=1)for(let h=-Ka;h<=Ka;h+=1)n.push({x:e+h,z:t+l});const i=s.tiles,r=new Set(n.map((l,h)=>h)),a=[];for(const l of i){let h=-1;for(let u=0;u<n.length;u+=1){const d=n[u];if(r.has(u)&&l.coord.x===d.x&&l.coord.y===d.z){h=u;break}}h!==-1?r.delete(h):a.push(l)}if(r.size===0)return;const o=Array.from(r);let c=0;for(const l of o){const h=n[l],u=a[c]??i[c%i.length];c+=1,BI(u,h.x,h.z,s)}}function LI(s){const e=DI(s);if(!e)return null;e.heightSampler=r0(s);for(const t of e.tiles)t.coord.set(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY);return e.root}function _A(s=0,e=null){if(!$n||($n.time+=s,$n.material.uniforms.uTime.value=$n.time,!e))return;const t=e.x??0,n=e.z??0,i=Math.floor(t/fi),r=Math.floor(n/fi);($n.lastCenter.x!==i||$n.lastCenter.y!==r)&&(PI($n,i,r),$n.lastCenter.set(i,r))}function yu(s){$n&&($n.material.uniforms.uNightFactor.value=ue.clamp(s??0,0,1))}class ph extends xn{constructor(e){super(e),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(t){return new OI(t)}),this.register(function(t){return new QI(t)}),this.register(function(t){return new KI(t)}),this.register(function(t){return new JI(t)}),this.register(function(t){return new jI(t)}),this.register(function(t){return new zI(t)}),this.register(function(t){return new HI(t)}),this.register(function(t){return new VI(t)}),this.register(function(t){return new WI(t)}),this.register(function(t){return new kI(t)}),this.register(function(t){return new qI(t)}),this.register(function(t){return new GI(t)}),this.register(function(t){return new YI(t)}),this.register(function(t){return new XI(t)}),this.register(function(t){return new UI(t)}),this.register(function(t){return new ZI(t)}),this.register(function(t){return new $I(t)})}load(e,t,n,i){const r=this;let a;if(this.resourcePath!=="")a=this.resourcePath;else if(this.path!==""){const l=vs.extractUrlBase(e);a=vs.resolveURL(l,this.path)}else a=vs.extractUrlBase(e);this.manager.itemStart(e);const o=function(l){i?i(l):console.error(l),r.manager.itemError(e),r.manager.itemEnd(e)},c=new In(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(l){try{r.parse(l,a,function(h){t(h),r.manager.itemEnd(e)},o)}catch(h){o(h)}},n,o)}setDRACOLoader(e){return this.dracoLoader=e,this}setKTX2Loader(e){return this.ktx2Loader=e,this}setMeshoptDecoder(e){return this.meshoptDecoder=e,this}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,n,i){let r;const a={},o={},c=new TextDecoder;if(typeof e=="string")r=JSON.parse(e);else if(e instanceof ArrayBuffer)if(c.decode(new Uint8Array(e,0,4))===a0){try{a[Et.KHR_BINARY_GLTF]=new eT(e)}catch(u){i&&i(u);return}r=JSON.parse(a[Et.KHR_BINARY_GLTF].content)}else r=JSON.parse(c.decode(e));else r=e;if(r.asset===void 0||r.asset.version[0]<2){i&&i(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));return}const l=new fT(r,{path:t||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});l.fileLoader.setRequestHeader(this.requestHeader);for(let h=0;h<this.pluginCallbacks.length;h++){const u=this.pluginCallbacks[h](l);u.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),o[u.name]=u,a[u.name]=!0}if(r.extensionsUsed)for(let h=0;h<r.extensionsUsed.length;++h){const u=r.extensionsUsed[h],d=r.extensionsRequired||[];switch(u){case Et.KHR_MATERIALS_UNLIT:a[u]=new NI;break;case Et.KHR_DRACO_MESH_COMPRESSION:a[u]=new tT(r,this.dracoLoader);break;case Et.KHR_TEXTURE_TRANSFORM:a[u]=new nT;break;case Et.KHR_MESH_QUANTIZATION:a[u]=new iT;break;default:d.indexOf(u)>=0&&o[u]===void 0&&console.warn('THREE.GLTFLoader: Unknown extension "'+u+'".')}}l.setExtensions(a),l.setPlugins(o),l.parse(n,i)}parseAsync(e,t){const n=this;return new Promise(function(i,r){n.parse(e,t,i,r)})}}function FI(){let s={};return{get:function(e){return s[e]},add:function(e,t){s[e]=t},remove:function(e){delete s[e]},removeAll:function(){s={}}}}const Et={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class UI{constructor(e){this.parser=e,this.name=Et.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const e=this.parser,t=this.parser.json.nodes||[];for(let n=0,i=t.length;n<i;n++){const r=t[n];r.extensions&&r.extensions[this.name]&&r.extensions[this.name].light!==void 0&&e._addNodeRef(this.cache,r.extensions[this.name].light)}}_loadLight(e){const t=this.parser,n="light:"+e;let i=t.cache.get(n);if(i)return i;const r=t.json,c=((r.extensions&&r.extensions[this.name]||{}).lights||[])[e];let l;const h=new ae(16777215);c.color!==void 0&&h.setRGB(c.color[0],c.color[1],c.color[2],Ot);const u=c.range!==void 0?c.range:0;switch(c.type){case"directional":l=new Oo(h),l.target.position.set(0,0,-1),l.add(l.target);break;case"point":l=new is(h),l.distance=u;break;case"spot":l=new oh(h),l.distance=u,c.spot=c.spot||{},c.spot.innerConeAngle=c.spot.innerConeAngle!==void 0?c.spot.innerConeAngle:0,c.spot.outerConeAngle=c.spot.outerConeAngle!==void 0?c.spot.outerConeAngle:Math.PI/4,l.angle=c.spot.outerConeAngle,l.penumbra=1-c.spot.innerConeAngle/c.spot.outerConeAngle,l.target.position.set(0,0,-1),l.add(l.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+c.type)}return l.position.set(0,0,0),Fi(l,c),c.intensity!==void 0&&(l.intensity=c.intensity),l.name=t.createUniqueName(c.name||"light_"+e),i=Promise.resolve(l),t.cache.add(n,i),i}getDependency(e,t){if(e==="light")return this._loadLight(t)}createNodeAttachment(e){const t=this,n=this.parser,r=n.json.nodes[e],o=(r.extensions&&r.extensions[this.name]||{}).light;return o===void 0?null:this._loadLight(o).then(function(c){return n._getNodeRef(t.cache,o,c)})}}class NI{constructor(){this.name=Et.KHR_MATERIALS_UNLIT}getMaterialType(){return Cn}extendParams(e,t,n){const i=[];e.color=new ae(1,1,1),e.opacity=1;const r=t.pbrMetallicRoughness;if(r){if(Array.isArray(r.baseColorFactor)){const a=r.baseColorFactor;e.color.setRGB(a[0],a[1],a[2],Ot),e.opacity=a[3]}r.baseColorTexture!==void 0&&i.push(n.assignTexture(e,"map",r.baseColorTexture,Tt))}return Promise.all(i)}}class kI{constructor(e){this.parser=e,this.name=Et.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=i.extensions[this.name].emissiveStrength;return r!==void 0&&(t.emissiveIntensity=r),Promise.resolve()}}class OI{constructor(e){this.parser=e,this.name=Et.KHR_MATERIALS_CLEARCOAT}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:mn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],a=i.extensions[this.name];if(a.clearcoatFactor!==void 0&&(t.clearcoat=a.clearcoatFactor),a.clearcoatTexture!==void 0&&r.push(n.assignTexture(t,"clearcoatMap",a.clearcoatTexture)),a.clearcoatRoughnessFactor!==void 0&&(t.clearcoatRoughness=a.clearcoatRoughnessFactor),a.clearcoatRoughnessTexture!==void 0&&r.push(n.assignTexture(t,"clearcoatRoughnessMap",a.clearcoatRoughnessTexture)),a.clearcoatNormalTexture!==void 0&&(r.push(n.assignTexture(t,"clearcoatNormalMap",a.clearcoatNormalTexture)),a.clearcoatNormalTexture.scale!==void 0)){const o=a.clearcoatNormalTexture.scale;t.clearcoatNormalScale=new $(o,o)}return Promise.all(r)}}class QI{constructor(e){this.parser=e,this.name=Et.KHR_MATERIALS_DISPERSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:mn}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=i.extensions[this.name];return t.dispersion=r.dispersion!==void 0?r.dispersion:0,Promise.resolve()}}class GI{constructor(e){this.parser=e,this.name=Et.KHR_MATERIALS_IRIDESCENCE}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:mn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],a=i.extensions[this.name];return a.iridescenceFactor!==void 0&&(t.iridescence=a.iridescenceFactor),a.iridescenceTexture!==void 0&&r.push(n.assignTexture(t,"iridescenceMap",a.iridescenceTexture)),a.iridescenceIor!==void 0&&(t.iridescenceIOR=a.iridescenceIor),t.iridescenceThicknessRange===void 0&&(t.iridescenceThicknessRange=[100,400]),a.iridescenceThicknessMinimum!==void 0&&(t.iridescenceThicknessRange[0]=a.iridescenceThicknessMinimum),a.iridescenceThicknessMaximum!==void 0&&(t.iridescenceThicknessRange[1]=a.iridescenceThicknessMaximum),a.iridescenceThicknessTexture!==void 0&&r.push(n.assignTexture(t,"iridescenceThicknessMap",a.iridescenceThicknessTexture)),Promise.all(r)}}class zI{constructor(e){this.parser=e,this.name=Et.KHR_MATERIALS_SHEEN}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:mn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[];t.sheenColor=new ae(0,0,0),t.sheenRoughness=0,t.sheen=1;const a=i.extensions[this.name];if(a.sheenColorFactor!==void 0){const o=a.sheenColorFactor;t.sheenColor.setRGB(o[0],o[1],o[2],Ot)}return a.sheenRoughnessFactor!==void 0&&(t.sheenRoughness=a.sheenRoughnessFactor),a.sheenColorTexture!==void 0&&r.push(n.assignTexture(t,"sheenColorMap",a.sheenColorTexture,Tt)),a.sheenRoughnessTexture!==void 0&&r.push(n.assignTexture(t,"sheenRoughnessMap",a.sheenRoughnessTexture)),Promise.all(r)}}class HI{constructor(e){this.parser=e,this.name=Et.KHR_MATERIALS_TRANSMISSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:mn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],a=i.extensions[this.name];return a.transmissionFactor!==void 0&&(t.transmission=a.transmissionFactor),a.transmissionTexture!==void 0&&r.push(n.assignTexture(t,"transmissionMap",a.transmissionTexture)),Promise.all(r)}}class VI{constructor(e){this.parser=e,this.name=Et.KHR_MATERIALS_VOLUME}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:mn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],a=i.extensions[this.name];t.thickness=a.thicknessFactor!==void 0?a.thicknessFactor:0,a.thicknessTexture!==void 0&&r.push(n.assignTexture(t,"thicknessMap",a.thicknessTexture)),t.attenuationDistance=a.attenuationDistance||1/0;const o=a.attenuationColor||[1,1,1];return t.attenuationColor=new ae().setRGB(o[0],o[1],o[2],Ot),Promise.all(r)}}class WI{constructor(e){this.parser=e,this.name=Et.KHR_MATERIALS_IOR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:mn}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=i.extensions[this.name];return t.ior=r.ior!==void 0?r.ior:1.5,Promise.resolve()}}class qI{constructor(e){this.parser=e,this.name=Et.KHR_MATERIALS_SPECULAR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:mn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],a=i.extensions[this.name];t.specularIntensity=a.specularFactor!==void 0?a.specularFactor:1,a.specularTexture!==void 0&&r.push(n.assignTexture(t,"specularIntensityMap",a.specularTexture));const o=a.specularColorFactor||[1,1,1];return t.specularColor=new ae().setRGB(o[0],o[1],o[2],Ot),a.specularColorTexture!==void 0&&r.push(n.assignTexture(t,"specularColorMap",a.specularColorTexture,Tt)),Promise.all(r)}}class XI{constructor(e){this.parser=e,this.name=Et.EXT_MATERIALS_BUMP}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:mn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],a=i.extensions[this.name];return t.bumpScale=a.bumpFactor!==void 0?a.bumpFactor:1,a.bumpTexture!==void 0&&r.push(n.assignTexture(t,"bumpMap",a.bumpTexture)),Promise.all(r)}}class YI{constructor(e){this.parser=e,this.name=Et.KHR_MATERIALS_ANISOTROPY}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:mn}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],a=i.extensions[this.name];return a.anisotropyStrength!==void 0&&(t.anisotropy=a.anisotropyStrength),a.anisotropyRotation!==void 0&&(t.anisotropyRotation=a.anisotropyRotation),a.anisotropyTexture!==void 0&&r.push(n.assignTexture(t,"anisotropyMap",a.anisotropyTexture)),Promise.all(r)}}class KI{constructor(e){this.parser=e,this.name=Et.KHR_TEXTURE_BASISU}loadTexture(e){const t=this.parser,n=t.json,i=n.textures[e];if(!i.extensions||!i.extensions[this.name])return null;const r=i.extensions[this.name],a=t.options.ktx2Loader;if(!a){if(n.extensionsRequired&&n.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return t.loadTextureImage(e,r.source,a)}}class JI{constructor(e){this.parser=e,this.name=Et.EXT_TEXTURE_WEBP}loadTexture(e){const t=this.name,n=this.parser,i=n.json,r=i.textures[e];if(!r.extensions||!r.extensions[t])return null;const a=r.extensions[t],o=i.images[a.source];let c=n.textureLoader;if(o.uri){const l=n.options.manager.getHandler(o.uri);l!==null&&(c=l)}return n.loadTextureImage(e,a.source,c)}}class jI{constructor(e){this.parser=e,this.name=Et.EXT_TEXTURE_AVIF}loadTexture(e){const t=this.name,n=this.parser,i=n.json,r=i.textures[e];if(!r.extensions||!r.extensions[t])return null;const a=r.extensions[t],o=i.images[a.source];let c=n.textureLoader;if(o.uri){const l=n.options.manager.getHandler(o.uri);l!==null&&(c=l)}return n.loadTextureImage(e,a.source,c)}}class ZI{constructor(e){this.name=Et.EXT_MESHOPT_COMPRESSION,this.parser=e}loadBufferView(e){const t=this.parser.json,n=t.bufferViews[e];if(n.extensions&&n.extensions[this.name]){const i=n.extensions[this.name],r=this.parser.getDependency("buffer",i.buffer),a=this.parser.options.meshoptDecoder;if(!a||!a.supported){if(t.extensionsRequired&&t.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return r.then(function(o){const c=i.byteOffset||0,l=i.byteLength||0,h=i.count,u=i.byteStride,d=new Uint8Array(o,c,l);return a.decodeGltfBufferAsync?a.decodeGltfBufferAsync(h,u,d,i.mode,i.filter).then(function(f){return f.buffer}):a.ready.then(function(){const f=new ArrayBuffer(h*u);return a.decodeGltfBuffer(new Uint8Array(f),h,u,d,i.mode,i.filter),f})})}else return null}}class $I{constructor(e){this.name=Et.EXT_MESH_GPU_INSTANCING,this.parser=e}createNodeMesh(e){const t=this.parser.json,n=t.nodes[e];if(!n.extensions||!n.extensions[this.name]||n.mesh===void 0)return null;const i=t.meshes[n.mesh];for(const l of i.primitives)if(l.mode!==ui.TRIANGLES&&l.mode!==ui.TRIANGLE_STRIP&&l.mode!==ui.TRIANGLE_FAN&&l.mode!==void 0)return null;const a=n.extensions[this.name].attributes,o=[],c={};for(const l in a)o.push(this.parser.getDependency("accessor",a[l]).then(h=>(c[l]=h,c[l])));return o.length<1?null:(o.push(this.parser.createNodeMesh(e)),Promise.all(o).then(l=>{const h=l.pop(),u=h.isGroup?h.children:[h],d=l[0].count,f=[];for(const p of u){const g=new Ke,m=new S,A=new an,x=new S(1,1,1),b=new Ln(p.geometry,p.material,d);for(let y=0;y<d;y++)c.TRANSLATION&&m.fromBufferAttribute(c.TRANSLATION,y),c.ROTATION&&A.fromBufferAttribute(c.ROTATION,y),c.SCALE&&x.fromBufferAttribute(c.SCALE,y),b.setMatrixAt(y,g.compose(m,A,x));for(const y in c)if(y==="_COLOR_0"){const _=c[y];b.instanceColor=new Oi(_.array,_.itemSize,_.normalized)}else y!=="TRANSLATION"&&y!=="ROTATION"&&y!=="SCALE"&&p.geometry.setAttribute(y,c[y]);mt.prototype.copy.call(b,p),this.parser.assignFinalMaterial(b),f.push(b)}return h.isGroup?(h.clear(),h.add(...f),h):f[0]}))}}const a0="glTF",Ga=12,EA={JSON:1313821514,BIN:5130562};class eT{constructor(e){this.name=Et.KHR_BINARY_GLTF,this.content=null,this.body=null;const t=new DataView(e,0,Ga),n=new TextDecoder;if(this.header={magic:n.decode(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==a0)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const i=this.header.length-Ga,r=new DataView(e,Ga);let a=0;for(;a<i;){const o=r.getUint32(a,!0);a+=4;const c=r.getUint32(a,!0);if(a+=4,c===EA.JSON){const l=new Uint8Array(e,Ga+a,o);this.content=n.decode(l)}else if(c===EA.BIN){const l=Ga+a;this.body=e.slice(l,l+o)}a+=o}if(this.content===null)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class tT{constructor(e,t){if(!t)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=Et.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,this.dracoLoader.preload()}decodePrimitive(e,t){const n=this.json,i=this.dracoLoader,r=e.extensions[this.name].bufferView,a=e.extensions[this.name].attributes,o={},c={},l={};for(const h in a){const u=td[h]||h.toLowerCase();o[u]=a[h]}for(const h in e.attributes){const u=td[h]||h.toLowerCase();if(a[h]!==void 0){const d=n.accessors[e.attributes[h]],f=aa[d.componentType];l[u]=f.name,c[u]=d.normalized===!0}}return t.getDependency("bufferView",r).then(function(h){return new Promise(function(u,d){i.decodeDracoFile(h,function(f){for(const p in f.attributes){const g=f.attributes[p],m=c[p];m!==void 0&&(g.normalized=m)}u(f)},o,l,Ot,d)})})}}class nT{constructor(){this.name=Et.KHR_TEXTURE_TRANSFORM}extendTexture(e,t){return(t.texCoord===void 0||t.texCoord===e.channel)&&t.offset===void 0&&t.rotation===void 0&&t.scale===void 0||(e=e.clone(),t.texCoord!==void 0&&(e.channel=t.texCoord),t.offset!==void 0&&e.offset.fromArray(t.offset),t.rotation!==void 0&&(e.rotation=t.rotation),t.scale!==void 0&&e.repeat.fromArray(t.scale),e.needsUpdate=!0),e}}class iT{constructor(){this.name=Et.KHR_MESH_QUANTIZATION}}class o0 extends Ma{constructor(e,t,n,i){super(e,t,n,i)}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i*3+i;for(let a=0;a!==i;a++)t[a]=n[r+a];return t}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=o*2,l=o*3,h=i-t,u=(n-t)/h,d=u*u,f=d*u,p=e*l,g=p-l,m=-2*f+3*d,A=f-d,x=1-m,b=A-d+u;for(let y=0;y!==o;y++){const _=a[g+y+o],w=a[g+y+c]*h,C=a[p+y+o],T=a[p+y]*h;r[y]=x*_+b*w+m*C+A*T}return r}}const sT=new an;class rT extends o0{interpolate_(e,t,n,i){const r=super.interpolate_(e,t,n,i);return sT.fromArray(r).normalize().toArray(r),r}}const ui={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},aa={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},vA={9728:Jt,9729:Qt,9984:Eo,9985:ia,9986:ir,9987:Wn},wA={33071:ni,33648:oa,10497:On},bu={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},td={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},ms={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},aT={CUBICSPLINE:void 0,LINEAR:ga,STEP:ma},xu={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"};function oT(s){return s.DefaultMaterial===void 0&&(s.DefaultMaterial=new tt({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:wi})),s.DefaultMaterial}function Ys(s,e,t){for(const n in t.extensions)s[n]===void 0&&(e.userData.gltfExtensions=e.userData.gltfExtensions||{},e.userData.gltfExtensions[n]=t.extensions[n])}function Fi(s,e){e.extras!==void 0&&(typeof e.extras=="object"?Object.assign(s.userData,e.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+e.extras))}function cT(s,e,t){let n=!1,i=!1,r=!1;for(let l=0,h=e.length;l<h;l++){const u=e[l];if(u.POSITION!==void 0&&(n=!0),u.NORMAL!==void 0&&(i=!0),u.COLOR_0!==void 0&&(r=!0),n&&i&&r)break}if(!n&&!i&&!r)return Promise.resolve(s);const a=[],o=[],c=[];for(let l=0,h=e.length;l<h;l++){const u=e[l];if(n){const d=u.POSITION!==void 0?t.getDependency("accessor",u.POSITION):s.attributes.position;a.push(d)}if(i){const d=u.NORMAL!==void 0?t.getDependency("accessor",u.NORMAL):s.attributes.normal;o.push(d)}if(r){const d=u.COLOR_0!==void 0?t.getDependency("accessor",u.COLOR_0):s.attributes.color;c.push(d)}}return Promise.all([Promise.all(a),Promise.all(o),Promise.all(c)]).then(function(l){const h=l[0],u=l[1],d=l[2];return n&&(s.morphAttributes.position=h),i&&(s.morphAttributes.normal=u),r&&(s.morphAttributes.color=d),s.morphTargetsRelative=!0,s})}function lT(s,e){if(s.updateMorphTargets(),e.weights!==void 0)for(let t=0,n=e.weights.length;t<n;t++)s.morphTargetInfluences[t]=e.weights[t];if(e.extras&&Array.isArray(e.extras.targetNames)){const t=e.extras.targetNames;if(s.morphTargetInfluences.length===t.length){s.morphTargetDictionary={};for(let n=0,i=t.length;n<i;n++)s.morphTargetDictionary[t[n]]=n}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function hT(s){let e;const t=s.extensions&&s.extensions[Et.KHR_DRACO_MESH_COMPRESSION];if(t?e="draco:"+t.bufferView+":"+t.indices+":"+_u(t.attributes):e=s.indices+":"+_u(s.attributes)+":"+s.mode,s.targets!==void 0)for(let n=0,i=s.targets.length;n<i;n++)e+=":"+_u(s.targets[n]);return e}function _u(s){let e="";const t=Object.keys(s).sort();for(let n=0,i=t.length;n<i;n++)e+=t[n]+":"+s[t[n]]+";";return e}function nd(s){switch(s){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}function uT(s){return s.search(/\.jpe?g($|\?)/i)>0||s.search(/^data\:image\/jpeg/)===0?"image/jpeg":s.search(/\.webp($|\?)/i)>0||s.search(/^data\:image\/webp/)===0?"image/webp":s.search(/\.ktx2($|\?)/i)>0||s.search(/^data\:image\/ktx2/)===0?"image/ktx2":"image/png"}const dT=new Ke;class fT{constructor(e={},t={}){this.json=e,this.extensions={},this.plugins={},this.options=t,this.cache=new FI,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let n=!1,i=-1,r=!1,a=-1;if(typeof navigator<"u"){const o=navigator.userAgent;n=/^((?!chrome|android).)*safari/i.test(o)===!0;const c=o.match(/Version\/(\d+)/);i=n&&c?parseInt(c[1],10):-1,r=o.indexOf("Firefox")>-1,a=r?o.match(/Firefox\/([0-9]+)\./)[1]:-1}typeof createImageBitmap>"u"||n&&i<17||r&&a<98?this.textureLoader=new No(this.options.manager):this.textureLoader=new Bg(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new In(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),this.options.crossOrigin==="use-credentials"&&this.fileLoader.setWithCredentials(!0)}setExtensions(e){this.extensions=e}setPlugins(e){this.plugins=e}parse(e,t){const n=this,i=this.json,r=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(a){return a._markDefs&&a._markDefs()}),Promise.all(this._invokeAll(function(a){return a.beforeRoot&&a.beforeRoot()})).then(function(){return Promise.all([n.getDependencies("scene"),n.getDependencies("animation"),n.getDependencies("camera")])}).then(function(a){const o={scene:a[0][i.scene||0],scenes:a[0],animations:a[1],cameras:a[2],asset:i.asset,parser:n,userData:{}};return Ys(r,o,i),Fi(o,i),Promise.all(n._invokeAll(function(c){return c.afterRoot&&c.afterRoot(o)})).then(function(){for(const c of o.scenes)c.updateMatrixWorld();e(o)})}).catch(t)}_markDefs(){const e=this.json.nodes||[],t=this.json.skins||[],n=this.json.meshes||[];for(let i=0,r=t.length;i<r;i++){const a=t[i].joints;for(let o=0,c=a.length;o<c;o++)e[a[o]].isBone=!0}for(let i=0,r=e.length;i<r;i++){const a=e[i];a.mesh!==void 0&&(this._addNodeRef(this.meshCache,a.mesh),a.skin!==void 0&&(n[a.mesh].isSkinnedMesh=!0)),a.camera!==void 0&&this._addNodeRef(this.cameraCache,a.camera)}}_addNodeRef(e,t){t!==void 0&&(e.refs[t]===void 0&&(e.refs[t]=e.uses[t]=0),e.refs[t]++)}_getNodeRef(e,t,n){if(e.refs[t]<=1)return n;const i=n.clone(),r=(a,o)=>{const c=this.associations.get(a);c!=null&&this.associations.set(o,c);for(const[l,h]of a.children.entries())r(h,o.children[l])};return r(n,i),i.name+="_instance_"+e.uses[t]++,i}_invokeOne(e){const t=Object.values(this.plugins);t.push(this);for(let n=0;n<t.length;n++){const i=e(t[n]);if(i)return i}return null}_invokeAll(e){const t=Object.values(this.plugins);t.unshift(this);const n=[];for(let i=0;i<t.length;i++){const r=e(t[i]);r&&n.push(r)}return n}getDependency(e,t){const n=e+":"+t;let i=this.cache.get(n);if(!i){switch(e){case"scene":i=this.loadScene(t);break;case"node":i=this._invokeOne(function(r){return r.loadNode&&r.loadNode(t)});break;case"mesh":i=this._invokeOne(function(r){return r.loadMesh&&r.loadMesh(t)});break;case"accessor":i=this.loadAccessor(t);break;case"bufferView":i=this._invokeOne(function(r){return r.loadBufferView&&r.loadBufferView(t)});break;case"buffer":i=this.loadBuffer(t);break;case"material":i=this._invokeOne(function(r){return r.loadMaterial&&r.loadMaterial(t)});break;case"texture":i=this._invokeOne(function(r){return r.loadTexture&&r.loadTexture(t)});break;case"skin":i=this.loadSkin(t);break;case"animation":i=this._invokeOne(function(r){return r.loadAnimation&&r.loadAnimation(t)});break;case"camera":i=this.loadCamera(t);break;default:if(i=this._invokeOne(function(r){return r!=this&&r.getDependency&&r.getDependency(e,t)}),!i)throw new Error("Unknown type: "+e);break}this.cache.add(n,i)}return i}getDependencies(e){let t=this.cache.get(e);if(!t){const n=this,i=this.json[e+(e==="mesh"?"es":"s")]||[];t=Promise.all(i.map(function(r,a){return n.getDependency(e,a)})),this.cache.add(e,t)}return t}loadBuffer(e){const t=this.json.buffers[e],n=this.fileLoader;if(t.type&&t.type!=="arraybuffer")throw new Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(t.uri===void 0&&e===0)return Promise.resolve(this.extensions[Et.KHR_BINARY_GLTF].body);const i=this.options;return new Promise(function(r,a){n.load(vs.resolveURL(t.uri,i.path),r,void 0,function(){a(new Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))})})}loadBufferView(e){const t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then(function(n){const i=t.byteLength||0,r=t.byteOffset||0;return n.slice(r,r+i)})}loadAccessor(e){const t=this,n=this.json,i=this.json.accessors[e];if(i.bufferView===void 0&&i.sparse===void 0){const a=bu[i.type],o=aa[i.componentType],c=i.normalized===!0,l=new o(i.count*a);return Promise.resolve(new ht(l,a,c))}const r=[];return i.bufferView!==void 0?r.push(this.getDependency("bufferView",i.bufferView)):r.push(null),i.sparse!==void 0&&(r.push(this.getDependency("bufferView",i.sparse.indices.bufferView)),r.push(this.getDependency("bufferView",i.sparse.values.bufferView))),Promise.all(r).then(function(a){const o=a[0],c=bu[i.type],l=aa[i.componentType],h=l.BYTES_PER_ELEMENT,u=h*c,d=i.byteOffset||0,f=i.bufferView!==void 0?n.bufferViews[i.bufferView].byteStride:void 0,p=i.normalized===!0;let g,m;if(f&&f!==u){const A=Math.floor(d/f),x="InterleavedBuffer:"+i.bufferView+":"+i.componentType+":"+A+":"+i.count;let b=t.cache.get(x);b||(g=new l(o,A*f,i.count*f/h),b=new To(g,f/h),t.cache.add(x,b)),m=new Cs(b,c,d%f/h,p)}else o===null?g=new l(i.count*c):g=new l(o,d,i.count*c),m=new ht(g,c,p);if(i.sparse!==void 0){const A=bu.SCALAR,x=aa[i.sparse.indices.componentType],b=i.sparse.indices.byteOffset||0,y=i.sparse.values.byteOffset||0,_=new x(a[1],b,i.sparse.count*A),w=new l(a[2],y,i.sparse.count*c);o!==null&&(m=new ht(m.array.slice(),m.itemSize,m.normalized)),m.normalized=!1;for(let C=0,T=_.length;C<T;C++){const v=_[C];if(m.setX(v,w[C*c]),c>=2&&m.setY(v,w[C*c+1]),c>=3&&m.setZ(v,w[C*c+2]),c>=4&&m.setW(v,w[C*c+3]),c>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}m.normalized=p}return m})}loadTexture(e){const t=this.json,n=this.options,r=t.textures[e].source,a=t.images[r];let o=this.textureLoader;if(a.uri){const c=n.manager.getHandler(a.uri);c!==null&&(o=c)}return this.loadTextureImage(e,r,o)}loadTextureImage(e,t,n){const i=this,r=this.json,a=r.textures[e],o=r.images[t],c=(o.uri||o.bufferView)+":"+a.sampler;if(this.textureCache[c])return this.textureCache[c];const l=this.loadImageSource(t,n).then(function(h){h.flipY=!1,h.name=a.name||o.name||"",h.name===""&&typeof o.uri=="string"&&o.uri.startsWith("data:image/")===!1&&(h.name=o.uri);const d=(r.samplers||{})[a.sampler]||{};return h.magFilter=vA[d.magFilter]||Qt,h.minFilter=vA[d.minFilter]||Wn,h.wrapS=wA[d.wrapS]||On,h.wrapT=wA[d.wrapT]||On,h.generateMipmaps=!h.isCompressedTexture&&h.minFilter!==Jt&&h.minFilter!==Qt,i.associations.set(h,{textures:e}),h}).catch(function(){return null});return this.textureCache[c]=l,l}loadImageSource(e,t){const n=this,i=this.json,r=this.options;if(this.sourceCache[e]!==void 0)return this.sourceCache[e].then(u=>u.clone());const a=i.images[e],o=self.URL||self.webkitURL;let c=a.uri||"",l=!1;if(a.bufferView!==void 0)c=n.getDependency("bufferView",a.bufferView).then(function(u){l=!0;const d=new Blob([u],{type:a.mimeType});return c=o.createObjectURL(d),c});else if(a.uri===void 0)throw new Error("THREE.GLTFLoader: Image "+e+" is missing URI and bufferView");const h=Promise.resolve(c).then(function(u){return new Promise(function(d,f){let p=d;t.isImageBitmapLoader===!0&&(p=function(g){const m=new Ht(g);m.needsUpdate=!0,d(m)}),t.load(vs.resolveURL(u,r.path),p,void 0,f)})}).then(function(u){return l===!0&&o.revokeObjectURL(c),Fi(u,a),u.userData.mimeType=a.mimeType||uT(a.uri),u}).catch(function(u){throw console.error("THREE.GLTFLoader: Couldn't load texture",c),u});return this.sourceCache[e]=h,h}assignTexture(e,t,n,i){const r=this;return this.getDependency("texture",n.index).then(function(a){if(!a)return null;if(n.texCoord!==void 0&&n.texCoord>0&&(a=a.clone(),a.channel=n.texCoord),r.extensions[Et.KHR_TEXTURE_TRANSFORM]){const o=n.extensions!==void 0?n.extensions[Et.KHR_TEXTURE_TRANSFORM]:void 0;if(o){const c=r.associations.get(a);a=r.extensions[Et.KHR_TEXTURE_TRANSFORM].extendTexture(a,o),r.associations.set(a,c)}}return i!==void 0&&(a.colorSpace=i),e[t]=a,a})}assignFinalMaterial(e){const t=e.geometry;let n=e.material;const i=t.attributes.tangent===void 0,r=t.attributes.color!==void 0,a=t.attributes.normal===void 0;if(e.isPoints){const o="PointsMaterial:"+n.uuid;let c=this.cache.get(o);c||(c=new Ro,cn.prototype.copy.call(c,n),c.color.copy(n.color),c.map=n.map,c.sizeAttenuation=!1,this.cache.add(o,c)),n=c}else if(e.isLine){const o="LineBasicMaterial:"+n.uuid;let c=this.cache.get(o);c||(c=new bn,cn.prototype.copy.call(c,n),c.color.copy(n.color),c.map=n.map,this.cache.add(o,c)),n=c}if(i||r||a){let o="ClonedMaterial:"+n.uuid+":";i&&(o+="derivative-tangents:"),r&&(o+="vertex-colors:"),a&&(o+="flat-shading:");let c=this.cache.get(o);c||(c=n.clone(),r&&(c.vertexColors=!0),a&&(c.flatShading=!0),i&&(c.normalScale&&(c.normalScale.y*=-1),c.clearcoatNormalScale&&(c.clearcoatNormalScale.y*=-1)),this.cache.add(o,c),this.associations.set(c,this.associations.get(n))),n=c}e.material=n}getMaterialType(){return tt}loadMaterial(e){const t=this,n=this.json,i=this.extensions,r=n.materials[e];let a;const o={},c=r.extensions||{},l=[];if(c[Et.KHR_MATERIALS_UNLIT]){const u=i[Et.KHR_MATERIALS_UNLIT];a=u.getMaterialType(),l.push(u.extendParams(o,r,t))}else{const u=r.pbrMetallicRoughness||{};if(o.color=new ae(1,1,1),o.opacity=1,Array.isArray(u.baseColorFactor)){const d=u.baseColorFactor;o.color.setRGB(d[0],d[1],d[2],Ot),o.opacity=d[3]}u.baseColorTexture!==void 0&&l.push(t.assignTexture(o,"map",u.baseColorTexture,Tt)),o.metalness=u.metallicFactor!==void 0?u.metallicFactor:1,o.roughness=u.roughnessFactor!==void 0?u.roughnessFactor:1,u.metallicRoughnessTexture!==void 0&&(l.push(t.assignTexture(o,"metalnessMap",u.metallicRoughnessTexture)),l.push(t.assignTexture(o,"roughnessMap",u.metallicRoughnessTexture))),a=this._invokeOne(function(d){return d.getMaterialType&&d.getMaterialType(e)}),l.push(Promise.all(this._invokeAll(function(d){return d.extendMaterialParams&&d.extendMaterialParams(e,o)})))}r.doubleSided===!0&&(o.side=An);const h=r.alphaMode||xu.OPAQUE;if(h===xu.BLEND?(o.transparent=!0,o.depthWrite=!1):(o.transparent=!1,h===xu.MASK&&(o.alphaTest=r.alphaCutoff!==void 0?r.alphaCutoff:.5)),r.normalTexture!==void 0&&a!==Cn&&(l.push(t.assignTexture(o,"normalMap",r.normalTexture)),o.normalScale=new $(1,1),r.normalTexture.scale!==void 0)){const u=r.normalTexture.scale;o.normalScale.set(u,u)}if(r.occlusionTexture!==void 0&&a!==Cn&&(l.push(t.assignTexture(o,"aoMap",r.occlusionTexture)),r.occlusionTexture.strength!==void 0&&(o.aoMapIntensity=r.occlusionTexture.strength)),r.emissiveFactor!==void 0&&a!==Cn){const u=r.emissiveFactor;o.emissive=new ae().setRGB(u[0],u[1],u[2],Ot)}return r.emissiveTexture!==void 0&&a!==Cn&&l.push(t.assignTexture(o,"emissiveMap",r.emissiveTexture,Tt)),Promise.all(l).then(function(){const u=new a(o);return r.name&&(u.name=r.name),Fi(u,r),t.associations.set(u,{materials:e}),r.extensions&&Ys(i,u,r),u})}createUniqueName(e){const t=It.sanitizeNodeName(e||"");return t in this.nodeNamesUsed?t+"_"+ ++this.nodeNamesUsed[t]:(this.nodeNamesUsed[t]=0,t)}loadGeometries(e){const t=this,n=this.extensions,i=this.primitiveCache;function r(o){return n[Et.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(o,t).then(function(c){return SA(c,o,t)})}const a=[];for(let o=0,c=e.length;o<c;o++){const l=e[o],h=hT(l),u=i[h];if(u)a.push(u.promise);else{let d;l.extensions&&l.extensions[Et.KHR_DRACO_MESH_COMPRESSION]?d=r(l):d=SA(new $e,l,t),i[h]={primitive:l,promise:d},a.push(d)}}return Promise.all(a)}loadMesh(e){const t=this,n=this.json,i=this.extensions,r=n.meshes[e],a=r.primitives,o=[];for(let c=0,l=a.length;c<l;c++){const h=a[c].material===void 0?oT(this.cache):this.getDependency("material",a[c].material);o.push(h)}return o.push(t.loadGeometries(a)),Promise.all(o).then(function(c){const l=c.slice(0,c.length-1),h=c[c.length-1],u=[];for(let f=0,p=h.length;f<p;f++){const g=h[f],m=a[f];let A;const x=l[f];if(m.mode===ui.TRIANGLES||m.mode===ui.TRIANGLE_STRIP||m.mode===ui.TRIANGLE_FAN||m.mode===void 0)A=r.isSkinnedMesh===!0?new wd(g,x):new Be(g,x),A.isSkinnedMesh===!0&&A.normalizeSkinWeights(),m.mode===ui.TRIANGLE_STRIP?A.geometry=aA(A.geometry,Ad):m.mode===ui.TRIANGLE_FAN&&(A.geometry=aA(A.geometry,Cl));else if(m.mode===ui.LINES)A=new Ci(g,x);else if(m.mode===ui.LINE_STRIP)A=new Qi(g,x);else if(m.mode===ui.LINE_LOOP)A=new Sd(g,x);else if(m.mode===ui.POINTS)A=new Jl(g,x);else throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+m.mode);Object.keys(A.geometry.morphAttributes).length>0&&lT(A,r),A.name=t.createUniqueName(r.name||"mesh_"+e),Fi(A,r),m.extensions&&Ys(i,A,m),t.assignFinalMaterial(A),u.push(A)}for(let f=0,p=u.length;f<p;f++)t.associations.set(u[f],{meshes:e,primitives:f});if(u.length===1)return r.extensions&&Ys(i,u[0],r),u[0];const d=new bt;r.extensions&&Ys(i,d,r),t.associations.set(d,{meshes:e});for(let f=0,p=u.length;f<p;f++)d.add(u[f]);return d})}loadCamera(e){let t;const n=this.json.cameras[e],i=n[n.type];if(!i){console.warn("THREE.GLTFLoader: Missing camera parameters.");return}return n.type==="perspective"?t=new $t(ue.radToDeg(i.yfov),i.aspectRatio||1,i.znear||1,i.zfar||2e6):n.type==="orthographic"&&(t=new ko(-i.xmag,i.xmag,i.ymag,-i.ymag,i.znear,i.zfar)),n.name&&(t.name=this.createUniqueName(n.name)),Fi(t,n),Promise.resolve(t)}loadSkin(e){const t=this.json.skins[e],n=[];for(let i=0,r=t.joints.length;i<r;i++)n.push(this._loadNodeShallow(t.joints[i]));return t.inverseBindMatrices!==void 0?n.push(this.getDependency("accessor",t.inverseBindMatrices)):n.push(null),Promise.all(n).then(function(i){const r=i.pop(),a=i,o=[],c=[];for(let l=0,h=a.length;l<h;l++){const u=a[l];if(u){o.push(u);const d=new Ke;r!==null&&d.fromArray(r.array,l*16),c.push(d)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',t.joints[l])}return new Bo(o,c)})}loadAnimation(e){const t=this.json,n=this,i=t.animations[e],r=i.name?i.name:"animation_"+e,a=[],o=[],c=[],l=[],h=[];for(let u=0,d=i.channels.length;u<d;u++){const f=i.channels[u],p=i.samplers[f.sampler],g=f.target,m=g.node,A=i.parameters!==void 0?i.parameters[p.input]:p.input,x=i.parameters!==void 0?i.parameters[p.output]:p.output;g.node!==void 0&&(a.push(this.getDependency("node",m)),o.push(this.getDependency("accessor",A)),c.push(this.getDependency("accessor",x)),l.push(p),h.push(g))}return Promise.all([Promise.all(a),Promise.all(o),Promise.all(c),Promise.all(l),Promise.all(h)]).then(function(u){const d=u[0],f=u[1],p=u[2],g=u[3],m=u[4],A=[];for(let b=0,y=d.length;b<y;b++){const _=d[b],w=f[b],C=p[b],T=g[b],v=m[b];if(_===void 0)continue;_.updateMatrix&&_.updateMatrix();const E=n._createAnimationTracks(_,w,C,T,v);if(E)for(let B=0;B<E.length;B++)A.push(E[B])}const x=new Ea(r,void 0,A);return Fi(x,i),x})}createNodeMesh(e){const t=this.json,n=this,i=t.nodes[e];return i.mesh===void 0?null:n.getDependency("mesh",i.mesh).then(function(r){const a=n._getNodeRef(n.meshCache,i.mesh,r);return i.weights!==void 0&&a.traverse(function(o){if(o.isMesh)for(let c=0,l=i.weights.length;c<l;c++)o.morphTargetInfluences[c]=i.weights[c]}),a})}loadNode(e){const t=this.json,n=this,i=t.nodes[e],r=n._loadNodeShallow(e),a=[],o=i.children||[];for(let l=0,h=o.length;l<h;l++)a.push(n.getDependency("node",o[l]));const c=i.skin===void 0?Promise.resolve(null):n.getDependency("skin",i.skin);return Promise.all([r,Promise.all(a),c]).then(function(l){const h=l[0],u=l[1],d=l[2];d!==null&&h.traverse(function(f){f.isSkinnedMesh&&f.bind(d,dT)});for(let f=0,p=u.length;f<p;f++)h.add(u[f]);return h})}_loadNodeShallow(e){const t=this.json,n=this.extensions,i=this;if(this.nodeCache[e]!==void 0)return this.nodeCache[e];const r=t.nodes[e],a=r.name?i.createUniqueName(r.name):"",o=[],c=i._invokeOne(function(l){return l.createNodeMesh&&l.createNodeMesh(e)});return c&&o.push(c),r.camera!==void 0&&o.push(i.getDependency("camera",r.camera).then(function(l){return i._getNodeRef(i.cameraCache,r.camera,l)})),i._invokeAll(function(l){return l.createNodeAttachment&&l.createNodeAttachment(e)}).forEach(function(l){o.push(l)}),this.nodeCache[e]=Promise.all(o).then(function(l){let h;if(r.isBone===!0?h=new Yl:l.length>1?h=new bt:l.length===1?h=l[0]:h=new mt,h!==l[0])for(let u=0,d=l.length;u<d;u++)h.add(l[u]);if(r.name&&(h.userData.name=r.name,h.name=a),Fi(h,r),r.extensions&&Ys(n,h,r),r.matrix!==void 0){const u=new Ke;u.fromArray(r.matrix),h.applyMatrix4(u)}else r.translation!==void 0&&h.position.fromArray(r.translation),r.rotation!==void 0&&h.quaternion.fromArray(r.rotation),r.scale!==void 0&&h.scale.fromArray(r.scale);if(!i.associations.has(h))i.associations.set(h,{});else if(r.mesh!==void 0&&i.meshCache.refs[r.mesh]>1){const u=i.associations.get(h);i.associations.set(h,{...u})}return i.associations.get(h).nodes=e,h}),this.nodeCache[e]}loadScene(e){const t=this.extensions,n=this.json.scenes[e],i=this,r=new bt;n.name&&(r.name=i.createUniqueName(n.name)),Fi(r,n),n.extensions&&Ys(t,r,n);const a=n.nodes||[],o=[];for(let c=0,l=a.length;c<l;c++)o.push(i.getDependency("node",a[c]));return Promise.all(o).then(function(c){for(let h=0,u=c.length;h<u;h++)r.add(c[h]);const l=h=>{const u=new Map;for(const[d,f]of i.associations)(d instanceof cn||d instanceof Ht)&&u.set(d,f);return h.traverse(d=>{const f=i.associations.get(d);f!=null&&u.set(d,f)}),u};return i.associations=l(r),r})}_createAnimationTracks(e,t,n,i,r){const a=[],o=e.name?e.name:e.uuid,c=[];ms[r.path]===ms.weights?e.traverse(function(d){d.morphTargetInfluences&&c.push(d.name?d.name:d.uuid)}):c.push(o);let l;switch(ms[r.path]){case ms.weights:l=br;break;case ms.rotation:l=xr;break;case ms.translation:case ms.scale:l=_r;break;default:switch(n.itemSize){case 1:l=br;break;case 2:case 3:default:l=_r;break}break}const h=i.interpolation!==void 0?aT[i.interpolation]:ga,u=this._getArrayFromAccessor(n);for(let d=0,f=c.length;d<f;d++){const p=new l(c[d]+"."+ms[r.path],t.array,u,h);i.interpolation==="CUBICSPLINE"&&this._createCubicSplineTrackInterpolant(p),a.push(p)}return a}_getArrayFromAccessor(e){let t=e.array;if(e.normalized){const n=nd(t.constructor),i=new Float32Array(t.length);for(let r=0,a=t.length;r<a;r++)i[r]=t[r]*n;t=i}return t}_createCubicSplineTrackInterpolant(e){e.createInterpolant=function(n){const i=this instanceof xr?rT:o0;return new i(this.times,this.values,this.getValueSize()/3,n)},e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function pT(s,e,t){const n=e.attributes,i=new Yt;if(n.POSITION!==void 0){const o=t.json.accessors[n.POSITION],c=o.min,l=o.max;if(c!==void 0&&l!==void 0){if(i.set(new S(c[0],c[1],c[2]),new S(l[0],l[1],l[2])),o.normalized){const h=nd(aa[o.componentType]);i.min.multiplyScalar(h),i.max.multiplyScalar(h)}}else{console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");return}}else return;const r=e.targets;if(r!==void 0){const o=new S,c=new S;for(let l=0,h=r.length;l<h;l++){const u=r[l];if(u.POSITION!==void 0){const d=t.json.accessors[u.POSITION],f=d.min,p=d.max;if(f!==void 0&&p!==void 0){if(c.setX(Math.max(Math.abs(f[0]),Math.abs(p[0]))),c.setY(Math.max(Math.abs(f[1]),Math.abs(p[1]))),c.setZ(Math.max(Math.abs(f[2]),Math.abs(p[2]))),d.normalized){const g=nd(aa[d.componentType]);c.multiplyScalar(g)}o.max(c)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}i.expandByVector(o)}s.boundingBox=i;const a=new on;i.getCenter(a.center),a.radius=i.min.distanceTo(i.max)/2,s.boundingSphere=a}function SA(s,e,t){const n=e.attributes,i=[];function r(a,o){return t.getDependency("accessor",a).then(function(c){s.setAttribute(o,c)})}for(const a in n){const o=td[a]||a.toLowerCase();o in s.attributes||i.push(r(n[a],o))}if(e.indices!==void 0&&!s.index){const a=t.getDependency("accessor",e.indices).then(function(o){s.setIndex(o)});i.push(a)}return xt.workingColorSpace!==Ot&&"COLOR_0"in n&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${xt.workingColorSpace}" not supported.`),Fi(s,e),pT(s,e,t),Promise.all(i).then(function(){return e.targets!==void 0?cT(s,e.targets,t):s})}const AT=Object.freeze(Object.defineProperty({__proto__:null,GLTFLoader:ph},Symbol.toStringTag,{value:"Module"}));class mT{constructor(e=4){this.pool=e,this.queue=[],this.workers=[],this.workersResolve=[],this.workerStatus=0,this.workerCreator=null}_initWorker(e){if(!this.workers[e]){const t=this.workerCreator();t.addEventListener("message",this._onMessage.bind(this,e)),this.workers[e]=t}}_getIdleWorker(){for(let e=0;e<this.pool;e++)if(!(this.workerStatus&1<<e))return e;return-1}_onMessage(e,t){const n=this.workersResolve[e];if(n&&n(t),this.queue.length){const{resolve:i,msg:r,transfer:a}=this.queue.shift();this.workersResolve[e]=i,this.workers[e].postMessage(r,a)}else this.workerStatus^=1<<e}setWorkerCreator(e){this.workerCreator=e}setWorkerLimit(e){this.pool=e}postMessage(e,t){return new Promise(n=>{const i=this._getIdleWorker();i!==-1?(this._initWorker(i),this.workerStatus|=1<<i,this.workersResolve[i]=n,this.workers[i].postMessage(e,t)):this.queue.push({resolve:n,msg:e,transfer:t})})}dispose(){this.workers.forEach(e=>e.terminate()),this.workersResolve.length=0,this.workers.length=0,this.queue.length=0,this.workerStatus=0}}const gT=0,CA=2,yT=1,MA=2,bT=0,xT=1,_T=10,ET=0,c0=9,l0=15,h0=16,u0=22,d0=37,f0=43,p0=76,A0=83,m0=97,g0=100,y0=103,b0=109,x0=122,_0=123,E0=131,v0=132,w0=133,S0=134,C0=137,M0=138,I0=139,T0=140,B0=141,R0=142,D0=145,P0=146,L0=148,F0=152,U0=157,N0=158,k0=165,O0=166,Q0=1000054e3,G0=1000054001,z0=1000054004,H0=1000054005,Zd=1000066e3,V0=1000066004;class za{constructor(e,t,n,i){this._dataView=void 0,this._littleEndian=void 0,this._offset=void 0,this._dataView=new DataView(e.buffer,e.byteOffset+t,n),this._littleEndian=i,this._offset=0}_nextUint8(){const e=this._dataView.getUint8(this._offset);return this._offset+=1,e}_nextUint16(){const e=this._dataView.getUint16(this._offset,this._littleEndian);return this._offset+=2,e}_nextUint32(){const e=this._dataView.getUint32(this._offset,this._littleEndian);return this._offset+=4,e}_nextUint64(){const e=this._dataView.getUint32(this._offset,this._littleEndian)+4294967296*this._dataView.getUint32(this._offset+4,this._littleEndian);return this._offset+=8,e}_nextInt32(){const e=this._dataView.getInt32(this._offset,this._littleEndian);return this._offset+=4,e}_nextUint8Array(e){const t=new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+this._offset,e);return this._offset+=e,t}_skip(e){return this._offset+=e,this}_scan(e,t=0){const n=this._offset;let i=0;for(;this._dataView.getUint8(this._offset)!==t&&i<e;)i++,this._offset++;return i<e&&this._offset++,new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+n,i)}}const Rn=[171,75,84,88,32,50,48,187,13,10,26,10];function IA(s){return new TextDecoder().decode(s)}function vT(s){const e=new Uint8Array(s.buffer,s.byteOffset,Rn.length);if(e[0]!==Rn[0]||e[1]!==Rn[1]||e[2]!==Rn[2]||e[3]!==Rn[3]||e[4]!==Rn[4]||e[5]!==Rn[5]||e[6]!==Rn[6]||e[7]!==Rn[7]||e[8]!==Rn[8]||e[9]!==Rn[9]||e[10]!==Rn[10]||e[11]!==Rn[11])throw new Error("Missing KTX 2.0 identifier.");const t={vkFormat:0,typeSize:1,pixelWidth:0,pixelHeight:0,pixelDepth:0,layerCount:0,faceCount:1,levelCount:0,supercompressionScheme:0,levels:[],dataFormatDescriptor:[{vendorId:0,descriptorType:0,versionNumber:2,colorModel:0,colorPrimaries:1,transferFunction:2,flags:0,texelBlockDimension:[0,0,0,0],bytesPlane:[0,0,0,0,0,0,0,0],samples:[]}],keyValue:{},globalData:null},n=17*Uint32Array.BYTES_PER_ELEMENT,i=new za(s,Rn.length,n,!0);t.vkFormat=i._nextUint32(),t.typeSize=i._nextUint32(),t.pixelWidth=i._nextUint32(),t.pixelHeight=i._nextUint32(),t.pixelDepth=i._nextUint32(),t.layerCount=i._nextUint32(),t.faceCount=i._nextUint32(),t.levelCount=i._nextUint32(),t.supercompressionScheme=i._nextUint32();const r=i._nextUint32(),a=i._nextUint32(),o=i._nextUint32(),c=i._nextUint32(),l=i._nextUint64(),h=i._nextUint64(),u=3*Math.max(t.levelCount,1)*8,d=new za(s,Rn.length+n,u,!0);for(let oe=0,Me=Math.max(t.levelCount,1);oe<Me;oe++)t.levels.push({levelData:new Uint8Array(s.buffer,s.byteOffset+d._nextUint64(),d._nextUint64()),uncompressedByteLength:d._nextUint64()});const f=new za(s,r,a,!0);f._skip(4);const p=f._nextUint16(),g=f._nextUint16(),m=f._nextUint16(),A=f._nextUint16(),x={vendorId:p,descriptorType:g,versionNumber:m,colorModel:f._nextUint8(),colorPrimaries:f._nextUint8(),transferFunction:f._nextUint8(),flags:f._nextUint8(),texelBlockDimension:[f._nextUint8(),f._nextUint8(),f._nextUint8(),f._nextUint8()],bytesPlane:[f._nextUint8(),f._nextUint8(),f._nextUint8(),f._nextUint8(),f._nextUint8(),f._nextUint8(),f._nextUint8(),f._nextUint8()],samples:[]},b=(A/4-6)/4;for(let oe=0;oe<b;oe++){const Me={bitOffset:f._nextUint16(),bitLength:f._nextUint8(),channelType:f._nextUint8(),samplePosition:[f._nextUint8(),f._nextUint8(),f._nextUint8(),f._nextUint8()],sampleLower:Number.NEGATIVE_INFINITY,sampleUpper:Number.POSITIVE_INFINITY};64&Me.channelType?(Me.sampleLower=f._nextInt32(),Me.sampleUpper=f._nextInt32()):(Me.sampleLower=f._nextUint32(),Me.sampleUpper=f._nextUint32()),x.samples[oe]=Me}t.dataFormatDescriptor.length=0,t.dataFormatDescriptor.push(x);const y=new za(s,o,c,!0);for(;y._offset<c;){const oe=y._nextUint32(),Me=y._scan(oe),Ne=IA(Me);if(t.keyValue[Ne]=y._nextUint8Array(oe-Me.byteLength-1),Ne.match(/^ktx/i)){const st=IA(t.keyValue[Ne]);t.keyValue[Ne]=st.substring(0,st.lastIndexOf("\0"))}y._skip(oe%4?4-oe%4:0)}if(h<=0)return t;const _=new za(s,l,h,!0),w=_._nextUint16(),C=_._nextUint16(),T=_._nextUint32(),v=_._nextUint32(),E=_._nextUint32(),B=_._nextUint32(),D=[];for(let oe=0,Me=Math.max(t.levelCount,1);oe<Me;oe++)D.push({imageFlags:_._nextUint32(),rgbSliceByteOffset:_._nextUint32(),rgbSliceByteLength:_._nextUint32(),alphaSliceByteOffset:_._nextUint32(),alphaSliceByteLength:_._nextUint32()});const F=l+_._offset,N=F+T,G=N+v,k=G+E,J=new Uint8Array(s.buffer,s.byteOffset+F,T),U=new Uint8Array(s.buffer,s.byteOffset+N,v),ee=new Uint8Array(s.buffer,s.byteOffset+G,E),Ae=new Uint8Array(s.buffer,s.byteOffset+k,B);return t.globalData={endpointCount:w,selectorCount:C,imageDescs:D,endpointsData:J,selectorsData:U,tablesData:ee,extendedData:Ae},t}let Eu,Zi,id;const vu={env:{emscripten_notify_memory_growth:function(s){id=new Uint8Array(Zi.exports.memory.buffer)}}};class wT{init(){return Eu||(Eu=typeof fetch<"u"?fetch("data:application/wasm;base64,"+TA).then(e=>e.arrayBuffer()).then(e=>WebAssembly.instantiate(e,vu)).then(this._init):WebAssembly.instantiate(Buffer.from(TA,"base64"),vu).then(this._init),Eu)}_init(e){Zi=e.instance,vu.env.emscripten_notify_memory_growth(0)}decode(e,t=0){if(!Zi)throw new Error("ZSTDDecoder: Await .init() before decoding.");const n=e.byteLength,i=Zi.exports.malloc(n);id.set(e,i),t=t||Number(Zi.exports.ZSTD_findDecompressedSize(i,n));const r=Zi.exports.malloc(t),a=Zi.exports.ZSTD_decompress(r,t,i,n),o=id.slice(r,r+a);return Zi.exports.free(i),Zi.exports.free(r),o}}const TA="",ST="display-p3",CT="display-p3-linear";({...xt.spaces[Tt]});const wu=new WeakMap;let Su=0,Cu;class ti extends xn{constructor(e){super(e),this.transcoderPath="",this.transcoderBinary=null,this.transcoderPending=null,this.workerPool=new mT,this.workerSourceURL="",this.workerConfig=null,typeof MSC_TRANSCODER<"u"&&console.warn('THREE.KTX2Loader: Please update to latest "basis_transcoder". "msc_basis_transcoder" is no longer supported in three.js r125+.')}setTranscoderPath(e){return this.transcoderPath=e,this}setWorkerLimit(e){return this.workerPool.setWorkerLimit(e),this}async detectSupportAsync(e){return this.workerConfig={astcSupported:await e.hasFeatureAsync("texture-compression-astc"),astcHDRSupported:!1,etc1Supported:await e.hasFeatureAsync("texture-compression-etc2"),etc2Supported:await e.hasFeatureAsync("texture-compression-etc2"),dxtSupported:await e.hasFeatureAsync("texture-compression-bc"),bptcSupported:await e.hasFeatureAsync("texture-compression-bc"),pvrtcSupported:await e.hasFeatureAsync("texture-compression-pvrtc")},this}detectSupport(e){return e.isWebGPURenderer===!0?this.workerConfig={astcSupported:e.hasFeature("texture-compression-astc"),astcHDRSupported:!1,etc1Supported:e.hasFeature("texture-compression-etc2"),etc2Supported:e.hasFeature("texture-compression-etc2"),dxtSupported:e.hasFeature("texture-compression-bc"),bptcSupported:e.hasFeature("texture-compression-bc"),pvrtcSupported:e.hasFeature("texture-compression-pvrtc")}:this.workerConfig={astcSupported:e.extensions.has("WEBGL_compressed_texture_astc"),astcHDRSupported:e.extensions.has("WEBGL_compressed_texture_astc")&&e.extensions.get("WEBGL_compressed_texture_astc").getSupportedProfiles().includes("hdr"),etc1Supported:e.extensions.has("WEBGL_compressed_texture_etc1"),etc2Supported:e.extensions.has("WEBGL_compressed_texture_etc"),dxtSupported:e.extensions.has("WEBGL_compressed_texture_s3tc"),bptcSupported:e.extensions.has("EXT_texture_compression_bptc"),pvrtcSupported:e.extensions.has("WEBGL_compressed_texture_pvrtc")||e.extensions.has("WEBKIT_WEBGL_compressed_texture_pvrtc")},this}init(){if(!this.transcoderPending){const e=new In(this.manager);e.setPath(this.transcoderPath),e.setWithCredentials(this.withCredentials);const t=e.loadAsync("basis_transcoder.js"),n=new In(this.manager);n.setPath(this.transcoderPath),n.setResponseType("arraybuffer"),n.setWithCredentials(this.withCredentials);const i=n.loadAsync("basis_transcoder.wasm");this.transcoderPending=Promise.all([t,i]).then(([r,a])=>{const o=ti.BasisWorker.toString(),c=["/* constants */","let _EngineFormat = "+JSON.stringify(ti.EngineFormat),"let _EngineType = "+JSON.stringify(ti.EngineType),"let _TranscoderFormat = "+JSON.stringify(ti.TranscoderFormat),"let _BasisFormat = "+JSON.stringify(ti.BasisFormat),"/* basis_transcoder.js */",r,"/* worker */",o.substring(o.indexOf("{")+1,o.lastIndexOf("}"))].join(`
`);this.workerSourceURL=URL.createObjectURL(new Blob([c])),this.transcoderBinary=a,this.workerPool.setWorkerCreator(()=>{const l=new Worker(this.workerSourceURL),h=this.transcoderBinary.slice(0);return l.postMessage({type:"init",config:this.workerConfig,transcoderBinary:h},[h]),l})}),Su>0&&console.warn("THREE.KTX2Loader: Multiple active KTX2 loaders may cause performance issues. Use a single KTX2Loader instance, or call .dispose() on old instances."),Su++}return this.transcoderPending}load(e,t,n,i){if(this.workerConfig===null)throw new Error("THREE.KTX2Loader: Missing initialization with `.detectSupport( renderer )`.");const r=new In(this.manager);r.setPath(this.path),r.setCrossOrigin(this.crossOrigin),r.setWithCredentials(this.withCredentials),r.setResponseType("arraybuffer"),r.load(e,a=>{this.parse(a,t,i)},n,i)}parse(e,t,n){if(this.workerConfig===null)throw new Error("THREE.KTX2Loader: Missing initialization with `.detectSupport( renderer )`.");if(wu.has(e))return wu.get(e).promise.then(t).catch(n);this._createTexture(e).then(i=>t?t(i):null).catch(n)}_createTextureFrom(e,t){const{type:n,error:i,data:{faces:r,width:a,height:o,format:c,type:l,dfdFlags:h}}=e;if(n==="error")return Promise.reject(i);let u;if(t.faceCount===6)u=new $m(r,c,l);else{const d=r[0].mipmaps;u=t.layerCount>1?new Zm(d,a,o,t.layerCount,c,l):new Ca(d,a,o,c,l)}return u.minFilter=r[0].mipmaps.length===1?Qt:Wn,u.magFilter=Qt,u.generateMipmaps=!1,u.needsUpdate=!0,u.colorSpace=W0(t),u.premultiplyAlpha=!!(h&yT),u}async _createTexture(e,t={}){const n=vT(new Uint8Array(e)),i=n.vkFormat===Zd&&n.dataFormatDescriptor[0].colorModel===167;if(!(n.vkFormat===ET||i&&!this.workerConfig.astcHDRSupported))return IT(n);const a=t,o=this.init().then(()=>this.workerPool.postMessage({type:"transcode",buffer:e,taskConfig:a},[e])).then(c=>this._createTextureFrom(c.data,n));return wu.set(e,{promise:o}),o}dispose(){this.workerPool.dispose(),this.workerSourceURL&&URL.revokeObjectURL(this.workerSourceURL),Su--}}ti.BasisFormat={ETC1S:0,UASTC:1,UASTC_HDR:2};ti.TranscoderFormat={ETC1:0,ETC2:1,BC1:2,BC3:3,BC4:4,BC5:5,BC7_M6_OPAQUE_ONLY:6,BC7_M5:7,PVRTC1_4_RGB:8,PVRTC1_4_RGBA:9,ASTC_4x4:10,ATC_RGB:11,ATC_RGBA_INTERPOLATED_ALPHA:12,RGBA32:13,RGB565:14,BGR565:15,RGBA4444:16,BC6H:22,RGB_HALF:24,RGBA_HALF:25};ti.EngineFormat={RGBAFormat:zt,RGBA_ASTC_4x4_Format:Es,RGB_BPTC_UNSIGNED_Format:ro,RGBA_BPTC_Format:gr,RGBA_ETC2_EAC_Format:Aa,RGBA_PVRTC_4BPPV1_Format:mr,RGBA_S3TC_DXT5_Format:sa,RGB_ETC1_Format:so,RGB_ETC2_Format:pa,RGB_PVRTC_4BPPV1_Format:io,RGBA_S3TC_DXT1_Format:_s};ti.EngineType={UnsignedByteType:yt,HalfFloatType:ei,FloatType:rn};ti.BasisWorker=function(){let s,e,t;const n=_EngineFormat,i=_EngineType,r=_TranscoderFormat,a=_BasisFormat;self.addEventListener("message",function(p){const g=p.data;switch(g.type){case"init":s=g.config,o(g.transcoderBinary);break;case"transcode":e.then(()=>{try{const{faces:m,buffers:A,width:x,height:b,hasAlpha:y,format:_,type:w,dfdFlags:C}=c(g.buffer);self.postMessage({type:"transcode",id:g.id,data:{faces:m,width:x,height:b,hasAlpha:y,format:_,type:w,dfdFlags:C}},A)}catch(m){console.error(m),self.postMessage({type:"error",id:g.id,error:m.message})}});break}});function o(p){e=new Promise(g=>{t={wasmBinary:p,onRuntimeInitialized:g},BASIS(t)}).then(()=>{t.initializeBasis(),t.KTX2File===void 0&&console.warn("THREE.KTX2Loader: Please update Basis Universal transcoder.")})}function c(p){const g=new t.KTX2File(new Uint8Array(p));function m(){g.close(),g.delete()}if(!g.isValid())throw m(),new Error("THREE.KTX2Loader:	Invalid or unsupported .ktx2 file");let A;if(g.isUASTC())A=a.UASTC;else if(g.isETC1S())A=a.ETC1S;else if(g.isHDR())A=a.UASTC_HDR;else throw new Error("THREE.KTX2Loader: Unknown Basis encoding");const x=g.getWidth(),b=g.getHeight(),y=g.getLayers()||1,_=g.getLevels(),w=g.getFaces(),C=g.getHasAlpha(),T=g.getDFDFlags(),{transcoderFormat:v,engineFormat:E,engineType:B}=u(A,x,b,C);if(!x||!b||!_)throw m(),new Error("THREE.KTX2Loader:	Invalid texture");if(!g.startTranscoding())throw m(),new Error("THREE.KTX2Loader: .startTranscoding failed");const D=[],F=[];for(let N=0;N<w;N++){const G=[];for(let k=0;k<_;k++){const J=[];let U,ee;for(let oe=0;oe<y;oe++){const Me=g.getImageLevelInfo(k,oe,N);N===0&&k===0&&oe===0&&(Me.origWidth%4!==0||Me.origHeight%4!==0)&&console.warn("THREE.KTX2Loader: ETC1S and UASTC textures should use multiple-of-four dimensions."),_>1?(U=Me.origWidth,ee=Me.origHeight):(U=Me.width,ee=Me.height);let Ne=new Uint8Array(g.getImageTranscodedSizeInBytes(k,oe,0,v));const st=g.transcodeImage(Ne,k,oe,N,v,0,-1,-1);if(B===i.HalfFloatType&&(Ne=new Uint16Array(Ne.buffer,Ne.byteOffset,Ne.byteLength/Uint16Array.BYTES_PER_ELEMENT)),!st)throw m(),new Error("THREE.KTX2Loader: .transcodeImage failed.");J.push(Ne)}const Ae=f(J);G.push({data:Ae,width:U,height:ee}),F.push(Ae.buffer)}D.push({mipmaps:G,width:x,height:b,format:E,type:B})}return m(),{faces:D,buffers:F,width:x,height:b,hasAlpha:C,dfdFlags:T,format:E,type:B}}const l=[{if:"astcSupported",basisFormat:[a.UASTC],transcoderFormat:[r.ASTC_4x4,r.ASTC_4x4],engineFormat:[n.RGBA_ASTC_4x4_Format,n.RGBA_ASTC_4x4_Format],engineType:[i.UnsignedByteType],priorityETC1S:1/0,priorityUASTC:1,needsPowerOfTwo:!1},{if:"bptcSupported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.BC7_M5,r.BC7_M5],engineFormat:[n.RGBA_BPTC_Format,n.RGBA_BPTC_Format],engineType:[i.UnsignedByteType],priorityETC1S:3,priorityUASTC:2,needsPowerOfTwo:!1},{if:"dxtSupported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.BC1,r.BC3],engineFormat:[n.RGBA_S3TC_DXT1_Format,n.RGBA_S3TC_DXT5_Format],engineType:[i.UnsignedByteType],priorityETC1S:4,priorityUASTC:5,needsPowerOfTwo:!1},{if:"etc2Supported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.ETC1,r.ETC2],engineFormat:[n.RGB_ETC2_Format,n.RGBA_ETC2_EAC_Format],engineType:[i.UnsignedByteType],priorityETC1S:1,priorityUASTC:3,needsPowerOfTwo:!1},{if:"etc1Supported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.ETC1],engineFormat:[n.RGB_ETC1_Format],engineType:[i.UnsignedByteType],priorityETC1S:2,priorityUASTC:4,needsPowerOfTwo:!1},{if:"pvrtcSupported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.PVRTC1_4_RGB,r.PVRTC1_4_RGBA],engineFormat:[n.RGB_PVRTC_4BPPV1_Format,n.RGBA_PVRTC_4BPPV1_Format],engineType:[i.UnsignedByteType],priorityETC1S:5,priorityUASTC:6,needsPowerOfTwo:!0},{if:"bptcSupported",basisFormat:[a.UASTC_HDR],transcoderFormat:[r.BC6H],engineFormat:[n.RGB_BPTC_UNSIGNED_Format],engineType:[i.HalfFloatType],priorityHDR:1,needsPowerOfTwo:!1},{basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.RGBA32,r.RGBA32],engineFormat:[n.RGBAFormat,n.RGBAFormat],engineType:[i.UnsignedByteType,i.UnsignedByteType],priorityETC1S:100,priorityUASTC:100,needsPowerOfTwo:!1},{basisFormat:[a.UASTC_HDR],transcoderFormat:[r.RGBA_HALF],engineFormat:[n.RGBAFormat],engineType:[i.HalfFloatType],priorityHDR:100,needsPowerOfTwo:!1}],h={[a.ETC1S]:l.filter(p=>p.basisFormat.includes(a.ETC1S)).sort((p,g)=>p.priorityUASTC-g.priorityUASTC),[a.UASTC]:l.filter(p=>p.basisFormat.includes(a.UASTC)).sort((p,g)=>p.priorityUASTC-g.priorityUASTC),[a.UASTC_HDR]:l.filter(p=>p.basisFormat.includes(a.UASTC_HDR)).sort((p,g)=>p.priorityHDR-g.priorityHDR)};function u(p,g,m,A){const x=h[p];for(let b=0;b<x.length;b++){const y=x[b];if(y.if&&!s[y.if]||!y.basisFormat.includes(p)||A&&y.transcoderFormat.length<2||y.needsPowerOfTwo&&!(d(g)&&d(m)))continue;const _=y.transcoderFormat[A?1:0],w=y.engineFormat[A?1:0],C=y.engineType[0];return{transcoderFormat:_,engineFormat:w,engineType:C}}throw new Error("THREE.KTX2Loader: Failed to identify transcoding target.")}function d(p){return p<=2?!0:(p&p-1)===0&&p!==0}function f(p){if(p.length===1)return p[0];let g=0;for(let x=0;x<p.length;x++){const b=p[x];g+=b.byteLength}const m=new Uint8Array(g);let A=0;for(let x=0;x<p.length;x++){const b=p[x];m.set(b,A),A+=b.byteLength}return m}};const MT=new Set([zt,ha,ys,es]),Mu={[b0]:zt,[y0]:ys,[g0]:es,[m0]:zt,[A0]:ys,[p0]:es,[f0]:zt,[d0]:zt,[u0]:ys,[h0]:ys,[l0]:es,[c0]:es,[_0]:ha,[x0]:ha,[F0]:Aa,[L0]:pa,[Zd]:Es,[N0]:Es,[U0]:Es,[V0]:ur,[O0]:ur,[k0]:ur,[S0]:_s,[w0]:_s,[v0]:lr,[E0]:lr,[M0]:hr,[C0]:hr,[T0]:oo,[I0]:ao,[R0]:lo,[B0]:co,[P0]:gr,[D0]:gr,[H0]:mr,[G0]:mr,[z0]:fa,[Q0]:fa},Kr={[b0]:rn,[y0]:rn,[g0]:rn,[m0]:ei,[A0]:ei,[p0]:ei,[f0]:yt,[d0]:yt,[u0]:yt,[h0]:yt,[l0]:yt,[c0]:yt,[_0]:vo,[x0]:wo,[F0]:yt,[L0]:yt,[Zd]:ei,[N0]:yt,[U0]:yt,[V0]:ei,[O0]:yt,[k0]:yt,[S0]:yt,[w0]:yt,[v0]:yt,[E0]:yt,[M0]:yt,[C0]:yt,[T0]:yt,[I0]:yt,[R0]:yt,[B0]:yt,[P0]:yt,[D0]:yt,[H0]:yt,[G0]:yt,[z0]:yt,[Q0]:yt};async function IT(s){const{vkFormat:e}=s;if(Mu[e]===void 0)throw new Error("THREE.KTX2Loader: Unsupported vkFormat: "+e);Kr[e]===void 0&&console.warn('THREE.KTX2Loader: Missing ".type" for vkFormat: '+e);let t;s.supercompressionScheme===CA&&(Cu||(Cu=new Promise(async a=>{const o=new wT;await o.init(),a(o)})),t=await Cu);const n=[];for(let a=0;a<s.levels.length;a++){const o=Math.max(1,s.pixelWidth>>a),c=Math.max(1,s.pixelHeight>>a),l=s.pixelDepth?Math.max(1,s.pixelDepth>>a):0,h=s.levels[a];let u;if(s.supercompressionScheme===gT)u=h.levelData;else if(s.supercompressionScheme===CA)u=t.decode(h.levelData,h.uncompressedByteLength);else throw new Error("THREE.KTX2Loader: Unsupported supercompressionScheme.");let d;Kr[e]===rn?d=new Float32Array(u.buffer,u.byteOffset,u.byteLength/Float32Array.BYTES_PER_ELEMENT):Kr[e]===ei?d=new Uint16Array(u.buffer,u.byteOffset,u.byteLength/Uint16Array.BYTES_PER_ELEMENT):Kr[e]===vo||Kr[e]===wo?d=new Uint32Array(u.buffer,u.byteOffset,u.byteLength/Uint32Array.BYTES_PER_ELEMENT):d=u,n.push({data:d,width:o,height:c,depth:l})}const i=s.levelCount===0||n.length>1;let r;if(MT.has(Mu[e]))r=s.pixelDepth===0?new qn(n[0].data,s.pixelWidth,s.pixelHeight):new Co(n[0].data,s.pixelWidth,s.pixelHeight,s.pixelDepth),r.minFilter=i?Eo:Jt,r.magFilter=Jt,r.generateMipmaps=s.levelCount===0;else{if(s.pixelDepth>0)throw new Error("THREE.KTX2Loader: Unsupported pixelDepth.");r=new Ca(n,s.pixelWidth,s.pixelHeight),r.minFilter=i?Wn:Qt,r.magFilter=Qt}return r.mipmaps=n,r.type=Kr[e],r.format=Mu[e],r.colorSpace=W0(s),r.needsUpdate=!0,Promise.resolve(r)}function W0(s){const e=s.dataFormatDescriptor[0];return e.colorPrimaries===xT?e.transferFunction===MA?Tt:Ot:e.colorPrimaries===_T?e.transferFunction===MA?ST:CT:(e.colorPrimaries===bT||console.warn(`THREE.KTX2Loader: Unsupported color primaries, "${e.colorPrimaries}"`),Ei)}var q0=(function(){var s="b9H79Tebbbe8Fv9Gbb9Gvuuuuueu9Giuuub9Geueu9Giuuueuikqbeeedddillviebeoweuec:q:Odkr;leDo9TW9T9VV95dbH9F9F939H79T9F9J9H229F9Jt9VV7bb8A9TW79O9V9Wt9F9KW9J9V9KW9wWVtW949c919M9MWVbeY9TW79O9V9Wt9F9KW9J9V9KW69U9KW949c919M9MWVbdE9TW79O9V9Wt9F9KW9J9V9KW69U9KW949tWG91W9U9JWbiL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9p9JtblK9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9r919HtbvL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWVT949Wbol79IV9Rbrq;w8Wqdbk;esezu8Jjjjjbcj;eb9Rgv8Kjjjjbc9:hodnadcefal0mbcuhoaiRbbc:Ge9hmbavaialfgrad9Radz1jjjbhwcj;abad9Uc;WFbGgocjdaocjd6EhDaicefhocbhqdnindndndnaeaq9nmbaDaeaq9RaqaDfae6Egkcsfglcl4cifcd4hxalc9WGgmTmecbhPawcjdfhsaohzinaraz9Rax6mvarazaxfgo9RcK6mvczhlcbhHinalgic9WfgOawcj;cbffhldndndndndnazaOco4fRbbaHcoG4ciGPlbedibkal9cb83ibalcwf9cb83ibxikalaoRblaoRbbgOco4gAaAciSgAE86bbawcj;cbfaifglcGfaoclfaAfgARbbaOcl4ciGgCaCciSgCE86bbalcVfaAaCfgARbbaOcd4ciGgCaCciSgCE86bbalc7faAaCfgARbbaOciGgOaOciSgOE86bbalctfaAaOfgARbbaoRbegOco4gCaCciSgCE86bbalc91faAaCfgARbbaOcl4ciGgCaCciSgCE86bbalc4faAaCfgARbbaOcd4ciGgCaCciSgCE86bbalc93faAaCfgARbbaOciGgOaOciSgOE86bbalc94faAaOfgARbbaoRbdgOco4gCaCciSgCE86bbalc95faAaCfgARbbaOcl4ciGgCaCciSgCE86bbalc96faAaCfgARbbaOcd4ciGgCaCciSgCE86bbalc97faAaCfgARbbaOciGgOaOciSgOE86bbalc98faAaOfgORbbaoRbigoco4gAaAciSgAE86bbalc99faOaAfgORbbaocl4ciGgAaAciSgAE86bbalc9:faOaAfgORbbaocd4ciGgAaAciSgAE86bbalcufaOaAfglRbbaociGgoaociSgoE86bbalaofhoxdkalaoRbwaoRbbgOcl4gAaAcsSgAE86bbawcj;cbfaifglcGfaocwfaAfgARbbaOcsGgOaOcsSgOE86bbalcVfaAaOfgORbbaoRbegAcl4gCaCcsSgCE86bbalc7faOaCfgORbbaAcsGgAaAcsSgAE86bbalctfaOaAfgORbbaoRbdgAcl4gCaCcsSgCE86bbalc91faOaCfgORbbaAcsGgAaAcsSgAE86bbalc4faOaAfgORbbaoRbigAcl4gCaCcsSgCE86bbalc93faOaCfgORbbaAcsGgAaAcsSgAE86bbalc94faOaAfgORbbaoRblgAcl4gCaCcsSgCE86bbalc95faOaCfgORbbaAcsGgAaAcsSgAE86bbalc96faOaAfgORbbaoRbvgAcl4gCaCcsSgCE86bbalc97faOaCfgORbbaAcsGgAaAcsSgAE86bbalc98faOaAfgORbbaoRbogAcl4gCaCcsSgCE86bbalc99faOaCfgORbbaAcsGgAaAcsSgAE86bbalc9:faOaAfgORbbaoRbrgocl4gAaAcsSgAE86bbalcufaOaAfglRbbaocsGgoaocsSgoE86bbalaofhoxekalao8Pbb83bbalcwfaocwf8Pbb83bbaoczfhokdnaiam9pmbaHcdfhHaiczfhlarao9RcL0mekkaiam6mvaoTmvdnakTmbawaPfRbbhHawcj;cbfhlashiakhOinaialRbbgzce4cbazceG9R7aHfgH86bbaiadfhialcefhlaOcufgOmbkkascefhsaohzaPcefgPad9hmbxikkcbc99arao9Radcaadca0ESEhoxlkaoaxad2fhCdnakmbadhlinaoTmlarao9Rax6mlaoaxfhoalcufglmbkaChoxekcbhmawcjdfhAinarao9Rax6miawamfRbbhHawcj;cbfhlaAhiakhOinaialRbbgzce4cbazceG9R7aHfgH86bbaiadfhialcefhlaOcufgOmbkaAcefhAaoaxfhoamcefgmad9hmbkaChokabaqad2fawcjdfakad2z1jjjb8Aawawcjdfakcufad2fadz1jjjb8Aakaqfhqaombkc9:hoxekc9:hokavcj;ebf8Kjjjjbaok;cseHu8Jjjjjbc;ae9Rgv8Kjjjjbc9:hodnaeci9UgrcHfal0mbcuhoaiRbbgwc;WeGc;Ge9hmbawcsGgwce0mbavc;abfcFecjez:jjjjb8AavcUf9cu83ibavc8Wf9cu83ibavcyf9cu83ibavcaf9cu83ibavcKf9cu83ibavczf9cu83ibav9cu83iwav9cu83ibaialfc9WfhDaicefgqarfhidnaeTmbcmcsawceSEhkcbhxcbhmcbhPcbhwcbhlindnaiaD9nmbc9:hoxikdndnaqRbbgoc;Ve0mbavc;abfalaocu7gscl4fcsGcitfgzydlhrazydbhzdnaocsGgHak9pmbavawasfcsGcdtfydbaxaHEhoaHThsdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkaxasfhxcdhHavawcdtfaoBdbawasfhwcehsalhOxdkdndnaHcsSmbaHc987aHamffcefhoxekaicefhoai8SbbgHcFeGhsdndnaHcu9mmbaohixekaicvfhiascFbGhscrhHdninao8SbbgOcFbGaHtasVhsaOcu9kmeaocefhoaHcrfgHc8J9hmbxdkkaocefhikasce4cbasceG9R7amfhokdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkcdhHavawcdtfaoBdbcehsawcefhwalhOaohmxekdnaocpe0mbaxcefgHavawaDaocsGfRbbgocl49RcsGcdtfydbaocz6gzEhravawao9RcsGcdtfydbaHazfgAaocsGgHEhoaHThCdndnadcd9hmbabaPcetfgHax87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHaxBdbaHcwfaoBdbaHclfarBdbkcdhsavawcdtfaxBdbavawcefgwcsGcdtfarBdbcihHavc;abfalcitfgOaxBdlaOarBdbavawazfgwcsGcdtfaoBdbalcefcsGhOawaCfhwaxhzaAaCfhxxekaxcbaiRbbgOEgzaoc;:eSgHfhraOcsGhCaOcl4hAdndnaOcs0mbarcefhoxekarhoavawaA9RcsGcdtfydbhrkdndnaCmbaocefhxxekaohxavawaO9RcsGcdtfydbhokdndnaHTmbaicefhHxekaicdfhHai8SbegscFeGhzdnascu9kmbaicofhXazcFbGhzcrhidninaH8SbbgscFbGaitazVhzascu9kmeaHcefhHaicrfgic8J9hmbkaXhHxekaHcefhHkazce4cbazceG9R7amfgmhzkdndnaAcsSmbaHhsxekaHcefhsaH8SbbgicFeGhrdnaicu9kmbaHcvfhXarcFbGhrcrhidninas8SbbgHcFbGaitarVhraHcu9kmeascefhsaicrfgic8J9hmbkaXhsxekascefhskarce4cbarceG9R7amfgmhrkdndnaCcsSmbashixekascefhias8SbbgocFeGhHdnaocu9kmbascvfhXaHcFbGhHcrhodninai8SbbgscFbGaotaHVhHascu9kmeaicefhiaocrfgoc8J9hmbkaXhixekaicefhikaHce4cbaHceG9R7amfgmhokdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkcdhsavawcdtfazBdbavawcefgwcsGcdtfarBdbcihHavc;abfalcitfgXazBdlaXarBdbavawaOcz6aAcsSVfgwcsGcdtfaoBdbawaCTaCcsSVfhwalcefcsGhOkaqcefhqavc;abfaOcitfgOarBdlaOaoBdbavc;abfalasfcsGcitfgraoBdlarazBdbawcsGhwalaHfcsGhlaPcifgPae6mbkkcbc99aiaDSEhokavc;aef8Kjjjjbaok:flevu8Jjjjjbcz9Rhvc9:hodnaecvfal0mbcuhoaiRbbc;:eGc;qe9hmbav9cb83iwaicefhraialfc98fhwdnaeTmbdnadcdSmbcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcdtfaic8Etc8F91aicd47avcwfaiceGcdtVgoydbfglBdbaoalBdbaDcefgDae9hmbxdkkcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcetfaic8Etc8F91aicd47avcwfaiceGcdtVgoydbfgl87ebaoalBdbaDcefgDae9hmbkkcbc99arawSEhokaok:Lvoeue99dud99eud99dndnadcl9hmbaeTmeindndnabcdfgd8Sbb:Yab8Sbbgi:Ygl:l:tabcefgv8Sbbgo:Ygr:l:tgwJbb;:9cawawNJbbbbawawJbbbb9GgDEgq:mgkaqaicb9iEalMgwawNakaqaocb9iEarMgqaqNMM:r:vglNJbbbZJbbb:;aDEMgr:lJbbb9p9DTmbar:Ohixekcjjjj94hikadai86bbdndnaqalNJbbbZJbbb:;aqJbbbb9GEMgq:lJbbb9p9DTmbaq:Ohdxekcjjjj94hdkavad86bbdndnawalNJbbbZJbbb:;awJbbbb9GEMgw:lJbbb9p9DTmbaw:Ohdxekcjjjj94hdkabad86bbabclfhbaecufgembxdkkaeTmbindndnabclfgd8Ueb:Yab8Uebgi:Ygl:l:tabcdfgv8Uebgo:Ygr:l:tgwJb;:FSawawNJbbbbawawJbbbb9GgDEgq:mgkaqaicb9iEalMgwawNakaqaocb9iEarMgqaqNMM:r:vglNJbbbZJbbb:;aDEMgr:lJbbb9p9DTmbar:Ohixekcjjjj94hikadai87ebdndnaqalNJbbbZJbbb:;aqJbbbb9GEMgq:lJbbb9p9DTmbaq:Ohdxekcjjjj94hdkavad87ebdndnawalNJbbbZJbbb:;awJbbbb9GEMgw:lJbbb9p9DTmbaw:Ohdxekcjjjj94hdkabad87ebabcwfhbaecufgembkkk;oiliui99iue99dnaeTmbcbhiabhlindndnJ;Zl81Zalcof8UebgvciV:Y:vgoal8Ueb:YNgrJb;:FSNJbbbZJbbb:;arJbbbb9GEMgw:lJbbb9p9DTmbaw:OhDxekcjjjj94hDkalclf8Uebhqalcdf8UebhkabaiavcefciGfcetfaD87ebdndnaoak:YNgwJb;:FSNJbbbZJbbb:;awJbbbb9GEMgx:lJbbb9p9DTmbax:OhDxekcjjjj94hDkabaiavciGfgkcd7cetfaD87ebdndnaoaq:YNgoJb;:FSNJbbbZJbbb:;aoJbbbb9GEMgx:lJbbb9p9DTmbax:OhDxekcjjjj94hDkabaiavcufciGfcetfaD87ebdndnJbbjZararN:tawawN:taoaoN:tgrJbbbbarJbbbb9GE:rJb;:FSNJbbbZMgr:lJbbb9p9DTmbar:Ohvxekcjjjj94hvkabakcetfav87ebalcwfhlaiclfhiaecufgembkkk9mbdnadcd4ae2gdTmbinababydbgecwtcw91:Yaece91cjjj98Gcjjj;8if::NUdbabclfhbadcufgdmbkkk9teiucbcbydj1jjbgeabcifc98GfgbBdj1jjbdndnabZbcztgd9nmbcuhiabad9RcFFifcz4nbcuSmekaehikaik;LeeeudndnaeabVciGTmbabhixekdndnadcz9pmbabhixekabhiinaiaeydbBdbaiclfaeclfydbBdbaicwfaecwfydbBdbaicxfaecxfydbBdbaeczfheaiczfhiadc9Wfgdcs0mbkkadcl6mbinaiaeydbBdbaeclfheaiclfhiadc98fgdci0mbkkdnadTmbinaiaeRbb86bbaicefhiaecefheadcufgdmbkkabk;aeedudndnabciGTmbabhixekaecFeGc:b:c:ew2hldndnadcz9pmbabhixekabhiinaialBdbaicxfalBdbaicwfalBdbaiclfalBdbaiczfhiadc9Wfgdcs0mbkkadcl6mbinaialBdbaiclfhiadc98fgdci0mbkkdnadTmbinaiae86bbaicefhiadcufgdmbkkabkkkebcjwklzNbb",e="b9H79TebbbeKl9Gbb9Gvuuuuueu9Giuuub9Geueuikqbbebeedddilve9Weeeviebeoweuec:q:6dkr;leDo9TW9T9VV95dbH9F9F939H79T9F9J9H229F9Jt9VV7bb8A9TW79O9V9Wt9F9KW9J9V9KW9wWVtW949c919M9MWVbdY9TW79O9V9Wt9F9KW9J9V9KW69U9KW949c919M9MWVblE9TW79O9V9Wt9F9KW9J9V9KW69U9KW949tWG91W9U9JWbvL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9p9JtboK9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9r919HtbrL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWVT949Wbwl79IV9RbDq:p9sqlbzik9:evu8Jjjjjbcz9Rhbcbheincbhdcbhiinabcwfadfaicjuaead4ceGglE86bbaialfhiadcefgdcw9hmbkaec:q:yjjbfai86bbaecitc:q1jjbfab8Piw83ibaecefgecjd9hmbkk:N8JlHud97euo978Jjjjjbcj;kb9Rgv8Kjjjjbc9:hodnadcefal0mbcuhoaiRbbc:Ge9hmbavaialfgrad9Rad;8qbbcj;abad9UhlaicefhodnaeTmbadTmbalc;WFbGglcjdalcjd6EhwcbhDinawaeaD9RaDawfae6Egqcsfglc9WGgkci2hxakcethmalcl4cifcd4hPabaDad2fhsakc;ab6hzcbhHincbhOaohAdndninaraA9RaP6meavcj;cbfaOak2fhCaAaPfhocbhidnazmbarao9Rc;Gb6mbcbhlinaCalfhidndndndndnaAalco4fRbbgXciGPlbedibkaipxbbbbbbbbbbbbbbbbpklbxikaiaopbblaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklbaoclfaYpQbfaKc:q:yjjbfRbbfhoxdkaiaopbbwaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklbaocwfaYpQbfaKc:q:yjjbfRbbfhoxekaiaopbbbpklbaoczfhokdndndndndnaXcd4ciGPlbedibkaipxbbbbbbbbbbbbbbbbpklzxikaiaopbblaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklzaoclfaYpQbfaKc:q:yjjbfRbbfhoxdkaiaopbbwaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklzaocwfaYpQbfaKc:q:yjjbfRbbfhoxekaiaopbbbpklzaoczfhokdndndndndnaXcl4ciGPlbedibkaipxbbbbbbbbbbbbbbbbpklaxikaiaopbblaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklaaoclfaYpQbfaKc:q:yjjbfRbbfhoxdkaiaopbbwaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklaaocwfaYpQbfaKc:q:yjjbfRbbfhoxekaiaopbbbpklaaoczfhokdndndndndnaXco4Plbedibkaipxbbbbbbbbbbbbbbbbpkl8WxikaiaopbblaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibaXc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spkl8WaoclfaYpQbfaXc:q:yjjbfRbbfhoxdkaiaopbbwaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibaXc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spkl8WaocwfaYpQbfaXc:q:yjjbfRbbfhoxekaiaopbbbpkl8Waoczfhokalc;abfhialcjefak0meaihlarao9Rc;Fb0mbkkdnaiak9pmbaici4hlinarao9RcK6miaCaifhXdndndndndnaAaico4fRbbalcoG4ciGPlbedibkaXpxbbbbbbbbbbbbbbbbpkbbxikaXaopbblaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spkbbaoclfaYpQbfaKc:q:yjjbfRbbfhoxdkaXaopbbwaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spkbbaocwfaYpQbfaKc:q:yjjbfRbbfhoxekaXaopbbbpkbbaoczfhokalcdfhlaiczfgiak6mbkkaoTmeaohAaOcefgOclSmdxbkkc9:hoxlkdnakTmbavcjdfaHfhiavaHfpbdbhYcbhXinaiavcj;cbfaXfglpblbgLcep9TaLpxeeeeeeeeeeeeeeeegQp9op9Hp9rgLalakfpblbg8Acep9Ta8AaQp9op9Hp9rg8ApmbzeHdOiAlCvXoQrLgEalamfpblbg3cep9Ta3aQp9op9Hp9rg3alaxfpblbg5cep9Ta5aQp9op9Hp9rg5pmbzeHdOiAlCvXoQrLg8EpmbezHdiOAlvCXorQLgQaQpmbedibedibedibediaYp9UgYp9AdbbaiadfglaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaladfglaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaladfglaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaladfglaYaEa8EpmwDKYqk8AExm35Ps8E8FgQaQpmbedibedibedibedip9UgYp9AdbbaladfglaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaladfglaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaladfglaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaladfglaYaLa8ApmwKDYq8AkEx3m5P8Es8FgLa3a5pmwKDYq8AkEx3m5P8Es8Fg8ApmbezHdiOAlvCXorQLgQaQpmbedibedibedibedip9UgYp9AdbbaladfglaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaladfglaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaladfglaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaladfglaYaLa8ApmwDKYqk8AExm35Ps8E8FgQaQpmbedibedibedibedip9UgYp9AdbbaladfglaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaladfglaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaladfglaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaladfhiaXczfgXak6mbkkaHclfgHad6mbkasavcjdfaqad2;8qbbavavcjdfaqcufad2fad;8qbbaqaDfgDae6mbkkcbc99arao9Radcaadca0ESEhokavcj;kbf8Kjjjjbaokwbz:bjjjbk::seHu8Jjjjjbc;ae9Rgv8Kjjjjbc9:hodnaeci9UgrcHfal0mbcuhoaiRbbgwc;WeGc;Ge9hmbawcsGgwce0mbavc;abfcFecje;8kbavcUf9cu83ibavc8Wf9cu83ibavcyf9cu83ibavcaf9cu83ibavcKf9cu83ibavczf9cu83ibav9cu83iwav9cu83ibaialfc9WfhDaicefgqarfhidnaeTmbcmcsawceSEhkcbhxcbhmcbhPcbhwcbhlindnaiaD9nmbc9:hoxikdndnaqRbbgoc;Ve0mbavc;abfalaocu7gscl4fcsGcitfgzydlhrazydbhzdnaocsGgHak9pmbavawasfcsGcdtfydbaxaHEhoaHThsdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkaxasfhxcdhHavawcdtfaoBdbawasfhwcehsalhOxdkdndnaHcsSmbaHc987aHamffcefhoxekaicefhoai8SbbgHcFeGhsdndnaHcu9mmbaohixekaicvfhiascFbGhscrhHdninao8SbbgOcFbGaHtasVhsaOcu9kmeaocefhoaHcrfgHc8J9hmbxdkkaocefhikasce4cbasceG9R7amfhokdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkcdhHavawcdtfaoBdbcehsawcefhwalhOaohmxekdnaocpe0mbaxcefgHavawaDaocsGfRbbgocl49RcsGcdtfydbaocz6gzEhravawao9RcsGcdtfydbaHazfgAaocsGgHEhoaHThCdndnadcd9hmbabaPcetfgHax87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHaxBdbaHcwfaoBdbaHclfarBdbkcdhsavawcdtfaxBdbavawcefgwcsGcdtfarBdbcihHavc;abfalcitfgOaxBdlaOarBdbavawazfgwcsGcdtfaoBdbalcefcsGhOawaCfhwaxhzaAaCfhxxekaxcbaiRbbgOEgzaoc;:eSgHfhraOcsGhCaOcl4hAdndnaOcs0mbarcefhoxekarhoavawaA9RcsGcdtfydbhrkdndnaCmbaocefhxxekaohxavawaO9RcsGcdtfydbhokdndnaHTmbaicefhHxekaicdfhHai8SbegscFeGhzdnascu9kmbaicofhXazcFbGhzcrhidninaH8SbbgscFbGaitazVhzascu9kmeaHcefhHaicrfgic8J9hmbkaXhHxekaHcefhHkazce4cbazceG9R7amfgmhzkdndnaAcsSmbaHhsxekaHcefhsaH8SbbgicFeGhrdnaicu9kmbaHcvfhXarcFbGhrcrhidninas8SbbgHcFbGaitarVhraHcu9kmeascefhsaicrfgic8J9hmbkaXhsxekascefhskarce4cbarceG9R7amfgmhrkdndnaCcsSmbashixekascefhias8SbbgocFeGhHdnaocu9kmbascvfhXaHcFbGhHcrhodninai8SbbgscFbGaotaHVhHascu9kmeaicefhiaocrfgoc8J9hmbkaXhixekaicefhikaHce4cbaHceG9R7amfgmhokdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkcdhsavawcdtfazBdbavawcefgwcsGcdtfarBdbcihHavc;abfalcitfgXazBdlaXarBdbavawaOcz6aAcsSVfgwcsGcdtfaoBdbawaCTaCcsSVfhwalcefcsGhOkaqcefhqavc;abfaOcitfgOarBdlaOaoBdbavc;abfalasfcsGcitfgraoBdlarazBdbawcsGhwalaHfcsGhlaPcifgPae6mbkkcbc99aiaDSEhokavc;aef8Kjjjjbaok:flevu8Jjjjjbcz9Rhvc9:hodnaecvfal0mbcuhoaiRbbc;:eGc;qe9hmbav9cb83iwaicefhraialfc98fhwdnaeTmbdnadcdSmbcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcdtfaic8Etc8F91aicd47avcwfaiceGcdtVgoydbfglBdbaoalBdbaDcefgDae9hmbxdkkcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcetfaic8Etc8F91aicd47avcwfaiceGcdtVgoydbfgl87ebaoalBdbaDcefgDae9hmbkkcbc99arawSEhokaok:wPliuo97eue978Jjjjjbca9Rhiaec98Ghldndnadcl9hmbdnalTmbcbhvabhdinadadpbbbgocKp:RecKp:Sep;6egraocwp:RecKp:Sep;6earp;Geaoczp:RecKp:Sep;6egwp;Gep;Kep;LegDpxbbbbbbbbbbbbbbbbp:2egqarpxbbbjbbbjbbbjbbbjgkp9op9rp;Kegrpxbb;:9cbb;:9cbb;:9cbb;:9cararp;MeaDaDp;Meawaqawakp9op9rp;Kegrarp;Mep;Kep;Kep;Jep;Negwp;Mepxbbn0bbn0bbn0bbn0gqp;KepxFbbbFbbbFbbbFbbbp9oaopxbbbFbbbFbbbFbbbFp9op9qarawp;Meaqp;Kecwp:RepxbFbbbFbbbFbbbFbbp9op9qaDawp;Meaqp;Keczp:RepxbbFbbbFbbbFbbbFbp9op9qpkbbadczfhdavclfgval6mbkkalaeSmeaipxbbbbbbbbbbbbbbbbgqpklbaiabalcdtfgdaeciGglcdtgv;8qbbdnalTmbaiaipblbgocKp:RecKp:Sep;6egraocwp:RecKp:Sep;6earp;Geaoczp:RecKp:Sep;6egwp;Gep;Kep;LegDaqp:2egqarpxbbbjbbbjbbbjbbbjgkp9op9rp;Kegrpxbb;:9cbb;:9cbb;:9cbb;:9cararp;MeaDaDp;Meawaqawakp9op9rp;Kegrarp;Mep;Kep;Kep;Jep;Negwp;Mepxbbn0bbn0bbn0bbn0gqp;KepxFbbbFbbbFbbbFbbbp9oaopxbbbFbbbFbbbFbbbFp9op9qarawp;Meaqp;Kecwp:RepxbFbbbFbbbFbbbFbbp9op9qaDawp;Meaqp;Keczp:RepxbbFbbbFbbbFbbbFbp9op9qpklbkadaiav;8qbbskdnalTmbcbhvabhdinadczfgxaxpbbbgopxbbbbbbFFbbbbbbFFgkp9oadpbbbgDaopmbediwDqkzHOAKY8AEgwczp:Reczp:Sep;6egraDaopmlvorxmPsCXQL358E8FpxFubbFubbFubbFubbp9op;6eawczp:Sep;6egwp;Gearp;Gep;Kep;Legopxbbbbbbbbbbbbbbbbp:2egqarpxbbbjbbbjbbbjbbbjgmp9op9rp;Kegrpxb;:FSb;:FSb;:FSb;:FSararp;Meaoaop;Meawaqawamp9op9rp;Kegrarp;Mep;Kep;Kep;Jep;Negwp;Mepxbbn0bbn0bbn0bbn0gqp;KepxFFbbFFbbFFbbFFbbp9oaoawp;Meaqp;Keczp:Rep9qgoarawp;Meaqp;KepxFFbbFFbbFFbbFFbbp9ogrpmwDKYqk8AExm35Ps8E8Fp9qpkbbadaDakp9oaoarpmbezHdiOAlvCXorQLp9qpkbbadcafhdavclfgval6mbkkalaeSmbaiaeciGgvcitgdfcbcaad9R;8kbaiabalcitfglad;8qbbdnavTmbaiaipblzgopxbbbbbbFFbbbbbbFFgkp9oaipblbgDaopmbediwDqkzHOAKY8AEgwczp:Reczp:Sep;6egraDaopmlvorxmPsCXQL358E8FpxFubbFubbFubbFubbp9op;6eawczp:Sep;6egwp;Gearp;Gep;Kep;Legopxbbbbbbbbbbbbbbbbp:2egqarpxbbbjbbbjbbbjbbbjgmp9op9rp;Kegrpxb;:FSb;:FSb;:FSb;:FSararp;Meaoaop;Meawaqawamp9op9rp;Kegrarp;Mep;Kep;Kep;Jep;Negwp;Mepxbbn0bbn0bbn0bbn0gqp;KepxFFbbFFbbFFbbFFbbp9oaoawp;Meaqp;Keczp:Rep9qgoarawp;Meaqp;KepxFFbbFFbbFFbbFFbbp9ogrpmwDKYqk8AExm35Ps8E8Fp9qpklzaiaDakp9oaoarpmbezHdiOAlvCXorQLp9qpklbkalaiad;8qbbkk;4wllue97euv978Jjjjjbc8W9Rhidnaec98GglTmbcbhvabhoinaiaopbbbgraoczfgwpbbbgDpmlvorxmPsCXQL358E8Fgqczp:Segkclp:RepklbaopxbbjZbbjZbbjZbbjZpx;Zl81Z;Zl81Z;Zl81Z;Zl81Zakpxibbbibbbibbbibbbp9qp;6ep;NegkaraDpmbediwDqkzHOAKY8AEgrczp:Reczp:Sep;6ep;MegDaDp;Meakarczp:Sep;6ep;Megxaxp;Meakaqczp:Reczp:Sep;6ep;Megqaqp;Mep;Kep;Kep;Lepxbbbbbbbbbbbbbbbbp:4ep;Jepxb;:FSb;:FSb;:FSb;:FSgkp;Mepxbbn0bbn0bbn0bbn0grp;KepxFFbbFFbbFFbbFFbbgmp9oaxakp;Mearp;Keczp:Rep9qgxaDakp;Mearp;Keamp9oaqakp;Mearp;Keczp:Rep9qgkpmbezHdiOAlvCXorQLgrp5baipblbpEb:T:j83ibaocwfarp5eaipblbpEe:T:j83ibawaxakpmwDKYqk8AExm35Ps8E8Fgkp5baipblbpEd:T:j83ibaocKfakp5eaipblbpEi:T:j83ibaocafhoavclfgval6mbkkdnalaeSmbaiaeciGgvcitgofcbcaao9R;8kbaiabalcitfgwao;8qbbdnavTmbaiaipblbgraipblzgDpmlvorxmPsCXQL358E8Fgqczp:Segkclp:RepklaaipxbbjZbbjZbbjZbbjZpx;Zl81Z;Zl81Z;Zl81Z;Zl81Zakpxibbbibbbibbbibbbp9qp;6ep;NegkaraDpmbediwDqkzHOAKY8AEgrczp:Reczp:Sep;6ep;MegDaDp;Meakarczp:Sep;6ep;Megxaxp;Meakaqczp:Reczp:Sep;6ep;Megqaqp;Mep;Kep;Kep;Lepxbbbbbbbbbbbbbbbbp:4ep;Jepxb;:FSb;:FSb;:FSb;:FSgkp;Mepxbbn0bbn0bbn0bbn0grp;KepxFFbbFFbbFFbbFFbbgmp9oaxakp;Mearp;Keczp:Rep9qgxaDakp;Mearp;Keamp9oaqakp;Mearp;Keczp:Rep9qgkpmbezHdiOAlvCXorQLgrp5baipblapEb:T:j83ibaiarp5eaipblapEe:T:j83iwaiaxakpmwDKYqk8AExm35Ps8E8Fgkp5baipblapEd:T:j83izaiakp5eaipblapEi:T:j83iKkawaiao;8qbbkk:Pddiue978Jjjjjbc;ab9Rhidnadcd4ae2glc98GgvTmbcbheabhdinadadpbbbgocwp:Recwp:Sep;6eaocep:SepxbbjFbbjFbbjFbbjFp9opxbbjZbbjZbbjZbbjZp:Uep;Mepkbbadczfhdaeclfgeav6mbkkdnavalSmbaialciGgecdtgdVcbc;abad9R;8kbaiabavcdtfgvad;8qbbdnaeTmbaiaipblbgocwp:Recwp:Sep;6eaocep:SepxbbjFbbjFbbjFbbjFp9opxbbjZbbjZbbjZbbjZp:Uep;Mepklbkavaiad;8qbbkk9teiucbcbydj1jjbgeabcifc98GfgbBdj1jjbdndnabZbcztgd9nmbcuhiabad9RcFFifcz4nbcuSmekaehikaikkkebcjwklz:Dbb",t=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,3,2,0,0,5,3,1,0,1,12,1,0,10,22,2,12,0,65,0,65,0,65,0,252,10,0,0,11,7,0,65,0,253,15,26,11]),n=new Uint8Array([32,0,65,2,1,106,34,33,3,128,11,4,13,64,6,253,10,7,15,116,127,5,8,12,40,16,19,54,20,9,27,255,113,17,42,67,24,23,146,148,18,14,22,45,70,69,56,114,101,21,25,63,75,136,108,28,118,29,73,115]);if(typeof WebAssembly!="object")return{supported:!1};var i=WebAssembly.validate(t)?o(e):o(s),r,a=WebAssembly.instantiate(i,{}).then(function(A){r=A.instance,r.exports.__wasm_call_ctors()});function o(A){for(var x=new Uint8Array(A.length),b=0;b<A.length;++b){var y=A.charCodeAt(b);x[b]=y>96?y-97:y>64?y-39:y+4}for(var _=0,b=0;b<A.length;++b)x[_++]=x[b]<60?n[x[b]]:(x[b]-60)*64+x[++b];return x.buffer.slice(0,_)}function c(A,x,b,y,_,w,C){var T=A.exports.sbrk,v=y+3&-4,E=T(v*_),B=T(w.length),D=new Uint8Array(A.exports.memory.buffer);D.set(w,B);var F=x(E,y,_,B,w.length);if(F==0&&C&&C(E,v,_),b.set(D.subarray(E,E+y*_)),T(E-T(0)),F!=0)throw new Error("Malformed buffer data: "+F)}var l={NONE:"",OCTAHEDRAL:"meshopt_decodeFilterOct",QUATERNION:"meshopt_decodeFilterQuat",EXPONENTIAL:"meshopt_decodeFilterExp"},h={ATTRIBUTES:"meshopt_decodeVertexBuffer",TRIANGLES:"meshopt_decodeIndexBuffer",INDICES:"meshopt_decodeIndexSequence"},u=[],d=0;function f(A){var x={object:new Worker(A),pending:0,requests:{}};return x.object.onmessage=function(b){var y=b.data;x.pending-=y.count,x.requests[y.id][y.action](y.value),delete x.requests[y.id]},x}function p(A){for(var x="self.ready = WebAssembly.instantiate(new Uint8Array(["+new Uint8Array(i)+"]), {}).then(function(result) { result.instance.exports.__wasm_call_ctors(); return result.instance; });self.onmessage = "+m.name+";"+c.toString()+m.toString(),b=new Blob([x],{type:"text/javascript"}),y=URL.createObjectURL(b),_=u.length;_<A;++_)u[_]=f(y);for(var _=A;_<u.length;++_)u[_].object.postMessage({});u.length=A,URL.revokeObjectURL(y)}function g(A,x,b,y,_){for(var w=u[0],C=1;C<u.length;++C)u[C].pending<w.pending&&(w=u[C]);return new Promise(function(T,v){var E=new Uint8Array(b),B=++d;w.pending+=A,w.requests[B]={resolve:T,reject:v},w.object.postMessage({id:B,count:A,size:x,source:E,mode:y,filter:_},[E.buffer])})}function m(A){var x=A.data;if(!x.id)return self.close();self.ready.then(function(b){try{var y=new Uint8Array(x.count*x.size);c(b,b.exports[x.mode],y,x.count,x.size,x.source,b.exports[x.filter]),self.postMessage({id:x.id,count:x.count,action:"resolve",value:y},[y.buffer])}catch(_){self.postMessage({id:x.id,count:x.count,action:"reject",value:_})}})}return{ready:a,supported:!0,useWorkers:function(A){p(A)},decodeVertexBuffer:function(A,x,b,y,_){c(r,r.exports.meshopt_decodeVertexBuffer,A,x,b,y,r.exports[l[_]])},decodeIndexBuffer:function(A,x,b,y){c(r,r.exports.meshopt_decodeIndexBuffer,A,x,b,y)},decodeIndexSequence:function(A,x,b,y){c(r,r.exports.meshopt_decodeIndexSequence,A,x,b,y)},decodeGltfBuffer:function(A,x,b,y,_,w){c(r,r.exports[h[_]],A,x,b,y,r.exports[l[w]])},decodeGltfBufferAsync:function(A,x,b,y,_){return u.length>0?g(A,x,b,h[y],l[_]):a.then(function(){var w=new Uint8Array(A*x);return c(r,r.exports[h[y]],w,A,x,b,r.exports[l[_]]),w})}}})();const sd="https://unpkg.com/three@0.180.0/examples/jsm/libs/basis/",TT="basis/",BT=/^[a-z]+:\/\//i,RT=/^\/\//;function nr(s){return typeof s!="string"||s.length===0||s.endsWith("/")?s:`${s}/`}function DT(){if(typeof document>"u"||!document.baseURI)return"/";try{const s=new URL(document.baseURI);let{pathname:e}=s;if(!e)return"/";if(!e.endsWith("/")){const t=e.lastIndexOf("/");e=t>=0?e.slice(0,t+1):"/"}return e||"/"}catch(s){return console.warn("Unable to parse document.baseURI for BASE_URL fallback",s),"/"}}function PT(){const s=typeof import.meta<"u"?import.meta:null,e=s&&s.env?s.env:null,t=e&&typeof e.BASE_URL=="string"?e.BASE_URL:null;return t&&t.length>0?nr(t):nr(DT())}function LT(){return typeof window<"u"&&window.location?.protocol?window.location.protocol:"https:"}function FT(s,e){if(typeof s!="string")return null;const t=s.trim();if(t.length===0)return null;if(RT.test(t)){const i=LT();return nr(`${i}${t}`)}const n=`https://example.com${e}`;try{const i=new URL(t,n);return BT.test(t)||i.origin!=="https://example.com"?nr(i.href):nr(i.pathname)}catch{return nr(t)}}function X0(){const s=PT(),e=[],t=typeof import.meta<"u"?import.meta:null,n=t&&t.env?t.env:null;n&&typeof n.VITE_BASIS_TRANSCODER_PATH=="string"&&e.push(n.VITE_BASIS_TRANSCODER_PATH),typeof window<"u"&&typeof window.__BASIS_TRANSCODER_PATH__=="string"&&e.push(window.__BASIS_TRANSCODER_PATH__),e.push(TT),e.push(sd);for(const i of e){const r=FT(i,s);if(r)return r}return sd}function UT(s){const e=new ti,t=X0();if(e.setTranscoderPath(t),s)try{e.detectSupport(s)}catch(n){console.warn("KTX2Loader.detectSupport failed; continuing without GPU compression",n)}return e}const Iu=new WeakMap;class NT extends xn{constructor(e){super(e),this.decoderPath="",this.decoderConfig={},this.decoderBinary=null,this.decoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.defaultAttributeIDs={position:"POSITION",normal:"NORMAL",color:"COLOR",uv:"TEX_COORD"},this.defaultAttributeTypes={position:"Float32Array",normal:"Float32Array",color:"Float32Array",uv:"Float32Array"}}setDecoderPath(e){return this.decoderPath=e,this}setDecoderConfig(e){return this.decoderConfig=e,this}setWorkerLimit(e){return this.workerLimit=e,this}load(e,t,n,i){const r=new In(this.manager);r.setPath(this.path),r.setResponseType("arraybuffer"),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,a=>{this.parse(a,t,i)},n,i)}parse(e,t,n=()=>{}){this.decodeDracoFile(e,t,null,null,Tt,n).catch(n)}decodeDracoFile(e,t,n,i,r=Ot,a=()=>{}){const o={attributeIDs:n||this.defaultAttributeIDs,attributeTypes:i||this.defaultAttributeTypes,useUniqueIDs:!!n,vertexColorSpace:r};return this.decodeGeometry(e,o).then(t).catch(a)}decodeGeometry(e,t){const n=JSON.stringify(t);if(Iu.has(e)){const c=Iu.get(e);if(c.key===n)return c.promise;if(e.byteLength===0)throw new Error("THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.")}let i;const r=this.workerNextTaskID++,a=e.byteLength,o=this._getWorker(r,a).then(c=>(i=c,new Promise((l,h)=>{i._callbacks[r]={resolve:l,reject:h},i.postMessage({type:"decode",id:r,taskConfig:t,buffer:e},[e])}))).then(c=>this._createGeometry(c.geometry));return o.catch(()=>!0).then(()=>{i&&r&&this._releaseTask(i,r)}),Iu.set(e,{key:n,promise:o}),o}_createGeometry(e){const t=new $e;e.index&&t.setIndex(new ht(e.index.array,1));for(let n=0;n<e.attributes.length;n++){const i=e.attributes[n],r=i.name,a=i.array,o=i.itemSize,c=new ht(a,o);r==="color"&&(this._assignVertexColorSpace(c,i.vertexColorSpace),c.normalized=!(a instanceof Float32Array)),t.setAttribute(r,c)}return t}_assignVertexColorSpace(e,t){if(t!==Tt)return;const n=new ae;for(let i=0,r=e.count;i<r;i++)n.fromBufferAttribute(e,i),xt.colorSpaceToWorking(n,Tt),e.setXYZ(i,n.r,n.g,n.b)}_loadLibrary(e,t){const n=new In(this.manager);return n.setPath(this.decoderPath),n.setResponseType(t),n.setWithCredentials(this.withCredentials),new Promise((i,r)=>{n.load(e,i,void 0,r)})}preload(){return this._initDecoder(),this}_initDecoder(){if(this.decoderPending)return this.decoderPending;const e=typeof WebAssembly!="object"||this.decoderConfig.type==="js",t=[];return e?t.push(this._loadLibrary("draco_decoder.js","text")):(t.push(this._loadLibrary("draco_wasm_wrapper.js","text")),t.push(this._loadLibrary("draco_decoder.wasm","arraybuffer"))),this.decoderPending=Promise.all(t).then(n=>{const i=n[0];e||(this.decoderConfig.wasmBinary=n[1]);const r=kT.toString(),a=["/* draco decoder */",i,"","/* worker */",r.substring(r.indexOf("{")+1,r.lastIndexOf("}"))].join(`
`);this.workerSourceURL=URL.createObjectURL(new Blob([a]))}),this.decoderPending}_getWorker(e,t){return this._initDecoder().then(()=>{if(this.workerPool.length<this.workerLimit){const i=new Worker(this.workerSourceURL);i._callbacks={},i._taskCosts={},i._taskLoad=0,i.postMessage({type:"init",decoderConfig:this.decoderConfig}),i.onmessage=function(r){const a=r.data;switch(a.type){case"decode":i._callbacks[a.id].resolve(a);break;case"error":i._callbacks[a.id].reject(a);break;default:console.error('THREE.DRACOLoader: Unexpected message, "'+a.type+'"')}},this.workerPool.push(i)}else this.workerPool.sort(function(i,r){return i._taskLoad>r._taskLoad?-1:1});const n=this.workerPool[this.workerPool.length-1];return n._taskCosts[e]=t,n._taskLoad+=t,n})}_releaseTask(e,t){e._taskLoad-=e._taskCosts[t],delete e._callbacks[t],delete e._taskCosts[t]}debug(){console.log("Task load: ",this.workerPool.map(e=>e._taskLoad))}dispose(){for(let e=0;e<this.workerPool.length;++e)this.workerPool[e].terminate();return this.workerPool.length=0,this.workerSourceURL!==""&&URL.revokeObjectURL(this.workerSourceURL),this}}function kT(){let s,e;onmessage=function(a){const o=a.data;switch(o.type){case"init":s=o.decoderConfig,e=new Promise(function(h){s.onModuleLoaded=function(u){h({draco:u})},DracoDecoderModule(s)});break;case"decode":const c=o.buffer,l=o.taskConfig;e.then(h=>{const u=h.draco,d=new u.Decoder;try{const f=t(u,d,new Int8Array(c),l),p=f.attributes.map(g=>g.array.buffer);f.index&&p.push(f.index.array.buffer),self.postMessage({type:"decode",id:o.id,geometry:f},p)}catch(f){console.error(f),self.postMessage({type:"error",id:o.id,error:f.message})}finally{u.destroy(d)}});break}};function t(a,o,c,l){const h=l.attributeIDs,u=l.attributeTypes;let d,f;const p=o.GetEncodedGeometryType(c);if(p===a.TRIANGULAR_MESH)d=new a.Mesh,f=o.DecodeArrayToMesh(c,c.byteLength,d);else if(p===a.POINT_CLOUD)d=new a.PointCloud,f=o.DecodeArrayToPointCloud(c,c.byteLength,d);else throw new Error("THREE.DRACOLoader: Unexpected geometry type.");if(!f.ok()||d.ptr===0)throw new Error("THREE.DRACOLoader: Decoding failed: "+f.error_msg());const g={index:null,attributes:[]};for(const m in h){const A=self[u[m]];let x,b;if(l.useUniqueIDs)b=h[m],x=o.GetAttributeByUniqueId(d,b);else{if(b=o.GetAttributeId(d,a[h[m]]),b===-1)continue;x=o.GetAttribute(d,b)}const y=i(a,o,d,m,A,x);m==="color"&&(y.vertexColorSpace=l.vertexColorSpace),g.attributes.push(y)}return p===a.TRIANGULAR_MESH&&(g.index=n(a,o,d)),a.destroy(d),g}function n(a,o,c){const h=c.num_faces()*3,u=h*4,d=a._malloc(u);o.GetTrianglesUInt32Array(c,u,d);const f=new Uint32Array(a.HEAPF32.buffer,d,h).slice();return a._free(d),{array:f,itemSize:1}}function i(a,o,c,l,h,u){const d=u.num_components(),p=c.num_points()*d,g=p*h.BYTES_PER_ELEMENT,m=r(a,h),A=a._malloc(g);o.GetAttributeDataArrayForAllPoints(c,u,m,g,A);const x=new h(a.HEAPF32.buffer,A,p).slice();return a._free(A),{name:l,array:x,itemSize:d}}function r(a,o){switch(o){case Float32Array:return a.DT_FLOAT32;case Int8Array:return a.DT_INT8;case Int16Array:return a.DT_INT16;case Int32Array:return a.DT_INT32;case Uint8Array:return a.DT_UINT8;case Uint16Array:return a.DT_UINT16;case Uint32Array:return a.DT_UINT32}}}const OT="https://www.gstatic.com/draco/versioned/decoders/1.5.6/";let Ha=null,BA=null;function QT(){Ha||(Ha=new NT);const s=OT;if(s!==BA){Ha.setDecoderPath("https://www.gstatic.com/draco/versioned/decoders/1.5.6/");try{Ha.preload()}catch(e){console.warn("DRACOLoader.preload failed; continuing with lazy decoding",e)}BA=s}return Ha}function Y0(s){const e=new ph;if(s)try{const t=UT(s);t&&e.setKTX2Loader(t)}catch(t){console.warn("[GLB Loader] Unable to configure KTX2 loader",t)}try{const t=QT();t&&e.setDRACOLoader(t)}catch(t){console.warn("[GLB Loader] Unable to configure DRACO loader",t)}return e.setMeshoptDecoder(q0),e}async function GT(s){if(!s)return!1;try{const e=await fetch(s,{method:"HEAD"});return e.ok?!(e.headers?.get?.("content-type")||"").toLowerCase().includes("text/html"):!1}catch{return!1}}async function $d(s,e,t={}){if(!s||typeof s.loadAsync!="function")throw new Error("loadGLBWithFallbacks requires a GLTFLoader instance");if(!Array.isArray(e)||e.length===0)throw new Error("loadGLBWithFallbacks requires at least one URL");const{targetHeight:n=null,renderer:i=null,onLoaded:r=null}=t;let a=null;const o=[];for(const c of e){const l=typeof c=="string"?c.trim():"";if(l){if(!await GT(l)){o.push([l,404]);continue}try{const h=await s.loadAsync(l),{scene:u,scenes:d}=h||{},p=u||(Array.isArray(d)?d[0]:null)||null;if(!p)throw new Error(`No scene in GLB: ${l}`);if(n&&n>0){p.updateMatrixWorld(!0);const g=new Yt().setFromObject(p),m=new S;g.getSize(m);const A=m.y||1,x=A!==0?n/A:1;Number.isFinite(x)&&x>0&&p.scale.multiplyScalar(x)}if(jd(p,{renderer:i}),typeof r=="function")try{r({url:l,gltf:h,root:p})}catch(g){console.warn("[GLB Fallback] onLoaded hook failed",g)}return{url:l,gltf:h,root:p}}catch(h){a=h instanceof Error?h:new Error(String(h)),o.push([l,"load-fail"])}}}if(o.length){const c=o.map(([h])=>h),l=a?` (${a.message||a})`:"";l.trim()?console.warn("[GLB] No reachable candidate:",c,l):console.warn("[GLB] No reachable candidate:",c)}return null}function zT(s){const{map:e,normalMap:t,roughnessMap:n,aoMap:i}=iy();return new s.MeshPhysicalMaterial({map:e,normalMap:t,roughnessMap:n,aoMap:i,metalness:.05,roughness:.6,clearcoat:.3,clearcoatRoughness:.5,sheen:0,envMapIntensity:.9})}function HT(s){return new s.MeshPhysicalMaterial({color:9268835,metalness:.85,roughness:.35,envMapIntensity:1,clearcoat:.05,clearcoatRoughness:.6})}const VT=Ii(),Ja=new ph;let Jr=null,Tu=!1,Qc=!1,RA=null,DA=!1;function WT(s){if(!s||typeof s.getContext!="function")return;const e=X0();Jr||(Jr=new ti),e&&e!==RA&&(Jr.setTranscoderPath(e),RA=e,!DA&&e===sd&&(console.info("KTX2 transcoder path not configured; falling back to the three.js CDN. Add public/basis/ or set VITE_BASIS_TRANSCODER_PATH to avoid extra requests."),DA=!0));try{Jr.detectSupport(s);const t=Jr.workerConfig||{};Tu=Object.values(t).some(Boolean),Tu?(Ja.setKTX2Loader(Jr),Qc=!1):(Qc||(console.warn("KTX2 is not supported on this GPU/driver combo. Falling back to standard textures."),Qc=!0),Ja.setKTX2Loader(null)),Ja.setMeshoptDecoder(q0)}catch(t){Tu=!1,Qc=!0,console.warn("KTX2 not supported in this browser. Falling back to standard textures.",t),Ja.setKTX2Loader(null)}}const na=new Set;function qT(s,e=null){if(e)return e;let t=s||null;for(;t;){const n=t?.userData?.renderer;if(n)return n;t=t.parent||null}return null}function PA(s,e){const{position:t,rotation:n,scale:i}=e;if(t&&s.position.set(t.x??t[0]??0,t.y??t[1]??0,t.z??t[2]??0),n&&s.rotation.set(n.x??n[0]??0,n.y??n[1]??0,n.z??n[2]??0),i!==void 0)if(typeof i=="number")s.scale.set(i,i,i);else{const r=i.x??i[0]??1,a=i.y??i[1]??r,o=i.z??i[2]??r;s.scale.set(r,a,o)}}function LA(s,e,t=.05){if(!s||!e)return null;const n=[],i=s.userData||{};n.push(i.getHeightAt,i.terrainHeightSampler,i.heightSampler,i.terrainSampler);const r=i.terrain;r?.userData?.getHeightAt&&n.push(r.userData.getHeightAt);let a=null;for(const d of n)if(typeof d=="function"){a=d;break}if(!a||!e.position)return null;const{x:o,z:c}=e.position;if(!Number.isFinite(o)||!Number.isFinite(c))return null;const l=a(o,c);if(!Number.isFinite(l))return null;const h=Number.isFinite(e.position.y)?e.position.y:0,u=Math.max(h,l+t);return Number.isFinite(u)?(e.position.y=u,u):null}function K0(s,e){s&&(e&&e.remove(s),s.traverse?.(t=>{if(t.isMesh)if(t.geometry?.dispose?.(),Array.isArray(t.material))for(const n of t.material)n?.dispose?.();else t.material?.dispose?.()}))}function $c(s){const{placeholder:e,scene:t}=s;e&&(t&&t.remove(e),e.geometry?.dispose?.(),e.material?.dispose?.(),s.placeholder=null)}const XT={marble:zT,bronze:HT},YT=["skinning","morphTargets","morphNormals","transparent"];function FA(s,e){return!s||!e||YT.forEach(t=>{Object.prototype.hasOwnProperty.call(s,t)&&(e[t]=s[t])}),e}async function el(s,e,t={}){const n=`loadLandmark:${e}`;typeof console?.time=="function"&&console.time(n);const i=new Ft(.8,.8,.8),r=new tt({color:4473924,emissive:new ae(6711039),transparent:!0,opacity:.6}),a=new Be(i,r);a.name="LandmarkPlaceholder",PA(a,{position:t.position}),LA(s,a,.05),s.add(a);const o={scene:s,url:e,placeholder:a,object:null};na.add(o);try{const c=typeof e=="string"?e.trim():"";if(!c)throw new Error("loadLandmark requires a non-empty URL");const l=/^(?:[a-zA-Z][a-zA-Z\d+.-]*:)?\/\//.test(c)||/^[a-zA-Z][a-zA-Z\d+.-]*:/.test(c),h=l?c:c.replace(/^\/+/,""),u=(l?[c]:[vt(VT,h),h]).filter(Boolean).filter((b,y,_)=>_.indexOf(b)===y),{materialPreset:d}=t,f=qT(s,t?.renderer),p=await $d(Ja,u,{renderer:f,targetHeight:t?.targetHeight||null});if(!p||!p.root)return $c(o),na.delete(o),null;const{root:g}=p;let m=g;if(g.traverse?.(b=>{b?.isMesh&&(b.castShadow=!0,b.receiveShadow=!0,b.frustumCulled=!1)}),g.children?.length){const b=g.children.filter(y=>y?.name?.startsWith("LOD")).map(y=>({object3D:y,level:parseInt(y.name.slice(3))||0}));if(b.length){const y=new vd,_=g.name||"Landmark";y.name=`${_}_LOD`,y.position.copy(g.position),y.rotation.copy(g.rotation),y.scale.copy(g.scale),b.sort((w,C)=>w.level-C.level).forEach(({object3D:w,level:C})=>{y.addLevel(w,C*50)}),y.userData={...g.userData||{}},m=y}}if(PA(m,t),$c(o),o.disposed)return K0(m),na.delete(o),null;const A=Number.isFinite(m?.position?.y)?m.position.y:0,x=LA(s,m,.05);if(Number.isFinite(x)&&(m.position.y=Math.max(A,x)),s.add(m),o.object=m,m.userData=m.userData||{},m.userData.interactable=!0,m.userData.onUse=()=>{const b=m.name||"a landmark";console.log(`You interacted with ${b}`)},m.traverse?.(b=>{!b?.isMesh||typeof b.name!="string"||!(b.name==="Door"||b.name.startsWith("INT_"))||(b.userData=b.userData||{},b.userData.interactable=!0,b.userData.onUse=()=>{b.userData.isOpen=!b.userData.isOpen;const _=b.name==="Door";b.rotation.y=b.userData.isOpen?Math.PI/2:0,console.log(_?b.userData.isOpen?"Door opened!":"Door closed!":`You interacted with ${b.name}`)})}),d){const b=XT[d],y=typeof b=="function"?b(mC):null;y&&(m.traverse?.(_=>{if(_?.isMesh)if(Array.isArray(_.material)){const w=_.material.map(C=>{const T=y.clone();return FA(C,T),C?.dispose?.(),T});_.material=w}else if(_.material){const w=_.material,C=y.clone();FA(w,C),w.dispose?.(),_.material=C}else _.material=y.clone()}),y.dispose?.())}return m}catch(c){throw $c(o),na.delete(o),c}finally{typeof console?.timeEnd=="function"&&console.timeEnd(n)}}function KT(){for(const s of na)s.disposed=!0,K0(s.object,s.scene),$c(s);na.clear()}function UA(s,e,t){const n=new pi(s,e);n.rotateX(-Math.PI/2);const i=new tt({color:t,roughness:.85,metalness:.05}),r=new Be(n,i);return r.receiveShadow=!0,r}function JT(s,e,t){const n=new pi(s,e);n.rotateX(-Math.PI/2);const i=new tt({color:t,roughness:1,metalness:0}),r=new Be(n,i);return r.receiveShadow=!0,r}function jT(s){const{footprint:e=new $(10,14),height:t=6,color:n=15194049,accentColor:i=14205861,roofColor:r=12098431}=s??{},a=new bt;a.name="CivicBuilding";const o=new Be(new Ft(e.x,t*.6,e.y),new tt({color:n,roughness:.7,metalness:.05}));o.castShadow=!0,o.receiveShadow=!0,o.position.y=t*.3,o.userData.noCollision=!1,a.add(o);const c=new tt({color:i,roughness:.6,metalness:.05}),l=new Dt(.35,.35,t*.6,16),h=e.x*.5-.8,u=e.y*.5-.8,d=4;for(let g=0;g<d;g++){const m=g/(d-1),A=new Be(l,c);A.position.set(ue.lerp(-h,h,m),t*.3,u),A.castShadow=!0,A.userData.noCollision=!1,a.add(A);const x=A.clone();x.position.z=-u,a.add(x)}const f=new Be(new zi(e.x*.6,t*.4,4),new tt({color:r,roughness:.55}));f.rotation.y=Math.PI*.25,f.position.y=t*.8,f.castShadow=!0,f.userData.noCollision=!1,a.add(f);const p=new Be(new Dt(e.x*.55,e.x*.55,t*.25,6),new tt({color:r,roughness:.6}));return p.rotation.x=Math.PI/2,p.position.y=t*.95,p.castShadow=!0,p.userData.noCollision=!1,a.add(p),a}function ZT(){const s=new bt;s.name="CityFountain";const e=new Be(new Dt(5,5.6,.8,40),new tt({color:13621468,roughness:.5}));e.receiveShadow=!0,e.castShadow=!0,e.position.y=.4,e.userData.noCollision=!1,s.add(e);const t=new Be(new Dt(4.2,4.2,.2,32),new tt({color:5227511,transparent:!0,opacity:.75,roughness:.1,metalness:.2}));t.position.y=.6,t.receiveShadow=!0,t.userData.noCollision=!0,s.add(t);const n=new Be(new zi(1.1,5.2,4),new tt({color:14737632,roughness:.45}));return n.castShadow=!0,n.position.y=3.6,n.userData.noCollision=!1,s.add(n),s}function NA(){const s=new bt;s.name="CityLampPost";const e=new Be(new Dt(.12,.12,3.4,12),new tt({color:3815994,roughness:.7}));e.position.y=1.7,e.userData.noCollision=!1,e.castShadow=!0,s.add(e);const t=new Be(new zi(.45,.9,12),new tt({color:16498733,emissive:new ae(16088855),emissiveIntensity:.6}));t.position.y=3.5,t.userData.noCollision=!1,t.castShadow=!0,s.add(t);const n=new is(16774581,.8,16,2);return n.position.y=3.5,s.add(n),s}function $T(s,e={}){const t=new bt;t.name="CivicDistrict",s.add(t);const n=e.plazaLength??80,i=e.promenadeWidth??14,r=e.greensWidth??10,a=e.center??Gt,o=e.heightSampler??e.terrainSampler??e.terrain?.userData?.getHeightAt,c=e.surfaceOffset??.05,l=a instanceof S?a.clone():new S(a?.x??0,a?.y??0,a?.z??0);let h=Number.isFinite(l.y)?l.y:0;if(typeof o=="function"){const T=o(l.x,l.z);Number.isFinite(T)&&(h=T)}t.position.set(l.x,h,l.z);const u=(T=0,v=0,E=0)=>{if(typeof o=="function"){const B=l.x+T,D=l.z+v,F=o(B,D);if(Number.isFinite(F))return F-h+c}return E+c},d=UA(i,n,12829371);d.receiveShadow=!0,d.position.y=u(0,0,d.position.y??0),t.add(d);const f=JT(r,n,7047791);f.position.x=-(i+r)/2,f.position.y=u(f.position.x,0,f.position.y??0),t.add(f);const p=f.clone();p.position.x=(i+r)/2,p.position.y=u(p.position.x,0,0),t.add(p);const g=UA(i+r*2,18,12433580);g.position.z=n/2+9,g.position.y=u(0,g.position.z,g.position.y??0),t.add(g);const m=g.clone();m.position.z=-(n/2+9),m.position.y=u(0,m.position.z,0),t.add(m);const A=ZT();A.position.set(0,u(0,0,A.position.y??0),0),t.add(A);const x=[{position:new S(-18,0,-24),rotation:Math.PI/2},{position:new S(-18,0,-8),rotation:Math.PI/2},{position:new S(-18,0,8),rotation:Math.PI/2},{position:new S(-18,0,24),rotation:Math.PI/2},{position:new S(18,0,-24),rotation:-Math.PI/2},{position:new S(18,0,-8),rotation:-Math.PI/2},{position:new S(18,0,8),rotation:-Math.PI/2},{position:new S(18,0,24),rotation:-Math.PI/2}],b=[{color:15260871,accent:14140325,roof:12098431},{color:14931402,accent:13810592,roof:11107408},{color:15130576,accent:14468259,roof:11899501}];for(let T=0;T<x.length;T++){const v=x[T],E=b[T%b.length],B=jT({footprint:new $(10,14),height:6.5,color:E.color,accentColor:E.accent,roofColor:E.roof}),D=u(v.position.x,v.position.z,v.position.y??0);B.position.set(v.position.x,D,v.position.z),B.rotation.y=v.rotation,t.add(B)}const y=12,_=Math.floor(n/y);for(let T=0;T<=_;T++){const v=-n/2+T*y,E=NA(),B=-i/2+1.2;E.position.set(B,u(B,v,E.position.y??0),v),t.add(E);const D=NA(),F=i/2-1.2,N=v+y/2;D.position.set(F,u(F,N,D.position.y??0),N),t.add(D)}const w=[new S(-i*.35,u(-i*.35,-n/2-6,0),-n/2-6),new S(-i*.35,u(-i*.35,n/2+6,0),n/2+6),new S(i*.35,u(i*.35,n/2+6,0),n/2+6),new S(i*.35,u(i*.35,-n/2-6,0),-n/2-6)],C=new Po(w,!0,"catmullrom",.1);return{group:t,walkingLoop:C,plazaLength:n,promenadeWidth:i}}const J0="athens.settings.camera",e1=150,Rt={enableArrowOrbit:!0,yawSpeed:.9,pitchSpeed:.9,zoomSpeed:3,minPitch:-.6,maxPitch:.6,minDist:2.5,maxDist:7.5,invertPitch:!1},yn={yawSpeed:{min:.1,max:2},pitchSpeed:{min:.1,max:2},zoomSpeed:{min:.5,max:8},minPitch:{min:-1,max:0},maxPitch:{min:0,max:1},minDist:{min:1.5,max:6},maxDist:{min:4,max:12}},rd=new Set;let di={...Rt},kA=!1,Gc=null;function Ks(s,e,t){return!Number.isFinite(s)||s<e?e:s>t?t:s}function Js(s,e){const t=typeof s=="string"?Number.parseFloat(s):Number(s);return Number.isFinite(t)?t:e}function pr(s){return{...s}}function ef(){try{return typeof window<"u"&&!!window.localStorage}catch{return!1}}function t1(){if(!ef())return null;try{const s=window.localStorage.getItem(J0);if(!s)return null;const e=JSON.parse(s);return!e||typeof e!="object"?null:e}catch{return null}}function n1(s){if(ef())try{window.localStorage.setItem(J0,JSON.stringify(s))}catch{}}function j0(s={}){const e={...Rt,...s},t={enableArrowOrbit:!!e.enableArrowOrbit,yawSpeed:Ks(Js(e.yawSpeed,Rt.yawSpeed),yn.yawSpeed.min,yn.yawSpeed.max),pitchSpeed:Ks(Js(e.pitchSpeed,Rt.pitchSpeed),yn.pitchSpeed.min,yn.pitchSpeed.max),zoomSpeed:Ks(Js(e.zoomSpeed,Rt.zoomSpeed),yn.zoomSpeed.min,yn.zoomSpeed.max),minPitch:Ks(Js(e.minPitch,Rt.minPitch),yn.minPitch.min,yn.minPitch.max),maxPitch:Ks(Js(e.maxPitch,Rt.maxPitch),yn.maxPitch.min,yn.maxPitch.max),minDist:Ks(Js(e.minDist,Rt.minDist),yn.minDist.min,yn.minDist.max),maxDist:Ks(Js(e.maxDist,Rt.maxDist),yn.maxDist.min,yn.maxDist.max),invertPitch:!!e.invertPitch};if(t.minPitch>t.maxPitch){const n=t.minPitch;t.minPitch=t.maxPitch,t.maxPitch=n}if(t.minDist>t.maxDist){const n=t.minDist;t.minDist=t.maxDist,t.maxDist=n}return t.minDist===t.maxDist&&(t.maxDist<yn.maxDist.max?t.maxDist=Math.min(yn.maxDist.max,t.maxDist+.1):t.minDist=Math.max(yn.minDist.min,t.minDist-.1)),t.minPitch=Number(t.minPitch.toFixed(4)),t.maxPitch=Number(t.maxPitch.toFixed(4)),t.minDist=Number(t.minDist.toFixed(4)),t.maxDist=Number(t.maxDist.toFixed(4)),t.yawSpeed=Number(t.yawSpeed.toFixed(4)),t.pitchSpeed=Number(t.pitchSpeed.toFixed(4)),t.zoomSpeed=Number(t.zoomSpeed.toFixed(4)),t}function tf(){if(kA)return;const s=t1();s?di=j0(s):di=pr(Rt),kA=!0}function i1(){ef()&&(Gc!==null&&clearTimeout(Gc),Gc=setTimeout(()=>{Gc=null,n1(di)},e1))}function s1(){const s=pr(di);rd.forEach(e=>{try{e(s)}catch(t){console.error("[CameraSettingsStore] listener error",t)}})}function r1(s,e){if(s===e)return!0;if(!s||!e)return!1;const t=Object.keys(Rt);for(const n of t)if(s[n]!==e[n])return!1;return!0}function nf(){return tf(),pr(di)}function Bu(s={}){if(tf(),!s||typeof s!="object")return pr(di);const e=j0({...di,...s});return r1(e,di)||(di=e,i1(),s1()),pr(di)}function sf(s){if(typeof s!="function")return()=>{};tf(),rd.add(s);try{s(pr(di))}catch(e){console.error("[CameraSettingsStore] listener error",e)}return()=>{rd.delete(s)}}const OA=new Set(["KeyW","KeyA","KeyS","KeyD","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","ShiftLeft","ShiftRight","Space","ControlLeft","ControlRight","KeyF"]);class a1{constructor(e=null){this.keys=new Set,this.canvas=e,this.flyToggleQueued=!1,this.cameraSettings=nf(),this.unsubscribeCameraSettings=sf(t=>{this.cameraSettings=t}),this.keyDownHandler=t=>{this.keys.add(t.code),t.code==="KeyF"&&!t.repeat&&(this.flyToggleQueued=!0),OA.has(t.code)&&t.preventDefault()},this.keyUpHandler=t=>{this.keys.delete(t.code),OA.has(t.code)&&t.preventDefault()},this.blurHandler=()=>{this.resetKeys(),this.flyToggleQueued=!1},window.addEventListener("keydown",this.keyDownHandler),window.addEventListener("keyup",this.keyUpHandler),window.addEventListener("blur",this.blurHandler),window.addEventListener("focus",this.blurHandler)}dispose(){window.removeEventListener("keydown",this.keyDownHandler),window.removeEventListener("keyup",this.keyUpHandler),window.removeEventListener("blur",this.blurHandler),window.removeEventListener("focus",this.blurHandler),this.unsubscribeCameraSettings?.(),this.unsubscribeCameraSettings=null}consumeLookDelta(e=0){const t=this.cameraSettings||Rt;if(!t.enableArrowOrbit)return{yaw:0,pitch:0};const n=(this.lookRight?1:0)-(this.lookLeft?1:0),i=(this.lookDown?1:0)-(this.lookUp?1:0),r=Number.isFinite(t.yawSpeed)?t.yawSpeed:Rt.yawSpeed,a=Number.isFinite(t.pitchSpeed)?t.pitchSpeed:Rt.pitchSpeed,o=t.invertPitch?-1:1,c=Number.isFinite(e)?Math.max(0,e):0,l=n*r*c,h=i*a*c*o;return{yaw:l,pitch:h}}isDown(e){return this.keys.has(e)}get forward(){return this.isDown("KeyW")}get back(){return this.isDown("KeyS")}get left(){return this.isDown("KeyA")}get right(){return this.isDown("KeyD")}get sprint(){return this.isDown("ShiftLeft")||this.isDown("ShiftRight")}get jump(){return this.isDown("Space")}get flyUp(){return this.isDown("Space")}get flyDown(){return this.isDown("ControlLeft")||this.isDown("ControlRight")}get lookLeft(){return this.isDown("ArrowLeft")}get lookRight(){return this.isDown("ArrowRight")}get lookUp(){return this.isDown("ArrowUp")}get lookDown(){return this.isDown("ArrowDown")}consumeFlyToggle(){return this.flyToggleQueued?(this.flyToggleQueued=!1,!0):!1}resetKeys(){this.keys.clear()}}const Va=1e-6,QA=new Ke,GA=new Ke;class o1{constructor(){const e=new Cn({visible:!1,wireframe:!0,transparent:!0,opacity:.15,color:65433});this.mesh=new Be(new $e,e),this.mesh.name="EnvironmentCollider",this.mesh.frustumCulled=!1,this.mesh.matrixAutoUpdate=!1,this.mesh.userData.noCollision=!0,this.lastRoot=null,this.positionAttr=null,this.indexAttr=null,this.capsuleBox=new Yt,this.triangleBox=new Yt,this.triangle=new Nn,this.plane=new Vn,this.capsuleSegment=new kg,this.tmpVec0=new S,this.tmpVec1=new S,this.tmpVec2=new S,this.tmpVec3=new S,this.tmpVec4=new S,this.tmpVec5=new S,this.tmpVec6=new S,this.tmpVec7=new S,this.tmpVec8=new S,this.tmpVec9=new S,this.tmpNormal=new S,this.segPoint=new S,this.triPoint=new S}fromStaticScene(e,t={}){const n=e??this.lastRoot??(this.mesh?this.mesh.parent:null);if(!n||typeof n.traverse!="function")return;const i=[];n.updateWorldMatrix(!0,!0);const r=this.mesh.material;r.visible=!!t.debug,this.lastRoot=n;const a=h=>{let u=h;for(;u;){if(u.userData?.noCollision===!0)return!1;u=u.parent}return!0},o=(h,u)=>{if(!h||!h.attributes||!h.attributes.position)return;const f=(h.index?h.toNonIndexed():h).getAttribute("position");if(!f)return;const p=new $e;p.setAttribute("position",f.clone()),p.setIndex(null),p.applyMatrix4(u),p.computeBoundingBox(),p.computeBoundingSphere(),i.push(p)};n.traverse(h=>{if(!h.isMesh||h===this.mesh)return;const u=h;if(!a(u))return;const d=u.geometry;if(!(!d||!d.attributes.position)&&u.visible){if(u.isInstancedMesh){const f=u.count??0;if(f===0)return;for(let p=0;p<f;p++)u.getMatrixAt(p,QA),GA.multiplyMatrices(u.matrixWorld,QA),o(d,GA);return}o(d,u.matrixWorld)}});let c=new $e;if(i.length>0){const h=ju(i,!1);h&&(c=h)}i.forEach(h=>h.dispose());const l=this.mesh.geometry;l&&l.dispose(),this.mesh.geometry=c,c.computeBoundingBox(),c.computeBoundingSphere(),this.positionAttr=c.getAttribute("position"),this.indexAttr=c.getIndex()}refresh(e={}){this.fromStaticScene(void 0,e)}capsuleIntersect(e){const t=this.mesh.geometry,n=this.positionAttr;if(!t||!n||n.count===0)return null;const i=t.boundingBox;if(!i||(this.capsuleSegment.set(e.start,e.end),this.capsuleBox.makeEmpty(),this.capsuleBox.expandByPoint(e.start),this.capsuleBox.expandByPoint(e.end),this.capsuleBox.min.addScalar(-e.radius),this.capsuleBox.max.addScalar(e.radius),!i.intersectsBox(this.capsuleBox)))return null;let r=0,a=null;const o=this.indexAttr,c=(l,h,u)=>{if(this.tmpVec0.fromBufferAttribute(n,l),this.tmpVec1.fromBufferAttribute(n,h),this.tmpVec2.fromBufferAttribute(n,u),this.triangleBox.makeEmpty(),this.triangleBox.expandByPoint(this.tmpVec0),this.triangleBox.expandByPoint(this.tmpVec1),this.triangleBox.expandByPoint(this.tmpVec2),this.triangleBox.min.addScalar(-e.radius),this.triangleBox.max.addScalar(e.radius),!this.triangleBox.intersectsBox(this.capsuleBox))return;this.triangle.set(this.tmpVec0,this.tmpVec1,this.tmpVec2);const d=this.closestPointsSegmentTriangle(this.capsuleSegment,this.triangle,this.segPoint,this.triPoint);if(d!==null&&d<e.radius-Va){const f=e.radius-d;f>r&&(r=f,this.tmpNormal.subVectors(this.segPoint,this.triPoint),this.tmpNormal.lengthSq()<Va?this.triangle.getNormal(this.tmpNormal):this.tmpNormal.normalize(),a=this.tmpVec3.copy(this.tmpNormal))}};if(o)for(let l=0;l<o.count;l+=3)c(o.getX(l),o.getX(l+1),o.getX(l+2));else for(let l=0;l<n.count;l+=3)c(l,l+1,l+2);return a?{normal:a.clone(),depth:r}:null}closestPointsSegmentTriangle(e,t,n,i){const r=t.a,a=t.b,o=t.c;if(this.tmpVec4.subVectors(a,r),this.tmpVec5.subVectors(o,r),this.tmpVec6.copy(this.tmpVec4).cross(this.tmpVec5).lengthSq()<Va)return null;this.plane.setFromCoplanarPoints(r,a,o);const l=this.plane.distanceToPoint(e.start),h=this.plane.distanceToPoint(e.end),u=this.tmpVec7.subVectors(e.end,e.start);if(Math.abs(l-h)>Va){const p=l/(l-h);if(p>=0&&p<=1&&(n.copy(u).multiplyScalar(p).add(e.start),t.containsPoint(n)))return i.copy(n),0}let d=1/0;t.closestPointToPoint(e.start,this.tmpVec8);let f=this.tmpVec8.distanceTo(e.start);return f<d&&(d=f,n.copy(e.start),i.copy(this.tmpVec8)),t.closestPointToPoint(e.end,this.tmpVec8),f=this.tmpVec8.distanceTo(e.end),f<d&&(d=f,n.copy(e.end),i.copy(this.tmpVec8)),d=this.testEdgeDistance(e,r,a,d,n,i),d=this.testEdgeDistance(e,a,o,d,n,i),d=this.testEdgeDistance(e,o,r,d,n,i),d}testEdgeDistance(e,t,n,i,r,a){const o=this.closestPointsSegmentSegment(e.start,e.end,t,n,this.tmpVec8,this.tmpVec9);return o<i&&(i=o,r.copy(this.tmpVec8),a.copy(this.tmpVec9)),i}closestPointsSegmentSegment(e,t,n,i,r,a){const o=this.tmpVec4.subVectors(t,e),c=this.tmpVec5.subVectors(i,n),l=this.tmpVec6.subVectors(e,n),h=o.dot(o),u=c.dot(c),d=c.dot(l),f=Va;let p=0,g=0;if(h<=f&&u<=f)return r.copy(e),a.copy(n),r.distanceTo(a);if(h<=f)p=0,g=ue.clamp(d/u,0,1);else{const m=o.dot(l);if(u<=f)g=0,p=ue.clamp(-m/h,0,1);else{const A=o.dot(c),x=h*u-A*A;x!==0?p=ue.clamp((A*d-m*u)/x,0,1):p=0,g=(A*p+d)/u,g<0?(g=0,p=ue.clamp(-m/h,0,1)):g>1&&(g=1,p=ue.clamp((A-m)/h,0,1))}}return r.copy(o).multiplyScalar(p).add(e),a.copy(c).multiplyScalar(g).add(n),r.distanceTo(a)}}const zc="BuildingsRoot";function Z0(s){if(s){if(Array.isArray(s)){for(const e of s)Z0(e);return}typeof s.dispose=="function"&&s.dispose()}}function c1(s){s&&s.traverse?.(e=>{e.isMesh&&(e.geometry?.dispose?.(),Z0(e.material))})}class l1{constructor(e){this.envCollider=e,this.loader=new ph,this.rootGroup=null}async loadBuilding(e,t){const i=(await this.loader.loadAsync(e)).scene,r=t??{};r.scale!==void 0&&i.scale.setScalar(r.scale),r.rotateY!==void 0&&(i.rotation.y=r.rotateY),r.position&&i.position.copy(r.position);const a=this.#n(r);if(r.position){const{x:c,z:l}=i.position;let h=i.position.y;if(typeof a=="function"){const u=a(c,l);Number.isFinite(u)?h=Number.isFinite(r.position.y)?Math.max(r.position.y,u+.05):u+.05:Number.isFinite(r.position.y)?h=r.position.y:Number.isFinite(h)||(h=.05)}else Number.isFinite(r.position.y)?h=r.position.y:Number.isFinite(h)||(h=.05);i.position.set(c,h??.05,l)}const o=this.#t(r);if(o)o.add(i);else{const c=this.envCollider?.mesh?.parent;c?c.add(i):console.warn("EnvironmentCollider mesh has no parent; building was loaded without being attached to the scene graph.")}return r?.collision?(i.traverse(c=>{c.isMesh&&(c.userData.noCollision=!1)}),this.envCollider.refresh()):i.traverse(c=>{c.isMesh&&(c.userData.noCollision=!0)}),i}clearBuildings(){const e=this.#e(),t=this.rootGroup??e?.getObjectByName(zc);t&&(c1(t),t.parent?.remove(t),this.rootGroup=null,typeof this.envCollider?.refresh=="function"&&this.envCollider.refresh())}#e(){return this.envCollider?.mesh?.parent??null}#t(e){if(e?.parent)return this.rootGroup=e.parent,this.rootGroup.name||(this.rootGroup.name=zc),e.parent;if(this.rootGroup&&this.rootGroup.parent)return this.rootGroup;const t=this.#e();if(!t)return null;let n=t.getObjectByName(zc);return n||(n=new bt,n.name=zc,t.add(n)),this.rootGroup=n,n}#n(e){const t=[e?.heightSampler,e?.terrainSampler,e?.terrain?.userData?.getHeightAt],n=this.#e();if(n?.userData){const{userData:i}=n;t.push(i.heightSampler,i.terrainSampler,i.terrainHeightSampler,i.getHeightAt);const r=i.terrain;r?.userData?.getHeightAt&&t.push(r.userData.getHeightAt)}for(const i of t)if(typeof i=="function")return i;return null}}class h1{constructor(e=new S(0,0,0),t=new S(0,1,0),n=1){this.start=e,this.end=t,this.radius=n}clone(){return new this.constructor().copy(this)}set(e,t,n){return this.start.copy(e),this.end.copy(t),this.radius=n,this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this.radius=e.radius,this}getCenter(e){return e.copy(this.end).add(this.start).multiplyScalar(.5)}translate(e){return this.start.add(e),this.end.add(e),this}intersectsBox(e){return Ru(this.start.x,this.start.y,this.end.x,this.end.y,e.min.x,e.max.x,e.min.y,e.max.y,this.radius)&&Ru(this.start.x,this.start.z,this.end.x,this.end.z,e.min.x,e.max.x,e.min.z,e.max.z,this.radius)&&Ru(this.start.y,this.start.z,this.end.y,this.end.z,e.min.y,e.max.y,e.min.z,e.max.z,this.radius)}}function Ru(s,e,t,n,i,r,a,o,c){return(i-s<c||i-t<c)&&(s-r<c||t-r<c)&&(a-e<c||a-n<c)&&(e-o<c||n-o<c)}const Hc=new S(0,1,0);class u1{constructor(e,t,n={}){this.object=new mt,this.object.userData.noCollision=!0,this.moveSpeed=4,this.sprintMult=1.8,this.gravity=12,this.jumpSpeed=5,this.slopeLimit=50,this.input=e,this.env=t,this.camera=n.camera,this.height=n.height??1.8,this.radius=n.radius??.35,this.cameraYaw=0,this.cameraPitch=ue.degToRad(-15),this.cameraMinPitch=ue.degToRad(-80),this.cameraMaxPitch=ue.degToRad(60),this.cameraDistance=6,this.cameraTargetHeight=this.height*.6,this.cameraDamping=10,this.cameraTarget=new S,this.cameraDesired=new S,this.cameraEuler=new sn(0,0,0,"YXZ"),this.cameraOffset=new S;const i=this.height-this.radius;this.capsule=new h1(new S(0,this.radius,0),new S(0,i,0),this.radius),this.object.position.set(0,this.height*.5,0),this.syncCapsuleToObject(),this.velocity=new S,this.groundNormal=new S(0,1,0),this.grounded=!1,this.jumpLocked=!1,this.flying=!1,this.flySpeed=8,this.flyIdleDecay=.9,this.character=void 0,this.desired=new S,this.tmpVec=new S,this.tmpVec2=new S,this.tmpVec3=new S,this.tmpVec4=new S,this.tmpQuat=new an,this.groundDamping=16,this.airDamping=6}get position(){return this.object.position}attachCharacter(e){this.character=e,this.object.add(e),e.position.set(0,0,0)}update(e){if(!Number.isFinite(e)||e<=0)return;(typeof this.input.consumeFlyToggle=="function"?this.input.consumeFlyToggle():!1)&&(this.flying=!this.flying,this.grounded=!1,this.velocity.y=0,this.flying||(this.jumpLocked=!0));const n=this.input.consumeLookDelta(e);this.camera&&(this.cameraYaw-=n.yaw,this.cameraPitch-=n.pitch,this.cameraPitch=ue.clamp(this.cameraPitch,this.cameraMinPitch,this.cameraMaxPitch),Number.isFinite(this.cameraYaw)||(this.cameraYaw=0),this.cameraYaw=ue.euclideanModulo(this.cameraYaw+Math.PI,Math.PI*2)-Math.PI);const i=this.input.sprint,a=(this.flying?this.flySpeed:this.moveSpeed)*(i?this.sprintMult:1);this.computeDesiredVelocity(a,this.flying);const o=this.flying||!this.grounded?this.airDamping:this.groundDamping;if(this.velocity.x=ue.damp(this.velocity.x,this.desired.x,o,e),this.velocity.z=ue.damp(this.velocity.z,this.desired.z,o,e),this.flying&&(this.velocity.y=ue.damp(this.velocity.y,this.desired.y,this.airDamping,e)),this.desired.lengthSq()===0)if(this.flying){const h=Math.pow(this.flyIdleDecay,e);this.velocity.multiplyScalar(h)}else{const h=this.grounded?.85:.95,u=Math.pow(h,e);this.velocity.x*=u,this.velocity.z*=u}this.flying?this.input.flyUp||(this.jumpLocked=!1):(this.grounded&&this.input.jump&&!this.jumpLocked&&(this.velocity.y=this.jumpSpeed,this.grounded=!1,this.jumpLocked=!0),this.input.jump||(this.jumpLocked=!1),this.grounded||(this.velocity.y-=this.gravity*e));const c=this.tmpVec.copy(this.velocity).multiplyScalar(e);this.capsule.translate(c),this.resolveCollisions(e);const l=this.getCapsuleCenter(this.tmpVec);if(this.object.position.copy(l),this.updateCamera(e),this.character){const h=Math.hypot(this.velocity.x,this.velocity.z),u=.05,d=Math.atan2(this.velocity.x,this.velocity.z);h>u&&(this.character.rotation.y=d);const f=this.moveSpeed*1.5,p=this.moveSpeed*.8;this.flying?this.character.play("Jump",.1):this.grounded?h>f?this.character.play("Run",.1):h>p?this.character.play("Swagger",.1):h>.1?this.character.play("Walk",.15):this.character.play("Idle",.2):this.character.play("Jump",.1),this.character.update(e)}}computeDesiredVelocity(e,t=!1){this.desired.set(0,0,0);const n=(this.input.right?1:0)-(this.input.left?1:0),i=(this.input.forward?1:0)-(this.input.back?1:0),r=t?(this.input.flyUp?1:0)-(this.input.flyDown?1:0):0;if(n!==0||i!==0)if(this.tmpVec2.set(n,0,i).normalize(),this.camera){this.tmpQuat.setFromEuler(this.cameraEuler.set(this.cameraPitch,this.cameraYaw,0,"YXZ"));const a=this.tmpVec3.set(0,0,-1).applyQuaternion(this.tmpQuat);a.y=0,a.lengthSq()<1e-6?a.set(0,0,-1):a.normalize();const o=this.tmpVec.copy(a).cross(Hc);o.lengthSq()<1e-6?o.set(1,0,0):o.normalize(),this.desired.copy(a).multiplyScalar(this.tmpVec2.z).addScaledVector(o,this.tmpVec2.x)}else this.desired.copy(this.tmpVec2);t&&r!==0&&(this.desired.y=r),this.desired.lengthSq()!==0&&this.desired.normalize().multiplyScalar(e)}updateCamera(e){if(this.camera){if(this.cameraTarget.copy(this.object.position),this.cameraTarget.y+=this.cameraTargetHeight,this.tmpQuat.setFromEuler(this.cameraEuler.set(this.cameraPitch,this.cameraYaw,0,"YXZ")),this.cameraOffset.set(0,0,this.cameraDistance).applyQuaternion(this.tmpQuat),this.cameraDesired.copy(this.cameraTarget).add(this.cameraOffset),!Number.isFinite(e)||e<=0)this.camera.position.copy(this.cameraDesired);else{const t=1-Math.exp(-this.cameraDamping*e);this.camera.position.lerp(this.cameraDesired,t)}this.camera.lookAt(this.cameraTarget)}}resolveCollisions(e){const t=this.env,n=!this.flying;this.grounded=!1;let i=null;if(t?.capsuleIntersect)for(let r=0;r<3;r++){const a=t.capsuleIntersect(this.capsule);if(!a)break;this.tmpVec.copy(a.normal).multiplyScalar(a.depth),this.capsule.translate(this.tmpVec);const o=this.tmpVec2.copy(a.normal).normalize(),c=o.dot(this.velocity);c<0&&this.velocity.addScaledVector(o,-c);const l=ue.clamp(o.dot(Hc),-1,1),h=ue.radToDeg(Math.acos(l));o.y>0&&(i===null&&(i=this.tmpVec4),i.copy(o),n&&h<=this.slopeLimit?(this.grounded=!0,this.groundNormal.copy(o)):n||this.groundNormal.copy(o))}else{const r=this.getCapsuleCenter(this.tmpVec3),a=this.height*.5;r.y<a&&(this.tmpVec.set(0,a-r.y,0),this.capsule.translate(this.tmpVec),this.velocity.y<0&&(this.velocity.y=0),n&&(this.grounded=!0),this.groundNormal.set(0,1,0))}if(n&&this.grounded){this.velocity.y<0&&(this.velocity.y=0);const r=ue.clamp(this.groundNormal.dot(Hc),-1,1);ue.radToDeg(Math.acos(r))>this.slopeLimit&&(this.grounded=!1)}if(n&&!this.grounded&&i){const r=this.tmpVec.copy(i).projectOnPlane(Hc);r.lengthSq()>1e-6&&(r.normalize(),this.velocity.addScaledVector(r,this.gravity*e)),this.groundNormal.copy(i)}if(n&&!this.grounded&&this.velocity.y>0&&i){const r=i,a=r.dot(this.velocity);a<0&&this.velocity.addScaledVector(r,-a)}!this.grounded&&!i&&this.groundNormal.set(0,1,0)}syncCapsuleToObject(){const e=this.object.position,t=this.height*.5;this.capsule.start.set(e.x,e.y-t+this.radius,e.z),this.capsule.end.set(e.x,e.y+t-this.radius,e.z)}getCapsuleCenter(e){return e.copy(this.capsule.start).add(this.capsule.end).multiplyScalar(.5)}}const d1=new S(0,2.2,-4.5),f1=new S(0,1.2,0),p1=ue.degToRad(-25),A1=ue.degToRad(65),m1=.25,g1=.12,y1=.15,b1=.0024,x1=.0021,zA={enabled:!0,yawSpeed:.9,pitchSpeed:.9,minPitch:-.6,maxPitch:.6,minDist:2.5,maxDist:7.5,zoomSpeed:4,invertPitch:!1},_1=Math.PI*2,HA=new S,E1=new S,js=new S,Wa=new S;new S;const VA=["ArrowLeft","ArrowRight","ArrowUp","ArrowDown","PageUp","PageDown"];function or(s){return ue.euclideanModulo(s+Math.PI,_1)-Math.PI}function v1(s,e,t){if(t>=1)return or(e);const n=or(e-s);return or(s+n*t)}function WA(s){return s&&typeof s=="object"&&s.isObject3D===!0}class w1{constructor(e,t,n={}){this.camera=e,this.targetObject=t??null,this.offset=(n.offset??d1).clone(),this.targetOffset=(n.targetOffset??f1).clone(),this.followLerp=n.followLerp??g1,this.rotationLerp=n.rotationLerp??y1,this.yawSensitivity=n.yawSensitivity??b1,this.pitchSensitivity=n.pitchSensitivity??x1,this.minPitch=n.minPitch??p1,this.maxPitch=n.maxPitch??A1,this.collisionOffset=n.collisionOffset??m1,this.distance=Math.max(.1,this.offset.length());const i=n.keyOrbit??zA,r={...zA,...i};if(r.minPitch=ue.clamp(r.minPitch,-Math.PI*.5,Math.PI*.5),r.maxPitch=ue.clamp(r.maxPitch,-Math.PI*.5,Math.PI*.5),r.maxPitch<r.minPitch){const c=r.maxPitch;r.maxPitch=r.minPitch,r.minPitch=c}this.keyOrbit=r,this.keyOrbitState={desiredYawDelta:0,desiredPitchDelta:0,keys:{left:!1,right:!1,up:!1,down:!1,pageUp:!1,pageDown:!1}},this.keyOrbitHandlersAttached=!1,this.handleKeyDown=c=>{if(!this.shouldHandleKeyOrbitEvent(c))return;let l=!1;switch(c.code){case"ArrowLeft":this.keyOrbitState.keys.left=!0,l=!0;break;case"ArrowRight":this.keyOrbitState.keys.right=!0,l=!0;break;case"ArrowUp":this.keyOrbitState.keys.up=!0,l=!0;break;case"ArrowDown":this.keyOrbitState.keys.down=!0,l=!0;break;case"PageUp":this.keyOrbitState.keys.pageUp=!0,l=!0;break;case"PageDown":this.keyOrbitState.keys.pageDown=!0,l=!0;break}l&&this.shouldConsumeKeyOrbit()&&c.preventDefault()},this.handleKeyUp=c=>{if(this.keyOrbitHandlersAttached)switch(c.code){case"ArrowLeft":this.keyOrbitState.keys.left=!1;break;case"ArrowRight":this.keyOrbitState.keys.right=!1;break;case"ArrowUp":this.keyOrbitState.keys.up=!1;break;case"ArrowDown":this.keyOrbitState.keys.down=!1;break;case"PageUp":this.keyOrbitState.keys.pageUp=!1;break;case"PageDown":this.keyOrbitState.keys.pageDown=!1;break}};const a=ue.clamp(this.offset.y/this.distance,-1,1);this.basePitch=Math.asin(a),this.baseYaw=Math.atan2(this.offset.x,-this.offset.z),this.targetYaw=or(this.baseYaw),this.targetPitch=ue.clamp(this.basePitch,this.minPitch,this.maxPitch),this.currentYaw=this.targetYaw,this.currentPitch=this.targetPitch,this.smoothedPosition=new S,this.desiredPosition=new S,this.lookTarget=new S,this.raycaster=new lh,this.intersections=[],this.solids=Array.isArray(n.solids)?n.solids.filter(WA):[],this.keyboardState={ArrowLeft:!1,ArrowRight:!1,ArrowUp:!1,ArrowDown:!1,PageUp:!1,PageDown:!1},this.arrowOrbitEnabled=Rt.enableArrowOrbit,this.keyboardYawSpeed=Rt.yawSpeed,this.keyboardPitchSpeed=Rt.pitchSpeed,this.keyboardZoomSpeed=Rt.zoomSpeed,this.minDistance=Rt.minDist,this.maxDistance=Rt.maxDist,this.invertKeyboardPitch=Rt.invertPitch,this._settingsUnsubscribe=null,this._handleKeyDown=c=>{!c||typeof c.code!="string"||VA.includes(c.code)&&(this.keyboardState[c.code]=!0)},this._handleKeyUp=c=>{!c||typeof c.code!="string"||VA.includes(c.code)&&(this.keyboardState[c.code]=!1)},this._handleBlur=this._handleBlur.bind(this),typeof window<"u"&&(window.addEventListener("keydown",this._handleKeyDown,!0),window.addEventListener("keyup",this._handleKeyUp,!0),window.addEventListener("blur",this._handleBlur,{passive:!0})),this.applyCameraSettings(nf()),this._settingsUnsubscribe=sf(c=>{this.applyCameraSettings(c)}),this.enabled=!1,this.needsImmediateSnap=!1,this.warnedMissingTarget=!1,this.disposed=!1,(n.enabled??!0)&&(this.setEnabled(!0),this.camera&&this.smoothedPosition.copy(this.camera.position))}_handleBlur(){this.clearKeyStates()}clearKeyStates(){if(this.keyStates&&Object.keys(this.keyStates).forEach(e=>{this.keyStates[e]=!1}),this.keyboardState)for(const e of Object.keys(this.keyboardState))this.keyboardState[e]=!1;if(this.keyOrbitState&&this.keyOrbitState.keys){const{keys:e}=this.keyOrbitState;for(const t of Object.keys(e))e[t]=!1;this.keyOrbitState.desiredYawDelta=0,this.keyOrbitState.desiredPitchDelta=0,"yaw"in this.keyOrbitState&&(this.keyOrbitState.yaw=0),"pitch"in this.keyOrbitState&&(this.keyOrbitState.pitch=0)}this.isDragging=!1,this._pointerDelta&&typeof this._pointerDelta.set=="function"&&this._pointerDelta.set(0,0)}getYaw(){return this.currentYaw}applyCameraSettings(e){const t={...Rt,...e&&typeof e=="object"?e:{}},n=(r,a)=>Number.isFinite(r)?r:a,i=this.keyOrbit.enabled;this.arrowOrbitEnabled=!!t.enableArrowOrbit,this.keyOrbit.enabled=this.arrowOrbitEnabled,this.keyOrbit.yawSpeed=n(t.yawSpeed,Rt.yawSpeed),this.keyOrbit.pitchSpeed=n(t.pitchSpeed,Rt.pitchSpeed),this.keyOrbit.zoomSpeed=n(t.zoomSpeed,Rt.zoomSpeed),this.keyOrbit.minPitch=n(t.minPitch,Rt.minPitch),this.keyOrbit.maxPitch=n(t.maxPitch,Rt.maxPitch),this.keyOrbit.minDist=Math.max(.1,n(t.minDist,Rt.minDist)),this.keyOrbit.maxDist=Math.max(this.keyOrbit.minDist,n(t.maxDist,Rt.maxDist)),this.keyOrbit.invertPitch=!!t.invertPitch,this.keyboardYawSpeed=this.keyOrbit.yawSpeed,this.keyboardPitchSpeed=this.keyOrbit.pitchSpeed,this.keyboardZoomSpeed=this.keyOrbit.zoomSpeed,this.invertKeyboardPitch=this.keyOrbit.invertPitch,this.minDistance=this.keyOrbit.minDist,this.maxDistance=this.keyOrbit.maxDist,this.distance=ue.clamp(this.distance,this.minDistance,this.maxDistance),this.enabled&&(this.keyOrbit.enabled&&!i?this.attachKeyOrbit():!this.keyOrbit.enabled&&i&&this.detachKeyOrbit())}getPitch(){return this.currentPitch}getTargetYaw(){return this.targetYaw}getTargetPitch(){return this.targetPitch}setAngles(e,t,n={}){if(!Number.isFinite(e)||!Number.isFinite(t))return;const i=n.snap??!0;this.targetYaw=or(e),this.targetPitch=ue.clamp(t,this.minPitch,this.maxPitch),i&&(this.currentYaw=this.targetYaw,this.currentPitch=this.targetPitch,this.needsImmediateSnap=!0)}setEnabled(e){const t=!!e&&!this.disposed;t!==this.enabled&&(this.enabled=t,this.enabled||this.clearKeyStates(),this.enabled&&(this.needsImmediateSnap=!0,this.warnedMissingTarget=!1,this.attachKeyOrbit()),this.enabled||this.detachKeyOrbit())}update(e){if(!this.enabled||this.disposed||!this.camera)return;const t=this.targetObject;if(!WA(t)){this.warnedMissingTarget||(console.warn("[ThirdPersonCamera] Missing target object; update skipped."),this.warnedMissingTarget=!0);return}t.updateWorldMatrix(!0,!1),t.getWorldPosition(js),js.add(this.targetOffset);const n=Number.isFinite(e)?Math.max(0,e):0;this.keyOrbit.enabled&&this.updateKeyOrbit(n),this.targetPitch=ue.clamp(this.targetPitch,this.minPitch,this.maxPitch),this.distance=ue.clamp(this.distance,this.minDistance,this.maxDistance);const i=n>0?1-Math.pow(1-this.rotationLerp,n*60):this.rotationLerp,r=n>0?1-Math.pow(1-this.followLerp,n*60):this.followLerp,a=ue.clamp(i,0,1),o=ue.clamp(r,0,1);this.currentYaw=v1(this.currentYaw,this.targetYaw,a),this.currentPitch=ue.lerp(this.currentPitch,this.targetPitch,a);const c=Math.cos(this.currentPitch)*this.distance;HA.set(Math.sin(this.currentYaw)*c,Math.sin(this.currentPitch)*this.distance,-Math.cos(this.currentYaw)*c),this.desiredPosition.copy(js).add(HA);const l=E1.copy(this.desiredPosition).sub(js),h=l.length();h>1e-6?l.multiplyScalar(1/h):l.set(0,0,-1);let u=h;if(u<this.collisionOffset&&(u=this.collisionOffset),this.solids.length>0)if(this.raycaster.near=0,this.raycaster.far=u,this.raycaster.set(js,l),this.intersections.length=0,this.raycaster.intersectObjects(this.solids,!0,this.intersections),this.intersections.length>0){const d=this.intersections[0],f=Math.max(0,Math.min(d.distance-this.collisionOffset,u));Wa.copy(js).addScaledVector(l,f)}else Wa.copy(this.desiredPosition);else Wa.copy(this.desiredPosition);this.needsImmediateSnap?(this.smoothedPosition.copy(Wa),this.needsImmediateSnap=!1):this.smoothedPosition.lerp(Wa,o),this.lookTarget.copy(js),this.camera.position.copy(this.smoothedPosition),this.camera.lookAt(this.lookTarget)}handlePointer(e,t){if(!this.enabled||this.disposed||!Number.isFinite(e)||!Number.isFinite(t))return;const n=this.targetYaw-e*this.yawSensitivity,i=this.targetPitch-t*this.pitchSensitivity;this.targetYaw=or(n),this.targetPitch=ue.clamp(i,this.minPitch,this.maxPitch)}dispose(){this.setEnabled(!1),this.solids.length=0,typeof window<"u"&&(window.removeEventListener("keydown",this._handleKeyDown,!0),window.removeEventListener("keyup",this._handleKeyUp,!0),window.removeEventListener("blur",this._handleBlur)),this.clearKeyStates(),typeof this._settingsUnsubscribe=="function"&&(this._settingsUnsubscribe(),this._settingsUnsubscribe=null),this.disposed=!0}shouldHandleKeyOrbitEvent(e){return!(!this.keyOrbit.enabled||!this.enabled||this.disposed||!e||typeof document<"u"&&document.pointerLockElement&&!this.enabled)}shouldConsumeKeyOrbit(){return!(!this.keyOrbit.enabled||!this.enabled||this.disposed||typeof document<"u"&&document.pointerLockElement&&!this.enabled)}attachKeyOrbit(){this.keyOrbit.enabled&&(this.keyOrbitHandlersAttached||typeof window>"u"||(window.addEventListener("keydown",this.handleKeyDown),window.addEventListener("keyup",this.handleKeyUp),this.keyOrbitHandlersAttached=!0))}detachKeyOrbit(){if(!this.keyOrbitHandlersAttached)return;typeof window<"u"&&(window.removeEventListener("keydown",this.handleKeyDown),window.removeEventListener("keyup",this.handleKeyUp)),this.keyOrbitHandlersAttached=!1,this.keyOrbitState.desiredYawDelta=0,this.keyOrbitState.desiredPitchDelta=0;const{keys:e}=this.keyOrbitState;e.left=!1,e.right=!1,e.up=!1,e.down=!1,e.pageUp=!1,e.pageDown=!1}updateKeyOrbit(e){if(e<=0)return;const t=this.keyOrbitState,{keys:n}=t,i=(n.right?1:0)-(n.left?1:0),r=this.keyOrbit.invertPitch?-1:1,a=((n.up?1:0)-(n.down?1:0))*r,o=(n.pageDown?1:0)-(n.pageUp?1:0);i!==0&&(t.desiredYawDelta+=i*this.keyOrbit.yawSpeed*e),a!==0&&(t.desiredPitchDelta+=a*this.keyOrbit.pitchSpeed*e);const c=ue.lerp(0,t.desiredYawDelta,.18),l=ue.lerp(0,t.desiredPitchDelta,.18);if(c!==0&&(this.targetYaw=or(this.targetYaw+c)),l!==0||a!==0||Math.abs(t.desiredPitchDelta)>1e-5){const h=Math.max(this.minPitch,this.keyOrbit.minPitch),u=Math.min(this.maxPitch,this.keyOrbit.maxPitch),d=this.targetPitch+l;this.targetPitch=ue.clamp(d,h,u)}if(t.desiredYawDelta-=c,t.desiredPitchDelta-=l,o!==0){const h=o*this.keyOrbit.zoomSpeed*e,u=Math.max(.1,this.keyOrbit.minDist),d=Math.max(u,this.keyOrbit.maxDist);this.distance=ue.clamp(this.distance+h,u,d)}else{const h=Math.max(.1,this.keyOrbit.minDist),u=Math.max(h,this.keyOrbit.maxDist);this.distance=ue.clamp(this.distance,h,u)}}}class $0 extends mt{constructor(){super(),this.model=void 0,this.mixer=void 0,this.actions=new Map,this.current=void 0}async load(e,t,{targetHeight:n=1.8}={}){const i=Array.isArray(e)?e:[e],r=Y0(t),a=await $d(r,i,{renderer:t,targetHeight:n});if(!a||!a.root)throw new Error("Character.load failed: no reachable GLB candidates");const{gltf:o,root:c}=a;this.initializeFromGLTF(c,o.animations)}initializeFromGLTF(e,t=[]){if(!e)throw new Error("Character.initializeFromGLTF requires a root object");this.model&&this.remove(this.model),this.model=e,this.model.traverse(a=>{a.isMesh&&(a.castShadow=!0,a.receiveShadow=!0,a.frustumCulled=!1)}),this.model.rotation.y=Math.PI,this.add(this.model),this.mixer=new Ng(this.model);const n=Array.isArray(t)?t:[],i=new Map;for(const a of n)a?.name&&i.set(a.name,a);const r=a=>{const o=a.toLowerCase();return o.includes("idle")?"Idle":o.includes("walk")&&!o.includes("swagger")?"Walk":o.includes("run")?"Run":o.includes("swagger")||o.includes("swag")?"Swagger":o.includes("jump")?"Jump":null};this.actions=new Map;for(const[a,o]of i){const c=r(a);if(!c)continue;const l=this.mixer.clipAction(o);l.clampWhenFinished=!0,l.enable=!0,this.actions.set(c,l)}!this.actions.get("Swagger")&&this.actions.get("Walk")&&this.actions.set("Swagger",this.actions.get("Walk")),!this.actions.get("Run")&&this.actions.get("Walk")&&this.actions.set("Run",this.actions.get("Walk")),!this.actions.get("Idle")&&this.actions.get("Walk")&&this.actions.set("Idle",this.actions.get("Walk")),this.play("Idle",0)}update(e){this.mixer?.update(e)}play(e,t=.2){const n=this.actions.get(e);!n||this.current===n||(n.reset().play(),this.current&&this.current.crossFadeTo(n,t,!1),this.current=n)}}function S1(s,e){const t=new bt;t.name="CitizenNPC";const n=new tt({color:s,roughness:.6,metalness:.1}),i=new Be(new Do(.4,1.1,8,16),n);i.position.y=1.1,i.castShadow=!0,i.receiveShadow=!0,i.userData.noCollision=!0,t.add(i);const r=new tt({color:e,roughness:.4}),a=new Be(new Xn(.32,16,16),r);a.position.y=2,a.castShadow=!0,a.userData.noCollision=!0,t.add(a);const o=new Be(new Uo(.45,.08,8,18,Math.PI*1.25),new tt({color:16117990,roughness:.5}));return o.rotation.set(Math.PI/2,Math.PI/3,0),o.position.y=1.3,o.castShadow=!0,o.userData.noCollision=!0,t.add(o),{group:t,body:i}}function ey(s){const t=s.getLengths(100),n=t[t.length-1];return{divisions:100,lengths:t,totalLength:n}}function C1(s,e,t={}){if(!e)return{citizens:[],updaters:[]};const n=t.count??6,i=t.minSpeed??.6,r=t.maxSpeed??1.2,a=t.terrain??null,o=t.palette??[{primary:5148407,secondary:16119285},{primary:15753874,secondary:16772275},{primary:8505220,secondary:15267305},{primary:16758605,secondary:16774112},{primary:9795021,secondary:15984117}],{totalLength:c}=ey(e),l=a?.userData?.getHeightAt?.bind(a?.userData),h=[],u=[];for(let d=0;d<n;d++){const f=o[d%o.length],{group:p,body:g}=S1(f.primary,f.secondary);p.userData.noCollision=!0,s.add(p),h.push(p);const m=ue.lerp(i,r,Math.random());let A=(d/n+Math.random()*.1)%1,x=Math.random()*Math.PI*2;const b=y=>{if(!Number.isFinite(y))return;const w=m*y/c;A=(A+w)%1;const C=e.getPointAt(A),T=e.getTangentAt(A);p.position.copy(C);const v=l?l(p.position.x,p.position.z):C.y;p.position.y=Number.isFinite(v)?v+.05:C.y+.05;const E=Math.atan2(T.x,T.z);p.rotation.set(0,E,0),x+=y*m*6,g.position.y=1.1+Math.sin(x)*.07,g.rotation.z=Math.sin(x)*.2};u.push(b)}return{citizens:h,updaters:u}}async function M1(s,e,t={}){if(!s||!e)return{npcs:[],updaters:[]};const n=Ii(),i=Array.from(new Set([vt(n,"models/npcs/manifest.json"),"models/npcs/manifest.json"].filter(Boolean)));let r=null;for(const g of i)try{const m=await fetch(g,{cache:"no-cache"});if(!m.ok)continue;r=await m.json();break}catch(m){console.warn("[NPC Manifest] Failed to load",g,m)}const a=Array.isArray(r?.npcs)?r.npcs:[];if(!a.length)return{npcs:[],updaters:[]};const o=a.map(g=>typeof g=="string"?g.trim():"").filter(g=>g.length>0);if(!o.length)return{npcs:[],updaters:[]};const{totalLength:c}=ey(e),l=t.terrain??null,h=l?.userData?.getHeightAt?.bind(l?.userData),u=t.minSpeed??.6,d=t.maxSpeed??1.2,f=[],p=[];for(let g=0;g<o.length;g+=1){const m=o[g],A=Array.from(new Set([vt(n,"models/npcs",m),vt("models/npcs",m)].filter(Boolean))),x=new $0;x.name=`GLBNPC:${m}`,x.userData.noCollision=!0;try{await x.load(A,s.userData?.renderer,{targetHeight:1.7})}catch(T){const v=T?.message||String(T);v&&v.includes("Downloaded HTML instead of GLB")?console.warn("[NPC Loader] Skipping NPC due to HTML response",m):console.warn("[NPC Loader] Failed to load NPC",m,v);continue}s.add(x),f.push(x);const b=x.actions?.get("Swagger")?"Swagger":x.actions?.get("Walk")?"Walk":"Idle";try{x.play(b,.4)}catch(T){console.warn("[NPC Loader] Unable to play animation for",m,T)}const y=ue.lerp(u,d,Math.random());let _=(g/o.length+Math.random()*.1)%1;const w=e.getPointAt(_);if(w){x.position.copy(w);const T=h?h(x.position.x,x.position.z):w.y;x.position.y=Number.isFinite(T)?T:w.y;const v=e.getTangentAt(_);if(v){const E=Math.atan2(v.x,v.z);Number.isFinite(E)&&x.rotation.set(0,E,0)}}const C=T=>{if(!Number.isFinite(T))return;const v=y,E=c>0?c:1,B=v*T/E;_=(_+B)%1;const D=e.getPointAt(_);if(!D){x.update(T);return}const F=e.getTangentAt(_);x.position.copy(D);const N=h?h(x.position.x,x.position.z):D.y;if(x.position.y=Number.isFinite(N)?N:D.y,F){const G=Math.atan2(F.x,F.z);Number.isFinite(G)&&x.rotation.set(0,G,0)}x.update(T)};p.push(C)}return{npcs:f,updaters:p}}function I1(s,e={}){const t=e.min??.2,n=e.max??2,i=e.step??.01,r=e.key??"F9",a=e.storageKey??"toneMappingExposure",o=document.createElement("div");o.id="tmx-wrap",Object.assign(o.style,{padding:"10px 12px",background:"rgba(0,0,0,0.55)",backdropFilter:"blur(4px)",borderRadius:"10px",font:"12px/1.2 ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Arial",color:"#fff",userSelect:"none"});const c=document.createElement("div");c.textContent="Exposure",c.style.marginBottom="6px";const l=document.createElement("div");l.style.display="flex",l.style.alignItems="center";const h=document.createElement("input");h.type="range",h.min=String(t),h.max=String(n),h.step=String(i),h.style.width="140px";const u=document.createElement("span");u.style.marginLeft="8px",u.style.opacity="0.8";const d=Number(localStorage.getItem(a)),f=Number.isFinite(d)?d:s.toneMappingExposure??1,p=A=>Math.min(n,Math.max(t,A)),g=A=>{const x=p(Number(A));s.toneMappingExposure=x,h.value=String(x),u.textContent=x.toFixed(2)};g(f),h.addEventListener("input",A=>g(A.target.value)),h.addEventListener("change",()=>localStorage.setItem(a,h.value)),l.appendChild(h),l.appendChild(u),o.appendChild(c),o.appendChild(l),uh("topRight").appendChild(o);const m=A=>{A.key===r&&(o.style.display=o.style.display!=="none"?"none":"block",A.preventDefault())};return window.addEventListener("keydown",m),{element:o,input:h,get value(){return Number(h.value)},set value(A){g(A)},dispose(){window.removeEventListener("keydown",m),o.remove()}}}const qA="hotkey-overlay-style",kt="hotkey-overlay",Ui="hotkey-overlay--hidden",ty="hotkeyOverlayOpen";function T1(){try{return localStorage.getItem(ty)==="1"}catch{return!1}}function B1(s){try{localStorage.setItem(ty,s?"1":"0")}catch{}}const R1=[{keys:["W","A","S","D"],description:"Move"},{keys:["Shift"],description:"Sprint"},{keys:["Space"],description:"Jump / fly up"},{keys:["Ctrl"],description:"Fly down"},{keys:["F"],description:"Toggle flight mode"},{keys:["E"],description:"Interact with highlighted objects"},{keys:["Arrow Keys"],description:"Look around"},{keys:["F9"],description:"Toggle exposure slider"}];function D1(s={}){if(document.querySelector(`.${kt}`))return;P1();const e=Array.isArray(s.hotkeys)&&s.hotkeys.length>0?s.hotkeys:R1,t=typeof s.toggleKey=="string"&&s.toggleKey.trim().length>0?s.toggleKey:"KeyH",n=s.showButton!==!1,i=document.createElement("div");i.className=kt,i.setAttribute("role","dialog"),i.setAttribute("aria-live","polite");const r=document.createElement("button");r.type="button",r.className=`${kt}__toggle`,r.innerHTML=`
    <svg width="20" height="20" viewBox="0 0 24 24" aria-hidden="true">
      <path fill="currentColor"
        d="M3 6a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3h-6l-3.5 3.5a1 1 0 0 1-1.7-.7V17H6a3 3 0 0 1-3-3V6zm4 2a1 1 0 1 0 0 2h2a1 1 0 1 0 0-2H7zm5 0a1 1 0 1 0 0 2h2a1 1 0 1 0 0-2h-2zm5 0a1 1 0 1 0 0 2h2a1 1 0 1 0 0-2h-2z"/>
    </svg>
    <span class="${kt}__sr">Hotkeys (press ${Du(t)})</span>
  `,r.setAttribute("title",`Hotkeys (${Du(t)})`),r.setAttribute("aria-expanded","false"),r.setAttribute("aria-controls",`${kt}-panel`);const a=document.createElement("div");a.className=`${kt}__panel`,a.id=`${kt}-panel`,a.setAttribute("role","document"),a.setAttribute("aria-hidden","true");const o=document.createElement("h2");o.textContent="Controls",o.className=`${kt}__title`,a.appendChild(o);const c=document.createElement("dl");c.className=`${kt}__list`;for(const f of e){if(!f||!Array.isArray(f.keys)||f.keys.length===0)continue;const p=f.keys.map(x=>String(x).trim()).filter(Boolean),g=typeof f.description=="string"?f.description:"";if(p.length===0||!g)continue;const m=document.createElement("dt");m.className=`${kt}__keys`,m.textContent=p.join(" / ");const A=document.createElement("dd");A.className=`${kt}__description`,A.textContent=g,c.appendChild(m),c.appendChild(A)}a.appendChild(c);const l=document.createElement("p");l.className=`${kt}__hint`,l.textContent=`Press ${Du(t)} to toggle`,a.appendChild(l);const h=T1();h?i.classList.remove(Ui):i.classList.add(Ui),n&&i.appendChild(r),i.appendChild(a),uh("topRight").appendChild(i);const u=f=>{f?i.classList.remove(Ui):i.classList.add(Ui);const p=!i.classList.contains(Ui);r?.setAttribute?.("aria-expanded",String(p)),a.setAttribute("aria-hidden",String(!p)),B1(p)};u(h);const d=f=>{if(f===!0){u(i.classList.contains(Ui));return}if(f===!1){u(!1);return}u(!i.classList.contains(Ui))};n&&r.addEventListener("click",()=>{d(!0)}),window.addEventListener("keydown",f=>{f.code===t&&!f.repeat&&d(!0),f.code==="Escape"&&!i.classList.contains(Ui)&&d(!1)})}function P1(){if(document.getElementById(qA))return;const s=document.createElement("style");s.id=qA,s.textContent=`
    .${kt} {
      display: flex;
      flex-direction: column;
      gap: 10px;
      color: #fff;
      font-family: 'Inter', system-ui, -apple-system, Segoe UI, Roboto, sans-serif;
    }

    .${kt}__sr {
      position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px;
      overflow: hidden; clip: rect(0,0,0,0); white-space: nowrap; border: 0;
    }

    .${kt}__toggle {
      background: rgba(0,0,0,0.5);
      border: 1px solid rgba(255,255,255,0.18);
      border-radius: 999px;
      color: inherit;
      width: 28px; height: 28px;
      display: grid; place-items: center;
      padding: 0;
      cursor: pointer;
      transition: background .2s ease, border-color .2s ease, opacity .2s ease, transform .12s ease;
      opacity: .85;
    }
    .${kt}__toggle:hover,
    .${kt}__toggle:focus-visible {
      background: rgba(0,0,0,0.72);
      border-color: rgba(255,255,255,0.36);
      outline: none;
      opacity: 1;
      transform: scale(1.04);
    }

    .${kt}__panel {
      background: rgba(10,12,18,0.9);
      border: 1px solid rgba(255,255,255,0.12);
      border-radius: 10px;
      padding: 14px;
      min-width: 220px;
      backdrop-filter: blur(6px);
      box-shadow: 0 12px 30px rgba(0,0,0,0.35);
      transition: opacity .18s ease, transform .18s ease;
    }

    .${kt}__title {
      margin: 0 0 12px;
      font-size: 16px;
      letter-spacing: 0.04em;
      text-transform: uppercase;
    }

    .${kt}__list {
      display: grid;
      grid-template-columns: max-content 1fr;
      gap: 6px 12px;
      margin: 0;
      padding: 0;
    }

    .${kt}__keys {
      margin: 0;
      font-weight: 600;
      letter-spacing: 0.05em;
    }

    .${kt}__description {
      margin: 0;
      opacity: 0.85;
    }

    .${kt}__hint {
      margin: 12px 0 0;
      font-size: 12px;
      letter-spacing: 0.04em;
      opacity: 0.65;
      text-transform: uppercase;
    }

    .${kt}.${Ui} .${kt}__panel {
      opacity: 0;
      pointer-events: none;
      transform: translateY(-6px);
    }

    /* Hide the icon while the panel is open (less clutter) */
    .${kt}:not(.${Ui}) .${kt}__toggle {
      opacity: 0;
      pointer-events: none;
    }
  `,document.head.appendChild(s)}function Du(s){switch(s){case"KeyH":return"H";case"F9":case"F10":case"F11":case"F12":return s;case"ControlLeft":case"ControlRight":return"Ctrl";default:return s.startsWith("Key")&&s.length===4?s.slice(3):s}}function L1({getPosition:s,getDirection:e,onPin:t,onSetLightingPreset:n,lightingPresets:i}={}){if(!(typeof window<"u"&&window.SHOW_HUD===!0))return null;const a=document.createElement("div");Object.assign(a.style,{color:"#fff",font:"12px/1.35 ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto",textShadow:"0 1px 2px rgba(0,0,0,0.45)",userSelect:"none",pointerEvents:"none"});const o=document.createElement("div");Object.assign(o.style,{width:"88px",height:"88px",borderRadius:"50%",border:"2px solid rgba(255,255,255,0.75)",position:"relative",marginBottom:"8px"});const c=document.createElement("div");Object.assign(c.style,{position:"absolute",left:"50%",top:"50%",width:"2px",height:"40px",background:"rgba(255,0,0,0.9)",transformOrigin:"50% 100%",borderRadius:"2px",transform:"translate(-1px, -40px) rotate(0deg)"}),o.appendChild(c),Object.entries({N:0,E:90,S:180,W:270}).forEach(([E,B])=>{const D=document.createElement("div");D.textContent=E,Object.assign(D.style,{position:"absolute",left:"50%",top:"50%",transform:`translate(-50%,-50%) rotate(${B}deg) translate(0,-38px) rotate(${-B}deg)`,fontWeight:700,letterSpacing:"0.5px"}),o.appendChild(D)});const h=document.createElement("div");h.style.pointerEvents="auto",h.style.background="rgba(0,0,0,0.55)",h.style.backdropFilter="blur(3px)",h.style.padding="8px 10px",h.style.borderRadius="8px",h.style.minWidth="220px",h.innerHTML=['<div><b>Pos</b> <span id="hud-pos">(x,y,z)</span></div>','<div><b>Bear</b> <span id="hud-bear">0° N</span></div>','<div style="opacity:.8">Press <b>P</b> to drop a pin</div>'].join("");const u=document.createElement("div");Object.assign(u.style,{marginTop:"6px",paddingTop:"6px",borderTop:"1px solid rgba(255,255,255,0.12)",display:"none"}),h.appendChild(u);const d=new Map,f=()=>{u.style.display=d.size?"block":"none"},p=(E,B)=>{if(!E)return;const D=typeof B=="string"?B.trim():"";let F=d.get(E);if(!D){F&&(d.delete(E),F.remove(),f());return}F||(F=document.createElement("div"),Object.assign(F.style,{opacity:"0.75",fontSize:"11px",letterSpacing:"0.03em",textTransform:"none",marginTop:d.size?"4px":"0"}),d.set(E,F),u.appendChild(F)),F.textContent=D,f()},m=[{name:"dawn",label:"Dawn"},{name:"noon",label:"High Noon"},{name:"dusk",label:"Dusk"},{name:"night",label:"Night"}].filter(({name:E})=>i?i[E]!=null:!0);if(m.length&&!h.querySelector(".hud-lighting-presets")){const E=document.createElement("div");E.className="hud-lighting-presets",Object.assign(E.style,{marginTop:"8px",paddingTop:"6px",borderTop:"1px solid rgba(255,255,255,0.15)",pointerEvents:"auto"});const B=document.createElement("div");B.textContent="Lighting Presets",Object.assign(B.style,{fontWeight:600,letterSpacing:"0.08em",fontSize:"11px",opacity:"0.85",textTransform:"uppercase"}),E.appendChild(B);const D=document.createElement("div");Object.assign(D.style,{display:"flex",flexWrap:"wrap",gap:"6px",marginTop:"6px"});const F=[{name:"dawn",codes:["Digit1","Numpad1"],keys:["1"]},{name:"noon",codes:["Digit2","Numpad2"],keys:["2"]},{name:"dusk",codes:["Digit3","Numpad3"],keys:["3"]},{name:"night",codes:["Digit4","Numpad4"],keys:["4"]}],N=new Set(m.map(k=>k.name)),G=new Map;for(const k of m){const J=i?.[k.name]||{},U=document.createElement("button");U.type="button";const ee=J.label||k.label;U.textContent=ee,Object.assign(U.style,{padding:"4px 8px",borderRadius:"4px",border:"1px solid rgba(255,255,255,0.35)",background:"rgba(0,0,0,0.35)",color:"inherit",font:"inherit",cursor:"pointer",pointerEvents:"auto",transition:"background 0.2s ease, border-color 0.2s ease"}),U.addEventListener("mouseenter",()=>{U.style.background="rgba(255,255,255,0.18)",U.style.borderColor="rgba(255,255,255,0.55)"}),U.addEventListener("mouseleave",()=>{U.style.background="rgba(0,0,0,0.35)",U.style.borderColor="rgba(255,255,255,0.35)"});const Ae=J.hotkey||"";Ae?U.title=`Set ${ee} lighting (Hotkey ${Ae})`:U.title=`Set ${ee} lighting`,U.addEventListener("click",oe=>{oe.preventDefault(),typeof n=="function"&&n(k.name)}),D.appendChild(U)}F.filter(k=>N.has(k.name)).forEach(k=>{for(const J of k.codes)G.set(J,k.name);for(const J of k.keys)G.set(J,k.name)}),E.appendChild(D),h.appendChild(E),h._presetKeyBindings=G}a.appendChild(o),a.appendChild(h),uh("topRight").appendChild(a);const x=h.querySelector("#hud-pos"),b=h.querySelector("#hud-bear"),y=E=>{const D=(Math.atan2(E.x,E.z)*180/Math.PI+360)%360,F=["N","NE","E","SE","S","SW","W","NW","N"],N=Math.round(D/45);return{deg:Math.round(D),label:F[N]}};let _=0,w=!0;const C=()=>{if(w){try{const E=s?.(),B=e?.();if(E&&(x.textContent=`(${E.x.toFixed(1)}, ${E.y.toFixed(1)}, ${E.z.toFixed(1)})`),B){const D=y(B);b.textContent=`${D.deg}° ${D.label}`,c.style.transform=`translate(-1px, -40px) rotate(${D.deg}deg)`}}catch{}_=requestAnimationFrame(C)}};C();const T=()=>h?._presetKeyBindings instanceof Map?h._presetKeyBindings:null,v=E=>{if(E.key?.toLowerCase()==="p"){const F=s?.();F&&(t?.(F),console.log(`[PIN] @ (${F.x.toFixed(2)}, ${F.y.toFixed(2)}, ${F.z.toFixed(2)})`))}const B=T();if(!B||typeof n!="function"||E.repeat)return;const D=B.get(E.code)||B.get(E.key);D&&(E.preventDefault(),n(D))};return window.addEventListener("keydown",v),{dispose(){w=!1,cancelAnimationFrame(_),window.removeEventListener("keydown",v),a.remove()},setStatusLine:p,rootElement:h}}const Pu={yawSpeed:{min:.1,max:2,step:.05,label:"Yaw Speed",suffix:"rad/s"},pitchSpeed:{min:.1,max:2,step:.05,label:"Pitch Speed",suffix:"rad/s"},zoomSpeed:{min:.5,max:8,step:.1,label:"Zoom Speed",suffix:"u/s"},minPitch:{min:-1,max:0,step:.01,label:"Min Pitch",suffix:"rad"},maxPitch:{min:0,max:1,step:.01,label:"Max Pitch",suffix:"rad"},minDist:{min:1.5,max:6,step:.1,label:"Min Distance",suffix:"m"},maxDist:{min:4,max:12,step:.1,label:"Max Distance",suffix:"m"}},ny=(s,e="")=>{if(!Number.isFinite(s))return`0${e?" "+e:""}`;const n=Math.abs(s)>=10?1:2,i=s.toFixed(n);return e?`${i} ${e}`:i};function F1(s,e,t){const n=document.createElement("div");Object.assign(n.style,{display:"flex",flexDirection:"column",gap:"4px"});const i=document.createElement("div");Object.assign(i.style,{display:"flex",justifyContent:"space-between",alignItems:"center",gap:"8px",fontSize:"11px",textTransform:"uppercase",letterSpacing:"0.06em",opacity:"0.85"});const r=document.createElement("span");r.textContent=e.label,i.appendChild(r);const a=document.createElement("span");a.style.fontVariantNumeric="tabular-nums",a.style.opacity="0.9",i.appendChild(a);const o=document.createElement("input");return o.type="range",o.min=String(e.min),o.max=String(e.max),o.step=String(e.step),o.name=s,o.setAttribute("aria-label",e.label),Object.assign(o.style,{width:"100%"}),o.addEventListener("input",()=>{const c=Number.parseFloat(o.value);a.textContent=ny(c,e.suffix),t(s,c)}),n.appendChild(i),n.appendChild(o),{wrapper:n,slider:o,valueEl:a}}function XA(s,e,t){const n=document.createElement("label");Object.assign(n.style,{display:"flex",alignItems:"center",gap:"8px",cursor:"pointer",fontSize:"12px",opacity:"0.9"});const i=document.createElement("input");i.type="checkbox",i.name=e,i.addEventListener("change",()=>{t(e,i.checked)});const r=document.createElement("span");return r.textContent=s,n.appendChild(i),n.appendChild(r),{wrapper:n,checkbox:i}}function U1(s){if(!(s instanceof HTMLElement))return{dispose(){}};const e={settings:nf(),disposed:!1},t=document.createElement("section");t.className="hud-camera-settings",Object.assign(t.style,{marginTop:"8px",paddingTop:"8px",borderTop:"1px solid rgba(255,255,255,0.15)",pointerEvents:"auto"});const n=document.createElement("div");Object.assign(n.style,{display:"flex",alignItems:"center",justifyContent:"space-between",gap:"8px"});const i=document.createElement("span");i.textContent="Camera",Object.assign(i.style,{fontWeight:600,letterSpacing:"0.08em",fontSize:"11px",textTransform:"uppercase",opacity:"0.85"});const r=document.createElement("button");r.type="button",r.setAttribute("aria-expanded","false"),r.title="Camera settings",r.setAttribute("aria-label","Camera settings"),r.textContent="⚙",Object.assign(r.style,{width:"22px",height:"22px",borderRadius:"50%",border:"1px solid rgba(255,255,255,0.4)",background:"rgba(0,0,0,0.35)",color:"inherit",fontSize:"12px",lineHeight:"1",display:"grid",placeItems:"center",cursor:"pointer",padding:"0"});const a=document.createElement("div");Object.assign(a.style,{marginTop:"8px",padding:"8px",borderRadius:"6px",background:"rgba(0,0,0,0.35)",backdropFilter:"blur(4px)",maxHeight:"260px",overflowY:"auto",display:"none"});const o={},c=document.createElement("div");Object.assign(c.style,{display:"flex",flexDirection:"column",gap:"10px"});const l=(A,x)=>{e.disposed||Bu({[A]:x})};for(const A of["yawSpeed","pitchSpeed","zoomSpeed","minPitch","maxPitch","minDist","maxDist"]){const x=Pu[A],b=F1(A,x,l);o[A]=b,c.appendChild(b.wrapper)}const h=document.createElement("div");Object.assign(h.style,{display:"flex",flexDirection:"column",gap:"6px",marginBottom:"8px"});const u=XA("Enable Arrow Orbit","enableArrowOrbit",(A,x)=>{e.disposed||Bu({[A]:x})}),d=XA("Invert Pitch","invertPitch",(A,x)=>{e.disposed||Bu({[A]:x})});h.appendChild(u.wrapper),h.appendChild(d.wrapper),a.appendChild(h),a.appendChild(c),n.appendChild(i),n.appendChild(r),t.appendChild(n),t.appendChild(a);const f=A=>{e.settings=A,u.checkbox.checked=A.enableArrowOrbit,d.checkbox.checked=A.invertPitch;for(const x of Object.keys(Pu)){const b=o[x];if(!b)continue;const y=A[x]??Rt[x];b.slider.value=String(y),b.valueEl.textContent=ny(y,Pu[x].suffix)}},p=()=>{a.style.display!=="none"?(a.style.display="none",r.setAttribute("aria-expanded","false")):(a.style.display="block",r.setAttribute("aria-expanded","true"))},g=A=>{A.preventDefault(),p()};r.addEventListener("click",g);const m=sf(A=>{e.disposed||f(A)});return f(e.settings),s.appendChild(t),{dispose(){e.disposed||(e.disposed=!0,m?.(),r.removeEventListener("click",g),t.remove())}}}function N1(s,e,t=16724838){const n=new bt;n.name="Pin";const i=new Be(new Dt(.05,.05,1.2,8),new tt({color:16777215,roughness:.8}));i.position.y=.6;const r=new Be(new pi(.5,.3),new tt({color:t,side:An,roughness:.6}));return r.position.set(.3,1,0),r.rotation.y=Math.PI/2,n.add(i,r),n.position.copy(e),n.renderOrder=2,n.userData.noCollision=!0,s.add(n),n}function k1(s){if(!s)return;const e=s?.userData?.getHeightAt;if(typeof e=="function"){const o=e(0,0);if(Number.isFinite(o))return}const t=new lh;t.firstHitOnly=!0;const n=[s],i=200,r=-400;function a(o,c){t.set(new S(o,i,c),new S(0,-1,0));const l=t.intersectObjects(n,!0)[0];if(l)return l.point.y;t.set(new S(o,r,c),new S(0,1,0));const h=t.intersectObjects(n,!0)[0];return h?h.point.y:0}s.userData=s.userData||{},s.userData.getHeightAt=a}function O1(s,e,t,n,i=6,r=120){const a=e?.userData?.getHeightAt?.bind(e?.userData);if(!a)return console.warn("[occluder] terrain.getHeightAt missing"),null;const o=new S(t.x,0,t.y),c=new S(n.x,0,n.y),l=new $(c.x-o.x,c.z-o.z);l.lengthSq()===0?l.set(1,0):l.normalize();const h=new $(-l.y,l.x),u=i*.5,d=new Float32Array((r+1)*2*3),f=new ht(d,3),p=new $e;p.setAttribute("position",f);const g=[];for(let b=0;b<r;b++){const y=b*2;g.push(y,y+1,y+2,y+1,y+3,y+2)}p.setIndex(g);const m=.05;for(let b=0;b<=r;b++){const y=b/r,_=ue.lerp(o.x,c.x,y),w=ue.lerp(o.z,c.z,y),C=(a(_,w)??0)+m,T=_-h.x*u,v=w-h.y*u,E=_+h.x*u,B=w+h.y*u,D=b*2*3,F=(b*2+1)*3;d[D+0]=T,d[D+1]=C,d[D+2]=v,d[F+0]=E,d[F+1]=C,d[F+2]=B}f.needsUpdate=!0,p.computeVertexNormals();const A=new tt({color:0,transparent:!1,depthWrite:!0,depthTest:!0,colorWrite:!1}),x=new Be(p,A);return x.name="WaterDepthOccluderRibbon",x.renderOrder=-2,x.receiveShadow=!1,x.castShadow=!1,x.userData.noCollision=!0,s.add(x),x}const Q1=.05;function G1(s,e,t,n=0,{clampToSea:i=!1,seaLevel:r=0,minAboveSea:a=0}={}){const o=s?.userData?.getHeightAt?.(e,t);let c=Number.isFinite(o)?o:n;return i&&(c=Math.max(c,r+a)),c}function ad(s,e,t,n,i=Q1,r={}){const a=G1(e,t,n,s.position?.y??0,r);return s.position.y=a+i,s.position.y}function od(s){return Object.prototype.toString.call(s)==="[object Object]"}function Zr(...s){const e={};for(const t of s)if(od(t))for(const[n,i]of Object.entries(t))od(i)?e[n]=Zr(e[n],i):Array.isArray(i)?e[n]=[...i]:e[n]=i;return e}function tl(s){if(!s)return null;if(s.isVector3)return s.clone();if(Array.isArray(s))return new S(s[0]??0,s[1]??0,s[2]??0);if(typeof s=="object"){const{x:e=0,y:t=0,z:n=0}=s;return new S(e,t,n)}return typeof s=="number"?new S(s,s,s):null}function cd(s,e=0){return s?s.isEuler?s.clone():Array.isArray(s)?new sn(s[0]??0,s[1]??e,s[2]??0):typeof s=="object"?new sn(s.x??s.pitch??0,s.y??s.yaw??e,s.z??s.roll??0):typeof s=="number"?new sn(0,s,0):new sn(0,e,0):new sn(0,e,0)}function z1(s={}){const e={...s};return s.position&&(e.position=tl(s.position)),s.rotation&&(e.rotation=cd(s.rotation)),s.scale?.isVector3?e.scale=s.scale.clone():Array.isArray(s.scale)?e.scale=[...s.scale]:od(s.scale)&&(e.scale={...s.scale}),e}class H1{constructor({scene:e=null,parent:t=null,terrain:n=null,heightSampler:i=null,envCollider:r=null,renderer:a=null,spawnPlaceholder:o=null,logger:c=console,quietMissing:l=!1}={}){this.scene=e,this.parent=t||e,this.terrain=n,this.heightSampler=typeof i=="function"?i:e?.userData?.getHeightAt||null,this.envCollider=r,this.renderer=a,this.spawnPlaceholder=typeof o=="function"?o:null,this.logger=c||console,this.quietMissing=!!l,this.baseUrl=Ii(),this.globalDefaults={},this.results=[]}setTerrain(e){this.terrain=e}setHeightSampler(e){typeof e=="function"&&(this.heightSampler=e)}setParent(e){this.parent=e||this.scene}setSpawnPlaceholder(e){this.spawnPlaceholder=typeof e=="function"?e:null}resolveSurfaceOffset(e={}){const t=e.placement?.surfaceOffset;return typeof t=="number"?t:typeof e.surfaceOffset=="number"?e.surfaceOffset:typeof this.globalDefaults.surfaceOffset=="number"?this.globalDefaults.surfaceOffset:.05}resolveSnapOptions(e={}){const t=Zr({clampToSea:!0,seaLevel:ot},this.globalDefaults.snapOptions,e.snapOptions,e.placement?.snapOptions);return typeof t.minAboveSea!="number"&&(t.minAboveSea=.02),typeof t.seaLevel!="number"&&(t.seaLevel=ot),t}resolvePosition(e={}){const t=e.placement||{},i=(t.alignToTerrain??e.alignToTerrain??this.globalDefaults.alignToTerrain)!==!1,r=tl(t.position);if(!r)return null;const a=this.resolveSurfaceOffset(e);if(i&&typeof this.heightSampler=="function"){const o=this.heightSampler(r.x,r.z);Number.isFinite(o)?r.y=o+a:Number.isFinite(r.y)||(r.y=a)}else Number.isFinite(r.y)||(r.y=a);return r}prepareTransform(e={}){const t=e.placement||{},n=Zr(this.globalDefaults.loadOptions,e.loadOptions);this.renderer&&typeof n.renderer>"u"&&(n.renderer=this.renderer);const i=this.resolvePosition(e);i&&(n.position=i);const r=t.rotation||t.euler,a=typeof t.rotateY=="number"?t.rotateY:typeof e.rotateY=="number"?e.rotateY:void 0;return(r||typeof a=="number")&&(n.rotation=cd(r,a??0)),t.scale!==void 0?n.scale=t.scale:e.scale!==void 0&&(n.scale=e.scale),e.materialPreset&&!n.materialPreset&&(n.materialPreset=e.materialPreset),{options:n,position:n.position?tl(n.position):null,rotation:n.rotation?n.rotation.clone?.()??cd(n.rotation):null,scale:t.scale??e.scale,surfaceOffset:this.resolveSurfaceOffset(e),snapOptions:this.resolveSnapOptions(e)}}resolveUrls(e=[]){const t=[],n=new Set,i=r=>{if(typeof r!="string")return;const a=r.trim();a&&(n.has(a)||(n.add(a),t.push(a)))};for(const r of e){if(typeof r!="string")continue;const a=r.trim();if(!a)continue;if(/^https?:/i.test(a)||a.startsWith("data:")){i(a);continue}if(a.startsWith("/")){i(a);continue}const o=a.replace(/^\.\/+/,"");i(vt(this.baseUrl,o)),i(o)}return t}applyCollisionSettings(e,t){if(!e)return;const n=!!t;e.traverse?.(i=>{i?.isMesh&&(i.userData=i.userData||{},i.userData.noCollision=!n)}),n&&typeof this.envCollider?.refresh=="function"&&this.envCollider.refresh()}snapObject(e,t){if(!e||!t?.position)return;const{position:n,surfaceOffset:i,snapOptions:r}=t,a=n.x??e.position?.x,o=n.z??e.position?.z;!Number.isFinite(a)||!Number.isFinite(o)||this.terrain&&ad(e,this.terrain,a,o,i,r)}reparent(e){!e||!this.parent||e.parent===this.parent||(e.parent?.remove?.(e),this.parent.add(e))}logMessage(e,t){if(!t)return;const n=this.logger||console;typeof n?.[e]=="function"?n[e](t):typeof n?.log=="function"&&n.log(t)}spawnFallbackPlaceholder(e,t){const n=e.placeholder||{};if(n.enabled===!1||typeof this.spawnPlaceholder!="function")return null;const i={...n};delete i.enabled,i.position||(i.position=t?.position?t.position.clone?.()??tl(t.position):null),typeof i.rotateY!="number"&&t?.rotation&&(i.rotateY=t.rotation.y),i.scale===void 0&&t?.scale!==void 0&&(i.scale=t.scale),i.collision===void 0&&(i.collision=!!e.collision),i.parent||(i.parent=this.parent||this.scene);try{return this.spawnPlaceholder(i)}catch(r){return this.logMessage("warn",`[LandmarkManager] Failed to spawn placeholder for ${e.name||e.id||"landmark"}`),this.logMessage("warn",r),null}}async attemptLoad(e,t,n,i){if(!e.length)return null;const r=t.name||t.id||"Landmark";for(const a of e){const o=z1(n.options);try{const c=await el(this.scene,a,o);if(!c)continue;if(this.reparent(c),this.snapObject(c,n),this.applyCollisionSettings(c,t.collision),typeof t.onLoaded=="function")try{t.onLoaded(c,{url:a,label:i})}catch(l){this.logMessage("warn",`[LandmarkManager] onLoaded hook failed for ${r}: ${l?.message||l}`)}return{object:c,url:a}}catch(c){this.logMessage("warn",`[LandmarkManager] ${r} failed to load from ${a}${i==="fallback"?" (fallback)":""}`),this.logMessage("warn",c)}}return null}async placeLandmark(e={}){e.name||e.id;const t=this.prepareTransform(e),n=this.resolveUrls(e.assetFiles||[]),i=this.resolveUrls(e.fallbackFiles||[]),r=e.messages||{};!n.length&&r.missingPrimary&&!this.quietMissing&&this.logMessage("info",r.missingPrimary);let a=await this.attemptLoad(n,e,t,"primary");if(!a&&i.length){r.missingPrimary&&!this.quietMissing&&this.logMessage("info",r.missingPrimary);const o=await this.attemptLoad(i,e,t,"fallback");o?(r.fallbackUsed&&!this.quietMissing&&this.logMessage("info",r.fallbackUsed),a=o):r.fallbackMissing&&!this.quietMissing&&this.logMessage("warn",r.fallbackMissing)}return a||(!i.length&&r.allMissing&&!this.quietMissing&&this.logMessage("info",r.allMissing),this.spawnFallbackPlaceholder(e,t)),a?.object??null}async loadConfig(e){if(!e)return[];this.globalDefaults=Zr(e.defaults),this.results=[];const t=Array.isArray(e.groups)?e.groups:[];for(const n of t){if(n?.enabled===!1)continue;const i=Zr(this.globalDefaults,n?.defaults),r=Array.isArray(n?.landmarks)?n.landmarks:[];for(const a of r){if(a?.enabled===!1)continue;const o=Zr(i,a);o.groupId=n?.id,o.groupLabel=n?.label;const c=await this.placeLandmark(o);this.results.push({spec:o,object:c})}}return e.metadata?.description?this.logMessage("info",`[LandmarkManager] Loaded ${this.results.length} landmarks: ${e.metadata.description}`):this.logMessage("info",`[LandmarkManager] Loaded ${this.results.length} landmarks.`),this.results}}function Zt(s,e={}){const t=s||{x:0,y:0,z:0},n=e.x??e[0]??0,i=e.y??e[1]??0,r=e.z??e[2]??0;return{x:(t.x??0)+n,y:(t.y??0)+i,z:(t.z??0)+r}}const V1={version:1,metadata:{author:"configuration",description:"Historic Athens layout covering the Acropolis, Agora, and civic outskirts."},defaults:{collision:!1,alignToTerrain:!0,surfaceOffset:.08,snapOptions:{clampToSea:!0,minAboveSea:.05},placeholder:{enabled:!0},loadOptions:{materialPreset:"marble"}},landmarks:{poseidon:["models/buildings/poseidon_temple_at_sounion_greece.glb","models/landmarks/poseidon_temple.glb","models/landmarks/poseidon_temple_at_sounion_greece.glb"],akropol:["models/buildings/Akropol.glb","models/landmarks/akropol.glb","models/landmarks/Akropol.glb"],aristotle:["models/buildings/aristotle_tomb_in_macedonia_greece.glb","models/landmarks/aristotle_tomb.glb","models/landmarks/aristotle_tomb_in_macedonia_greece.glb"]},groups:[{id:"acropolis-plateau",label:"Acropolis Plateau",description:"Monuments crowning the limestone plateau dedicated to Athena.",defaults:{collision:!0},landmarks:[{id:"parthenon",enabled:!1,name:"Parthenon",description:"Periklean temple celebrating Athena Parthenos, rebuilt after the Persian Wars.",assetFiles:["models/buildings/Akropol.glb"],placement:{position:Zt(nn,{x:6,z:-6}),rotation:{y:Math.PI*.22},scale:.45,surfaceOffset:.18,snapOptions:{minAboveSea:.5}},messages:{missingPrimary:"Parthenon asset missing – add models/buildings/Akropol.glb to restore the plateau model."}},{id:"erechtheion",enabled:!1,name:"Erechtheion",description:"Split-level shrine to Athena Polias and Poseidon-Erechtheus with caryatid porch.",assetFiles:["models/landmarks/erechtheion.glb"],fallbackFiles:["models/buildings/Akropol.glb"],placement:{position:Zt(nn,{x:-4,z:4}),rotation:{y:Math.PI*.65},scale:.25},placeholder:{accentColor:13350814},messages:{missingPrimary:"Erechtheion model not found. Drop a GLB at public/models/landmarks/erechtheion.glb to replace the placeholder.",fallbackUsed:"Erechtheion is temporarily using the Acropolis shell as a stand-in."}},{id:"athena-nike",enabled:!1,name:"Temple of Athena Nike",description:"Compact bastion temple guarding the western entrance to the sanctuary.",assetFiles:["models/landmarks/temple_athena_nike.glb"],fallbackFiles:["models/buildings/poseidon_temple_at_sounion_greece.glb"],placement:{position:Zt(nn,{x:-14,z:-8}),rotation:{y:-Math.PI*.12},scale:.16,surfaceOffset:.12},placeholder:{accentColor:14140839,baseRadius:1.8},messages:{missingPrimary:"Temple of Athena Nike model missing – add models/landmarks/temple_athena_nike.glb to restore it.",fallbackUsed:"Temple of Athena Nike currently reuses the Poseidon temple asset as a stand-in."}},{id:"propylaea",enabled:!1,name:"Propylaea",description:"Monumental gateway framing the ascent to the Acropolis plateau.",assetFiles:["models/landmarks/propylaea.glb"],fallbackFiles:["models/buildings/Akropol.glb"],placement:{position:Zt(nn,{x:-16,z:-10}),rotation:{y:-Math.PI*.35},scale:.3,surfaceOffset:.14},messages:{missingPrimary:"Propylaea model missing – supply public/models/landmarks/propylaea.glb to restore the gateway."}},{id:"brauronia",enabled:!1,name:"Sanctuary of Artemis Brauronia",description:"Shrine and stoa nestled along the southern flank of the Parthenon.",assetFiles:["models/landmarks/brauronia.glb"],fallbackFiles:["models/buildings/poseidon_temple_at_sounion_greece.glb"],placement:{position:Zt(nn,{x:-2,z:-2}),rotation:{y:Math.PI*.08},scale:.22},placeholder:{accentColor:13808524},messages:{missingPrimary:"Sanctuary of Artemis Brauronia missing – place brauronia.glb under public/models/landmarks/."}},{id:"athena-promachos",name:"Athena Promachos",description:"Colossal bronze of Athena guarding the sanctuary, visible from the sea.",assetFiles:["models/landmarks/athena_promachos.glb"],fallbackFiles:["models/landmarks/erechtheion.glb","models/buildings/Akropol.glb"],placement:{position:Zt(nn,{x:2,z:2}),rotation:{y:Math.PI*.5},scale:.14,surfaceOffset:.1},loadOptions:{materialPreset:"bronze"},placeholder:{accentColor:10775868},messages:{missingPrimary:"Athena Promachos statue missing – add athena_promachos.glb for a bespoke bronze model."}}]},{id:"acropolis-slopes",label:"Acropolis Slopes",description:"Performance venues and healing sanctuaries hugging the southern cliffs.",defaults:{collision:!0},landmarks:[{id:"theatre-dionysus",enabled:!1,name:"Theatre of Dionysus",description:"Birthplace of Attic drama hosting the City Dionysia festival.",assetFiles:["models/landmarks/theatre_dionysus.glb"],fallbackFiles:["models/buildings/poseidon_temple_at_sounion_greece.glb"],placement:{position:Zt(nn,{x:12,z:18}),rotation:{y:Math.PI*.65},scale:.5,surfaceOffset:.06},placeholder:{baseRadius:3.6,columnHeight:3.6},messages:{missingPrimary:"Theatre of Dionysus model missing – place theatre_dionysus.glb under public/models/landmarks/."}},{id:"odeon-herodes-atticus",enabled:!1,name:"Odeon of Herodes Atticus",description:"Roman-era odeon providing sheltered concerts along the south-west slope.",assetFiles:["models/landmarks/odeon_herodes_atticus.glb"],fallbackFiles:["models/landmarks/theatre_dionysus.glb"],placement:{position:Zt(nn,{x:-14,z:20}),rotation:{y:-Math.PI*.22},scale:.46},messages:{missingPrimary:"Odeon of Herodes Atticus model missing – add odeon_herodes_atticus.glb to supply the odeon interior."}},{id:"asclepieion",enabled:!1,name:"Sanctuary of Asclepius",description:"Healing precinct with fountain, temple, and incubation hall.",assetFiles:["models/landmarks/asclepieion.glb"],fallbackFiles:["models/buildings/poseidon_temple_at_sounion_greece.glb"],placement:{position:Zt(nn,{x:-6,z:16}),rotation:{y:Math.PI*.4},scale:.28},messages:{missingPrimary:"Sanctuary of Asclepius model missing – provide asclepieion.glb to restore the healing complex."}},{id:"stoa-eumenes",enabled:!1,name:"Stoa of Eumenes",description:"Covered promenade linking the Theatre of Dionysus to the Odeon.",assetFiles:["models/landmarks/stoa_eumenes.glb"],fallbackFiles:["models/landmarks/odeon_herodes_atticus.glb"],placement:{position:Zt(nn,{x:-10,z:22}),rotation:{y:Math.PI*.1},scale:.42},messages:{missingPrimary:"Stoa of Eumenes model missing – drop stoa_eumenes.glb into public/models/landmarks/."}}]},{id:"athenian-agora",label:"Athenian Agora",description:"Civic square hosting the council, courts, and bustling stoas of democratic Athens.",defaults:{collision:!0},landmarks:[{id:"temple-hephaestus",enabled:!1,name:"Temple of Hephaestus",description:"Doric temple overlooking the Agora, dedicated to Hephaestus and Athena Ergane.",assetFiles:["models/landmarks/temple_hephaestus.glb"],fallbackFiles:["models/buildings/poseidon_temple_at_sounion_greece.glb"],placement:{position:Zt(Gt,{x:-6,z:-6}),rotation:{y:Math.PI*.25},scale:.38,surfaceOffset:.1},messages:{missingPrimary:"Temple of Hephaestus missing – add temple_hephaestus.glb under public/models/landmarks/.",fallbackUsed:"Temple of Hephaestus currently reuses the Poseidon temple asset."}},{id:"stoa-attalos",enabled:!1,name:"Stoa of Attalos",description:"Two-storey stoa rebuilt by Attalos II as a bustling market frontage.",assetFiles:["models/landmarks/stoa_attalos.glb"],fallbackFiles:["models/buildings/Akropol.glb"],placement:{position:Zt(Gt,{x:4,z:6}),rotation:{y:-Math.PI*.45},scale:.46},messages:{missingPrimary:"Stoa of Attalos model missing – include stoa_attalos.glb to complete the eastern colonnade."}},{id:"bouleuterion",enabled:!1,name:"Bouleuterion",description:"Council chamber where the 500 met to prepare proposals for the Assembly.",assetFiles:["models/landmarks/bouleuterion.glb"],fallbackFiles:["models/landmarks/stoa_attalos.glb"],placement:{position:Zt(Gt,{x:-2,z:0}),rotation:{y:Math.PI*.15},scale:.26},messages:{missingPrimary:"Bouleuterion model missing – add bouleuterion.glb so the council house appears in game."}},{id:"tholos",enabled:!1,name:"Tholos",description:"Round building housing the prytaneis and the city’s official weights and measures.",assetFiles:["models/landmarks/tholos.glb"],fallbackFiles:["models/landmarks/bouleuterion.glb"],placement:{position:Zt(Gt,{x:-4,z:4}),rotation:{y:Math.PI*.5},scale:.18},messages:{missingPrimary:"Tholos model missing – add tholos.glb to represent the prytaneis headquarters."}},{id:"eponymous-heroes",enabled:!1,name:"Monument of the Eponymous Heroes",description:"Display platform for tribal hero statues and civic announcements.",assetFiles:["models/landmarks/eponymous_heroes.glb"],fallbackFiles:["models/landmarks/tholos.glb"],placement:{position:Zt(Gt,{x:6,z:2}),rotation:{y:-Math.PI*.2},scale:.2},messages:{missingPrimary:"Eponymous Heroes monument missing – include eponymous_heroes.glb for the notice board."}},{id:"royal-stoa",enabled:!1,name:"Royal Stoa",description:"Law court of the archon basileus at the north-western edge of the Agora.",assetFiles:["models/landmarks/royal_stoa.glb"],fallbackFiles:["models/landmarks/stoa_attalos.glb"],placement:{position:Zt(Gt,{x:2,z:-4}),rotation:{y:Math.PI*.05},scale:.28},messages:{missingPrimary:"Royal Stoa model missing – add royal_stoa.glb to depict the archon basileus' court."}}]},{id:"city-outskirts",label:"City & Outskirts",description:"Religious sanctuaries and athletic venues beyond the civic core.",defaults:{collision:!0},landmarks:[{id:"temple-olympian-zeus",enabled:!1,name:"Temple of Olympian Zeus",description:"Gigantic Corinthian temple southeast of the Acropolis, finished under Hadrian.",assetFiles:["models/landmarks/temple_olympian_zeus.glb"],fallbackFiles:["models/buildings/poseidon_temple_at_sounion_greece.glb"],placement:{position:Zt(nn,{x:24,z:44}),rotation:{y:Math.PI*.1},scale:.62},messages:{missingPrimary:"Temple of Olympian Zeus model missing – provide temple_olympian_zeus.glb for the colossal sanctuary."}},{id:"panathenaic-stadium",enabled:!1,name:"Panathenaic Stadium",description:"U-shaped track refurbished in marble for the Panathenaic Games.",assetFiles:["models/landmarks/panathenaic_stadium.glb"],fallbackFiles:["models/landmarks/theatre_dionysus.glb"],placement:{position:Zt(nn,{x:40,z:72}),rotation:{y:Math.PI*.9},scale:.9,surfaceOffset:.04},messages:{missingPrimary:"Panathenaic Stadium model missing – add panathenaic_stadium.glb to showcase the racecourse."}},{id:"academy-plato",enabled:!1,name:"Academy of Plato",description:"Grove and gymnasium northwest of the city where Plato taught philosophy.",assetFiles:["models/landmarks/academy_plato.glb"],fallbackFiles:["models/landmarks/royal_stoa.glb"],placement:{position:Zt(Gt,{x:-30,z:24}),rotation:{y:Math.PI*.3},scale:.32},messages:{missingPrimary:"Academy of Plato model missing – add academy_plato.glb to represent the sacred grove."}},{id:"kerameikos",enabled:!1,name:"Kerameikos & Dipylon Gate",description:"Potters’ quarter and cemetery guarding the Sacred Way into the city.",assetFiles:["models/landmarks/kerameikos.glb"],fallbackFiles:["models/landmarks/academy_plato.glb"],placement:{position:Zt(Gt,{x:-24,z:-30}),rotation:{y:-Math.PI*.15},scale:.4},messages:{missingPrimary:"Kerameikos model missing – drop kerameikos.glb into public/models/landmarks/ for the Dipylon Gate."}}]}]},Vc=new Map;async function W1(s){if(typeof s!="string"||s.length===0)return!1;if(Vc.has(s))return Vc.get(s);try{const e=await fetch(s,{method:"HEAD"}),t=e.ok&&!(e.headers.get("content-type")||"").includes("text/html");return Vc.set(s,t),t}catch{return Vc.set(s,!1),!1}}async function xs(s,e,{isSRGB:t=!1}={}){if(typeof e!="string"||e.length===0)return null;const n=e.replace(/^\/+/,""),i=Array.from(new Set([n,n.replace("basecolor","albedo").replace("gravel/","gravel_path-")].filter(Boolean))),r=["webp","jpg","png"],a=Ii();for(const o of i)for(const c of r){const l=`${o}.${c}`,h=vt(a,l);if(!await W1(h))continue;const u=await s.loadAsync(h);if(u&&t&&(u.colorSpace=Tt),u)return u}return null}async function q1(s){const e=new No,t=await xs(e,vt(s,"basecolor"),{isSRGB:!0});if(!t)return null;const n=await xs(e,vt(s,"normal")),i=await xs(e,vt(s,"roughness")),r=await xs(e,vt(s,"ao"));return new tt({map:t,normalMap:n||void 0,roughnessMap:i||void 0,aoMap:r||void 0,metalness:0,roughness:1})}async function X1(s,e=[6,6]){const t=new No,n=await xs(t,vt(s,"basecolor"),{isSRGB:!0});if(!n)return null;const i=await xs(t,vt(s,"normal")),r=await xs(t,vt(s,"roughness")),a=await xs(t,vt(s,"ao")),o=[n,i,r,a].filter(Boolean);for(const l of o)l.wrapS=l.wrapT=On,l.repeat.set(e[0],e[1]);return new tt({map:n,normalMap:i||void 0,roughnessMap:r||void 0,aoMap:a||void 0,metalness:0,roughness:1,polygonOffset:!0,polygonOffsetFactor:-1,polygonOffsetUnits:-1})}function Y1(s,e){!s||!e||s.traverse(t=>{t&&t.isMesh&&(t.material=e,t.geometry?.attributes?.color&&(t.material.vertexColors=!0))})}async function K1(s){const{obj:e=null,scene:t,renderer:n,BASE_URL:i="",baseUrl:r=i,textureSubdir:a="textures/aristotle_tomb",approxPosition:o=new S(-40,14,10)}=s||{};n&&(n.outputColorSpace||(n.outputColorSpace=Tt),(n.toneMapping===void 0||n.toneMapping===ki)&&(n.toneMapping=Ul,n.toneMappingExposure=n.toneMappingExposure??1));const c=typeof r=="string"&&r.length>0?r:Ii(),l=vt(c,a),h=await q1(l);if(!h)return;let u=e;if(!u&&t){let d=null,f=1/0;const p=new S;t.traverse(g=>{if(g?.isObject3D&&(g.isMesh||g.isGroup)){g.getWorldPosition(p);const m=p.distanceToSquared(o);m<f&&(f=m,d=g)}}),u=d||null}u&&Y1(u,h)}async function J1({scene:s,baseUrl:e,repeat:t=[6,6]}={}){if(!s)return;const n=typeof e=="string"&&e.length>0?e:Ii(),i=vt(n,"textures/gravel"),r=await X1(i,t);if(!r)return;const a=o=>{const c=(o.name||"").toLowerCase(),l=o.userData||{};return c.includes("road")||c.includes("street")||c.includes("path")||l.type==="road"||l.kind==="road"||l.category==="road"};s.traverse(o=>{o?.isMesh&&a(o)&&(o.material&&o.material.userData?.__isGravel||(o.material=r,o.material.userData={...o.material.userData||{},__isGravel:!0},o.receiveShadow=!0))})}const j1={},YA="WorldRoot",Z1=!0,KA={dawn:{phase:.25,exposure:.9,label:"Dawn",hotkey:"1"},noon:{phase:.5,exposure:1.5,label:"High Noon",hotkey:"2"},dusk:{phase:.75,exposure:.95,label:"Dusk",hotkey:"3"},night:{phase:0,exposure:.6,label:"Night",hotkey:"4"}};window.addEventListener("unhandledrejection",s=>{console.error("Unhandled promise rejection:",s.reason)});const Fn=Ii(),JA=[vt(Fn,"models/buildings/aristotle_tomb_in_macedonia_greece.glb"),vt(Fn,"models/landmarks/aristotle_tomb.glb"),vt(Fn,"models/landmarks/aristotle_tomb_in_macedonia_greece.glb")],$1=[vt(Fn,"models/buildings/poseidon_temple_at_sounion_greece.glb"),vt(Fn,"models/landmarks/poseidon_temple.glb"),vt(Fn,"models/landmarks/poseidon_temple_at_sounion_greece.glb")],eB=[vt(Fn,"models/buildings/Akropol.glb"),vt(Fn,"models/landmarks/akropol.glb"),vt(Fn,"models/landmarks/Akropol.glb")],tB=s=>(s.headers.get("content-type")||"").includes("text/html");async function jA(s){try{const e=await fetch(s,{method:"HEAD"});return e.ok&&!tB(e)}catch{return!1}}async function Lu(s=[]){const e=new Set;for(const t of s){if(typeof t!="string")continue;const n=t.trim();if(!n)continue;if(/^(?:[a-z]+:)?\/\//i.test(n)){if(!e.has(n)&&await jA(n))return n;e.add(n);continue}const r=[n.replace(/^\/+/,"")];for(const a of r)if(!e.has(a)&&(e.add(a),await jA(a)))return a}throw new Error("No candidate asset reachable: "+s.join(", "))}function nB(s){s&&(s.shadowMap.enabled=!0,s.shadowMap.type=hd,s.shadowMap&&(s.shadowMap.autoUpdate=!0,s.shadowMap.needsUpdate=!0))}function Wc(s,e,t=0){const n=Math.sin(s*127.1+e*311.7+t*74.7)*43758.5453;return n-Math.floor(n)}function iB(s,e,t=0){const n=Math.floor(s),i=Math.floor(e),r=s-n,a=e-i,o=Wc(n,i,t),c=Wc(n+1,i,t),l=Wc(n,i+1,t),h=Wc(n+1,i+1,t),u=r*r*(3-2*r),d=a*a*(3-2*a),f=ue.lerp(o,c,u),p=ue.lerp(l,h,u);return ue.lerp(f,p,d)}function Fu(s,e,{seed:t=0,octaves:n=5,persistence:i=.5,lacunarity:r=2}={}){let a=0,o=1,c=1;for(let l=0;l<n;l+=1)a+=o*iB(s*c,e*c,t+l*19.19),o*=i,c*=r;return a}let jr=null;function qc(s,{colorSpace:e=Tt}={}){const t=new Uint8Array(4);t[0]=s>>16&255,t[1]=s>>8&255,t[2]=s&255,t[3]=255;const n=new qn(t,1,1,zt);return n.colorSpace=e,n.wrapS=n.wrapT=On,n.repeat.set(3,3),n.needsUpdate=!0,n}function iy(){if(jr)return jr;if(typeof document>"u"||!document.createElement)return jr={map:qc(15723754,{colorSpace:Tt}),normalMap:qc(8421631,{colorSpace:Ot}),roughnessMap:qc(11776947,{colorSpace:Ot}),aoMap:qc(14737632,{colorSpace:Ot})},jr;const s=512,e=document.createElement("canvas");e.width=s,e.height=s;const t=e.getContext("2d"),n=t.createImageData(s,s),i=t.createImageData(s,s),r=t.createImageData(s,s),a=t.createImageData(s,s),o=new Float32Array(s*s),c=6;for(let d=0;d<s;d+=1)for(let f=0;f<s;f+=1){const p=(d*s+f)*4,g=f/s*c,m=d/s*c,A=Fu(g*.85,m*.9,{seed:11,octaves:4}),x=Fu(g*2.3,m*2.4,{seed:37,octaves:5,persistence:.55,lacunarity:2.15}),b=g*1.12+m*1.27+x*4.2,y=Math.sin(b+A*2.6),_=Fu(g*5.2,m*5.4,{seed:73,octaves:3,persistence:.6,lacunarity:2.8}),w=.5+.5*y*.8+_*.2,C=Math.pow(Math.abs(Math.sin(b*.6+_*3.4)),1.4);o[d*s+f]=w;const T=.04+A*.03,v=ue.clamp(.78+w*.18+A*.05,0,1);let E=v+T,B=v+T*.6,D=v+T*.2;E=ue.clamp(E-C*.09,0,1),B=ue.clamp(B-C*.07,0,1),D=ue.clamp(D-C*.05,0,1),n.data[p+0]=Math.round(E*255),n.data[p+1]=Math.round(B*255),n.data[p+2]=Math.round(D*255),n.data[p+3]=255;const F=ue.clamp(.42+C*.32+_*.12,.18,.88),N=Math.round(F*255);i.data[p+0]=N,i.data[p+1]=N,i.data[p+2]=N,i.data[p+3]=255;const G=ue.clamp(.93-C*.35-_*.18,.45,1),k=Math.round(G*255);r.data[p+0]=k,r.data[p+1]=k,r.data[p+2]=k,r.data[p+3]=255}const l=(d,f)=>{const p=(d+s)%s,g=(f+s)%s;return o[g*s+p]},h=2.1;for(let d=0;d<s;d+=1)for(let f=0;f<s;f+=1){const p=(d*s+f)*4,g=l(f-1,d),m=l(f+1,d),A=l(f,d-1),x=l(f,d+1),b=(m-g)*h,y=(x-A)*h,_=1,w=Math.sqrt(b*b+y*y+_*_)||1,C=b/w,T=y/w,v=_/w;a.data[p+0]=Math.round((C*.5+.5)*255),a.data[p+1]=Math.round((T*.5+.5)*255),a.data[p+2]=Math.round((v*.5+.5)*255),a.data[p+3]=255}const u=(d,{colorSpace:f})=>{const p=document.createElement("canvas");p.width=s,p.height=s,p.getContext("2d").putImageData(d,0,0);const m=new eg(p);return m.wrapS=m.wrapT=On,m.repeat.set(3,3),m.anisotropy=4,m.colorSpace=f,m.needsUpdate=!0,m};return jr={map:u(n,{colorSpace:Tt}),normalMap:u(a,{colorSpace:Ot}),roughnessMap:u(i,{colorSpace:Ot}),aoMap:u(r,{colorSpace:Ot})},jr}const sB=new Set(["","1","true","on","yes","y"]),rB=new Set(["0","false","off","no","n"]);function Ll(s,e=!0){if(s==null)return e;const t=String(s).trim().toLowerCase();return sB.has(t)?!0:rB.has(t)?!1:e}function aB({queryKey:s,windowFlagKey:e,defaultValue:t=!0,devDefault:n=!0}={}){if(typeof window>"u")return t;if(s){const i=new URLSearchParams(window.location.search);if(i.has(s))return Ll(i.get(s),t)}if(e&&typeof window[e]<"u"){const i=window[e];return typeof i=="boolean"?i:Ll(i,t)}return t}function oB(s={}){const e=s.minutesPerDay??20,n=(Number.isFinite(e)?Math.max(0,e):0)*60;return{secondsPerDay:n,phaseAt(i=0){return!Number.isFinite(i)||n<=0?0:(i%n+n)%n/n}}}async function cB(){console.log("🔧 Athens mainApp start");const s=new qg({antialias:!0});s.outputColorSpace=Tt,s.toneMapping=Ul,s.toneMappingExposure=1,s.useLegacyLights=!1,s.localClippingEnabled=!0,nB(s),s.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(s.domElement),!(typeof import.meta<"u"&&j1)&&I1(s,{min:.2,max:2,step:.01,key:"F9"}),WT(s),LC(),D1({toggleKey:"KeyH"});const t=document.createElement("div");t.textContent="Press E to interact",Object.assign(t.style,{position:"fixed",left:"50%",bottom:"20%",transform:"translateX(-50%)",padding:"8px 12px",borderRadius:"6px",background:"rgba(0, 0, 0, 0.6)",color:"#fff",fontFamily:"sans-serif",fontSize:"14px",letterSpacing:"0.05em",opacity:"0",transition:"opacity 0.2s ease",pointerEvents:"none"}),document.body.appendChild(t);const n=document.createElement("div");Object.assign(n.style,{position:"fixed",right:"16px",bottom:"16px",padding:"6px 10px",borderRadius:"6px",background:"rgba(0, 0, 0, 0.6)",color:"#fff",fontFamily:"sans-serif",fontSize:"14px",letterSpacing:"0.05em",pointerEvents:"none",textTransform:"uppercase"}),document.body.appendChild(n);function i(H=0){const fe=Math.max(0,Math.min(1,H))*24*60,Je=Math.floor(fe/60)%24,q=Math.floor(fe%60);return`${Je.toString().padStart(2,"0")}:${q.toString().padStart(2,"0")}`}let r="";const a=new _d;a.userData=a.userData||{},a.userData.renderer=s,a.userData.baseUrl=Fn;const o=H=>{if(!H)return;const fe=Array.isArray(H)?H:[H];for(const Je of fe)if(Je){for(const q of Object.values(Je))q&&q.isTexture&&typeof q.dispose=="function"&&q.dispose();typeof Je.dispose=="function"&&Je.dispose()}},c=H=>{H&&H.traverse(fe=>{fe.isMesh&&(fe.geometry&&typeof fe.geometry.dispose=="function"&&fe.geometry.dispose(),o(fe.material))})},l=H=>{if(!H)return;const fe=[...H.children];for(const Je of fe)c(Je),H.remove(Je)},h=()=>{const H=a.userData?.worldRoot??a.getObjectByName(YA);H&&(l(H),H.parent?.remove(H));const fe=new bt;return fe.name=YA,fe.userData=fe.userData||{},fe.userData.renderer=a.userData?.renderer||null,typeof a.userData?.baseUrl=="string"?fe.userData.baseUrl=a.userData.baseUrl:delete fe.userData.baseUrl,a.add(fe),a.userData.worldRoot=fe,fe};a.fog=new Io(10526880,50,400);const u=new $t(75,window.innerWidth/window.innerHeight,.1,2e3);u.position.set(0,5,10);const d=EC(a),f=RC(a),p=new gC(a,u,{getNightFactor:()=>f.nightFactor},{harbor:kn,agora:Gt,acropolis:nn});let g=!1;await p.loadManifest("audio/manifest.json").catch(()=>{g=!0,console.info("[audio] No audio manifest found; running silently.")}),await p.initFromManifest("audio/manifest.json"),await p.ensureUserGestureResume(),aB({queryKey:"audio",windowFlagKey:"SHOW_AUDIO_MIXER"})&&xC(p);const A=wC(a,1e3),x=DC(a),b=_M(a);if(k1(b),a.userData.terrain=b,a.userData.getHeightAt=b?.userData?.getHeightAt,typeof b?.userData?.getHeightAt=="function"&&(a.userData.terrainHeightSampler=b.userData.getHeightAt),(()=>{try{const H=new URLSearchParams(window.location.search);if(H.has("occluder")){const fe=H.get("occluder");return fe===null||fe===""||fe==="1"||fe==="true"||fe==="on"}}catch{}return!1})()){const H=new $(-.4,-.3),fe=new $(-95.7,-3.1);O1(a,b,H,fe,6,140)}const _=(()=>{if(typeof window>"u")return!1;try{const H=new URLSearchParams(window.location.search);return H.has("grass")?Ll(H.get("grass"),!1):!1}catch(H){return console.warn("Failed to parse grass flag from query string:",H),!1}})(),w=await BM(a,{bounds:Jc}),C=LM(a,{center:kn}),T=new o1;a.add(T.mesh);const v=h();let E=null;const B=(()=>{if(typeof window>"u")return!0;try{const H=new URLSearchParams(window.location.search);return H.has("roads")?Ll(H.get("roads"),!0):!0}catch(H){return console.warn("Failed to parse roads visibility from query string:",H),!0}})(),{group:D,curve:F}=FM(v,b);D&&(D.visible=B),_&&(E=LI(a),E&&yu(f.nightFactor));try{const H=await Lu(JA);if(H){const fe=await el(v,H,{position:nn,scale:3,materialPreset:"marble"});try{await K1({obj:fe??null,scene:a,renderer:s,BASE_URL:Fn})}catch(Je){console.warn("Aristotle PBR hook skipped:",Je)}}else console.warn("Aristotle's Tomb not found. Expected at:",JA)}catch(H){console.error("Failed to load Aristotle's Tomb:",H)}try{const H=await Lu($1);H&&await el(v,H,{position:new S(90,0,-60),scale:2.6,materialPreset:"marble"})}catch(H){console.warn("Poseidon Temple not loaded:",H)}try{const H=await Lu(eB);H&&await el(v,H,{position:new S(130,0,40),scale:2.2,materialPreset:"marble"})}catch(H){console.warn("Akropol not loaded:",H)}const N=await lI(v,b,{roadsVisible:B}),G=hI(v,b,F,{seed:42,buildingCount:140});try{await J1({scene:a,baseUrl:Fn,repeat:[6,6]})}catch(H){console.warn("Gravel roads hook skipped:",H)}T.fromStaticScene(a);const k=$T(v,{plazaLength:90,promenadeWidth:16,greensWidth:9,center:Gt,terrain:b});T.refresh();const J=new a1(s.domElement),U=new u1(J,T,{camera:u});v.add(U.object);const ee=new S(0,0,10);U.object.position.copy(ee);const oe=U.height*.5+.1;ad(U.object,b,ee.x,ee.z,oe,{clampToSea:!0,seaLevel:ot,minAboveSea:.25}),U.syncCapsuleToObject();let Me=null;const Ne=[];T?.mesh&&Ne.push(T.mesh),b&&Ne.push(b);const st=new S(0,U.height*.6,0);let Oe=null,K=!1;const X={active:!1,pointerId:null,lastX:0,lastY:0,pendingUse:!1,pointerType:null};let Re=!1;const Ue=s.domElement,Qe=1.5,at=()=>{if(X.pointerId!==null)try{Ue.releasePointerCapture(X.pointerId)}catch{}X.active=!1,X.pointerId=null,X.pendingUse=!1,X.pointerType=null},_t=H=>{if(!(!K||!Oe)&&H.isPrimary&&!(H.pointerType!=="touch"&&H.button!==0)){X.active=!0,X.pointerId=H.pointerId,X.lastX=H.clientX,X.lastY=H.clientY,X.pointerType=H.pointerType,X.pendingUse=H.button===0||H.pointerType==="touch";try{Ue.setPointerCapture(H.pointerId)}catch{}H.preventDefault()}},P=H=>{if(!X.active||X.pointerId!==H.pointerId)return;const fe=H.clientX-X.lastX,Je=H.clientY-X.lastY;X.lastX=H.clientX,X.lastY=H.clientY,(Math.abs(fe)>Qe||Math.abs(Je)>Qe)&&(X.pendingUse=!1),Oe&&Oe.handlePointer(fe,Je),H.preventDefault()},de=H=>{if(X.pointerId!==H.pointerId)return;const fe=X.pendingUse&&(H.button===0||X.pointerType==="touch");at(),fe&&Me&&Me.useObject(),H.preventDefault()},ne=()=>{X.active&&at()},ie=()=>{Re||(Re=!0,Ue.addEventListener("pointerdown",_t),Ue.addEventListener("pointermove",P),Ue.addEventListener("pointerup",de),Ue.addEventListener("pointercancel",ne),Ue.addEventListener("lostpointercapture",ne),window.addEventListener("blur",ne))},te=()=>{Re&&(Re=!1,Ue.removeEventListener("pointerdown",_t),Ue.removeEventListener("pointermove",P),Ue.removeEventListener("pointerup",de),Ue.removeEventListener("pointercancel",ne),Ue.removeEventListener("lostpointercapture",ne),window.removeEventListener("blur",ne),at())},_e=H=>{if(!Oe)return;const fe=!!H;if(K!==fe)if(K=fe,Oe.setEnabled(fe),fe){if(Oe.setAngles(U.cameraYaw??0,U.cameraPitch??0,{snap:!0}),Oe.update(0),ie(),typeof document<"u"&&document.pointerLockElement===Ue&&typeof document.exitPointerLock=="function")try{document.exitPointerLock()}catch{}}else Oe.setAngles(U.cameraYaw??0,U.cameraPitch??0,{snap:!0}),te()};Oe=new w1(u,U.object,{targetOffset:st,followLerp:.12,rotationLerp:.15,solids:Ne,enabled:!1,keyOrbit:{enabled:!0,yawSpeed:.9,pitchSpeed:.9,minPitch:-.6,maxPitch:.6,minDist:2.5,maxDist:7.5,zoomSpeed:4}});const le=new bt;le.name="DemoDoor",le.position.set(-2,0,-12);const ve=new Ft(1.2,2.4,.12),nt=new tt({color:5911312}),Ze=new Be(ve,nt);Ze.position.set(.6,1.2,0),Ze.castShadow=!0,Ze.receiveShadow=!0,le.add(Ze),le.userData.interactable=!0,le.userData.highlightTarget=Ze,le.userData.open=!1,le.userData.onUse=H=>{const fe=!H.userData.open;H.userData.open=fe,Ze.rotation.y=fe?-Math.PI/2:0,console.log(`Door ${fe?"opened":"closed"}`)},v.add(le);const R=new bt;R.name="DemoLamp",R.position.set(2,0,-12);const I=new Dt(.1,.1,3,12),W=new tt({color:3158064}),Y=new Be(I,W);Y.position.y=1.5,Y.castShadow=!1,R.add(Y);const he=new tt({color:2236962,emissive:new ae(16774581),emissiveIntensity:1.5}),Z=new Be(new Xn(.25,16,16),he);Z.position.y=3,Z.castShadow=!1,R.add(Z);const Ge=new is(16774581,1.5,12,2);Ge.position.y=3,Ge.castShadow=!1,R.add(Ge),R.userData.interactable=!0,R.userData.highlightTarget=Z,R.userData.light=Ge,R.userData.onUse=H=>{const fe=H.userData.light;if(!fe)return;const Je=fe.intensity>.1;fe.intensity=Je?0:1.5,he.emissiveIntensity=Je?0:1.5,console.log(`Lamp ${Je?"turned off":"turned on"}`)},v.add(R);const we=()=>{const H=new bt;H.name="FallbackAvatar";const fe=new tt({color:5148407,metalness:.2,roughness:.6}),Je=new Be(new Dt(.35,.35,1.2,16),fe);Je.castShadow=!0,Je.receiveShadow=!0,Je.position.y=.6,H.add(Je);const q=new Be(new Xn(.32,16,16),new tt({color:16054271,roughness:.4}));return q.castShadow=!0,q.position.y=1.32,H.add(q),H},qe=()=>{U.character&&(c(U.character),U.object.remove(U.character),U.character=void 0);const H=U.object.children.find(fe=>fe.name==="FallbackAvatar");H&&(c(H),U.object.remove(H))},Ve=new $0,ye=vt(Fn,"models/character/hero.glb"),Fe="models/character/hero.glb",et=encodeURIComponent("Hooded Adventurer.glb"),Ye=vt(Fn,"models/character",et),De=vt("models/character",et),lt=()=>{qe();const H=we();U.object.add(H),H.position.set(0,0,0)},z=Array.from(new Set([ye,Fe,Ye,De].filter(Boolean)));try{const H=Y0(s),fe=await $d(H,z,{renderer:s,targetHeight:1.8});if(!fe||!fe.root)throw new Error("No hero GLB candidates reachable");const{url:Je,gltf:q,root:re}=fe;qe(),Ve.initializeFromGLTF(re,q.animations),U.attachCharacter(Ve),Je!==ye&&Je!==Fe&&console.info(`Hero GLB not found at ${ye}; using fallback avatar from ${Je}.`),console.log("[Hero] Loaded:",Je)}catch(H){console.error("[Hero] All candidates failed, using fallback avatar:",H?.message||H),console.info(`Add your own hero model at ${ye}.`),lt()}const xe=new l1(T),Ee=b?.userData?.getHeightAt;a.userData=a.userData||{},a.userData.terrain||(a.userData.terrain=b),typeof Ee=="function"&&(a.userData.terrainHeightSampler=Ee,typeof a.userData.getHeightAt!="function"&&(a.userData.getHeightAt=Ee)),xe.clearBuildings(),KT();const ke=new bt;ke.name="BuildingsRoot",v.add(ke);const be=[];if(k.walkingLoop){const H=C1(v,k.walkingLoop,{count:8,minSpeed:.7,maxSpeed:1.4,terrain:b});be.push(...H.updaters)}M1(v,F,{terrain:b}).then(H=>{H&&Array.isArray(H.updaters)&&be.push(...H.updaters)}).catch(H=>{console.warn("[NPC Loader] Failed to spawn GLB NPCs",H)});const ce=(H={})=>{const{baseRadius:fe=2.6,columnHeight:Je=4.8,capHeight:q=.9,textures:re={}}=H,pe=new bt;pe.name="PlaceholderMonument";const Te=!!H.collision;pe.userData.noCollision=!Te;const He=(gn,{collidable:Bi=Te}={})=>{gn.castShadow=!0,gn.receiveShadow=!0,gn.userData.noCollision=!Bi},M=iy(),L={map:re.map??M.map,normalMap:re.normalMap??M.normalMap,roughnessMap:re.roughnessMap??M.roughnessMap,aoMap:re.aoMap??M.aoMap},O=H.baseMaterial??new tt({map:L.map,normalMap:L.normalMap,roughnessMap:L.roughnessMap,aoMap:L.aoMap,aoMapIntensity:1,metalness:0,roughness:.68,color:new ae(.95,.95,.95)}),V=typeof O.roughness=="number"?O.roughness:.45,Q=typeof O.metalness=="number"?O.metalness:.05,j=H.accentMaterial??(()=>{if(typeof O.clone=="function"){const gn=O.clone();return gn.color=new ae(H.accentColor??13350814),gn.roughness=H.accentRoughness??Math.max(0,V-.05),gn}return new tt({color:H.accentColor??13350814,roughness:H.accentRoughness??Math.max(0,V-.05),metalness:Q,map:L.map,normalMap:L.normalMap,aoMap:L.aoMap,roughnessMap:L.roughnessMap})})(),se=[],me=[.28,.24,.2],ge=[1.35,1.22,1.1];let Se=0;me.forEach((gn,Bi)=>{const Ri=ge[Bi]??1,mi=new Dt(fe*Ri,fe*(Ri+.08),gn,48);se.push(mi);const Rs=new Be(mi,O);He(Rs);const wr=mi.parameters?.height??gn;Se+=wr/2,Rs.position.y=Se,Se+=wr/2,pe.add(Rs)});const Le=.5,Ce=new Dt(fe*1.02,fe*1.08,Le,48);se.push(Ce);const Ie=new Be(Ce,j);He(Ie);const je=Ce.parameters?.height??Le;Se+=je/2,Ie.position.y=Se,Se+=je/2,pe.add(Ie);const ut=new Dt(fe*.85,fe*.9,Je,64,1);se.push(ut);const ft=new Be(ut,O);He(ft),ft.position.y=Se+Je/2,Se+=Je,pe.add(ft);const pt=new Dt(fe*1,fe*1.2,q*.55,48);se.push(pt);const We=new Be(pt,j);He(We);const St=pt.parameters?.height??q*.55;We.position.y=Se+St/2,Se+=St,pe.add(We);const ct=q*.75,un=new zi(fe*1.05,ct,48,1,!1);se.push(un);const ri=new Be(un,O);He(ri),ri.position.y=Se+ct/2,Se+=ct,pe.add(ri);const en=new Xn(fe*.22,24,16);se.push(en);const ai=new Be(en,j);He(ai,{collidable:!1}),ai.position.y=Se+fe*.22,Se+=fe*.22*2,pe.add(ai),se.forEach(gn=>{const Bi=gn.attributes?.uv;Bi&&gn.setAttribute("uv2",Bi.clone())});const Mt=new Be(new Fo(fe*1.1,fe*1.75,64),new Cn({color:0,transparent:!0,opacity:.12,side:An,depthWrite:!1}));Mt.rotation.x=-Math.PI/2,Mt.position.y=.015,Mt.renderOrder=1,Mt.castShadow=!1,Mt.receiveShadow=!1,Mt.userData.noCollision=!0,pe.add(Mt);const qt=new oh(16773336,1.15,42,Math.PI/5,.35,1.2);qt.position.set(6,Se*.5+5,6),qt.castShadow=!1,qt.shadow.mapSize.set(1024,1024),qt.shadow.bias=-5e-4,qt.userData.noCollision=!0,pe.add(qt);const tn=new mt;tn.position.set(0,Se*.5,0),tn.userData.noCollision=!0,pe.add(tn),qt.target=tn;const Pt=new is(13162239,.36,20,1.6);Pt.position.set(-4,Se*.4+3.5,-3),Pt.castShadow=!1,Pt.userData.noCollision=!0,pe.add(Pt);const Ut=new is(16775132,.58,18,1.4);if(Ut.position.set(0,Se*.6+2.4,0),Ut.castShadow=!1,Ut.shadow.mapSize.set(512,512),Ut.shadow.bias=-6e-4,Ut.userData.noCollision=!0,pe.add(Ut),H.position instanceof S)pe.position.copy(H.position);else if(H.position&&typeof H.position=="object"){const{x:gn=0,y:Bi=0,z:Ri=0}=H.position;pe.position.set(gn,Bi,Ri)}typeof H.rotateY=="number"&&(pe.rotation.y=H.rotateY),H.scale instanceof S?pe.scale.copy(H.scale):typeof H.scale=="number"&&pe.scale.setScalar(H.scale);const oi=pe.position.x,Jn=pe.position.z;return ad(pe,b,oi,Jn,.05,{clampToSea:!0,seaLevel:ot,minAboveSea:.02}),(H.parent??v).add(pe),Te&&T.refresh(),pe},ze=vt(Fn,"models/buildings"),it=(H,fe,Je=.05)=>{let q=Je;if(typeof Ee=="function"){const re=Ee(H,fe);Number.isFinite(re)&&(q=re+Je)}return new S(H,q,fe)},Ct=[{url:vt(ze,"poseidon_temple_at_sounion_greece.glb"),position:it(-34,-12),rotateY:-Math.PI*.12,scale:1,collision:!0,name:"SamplePoseidonTemple"},{url:vt(ze,"Akropol.glb"),position:it(6,-42),rotateY:Math.PI*.08,scale:1,collision:!1,name:"SampleAkropol"}];(await Promise.allSettled(Ct.map(H=>xe.loadBuilding(H.url,{position:H.position,rotateY:H.rotateY,scale:H.scale,collision:H.collision,parent:ke,heightSampler:Ee}).then(fe=>(fe&&H.name&&(fe.name=H.name),fe))))).forEach((H,fe)=>{H.status==="rejected"&&console.error(`Sample building failed to load: ${Ct[fe].url}`,H.reason)});const Qn=new H1({scene:v,parent:ke,terrain:b,heightSampler:Ee,envCollider:T,renderer:s,spawnPlaceholder:(H={})=>ce({...H,parent:H.parent??ke}),quietMissing:!0});try{await Qn.loadConfig(V1)}catch(H){console.error("[LandmarkManager] Failed to load Athens layout",H)}Me=PC(s,u,a),Oe&&_e(Z1),jd(a,{safeMode:!0});const _n=new Vd,Kn=oB(),Vt={timeOfDayPhase:0};au(Vt,0);const Hi=H=>{const fe=KA[H];if(!fe)return;const Je=au(Vt,fe.phase);s.toneMappingExposure=fe.exposure,console.log(`[HUD] preset: ${H}`);const q=kp(d,Vt);Qp(f,q),sA(C,f.nightFactor),Oc(N,f.nightFactor),Oc(G,f.nightFactor),Op(A,Je),Gp(x,q),eA(w,0,q,f.nightFactor),E&&(yu(f.nightFactor),_A(0,U?.position??null));const re=i(Je);re!==r&&(n.textContent=`Time: ${re}`,r=re),s.render(a,u)};function as(){requestAnimationFrame(as);const H=_n.getDelta(),fe=_n.elapsedTime;if(Kn.secondsPerDay>0){const Te=H/Kn.secondsPerDay,He=(Vt.timeOfDayPhase??0)+Te,M=He-Math.floor(He);au(Vt,M)}const Je=Vt.timeOfDayPhase??0,q=kp(d,Vt);Qp(f,q),sA(C,f.nightFactor),Oc(N,f.nightFactor),Oc(G,f.nightFactor),Op(A,Je),Gp(x,q),E&&(yu(f.nightFactor),_A(H,U?.position??null)),EM(b,fe),eA(w,H,q,f.nightFactor),p.update(U?.position),Oe&&K&&(U.cameraYaw=Oe.getYaw(),U.cameraPitch=Oe.getPitch()),U.update(H),Oe&&K&&(U.cameraYaw=Oe.getYaw(),U.cameraPitch=Oe.getPitch()),Oe&&Oe.update(H);for(const Te of be)Te(H);const re=Me.updateHover(H);t.style.opacity=re?"1":"0";const pe=i(Je);pe!==r&&(n.textContent=`Time: ${pe}`,r=pe),s.render(a,u)}as();const os=()=>{try{if(U&&U.position&&Number.isFinite(U.position.x))return U.position}catch{}return u?.position??{x:0,y:0,z:0}},Vi=()=>{try{const H=new S(0,0,-1);return H.applyQuaternion(u.quaternion),H.y=0,H.normalize(),H}catch{return{x:0,y:0,z:1}}},cs=H=>{const fe=N1(v,H),Je=b?.userData?.getHeightAt?.(H.x,H.z);Number.isFinite(Je)&&(fe.position.y=Je)};typeof window<"u"&&(window.SHOW_HUD=!0),console.log("[HUD] mounting…");const Ti=L1({getPosition:os,getDirection:Vi,onPin:cs,onSetLightingPreset:Hi,lightingPresets:KA});U1(Ti?.rootElement??null),g&&Ti?.setStatusLine?.("audio","Audio: Off (no manifest)"),s.domElement.addEventListener("pointerdown",H=>{if(H.button===0){if(K&&Oe)return;Me.useObject()}}),window.addEventListener("keydown",H=>{H.code==="KeyV"&&!H.repeat&&Oe?_e(!K):H.code==="KeyE"&&Me.useObject()}),window.addEventListener("resize",()=>{u.aspect=window.innerWidth/window.innerHeight,u.updateProjectionMatrix(),s.setSize(window.innerWidth,window.innerHeight)})}(async()=>{try{await cB(),console.log("✅ mainApp loaded successfully")}catch(s){console.error("❌ Error in mainApp:",s)}})();
